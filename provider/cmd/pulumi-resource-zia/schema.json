{
    "name": "zia",
    "displayName": "Zscaler Internet Access",
    "description": "A Pulumi package for creating and managing zia cloud resources.",
    "keywords": [
        "pulumi",
        "zia",
        "zscaler",
        "category/cloud"
    ],
    "homepage": "https://www.zscaler.com",
    "license": "MIT",
    "attribution": "This Pulumi package is based on the [`zia` Terraform Provider](https://github.com/zscaler/terraform-provider-zia).",
    "repository": "https://github.com/zscaler/pulumi-zia",
    "logoUrl": "https://raw.githubusercontent.com/zscaler/pulumi-zia/master/assets/zscaler.png",
    "pluginDownloadURL": "github://api.github.com/zscaler",
    "publisher": "Zscaler",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "zscaler.PulumiPackage"
        },
        "go": {
            "importBasePath": "github.com/zscaler/pulumi-zia/sdk/go/zia",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@bdzscaler/pulumi-zia",
            "packageDescription": "A Pulumi package for creating and managing zia cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/zscaler/terraform-provider-zia)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-zia` repo](https://github.com/zscaler/pulumi-zia/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-zia` repo](https://github.com/zscaler/terraform-provider-zia/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "zscaler_pulumi_zia",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/zscaler/terraform-provider-zia)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-zia` repo](https://github.com/zscaler/pulumi-zia/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-zia` repo](https://github.com/zscaler/terraform-provider-zia/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "ZIA_API_KEY"
                    ]
                },
                "secret": true
            },
            "clientId": {
                "type": "string",
                "description": "zpa client id\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_CLIENT_ID"
                    ]
                }
            },
            "clientSecret": {
                "type": "string",
                "description": "zpa client secret\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_CLIENT_SECRET"
                    ]
                },
                "secret": true
            },
            "httpProxy": {
                "type": "string",
                "description": "Alternate HTTP proxy of scheme://hostname or scheme://hostname:port format\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "maximum number of retries to attempt before erroring out.\n"
            },
            "parallelism": {
                "type": "integer",
                "description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of\nhttps://help.zscaler.com/oneapi/understanding-rate-limiting.\n"
            },
            "password": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "ZIA_PASSWORD"
                    ]
                },
                "secret": true
            },
            "privateKey": {
                "type": "string",
                "description": "zpa private key\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_PRIVATE_KEY"
                    ]
                },
                "secret": true
            },
            "requestTimeout": {
                "type": "integer",
                "description": "Timeout for single request (in seconds) which is made to Zscaler, the default is `0` (means no limit is set). The\nmaximum value can be `300`.\n"
            },
            "sandboxCloud": {
                "type": "string",
                "description": "Zscaler Sandbox Cloud\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_SANDBOX_CLOUD"
                    ]
                },
                "secret": true
            },
            "sandboxToken": {
                "type": "string",
                "description": "Zscaler Sandbox Token\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_SANDBOX_TOKEN"
                    ]
                },
                "secret": true
            },
            "useLegacyClient": {
                "type": "boolean",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_USE_LEGACY_CLIENT"
                    ]
                }
            },
            "username": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "ZIA_USERNAME"
                    ]
                }
            },
            "vanityDomain": {
                "type": "string",
                "description": "Zscaler Vanity Domain\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_VANITY_DOMAIN"
                    ]
                },
                "secret": true
            },
            "ziaCloud": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "ZIA_CLOUD"
                    ]
                }
            },
            "zscalerCloud": {
                "type": "string",
                "description": "Zscaler Cloud Name\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_CLOUD"
                    ]
                },
                "secret": true
            }
        }
    },
    "types": {
        "zia:index/AdminUsersAdminScopeEntities:AdminUsersAdminScopeEntities": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/AdminUsersRole:AdminUsersRole": {
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "zia:index/CloudAppControlRuleCbiProfile:CloudAppControlRuleCbiProfile": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "description": "The browser isolation profile URL\n"
                }
            },
            "type": "object"
        },
        "zia:index/CloudAppControlRuleCloudAppRiskProfile:CloudAppControlRuleCloudAppRiskProfile": {
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/CloudAppControlRuleDepartments:CloudAppControlRuleDepartments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/CloudAppControlRuleDeviceGroups:CloudAppControlRuleDeviceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/CloudAppControlRuleDevices:CloudAppControlRuleDevices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/CloudAppControlRuleGroups:CloudAppControlRuleGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/CloudAppControlRuleLabels:CloudAppControlRuleLabels": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/CloudAppControlRuleLocationGroups:CloudAppControlRuleLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/CloudAppControlRuleLocations:CloudAppControlRuleLocations": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/CloudAppControlRuleTenancyProfileIds:CloudAppControlRuleTenancyProfileIds": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/CloudAppControlRuleTimeWindows:CloudAppControlRuleTimeWindows": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/CloudAppControlRuleUsers:CloudAppControlRuleUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPDictionariesExactDataMatchDetail:DLPDictionariesExactDataMatchDetail": {
            "properties": {
                "dictionaryEdmMappingId": {
                    "type": "integer",
                    "description": "The unique identifier for the EDM mapping\n"
                },
                "primaryField": {
                    "type": "integer",
                    "description": "The EDM template's primary field.\n"
                },
                "schemaId": {
                    "type": "integer",
                    "description": "The unique identifier for the EDM template (or schema).\n"
                },
                "secondaryFieldMatchOn": {
                    "type": "string",
                    "description": "The EDM secondary field to match on.\n"
                },
                "secondaryFields": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The EDM template's secondary fields.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dictionaryEdmMappingId",
                        "schemaId",
                        "secondaryFields"
                    ]
                }
            }
        },
        "zia:index/DLPDictionariesIdmProfileMatchAccuracy:DLPDictionariesIdmProfileMatchAccuracy": {
            "properties": {
                "adpIdmProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile:DLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile"
                    },
                    "description": "The action applied to a DLP dictionary using patterns\n"
                },
                "matchAccuracy": {
                    "type": "string",
                    "description": "The IDM template match accuracy.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "adpIdmProfiles",
                        "matchAccuracy"
                    ]
                }
            }
        },
        "zia:index/DLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile:DLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extensions",
                        "id"
                    ]
                }
            }
        },
        "zia:index/DLPDictionariesPattern:DLPDictionariesPattern": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action applied to a DLP dictionary using patterns\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "DLP dictionary pattern\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "pattern"
                    ]
                }
            }
        },
        "zia:index/DLPDictionariesPhrase:DLPDictionariesPhrase": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "phrase": {
                    "type": "string",
                    "description": "DLP dictionary phrase\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "phrase"
                    ]
                }
            }
        },
        "zia:index/DLPWebRulesAuditor:DLPWebRulesAuditor": {
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/DLPWebRulesDepartments:DLPWebRulesDepartments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesDlpEngines:DLPWebRulesDlpEngines": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesExcludedDepartments:DLPWebRulesExcludedDepartments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesExcludedDomainProfiles:DLPWebRulesExcludedDomainProfiles": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesExcludedGroups:DLPWebRulesExcludedGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesExcludedUsers:DLPWebRulesExcludedUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesGroups:DLPWebRulesGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesIcapServer:DLPWebRulesIcapServer": {
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/DLPWebRulesIncludedDomainProfiles:DLPWebRulesIncludedDomainProfiles": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesLabels:DLPWebRulesLabels": {
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesLocationGroups:DLPWebRulesLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesLocations:DLPWebRulesLocations": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesNotificationTemplate:DLPWebRulesNotificationTemplate": {
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/DLPWebRulesSourceIpGroups:DLPWebRulesSourceIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesTimeWindows:DLPWebRulesTimeWindows": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesUrlCategories:DLPWebRulesUrlCategories": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesUsers:DLPWebRulesUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/DLPWebRulesWorkloadGroup:DLPWebRulesWorkloadGroup": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique identifier for the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the resource.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/FileTypeControlRulesDepartments:FileTypeControlRulesDepartments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FileTypeControlRulesDeviceGroups:FileTypeControlRulesDeviceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FileTypeControlRulesDevices:FileTypeControlRulesDevices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FileTypeControlRulesGroups:FileTypeControlRulesGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FileTypeControlRulesLabels:FileTypeControlRulesLabels": {
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "zia:index/FileTypeControlRulesLocationGroups:FileTypeControlRulesLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FileTypeControlRulesLocations:FileTypeControlRulesLocations": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FileTypeControlRulesTimeWindows:FileTypeControlRulesTimeWindows": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FileTypeControlRulesUsers:FileTypeControlRulesUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FileTypeControlRulesZpaAppSegment:FileTypeControlRulesZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "External ID of the application segment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application segment.\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "name"
            ]
        },
        "zia:index/FirewallDNSRuleApplicationGroups:FirewallDNSRuleApplicationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleDepartments:FirewallDNSRuleDepartments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleDestIpGroups:FirewallDNSRuleDestIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleDestIpv6Groups:FirewallDNSRuleDestIpv6Groups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleDeviceGroups:FirewallDNSRuleDeviceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleDevices:FirewallDNSRuleDevices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleDnsGateway:FirewallDNSRuleDnsGateway": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/FirewallDNSRuleEdnsEcsObject:FirewallDNSRuleEdnsEcsObject": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/FirewallDNSRuleGroups:FirewallDNSRuleGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleLabels:FirewallDNSRuleLabels": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleLocationGroups:FirewallDNSRuleLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleLocations:FirewallDNSRuleLocations": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleSrcIpGroups:FirewallDNSRuleSrcIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleSrcIpv6Groups:FirewallDNSRuleSrcIpv6Groups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleTimeWindows:FirewallDNSRuleTimeWindows": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleUsers:FirewallDNSRuleUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallDNSRuleZpaIpGroup:FirewallDNSRuleZpaIpGroup": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/FirewallFilteringNetworkServicesDestTcpPort:FirewallFilteringNetworkServicesDestTcpPort": {
            "properties": {
                "end": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringNetworkServicesDestUdpPort:FirewallFilteringNetworkServicesDestUdpPort": {
            "properties": {
                "end": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringNetworkServicesSrcTcpPort:FirewallFilteringNetworkServicesSrcTcpPort": {
            "properties": {
                "end": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringNetworkServicesSrcUdpPort:FirewallFilteringNetworkServicesSrcUdpPort": {
            "properties": {
                "end": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleAppServiceGroups:FirewallFilteringRuleAppServiceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleAppServices:FirewallFilteringRuleAppServices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleDepartments:FirewallFilteringRuleDepartments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleDestIpGroups:FirewallFilteringRuleDestIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleDeviceGroups:FirewallFilteringRuleDeviceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleDevices:FirewallFilteringRuleDevices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleGroups:FirewallFilteringRuleGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleLabels:FirewallFilteringRuleLabels": {
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleLocationGroups:FirewallFilteringRuleLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleLocations:FirewallFilteringRuleLocations": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleNwApplicationGroups:FirewallFilteringRuleNwApplicationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleNwServiceGroups:FirewallFilteringRuleNwServiceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleNwServices:FirewallFilteringRuleNwServices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleSrcIpGroups:FirewallFilteringRuleSrcIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleTimeWindows:FirewallFilteringRuleTimeWindows": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleUsers:FirewallFilteringRuleUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/FirewallFilteringRuleWorkloadGroup:FirewallFilteringRuleWorkloadGroup": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique identifier for the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the resource.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/FirewallFilteringRuleZpaAppSegment:FirewallFilteringRuleZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "External ID of the application segment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application segment.\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "name"
            ]
        },
        "zia:index/FirewallFilteringServiceGroupsService:FirewallFilteringServiceGroupsService": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object",
            "required": [
                "ids"
            ]
        },
        "zia:index/FirewallIPSRuleDepartments:FirewallIPSRuleDepartments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleDestIpGroups:FirewallIPSRuleDestIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleDestIpv6Groups:FirewallIPSRuleDestIpv6Groups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleDeviceGroups:FirewallIPSRuleDeviceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleDevices:FirewallIPSRuleDevices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleGroups:FirewallIPSRuleGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleLabels:FirewallIPSRuleLabels": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleLocationGroups:FirewallIPSRuleLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleLocations:FirewallIPSRuleLocations": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleNwServiceGroups:FirewallIPSRuleNwServiceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleNwServices:FirewallIPSRuleNwServices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleSrcIpGroups:FirewallIPSRuleSrcIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleSrcIpv6Groups:FirewallIPSRuleSrcIpv6Groups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleThreatCategories:FirewallIPSRuleThreatCategories": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleTimeWindows:FirewallIPSRuleTimeWindows": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleUsers:FirewallIPSRuleUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/FirewallIPSRuleZpaAppSegment:FirewallIPSRuleZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "External ID of the application segment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application segment.\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "name"
            ]
        },
        "zia:index/ForwardingControlRuleAppServiceGroups:ForwardingControlRuleAppServiceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleDepartments:ForwardingControlRuleDepartments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleDestIpGroups:ForwardingControlRuleDestIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleDestIpv6Groups:ForwardingControlRuleDestIpv6Groups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleEcGroups:ForwardingControlRuleEcGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleGroups:ForwardingControlRuleGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleLabels:ForwardingControlRuleLabels": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleLocationGroups:ForwardingControlRuleLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleLocations:ForwardingControlRuleLocations": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleNwApplicationGroups:ForwardingControlRuleNwApplicationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleNwServiceGroups:ForwardingControlRuleNwServiceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleNwServices:ForwardingControlRuleNwServices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleProxyGateway:ForwardingControlRuleProxyGateway": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "(string) The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/ForwardingControlRuleSrcIpGroups:ForwardingControlRuleSrcIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleSrcIpv6Groups:ForwardingControlRuleSrcIpv6Groups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleUsers:ForwardingControlRuleUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleZpaAppSegment:ForwardingControlRuleZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "(string) The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "name"
            ]
        },
        "zia:index/ForwardingControlRuleZpaApplicationSegmentGroups:ForwardingControlRuleZpaApplicationSegmentGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleZpaApplicationSegments:ForwardingControlRuleZpaApplicationSegments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/ForwardingControlRuleZpaGateway:ForwardingControlRuleZpaGateway": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "(string) The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/ForwardingControlZPAGatewayZpaAppSegment:ForwardingControlZPAGatewayZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "An external identifier used for an entity that is managed outside of ZIA. Examples include zpaServerGroup and zpaAppSegments. This field is not applicable to ZIA-managed entities.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "name"
            ]
        },
        "zia:index/ForwardingControlZPAGatewayZpaServerGroup:ForwardingControlZPAGatewayZpaServerGroup": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "An external identifier used for an entity that is managed outside of ZIA. Examples include zpaServerGroup and zpaAppSegments. This field is not applicable to ZIA-managed entities.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "name"
            ]
        },
        "zia:index/IPSFirewallRuleDepartments:IPSFirewallRuleDepartments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleDestIpGroups:IPSFirewallRuleDestIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleDestIpv6Groups:IPSFirewallRuleDestIpv6Groups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleDeviceGroups:IPSFirewallRuleDeviceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleDevices:IPSFirewallRuleDevices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleGroups:IPSFirewallRuleGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleLabels:IPSFirewallRuleLabels": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleLocationGroups:IPSFirewallRuleLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleLocations:IPSFirewallRuleLocations": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleNwServiceGroups:IPSFirewallRuleNwServiceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleNwServices:IPSFirewallRuleNwServices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleSrcIpGroups:IPSFirewallRuleSrcIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleSrcIpv6Groups:IPSFirewallRuleSrcIpv6Groups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleThreatCategories:IPSFirewallRuleThreatCategories": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleTimeWindows:IPSFirewallRuleTimeWindows": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleUsers:IPSFirewallRuleUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/IPSFirewallRuleZpaAppSegment:IPSFirewallRuleZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "External ID of the application segment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application segment.\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "name"
            ]
        },
        "zia:index/LocationManagementDynamicLocationGroups:LocationManagementDynamicLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/LocationManagementStaticLocationGroups:LocationManagementStaticLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/LocationManagementVpnCredential:LocationManagementVpnCredential": {
            "properties": {
                "comments": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ipAddress": {
                    "type": "string"
                },
                "preSharedKey": {
                    "type": "string",
                    "secret": true
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "comments",
                        "fqdn",
                        "id",
                        "ipAddress",
                        "type"
                    ]
                }
            }
        },
        "zia:index/SSLInspectionRulesAction:SSLInspectionRulesAction": {
            "properties": {
                "decryptSubActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesActionDecryptSubAction:SSLInspectionRulesActionDecryptSubAction"
                    },
                    "description": "(Block List) - Action taken when enabling SSL intercept\n"
                },
                "doNotDecryptSubActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesActionDoNotDecryptSubAction:SSLInspectionRulesActionDoNotDecryptSubAction"
                    },
                    "description": "(Block List) - Action taken when bypassing SSL intercept\n"
                },
                "overrideDefaultCertificate": {
                    "type": "boolean",
                    "description": "(Boolean) - Whether to override the default SSL interception certificate.\n"
                },
                "showEun": {
                    "type": "boolean",
                    "description": "(Boolean) - Enable this setting to display end user notifications.\n"
                },
                "showEunatp": {
                    "type": "boolean",
                    "description": "(Boolean) - Whether to display the EUN ATP page.\n"
                },
                "sslInterceptionCerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesActionSslInterceptionCert:SSLInspectionRulesActionSslInterceptionCert"
                    },
                    "description": "has the following attributes:\n**NOTE** This block can only be set when `override_default_certificate` is `true`\n"
                },
                "type": {
                    "type": "string",
                    "description": "(String) - The action type for this rule. Possible values: `BLOCK`.\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesActionDecryptSubAction:SSLInspectionRulesActionDecryptSubAction": {
            "properties": {
                "blockSslTrafficWithNoSniEnabled": {
                    "type": "boolean",
                    "description": "(Boolean) - Whether to block SSL traffic when SNI is not present.\n"
                },
                "blockUndecrypt": {
                    "type": "boolean",
                    "description": "(Boolean) - Enable to block traffic from servers that use non-standard encryption methods or require mutual TLS authentication.\n"
                },
                "http2Enabled": {
                    "type": "boolean",
                    "description": "(Boolean)\n"
                },
                "minClientTlsVersion": {
                    "type": "string",
                    "description": "(String) - The minimum TLS version allowed on the client side: Supported Values are: `CLIENT_TLS_1_0`, `CLIENT_TLS_1_1`, `CLIENT_TLS_1_2`,  `CLIENT_TLS_1_3`.\n"
                },
                "minServerTlsVersion": {
                    "type": "string",
                    "description": "(String) - The minimum TLS version allowed on the server side: Supported Values are: `SERVER_TLS_1_0`, `SERVER_TLS_1_1`, `SERVER_TLS_1_2`,  `SERVER_TLS_1_3`.\n"
                },
                "ocspCheck": {
                    "type": "boolean",
                    "description": "(Boolean) - Whether to enable OCSP check.\n"
                },
                "serverCertificates": {
                    "type": "string",
                    "description": "(String) - Action to take on server certificates. Valid values might include `ALLOW`, `BLOCK`, or `PASS_THRU`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "minClientTlsVersion",
                        "minServerTlsVersion"
                    ]
                }
            }
        },
        "zia:index/SSLInspectionRulesActionDoNotDecryptSubAction:SSLInspectionRulesActionDoNotDecryptSubAction": {
            "properties": {
                "blockSslTrafficWithNoSniEnabled": {
                    "type": "boolean",
                    "description": "(Boolean) - Whether to block SSL traffic when SNI is not present.\n"
                },
                "bypassOtherPolicies": {
                    "type": "boolean",
                    "description": "(Boolean) - Whether to bypass other policies when action is set to `DO_NOT_DECRYPT`.\n"
                },
                "minTlsVersion": {
                    "type": "string",
                    "description": "(String) -  The minimum TLS version allowed on the server side: Supported Values are: `SERVER_TLS_1_0`, `SERVER_TLS_1_1`, `SERVER_TLS_1_2`,  `SERVER_TLS_1_3`.\n**NOTE** `min_tls_version` and `server_certificates` CANNOT be set if `bypass_other_policies` is `true`\n"
                },
                "ocspCheck": {
                    "type": "boolean",
                    "description": "(Boolean) - Whether to enable OCSP check.\n"
                },
                "serverCertificates": {
                    "type": "string",
                    "description": "(String) - Action to take on server certificates. Valid values might include `ALLOW`, `BLOCK`, or `PASS_THRU`.\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesActionSslInterceptionCert:SSLInspectionRulesActionSslInterceptionCert": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesDepartments:SSLInspectionRulesDepartments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesDestIpGroups:SSLInspectionRulesDestIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesDeviceGroups:SSLInspectionRulesDeviceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesDevices:SSLInspectionRulesDevices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesGroups:SSLInspectionRulesGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesLabels:SSLInspectionRulesLabels": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesLocationGroups:SSLInspectionRulesLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesLocations:SSLInspectionRulesLocations": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesProxyGateways:SSLInspectionRulesProxyGateways": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesSourceIpGroups:SSLInspectionRulesSourceIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesTimeWindows:SSLInspectionRulesTimeWindows": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesUsers:SSLInspectionRulesUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                }
            },
            "type": "object"
        },
        "zia:index/SSLInspectionRulesWorkloadGroup:SSLInspectionRulesWorkloadGroup": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "(Integer) - A unique identifier assigned to the workload group\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the resource.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/SSLInspectionRulesZpaAppSegment:SSLInspectionRulesZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "External ID of the application segment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application segment.\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "name"
            ]
        },
        "zia:index/SandboxRulesDepartments:SandboxRulesDepartments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/SandboxRulesGroups:SandboxRulesGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/SandboxRulesLabels:SandboxRulesLabels": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/SandboxRulesLocationGroups:SandboxRulesLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/SandboxRulesLocations:SandboxRulesLocations": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/SandboxRulesUsers:SandboxRulesUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(Integer) Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object"
        },
        "zia:index/SandboxRulesZpaAppSegment:SandboxRulesZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "External ID of the application segment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application segment.\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "name"
            ]
        },
        "zia:index/TrafficForwardingGRETunnelPrimaryDestVip:TrafficForwardingGRETunnelPrimaryDestVip": {
            "properties": {
                "datacenter": {
                    "type": "string",
                    "description": "Data center information\n"
                },
                "id": {
                    "type": "integer",
                    "description": "GRE cluster virtual IP ID\n"
                },
                "virtualIp": {
                    "type": "string",
                    "description": "GRE cluster virtual IP address (VIP)\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "datacenter",
                        "id",
                        "virtualIp"
                    ]
                }
            }
        },
        "zia:index/TrafficForwardingGRETunnelSecondaryDestVip:TrafficForwardingGRETunnelSecondaryDestVip": {
            "properties": {
                "datacenter": {
                    "type": "string",
                    "description": "Data center information\n"
                },
                "id": {
                    "type": "integer",
                    "description": "GRE cluster virtual IP ID\n"
                },
                "virtualIp": {
                    "type": "string",
                    "description": "GRE cluster virtual IP address (VIP)\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "datacenter",
                        "id",
                        "virtualIp"
                    ]
                }
            }
        },
        "zia:index/URLCategoriesScope:URLCategoriesScope": {
            "properties": {
                "scopeEntities": {
                    "$ref": "#/types/zia:index/URLCategoriesScopeScopeEntities:URLCategoriesScopeScopeEntities",
                    "description": "list of scope IDs\n"
                },
                "scopeGroupMemberEntities": {
                    "$ref": "#/types/zia:index/URLCategoriesScopeScopeGroupMemberEntities:URLCategoriesScopeScopeGroupMemberEntities",
                    "description": "list of scope group member IDs\n"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scopeEntities",
                        "scopeGroupMemberEntities"
                    ]
                }
            }
        },
        "zia:index/URLCategoriesScopeScopeEntities:URLCategoriesScopeScopeEntities": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object",
            "required": [
                "ids"
            ]
        },
        "zia:index/URLCategoriesScopeScopeGroupMemberEntities:URLCategoriesScopeScopeGroupMemberEntities": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object",
            "required": [
                "ids"
            ]
        },
        "zia:index/URLCategoriesUrlKeywordCounts:URLCategoriesUrlKeywordCounts": {
            "properties": {
                "retainParentKeywordCount": {
                    "type": "integer",
                    "description": "Count of total keywords with retain parent category.\n"
                },
                "retainParentUrlCount": {
                    "type": "integer",
                    "description": "Count of URLs with retain parent category.\n"
                },
                "totalKeywordCount": {
                    "type": "integer",
                    "description": "Total keyword count for the category.\n"
                },
                "totalUrlCount": {
                    "type": "integer",
                    "description": "Custom URL count for the category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "retainParentKeywordCount",
                        "retainParentUrlCount",
                        "totalKeywordCount",
                        "totalUrlCount"
                    ]
                }
            }
        },
        "zia:index/URLFilteringRulesCbiProfile:URLFilteringRulesCbiProfile": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                },
                "url": {
                    "type": "string",
                    "description": "The browser isolation profile URL\n"
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesDepartments:URLFilteringRulesDepartments": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesDeviceGroups:URLFilteringRulesDeviceGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesDevices:URLFilteringRulesDevices": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesGroups:URLFilteringRulesGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesLabels:URLFilteringRulesLabels": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesLocationGroups:URLFilteringRulesLocationGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesLocations:URLFilteringRulesLocations": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesOverrideGroups:URLFilteringRulesOverrideGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesOverrideUsers:URLFilteringRulesOverrideUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesSourceIpGroups:URLFilteringRulesSourceIpGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesTimeWindows:URLFilteringRulesTimeWindows": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesUsers:URLFilteringRulesUsers": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "zia:index/URLFilteringRulesWorkloadGroup:URLFilteringRulesWorkloadGroup": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique identifier for the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "zia:index/UserManagementDepartment:UserManagementDepartment": {
            "properties": {
                "comments": {
                    "type": "string",
                    "description": "Additional information about this department\n"
                },
                "deleted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "idpId": {
                    "type": "integer",
                    "description": "Identity provider (IdP) ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "User name. This appears when choosing users for policies.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "comments",
                        "deleted",
                        "idpId",
                        "name"
                    ]
                }
            }
        },
        "zia:index/UserManagementGroups:UserManagementGroups": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identfier for the group\n"
                }
            },
            "type": "object"
        },
        "zia:index/getAdminUsersAdminScope:getAdminUsersAdminScope": {
            "properties": {
                "scopeEntities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getAdminUsersAdminScopeScopeEntity:getAdminUsersAdminScopeScopeEntity"
                    },
                    "description": "(String) Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.\n"
                },
                "scopeGroupMemberEntities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getAdminUsersAdminScopeScopeGroupMemberEntity:getAdminUsersAdminScopeScopeGroupMemberEntity"
                    },
                    "description": "(Number) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.\n"
                },
                "type": {
                    "type": "string",
                    "description": "(String) The admin scope type. The attribute name is subject to change.\n"
                }
            },
            "type": "object",
            "required": [
                "scopeEntities",
                "scopeGroupMemberEntities",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getAdminUsersAdminScopeScopeEntity:getAdminUsersAdminScopeScopeEntity": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the admin user to be exported.\n"
                },
                "name": {
                    "type": "string",
                    "description": "(String)\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getAdminUsersAdminScopeScopeGroupMemberEntity:getAdminUsersAdminScopeScopeGroupMemberEntity": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the admin user to be exported.\n"
                },
                "name": {
                    "type": "string",
                    "description": "(String)\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getAdminUsersExecMobileAppToken:getAdminUsersExecMobileAppToken": {
            "properties": {
                "cloud": {
                    "type": "string",
                    "description": "(String)\n"
                },
                "createTime": {
                    "type": "integer",
                    "description": "(Number)\n"
                },
                "deviceId": {
                    "type": "string",
                    "description": "(String)\n"
                },
                "deviceName": {
                    "type": "string",
                    "description": "(String)\n"
                },
                "name": {
                    "type": "string",
                    "description": "(String)\n"
                },
                "orgId": {
                    "type": "integer",
                    "description": "(Number)\n"
                },
                "token": {
                    "type": "string",
                    "description": "(String)\n"
                },
                "tokenExpiry": {
                    "type": "integer",
                    "description": "(Number)\n"
                },
                "tokenId": {
                    "type": "string",
                    "description": "(String)\n"
                }
            },
            "type": "object",
            "required": [
                "cloud",
                "createTime",
                "deviceId",
                "deviceName",
                "name",
                "orgId",
                "token",
                "tokenExpiry",
                "tokenId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getAdminUsersRole:getAdminUsersRole": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the admin user to be exported.\n"
                },
                "name": {
                    "type": "string",
                    "description": "(String)\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getCloudAppControlRuleCbiProfile:getCloudAppControlRuleCbiProfile": {
            "properties": {
                "defaultProfile": {
                    "type": "boolean",
                    "description": "The browser isolation profile URL\n"
                },
                "id": {
                    "type": "string",
                    "description": "The universally unique identifier (UUID) for the browser isolation profile\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the browser isolation profile\n"
                },
                "sandboxMode": {
                    "type": "boolean",
                    "description": "The browser isolation profile URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "The browser isolation profile URL\n"
                }
            },
            "type": "object",
            "required": [
                "defaultProfile",
                "id",
                "name",
                "sandboxMode",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getCloudAppControlRuleDepartment:getCloudAppControlRuleDepartment": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getCloudAppControlRuleDevice:getCloudAppControlRuleDevice": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getCloudAppControlRuleDeviceGroup:getCloudAppControlRuleDeviceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getCloudAppControlRuleGroup:getCloudAppControlRuleGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getCloudAppControlRuleLabel:getCloudAppControlRuleLabel": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getCloudAppControlRuleLocation:getCloudAppControlRuleLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getCloudAppControlRuleLocationGroup:getCloudAppControlRuleLocationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getCloudAppControlRuleUser:getCloudAppControlRuleUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getCloudApplicationsApplication:getCloudApplicationsApplication": {
            "properties": {
                "app": {
                    "type": "string",
                    "description": "(String) Application enum constant\n"
                },
                "appName": {
                    "type": "string",
                    "description": "(String) Cloud application name\n"
                },
                "parent": {
                    "type": "string",
                    "description": "(String) pplication category enum constant\n"
                },
                "parentName": {
                    "type": "string",
                    "description": "(String) Name of the cloud application category\n"
                }
            },
            "type": "object",
            "required": [
                "app",
                "appName",
                "parent",
                "parentName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPDictionariesExactDataMatchDetail:getDLPDictionariesExactDataMatchDetail": {
            "properties": {
                "dictionaryEdmMappingId": {
                    "type": "integer",
                    "description": "The unique identifier for the EDM mapping\n"
                },
                "primaryField": {
                    "type": "integer",
                    "description": "The EDM template's primary field.\n"
                },
                "schemaId": {
                    "type": "integer",
                    "description": "The unique identifier for the EDM template (or schema).\n"
                },
                "secondaryFieldMatchOn": {
                    "type": "string",
                    "description": "The EDM secondary field to match on.\n"
                },
                "secondaryFields": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object",
            "required": [
                "dictionaryEdmMappingId",
                "primaryField",
                "schemaId",
                "secondaryFieldMatchOn",
                "secondaryFields"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPDictionariesIdmProfileMatchAccuracy:getDLPDictionariesIdmProfileMatchAccuracy": {
            "properties": {
                "adpIdmProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getDLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile:getDLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile"
                    },
                    "description": "The action applied to a DLP dictionary using patterns\n"
                },
                "matchAccuracy": {
                    "type": "string",
                    "description": "The IDM template match accuracy.\n"
                }
            },
            "type": "object",
            "required": [
                "adpIdmProfiles",
                "matchAccuracy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile:getDLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the DLP dictionary\n"
                },
                "name": {
                    "type": "string",
                    "description": "DLP dictionary name\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPDictionariesPattern:getDLPDictionariesPattern": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "(String) The action applied to a DLP dictionary using patterns\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "(String) DLP dictionary pattern\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "pattern"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPDictionariesPhrase:getDLPDictionariesPhrase": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "(String) The action applied to a DLP dictionary using patterns\n"
                },
                "phrase": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "action",
                "phrase"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPEDMSchemaCreatedBy:getDLPEDMSchemaCreatedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPEDMSchemaEdmClient:getDLPEDMSchemaEdmClient": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPEDMSchemaLastModifiedBy:getDLPEDMSchemaLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPEDMSchemaSchedule:getDLPEDMSchemaSchedule": {
            "properties": {
                "scheduleDayOfMonths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The day of the month that the IDM template is scheduled for. This attribute is required by PUT and POST requests, and when scheduleType is set to MONTHLY.\n"
                },
                "scheduleDayOfWeeks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The day of the week the IDM template is scheduled for. This attribute is required by PUT and POST requests, and when scheduleType is set to WEEKLY.\n"
                },
                "scheduleDisabled": {
                    "type": "boolean",
                    "description": "If set to true, the schedule for the IDM template is temporarily in a disabled state. This attribute is required by PUT requests in order to disable or enable a schedule.\n"
                },
                "scheduleTime": {
                    "type": "integer",
                    "description": "The time of the day (in minutes) that the IDM template is scheduled for. For example: at 3am= 180 mins. This attribute is required by PUT and POST requests.\n"
                },
                "scheduleType": {
                    "type": "string",
                    "description": "The schedule type for the IDM template's schedule (i.e., Monthly, Weekly, Daily, or None). This attribute is required by PUT and POST requests.\n"
                }
            },
            "type": "object",
            "required": [
                "scheduleDayOfMonths",
                "scheduleDayOfWeeks",
                "scheduleDisabled",
                "scheduleTime",
                "scheduleType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPEDMSchemaTokenList:getDLPEDMSchemaTokenList": {
            "properties": {
                "colLengthBitmap": {
                    "type": "integer",
                    "description": "The length of the column bitmap in the hashed file.\n"
                },
                "hashFileColumnOrder": {
                    "type": "integer",
                    "description": "The column position for the token in the hashed file, starting from 1.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The token (i.e., criteria) name. This attribute is required by PUT and POST requests.\n"
                },
                "originalColumn": {
                    "type": "integer",
                    "description": "The column position for the token in the original CSV file uploaded to the Index Tool, starting from 1. This attribue required by PUT and POST requests.\n"
                },
                "primaryKey": {
                    "type": "boolean",
                    "description": "Indicates whether the token is a primary key.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The token (i.e., criteria) name. This attribute is required by PUT and POST requests.\n"
                }
            },
            "type": "object",
            "required": [
                "colLengthBitmap",
                "hashFileColumnOrder",
                "name",
                "originalColumn",
                "primaryKey",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPIDMProfileLiteClientVm:getDLPIDMProfileLiteClientVm": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPIDMProfileLiteLastModifiedBy:getDLPIDMProfileLiteLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPIDMProfilesIdmClient:getDLPIDMProfilesIdmClient": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The configured name of the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPIDMProfilesLastModifiedBy:getDLPIDMProfilesLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The configured name of the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesDepartment:getDLPWebRulesDepartment": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesDlpEngine:getDLPWebRulesDlpEngine": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesExcludedDepartment:getDLPWebRulesExcludedDepartment": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesExcludedGroup:getDLPWebRulesExcludedGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesExcludedUser:getDLPWebRulesExcludedUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesGroup:getDLPWebRulesGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesLabel:getDLPWebRulesLabel": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesLastModifiedBy:getDLPWebRulesLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesLocation:getDLPWebRulesLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesLocationGroup:getDLPWebRulesLocationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesSourceIpGroup:getDLPWebRulesSourceIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesTimeWindow:getDLPWebRulesTimeWindow": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesUrlCategory:getDLPWebRulesUrlCategory": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesUser:getDLPWebRulesUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Identifier that uniquely identifies an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier that uniquely identifies an entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesWorkloadGroup:getDLPWebRulesWorkloadGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the workload group\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the workload group\n"
                },
                "lastModifiedBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getDLPWebRulesWorkloadGroupLastModifiedBy:getDLPWebRulesWorkloadGroupLastModifiedBy"
                    },
                    "description": "The admin that modified the DLP policy rule last.\n"
                },
                "lastModifiedTime": {
                    "type": "integer",
                    "description": "Timestamp when the DLP policy rule was last modified.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workload group\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "lastModifiedBies",
                "lastModifiedTime",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getDLPWebRulesWorkloadGroupLastModifiedBy:getDLPWebRulesWorkloadGroupLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFileTypeControlRulesDepartment:getFileTypeControlRulesDepartment": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFileTypeControlRulesDevice:getFileTypeControlRulesDevice": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFileTypeControlRulesDeviceGroup:getFileTypeControlRulesDeviceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFileTypeControlRulesGroup:getFileTypeControlRulesGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFileTypeControlRulesLabel:getFileTypeControlRulesLabel": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFileTypeControlRulesLastModifiedBy:getFileTypeControlRulesLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFileTypeControlRulesLocation:getFileTypeControlRulesLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFileTypeControlRulesLocationGroup:getFileTypeControlRulesLocationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFileTypeControlRulesTimeWindow:getFileTypeControlRulesTimeWindow": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFileTypeControlRulesUser:getFileTypeControlRulesUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for an entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFileTypeControlRulesZpaAppSegment:getFileTypeControlRulesZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "Indicates the external ID. Applicable only when this reference is of an external entity.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the Application Segment\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Application Segment\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesApplicationGroup:getFirewallDNSRulesApplicationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesDepartment:getFirewallDNSRulesDepartment": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesDestIpGroup:getFirewallDNSRulesDestIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesDestIpv6Group:getFirewallDNSRulesDestIpv6Group": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesDevice:getFirewallDNSRulesDevice": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesDeviceGroup:getFirewallDNSRulesDeviceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesGroup:getFirewallDNSRulesGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesLabel:getFirewallDNSRulesLabel": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesLastModifiedBy:getFirewallDNSRulesLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesLocation:getFirewallDNSRulesLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesLocationGroup:getFirewallDNSRulesLocationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesSrcIpGroup:getFirewallDNSRulesSrcIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesSrcIpv6Group:getFirewallDNSRulesSrcIpv6Group": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesTimeWindow:getFirewallDNSRulesTimeWindow": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDNSRulesUser:getFirewallDNSRulesUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleApplicationGroup:getFirewallDnsRuleApplicationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleDepartment:getFirewallDnsRuleDepartment": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleDestIpGroup:getFirewallDnsRuleDestIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleDestIpv6Group:getFirewallDnsRuleDestIpv6Group": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleDevice:getFirewallDnsRuleDevice": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleDeviceGroup:getFirewallDnsRuleDeviceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleGroup:getFirewallDnsRuleGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleLabel:getFirewallDnsRuleLabel": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleLastModifiedBy:getFirewallDnsRuleLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleLocation:getFirewallDnsRuleLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleLocationGroup:getFirewallDnsRuleLocationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleSrcIpGroup:getFirewallDnsRuleSrcIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleSrcIpv6Group:getFirewallDnsRuleSrcIpv6Group": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleTimeWindow:getFirewallDnsRuleTimeWindow": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallDnsRuleUser:getFirewallDnsRuleUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringNetworkServiceGroupsService:getFirewallFilteringNetworkServiceGroupsService": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "(String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the ip source group to be exported.\n"
                },
                "isNameL10nTag": {
                    "type": "boolean",
                    "description": "(Bool) - Default: false\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ip source group to be exported.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "isNameL10nTag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringNetworkServicesDestTcpPort:getFirewallFilteringNetworkServicesDestTcpPort": {
            "properties": {
                "end": {
                    "type": "integer",
                    "description": "(Number)\n"
                },
                "start": {
                    "type": "integer",
                    "description": "(Number)\n"
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringNetworkServicesDestUdpPort:getFirewallFilteringNetworkServicesDestUdpPort": {
            "properties": {
                "end": {
                    "type": "integer",
                    "description": "(Number)\n"
                },
                "start": {
                    "type": "integer",
                    "description": "(Number)\n"
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringNetworkServicesSrcTcpPort:getFirewallFilteringNetworkServicesSrcTcpPort": {
            "properties": {
                "end": {
                    "type": "integer",
                    "description": "(Number)\n"
                },
                "start": {
                    "type": "integer",
                    "description": "(Number)\n"
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringNetworkServicesSrcUdpPort:getFirewallFilteringNetworkServicesSrcUdpPort": {
            "properties": {
                "end": {
                    "type": "integer",
                    "description": "(Number)\n"
                },
                "start": {
                    "type": "integer",
                    "description": "(Number)\n"
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleAppService:getFirewallFilteringRuleAppService": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleAppServiceGroup:getFirewallFilteringRuleAppServiceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleDepartment:getFirewallFilteringRuleDepartment": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleDestIpGroup:getFirewallFilteringRuleDestIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleDevice:getFirewallFilteringRuleDevice": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleDeviceGroup:getFirewallFilteringRuleDeviceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleGroup:getFirewallFilteringRuleGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleLabel:getFirewallFilteringRuleLabel": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleLastModifiedBy:getFirewallFilteringRuleLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleLocation:getFirewallFilteringRuleLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleLocationGroup:getFirewallFilteringRuleLocationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleNwApplicationGroup:getFirewallFilteringRuleNwApplicationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleNwService:getFirewallFilteringRuleNwService": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleNwServiceGroup:getFirewallFilteringRuleNwServiceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleSrcIpGroup:getFirewallFilteringRuleSrcIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleTimeWindow:getFirewallFilteringRuleTimeWindow": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleUser:getFirewallFilteringRuleUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleWorkloadGroup:getFirewallFilteringRuleWorkloadGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "(Optional) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The description of the workload group\n"
                },
                "expressionJsons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getFirewallFilteringRuleWorkloadGroupExpressionJson:getFirewallFilteringRuleWorkloadGroupExpressionJson"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "lastModifiedBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getFirewallFilteringRuleWorkloadGroupLastModifiedBy:getFirewallFilteringRuleWorkloadGroupLastModifiedBy"
                    }
                },
                "lastModifiedTime": {
                    "type": "integer",
                    "description": "(Number)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "expression",
                "expressionJsons",
                "id",
                "lastModifiedBies",
                "lastModifiedTime",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleWorkloadGroupExpressionJson:getFirewallFilteringRuleWorkloadGroupExpressionJson": {
            "properties": {
                "expressionContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainer:getFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainer"
                    }
                }
            },
            "type": "object",
            "required": [
                "expressionContainers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainer:getFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainer": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "tagContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainerTagContainer:getFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainerTagContainer"
                    }
                },
                "tagType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "tagContainers",
                "tagType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainerTagContainer:getFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainerTagContainer": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainerTagContainerTag:getFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainerTagContainerTag"
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainerTagContainerTag:getFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainerTagContainerTag": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleWorkloadGroupLastModifiedBy:getFirewallFilteringRuleWorkloadGroupLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallFilteringRuleZpaAppSegment:getFirewallFilteringRuleZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "Indicates the external ID. Applicable only when this reference is of an external entity.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleDepartment:getFirewallIpsRuleDepartment": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleDestIpGroup:getFirewallIpsRuleDestIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleDestIpv6Group:getFirewallIpsRuleDestIpv6Group": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleDevice:getFirewallIpsRuleDevice": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleDeviceGroup:getFirewallIpsRuleDeviceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleGroup:getFirewallIpsRuleGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleLabel:getFirewallIpsRuleLabel": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleLastModifiedBy:getFirewallIpsRuleLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleLocation:getFirewallIpsRuleLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleLocationGroup:getFirewallIpsRuleLocationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleNwService:getFirewallIpsRuleNwService": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleNwServiceGroup:getFirewallIpsRuleNwServiceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleSrcIpGroup:getFirewallIpsRuleSrcIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleSrcIpv6Group:getFirewallIpsRuleSrcIpv6Group": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleThreatCategory:getFirewallIpsRuleThreatCategory": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleTimeWindow:getFirewallIpsRuleTimeWindow": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleUser:getFirewallIpsRuleUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getFirewallIpsRuleZpaAppSegment:getFirewallIpsRuleZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "Indicates the external ID. Applicable only when this reference is of an external entity.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlProxyGatewayLastModifiedBy:getForwardingControlProxyGatewayLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the forwarding control Proxy Gateway resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding control Proxy Gateway to be exported.\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlProxyGatewayPrimaryProxy:getForwardingControlProxyGatewayPrimaryProxy": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the forwarding control Proxy Gateway resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding control Proxy Gateway to be exported.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlProxyGatewaySecondaryProxy:getForwardingControlProxyGatewaySecondaryProxy": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the forwarding control Proxy Gateway resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding control Proxy Gateway to be exported.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleDepartment:getForwardingControlRuleDepartment": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleDestIpGroup:getForwardingControlRuleDestIpGroup": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleDestIpv6Group:getForwardingControlRuleDestIpv6Group": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleDevice:getForwardingControlRuleDevice": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleDeviceGroup:getForwardingControlRuleDeviceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleEcGroup:getForwardingControlRuleEcGroup": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleGroup:getForwardingControlRuleGroup": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleLabel:getForwardingControlRuleLabel": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleLocation:getForwardingControlRuleLocation": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleLocationGroup:getForwardingControlRuleLocationGroup": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleNwApplicationGroup:getForwardingControlRuleNwApplicationGroup": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleNwService:getForwardingControlRuleNwService": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleNwServiceGroup:getForwardingControlRuleNwServiceGroup": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleProxyGateway:getForwardingControlRuleProxyGateway": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleSrcIpGroup:getForwardingControlRuleSrcIpGroup": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleSrcIpv6Group:getForwardingControlRuleSrcIpv6Group": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleUser:getForwardingControlRuleUser": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleZpaAppSegment:getForwardingControlRuleZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "(int) Identifier that uniquely identifies an entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleZpaApplicationSegment:getForwardingControlRuleZpaApplicationSegment": {
            "properties": {
                "ddescription": {
                    "type": "string",
                    "description": "Additional information about the Application Segment\n"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "ID of the ZPA tenant where the Application Segment is configured\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                },
                "zpaId": {
                    "type": "integer",
                    "description": "ID of the ZPA tenant where the Application Segment is configured\n"
                }
            },
            "type": "object",
            "required": [
                "ddescription",
                "deleted",
                "id",
                "name",
                "zpaId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleZpaApplicationSegmentGroup:getForwardingControlRuleZpaApplicationSegmentGroup": {
            "properties": {
                "deleted": {
                    "type": "boolean",
                    "description": "Indicates whether the ZPA Application Segment Group has been deleted\n"
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                },
                "zpaAppSegmentsCount": {
                    "type": "integer",
                    "description": "The number of ZPA Application Segments in the group\n"
                },
                "zpaId": {
                    "type": "integer",
                    "description": "Indicates the external ID. Applicable only when this reference is of an external entity.\n"
                }
            },
            "type": "object",
            "required": [
                "deleted",
                "id",
                "name",
                "zpaAppSegmentsCount",
                "zpaId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlRuleZpaGateway:getForwardingControlRuleZpaGateway": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule.\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlZPAGatewayLastModifiedBy:getForwardingControlZPAGatewayLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the forwarding control ZPA Gateway resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding control ZPA Gateway to be exported.\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlZPAGatewayZpaAppSegment:getForwardingControlZPAGatewayZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "(string) An external identifier used for an entity that is managed outside of ZIA. Examples include zpaServerGroup and zpaAppSegments. This field is not applicable to ZIA-managed entities.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding control ZPA Gateway to be exported.\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getForwardingControlZPAGatewayZpaServerGroup:getForwardingControlZPAGatewayZpaServerGroup": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "(string) An external identifier used for an entity that is managed outside of ZIA. Examples include zpaServerGroup and zpaAppSegments. This field is not applicable to ZIA-managed entities.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding control ZPA Gateway to be exported.\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleDepartment:getIPSFirewallRuleDepartment": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleDestIpGroup:getIPSFirewallRuleDestIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleDestIpv6Group:getIPSFirewallRuleDestIpv6Group": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleDevice:getIPSFirewallRuleDevice": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleDeviceGroup:getIPSFirewallRuleDeviceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleGroup:getIPSFirewallRuleGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleLabel:getIPSFirewallRuleLabel": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleLastModifiedBy:getIPSFirewallRuleLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleLocation:getIPSFirewallRuleLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleLocationGroup:getIPSFirewallRuleLocationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleNwService:getIPSFirewallRuleNwService": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleNwServiceGroup:getIPSFirewallRuleNwServiceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleSrcIpGroup:getIPSFirewallRuleSrcIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleSrcIpv6Group:getIPSFirewallRuleSrcIpv6Group": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleThreatCategory:getIPSFirewallRuleThreatCategory": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleTimeWindow:getIPSFirewallRuleTimeWindow": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleUser:getIPSFirewallRuleUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getIPSFirewallRuleZpaAppSegment:getIPSFirewallRuleZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "Indicates the external ID. Applicable only when this reference is of an external entity.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Firewall Filtering policy rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getLocationGroupsDynamicLocationGroupCriteria:getLocationGroupsDynamicLocationGroupCriteria": {
            "properties": {
                "cities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getLocationGroupsDynamicLocationGroupCriteriaCity:getLocationGroupsDynamicLocationGroupCriteriaCity"
                    },
                    "description": "(Block List)\n"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(List of String) One or more countries from a predefined set\n"
                },
                "enableBandwidthControl": {
                    "type": "boolean",
                    "description": "(Boolean) Enable Bandwidth Control. When set to true, Bandwidth Control is enabled for the location.\n"
                },
                "enableCaution": {
                    "type": "boolean",
                    "description": "(Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.\n"
                },
                "enableXffForwarding": {
                    "type": "boolean",
                    "description": "(Boolean) Enable `XFF` Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.\n"
                },
                "enforceAup": {
                    "type": "boolean",
                    "description": "(Boolean) Enable AUP. When set to true, AUP is enabled for the location.\n"
                },
                "enforceAuthentication": {
                    "type": "boolean",
                    "description": "(Boolean) Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.\n"
                },
                "enforceFirewallControl": {
                    "type": "boolean",
                    "description": "(Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.\n"
                },
                "managedBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getLocationGroupsDynamicLocationGroupCriteriaManagedBy:getLocationGroupsDynamicLocationGroupCriteriaManagedBy"
                    },
                    "description": "(Block List)\n"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getLocationGroupsDynamicLocationGroupCriteriaName:getLocationGroupsDynamicLocationGroupCriteriaName"
                    },
                    "description": "Location group name\n"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(List of String) One or more location profiles from a predefined set\n"
                }
            },
            "type": "object",
            "required": [
                "enableBandwidthControl",
                "enableCaution",
                "enableXffForwarding",
                "enforceAup",
                "enforceAuthentication",
                "enforceFirewallControl",
                "managedBies"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getLocationGroupsDynamicLocationGroupCriteriaCity:getLocationGroupsDynamicLocationGroupCriteriaCity": {
            "properties": {
                "matchString": {
                    "type": "string",
                    "description": "(String) String value to be matched or partially matched\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "(String) Operator that performs match action\n"
                }
            },
            "type": "object"
        },
        "zia:index/getLocationGroupsDynamicLocationGroupCriteriaManagedBy:getLocationGroupsDynamicLocationGroupCriteriaManagedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the location group\n"
                },
                "name": {
                    "type": "string",
                    "description": "Location group name\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getLocationGroupsDynamicLocationGroupCriteriaName:getLocationGroupsDynamicLocationGroupCriteriaName": {
            "properties": {
                "matchString": {
                    "type": "string",
                    "description": "(String) String value to be matched or partially matched\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "(String) Operator that performs match action\n"
                }
            },
            "type": "object"
        },
        "zia:index/getLocationGroupsLastModUser:getLocationGroupsLastModUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the location group\n"
                },
                "name": {
                    "type": "string",
                    "description": "Location group name\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getLocationGroupsLocation:getLocationGroupsLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the location group\n"
                },
                "name": {
                    "type": "string",
                    "description": "Location group name\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getLocationManagementVpnCredential:getLocationManagementVpnCredential": {
            "properties": {
                "comments": {
                    "type": "string",
                    "description": "(String) Additional information about this VPN credential.\nAdditional information about this VPN credential.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "(String) Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the location to be exported.\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getLocationManagementVpnCredentialLocation:getLocationManagementVpnCredentialLocation"
                    },
                    "description": "(List of Object)\n"
                },
                "managedBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getLocationManagementVpnCredentialManagedBy:getLocationManagementVpnCredentialManagedBy"
                    },
                    "description": "(List of Object)\n"
                },
                "preSharedKey": {
                    "type": "string",
                    "description": "(String) Pre-shared key. This is a required field for `UFQDN` and IP auth type.\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "(String) VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created.\n"
                }
            },
            "type": "object",
            "required": [
                "comments",
                "fqdn",
                "id",
                "locations",
                "managedBies",
                "preSharedKey",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getLocationManagementVpnCredentialLocation:getLocationManagementVpnCredentialLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the location to be exported.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the location to be exported.\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getLocationManagementVpnCredentialManagedBy:getLocationManagementVpnCredentialManagedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the location to be exported.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the location to be exported.\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getRuleLabelsCreatedBy:getRuleLabelsCreatedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The unique identifer for the device group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule label to be exported.\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getRuleLabelsLastModifiedBy:getRuleLabelsLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The unique identifer for the device group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule label to be exported.\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesAction:getSSLInspectionRulesAction": {
            "properties": {
                "decryptSubActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getSSLInspectionRulesActionDecryptSubAction:getSSLInspectionRulesActionDecryptSubAction"
                    }
                },
                "doNotDecryptSubActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getSSLInspectionRulesActionDoNotDecryptSubAction:getSSLInspectionRulesActionDoNotDecryptSubAction"
                    },
                    "description": "Action taken when bypassing SSL intercept\n"
                },
                "overrideDefaultCertificate": {
                    "type": "boolean",
                    "description": "Whether to override the default SSL interception certificate.\n"
                },
                "showEun": {
                    "type": "boolean",
                    "description": "Whether to show End User Notification (EUN).\n"
                },
                "showEunatp": {
                    "type": "boolean",
                    "description": "Whether to display the EUN ATP page.\n"
                },
                "sslInterceptionCerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getSSLInspectionRulesActionSslInterceptionCert:getSSLInspectionRulesActionSslInterceptionCert"
                    },
                    "description": "Action taken when enabling SSL intercept\n"
                },
                "type": {
                    "type": "string",
                    "description": "The action type for this rule. Possible values: `BLOCK`, `DECRYPT`, or `DO_NOT_DECRYPT`.\n"
                }
            },
            "type": "object",
            "required": [
                "doNotDecryptSubActions",
                "overrideDefaultCertificate",
                "showEun",
                "showEunatp",
                "sslInterceptionCerts",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesActionDecryptSubAction:getSSLInspectionRulesActionDecryptSubAction": {
            "properties": {
                "blockSslTrafficWithNoSniEnabled": {
                    "type": "boolean",
                    "description": "Whether to block SSL traffic when SNI is not present.\n"
                },
                "blockUndecrypt": {
                    "type": "boolean"
                },
                "http2Enabled": {
                    "type": "boolean"
                },
                "minClientTlsVersion": {
                    "type": "string"
                },
                "minServerTlsVersion": {
                    "type": "string"
                },
                "ocspCheck": {
                    "type": "boolean",
                    "description": "Whether to enable OCSP check.\n"
                },
                "serverCertificates": {
                    "type": "string",
                    "description": "Action to take on server certificates. Valid values might include `ALLOW`, `BLOCK`, or `PASS_THRU`.\n"
                }
            },
            "type": "object",
            "required": [
                "blockSslTrafficWithNoSniEnabled",
                "blockUndecrypt",
                "http2Enabled",
                "minClientTlsVersion",
                "minServerTlsVersion",
                "ocspCheck",
                "serverCertificates"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesActionDoNotDecryptSubAction:getSSLInspectionRulesActionDoNotDecryptSubAction": {
            "properties": {
                "blockSslTrafficWithNoSniEnabled": {
                    "type": "boolean",
                    "description": "Whether to block SSL traffic when SNI is not present.\n"
                },
                "bypassOtherPolicies": {
                    "type": "boolean",
                    "description": "Whether to bypass other policies when action is set to `DO_NOT_DECRYPT`.\n"
                },
                "minTlsVersion": {
                    "type": "string",
                    "description": "The minimum TLS version allowed when action is `DO_NOT_DECRYPT`.\n"
                },
                "ocspCheck": {
                    "type": "boolean",
                    "description": "Whether to enable OCSP check.\n"
                },
                "serverCertificates": {
                    "type": "string",
                    "description": "Action to take on server certificates. Valid values might include `ALLOW`, `BLOCK`, or `PASS_THRU`.\n"
                }
            },
            "type": "object",
            "required": [
                "blockSslTrafficWithNoSniEnabled",
                "bypassOtherPolicies",
                "minTlsVersion",
                "ocspCheck",
                "serverCertificates"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesActionSslInterceptionCert:getSSLInspectionRulesActionSslInterceptionCert": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesDepartment:getSSLInspectionRulesDepartment": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesDestIpGroup:getSSLInspectionRulesDestIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesDevice:getSSLInspectionRulesDevice": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesDeviceGroup:getSSLInspectionRulesDeviceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesGroup:getSSLInspectionRulesGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesLabel:getSSLInspectionRulesLabel": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesLastModifiedBy:getSSLInspectionRulesLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesLocation:getSSLInspectionRulesLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesLocationGroup:getSSLInspectionRulesLocationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesProxyGateway:getSSLInspectionRulesProxyGateway": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesSourceIpGroup:getSSLInspectionRulesSourceIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesTimeWindow:getSSLInspectionRulesTimeWindow": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesUser:getSSLInspectionRulesUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesWorkloadGroup:getSSLInspectionRulesWorkloadGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the workload group\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The expression used within the workload group.\n"
                },
                "expressionJsons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getSSLInspectionRulesWorkloadGroupExpressionJson:getSSLInspectionRulesWorkloadGroupExpressionJson"
                    },
                    "description": "A nested block describing the JSON expression for the workload group.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "lastModifiedBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getSSLInspectionRulesWorkloadGroupLastModifiedBy:getSSLInspectionRulesWorkloadGroupLastModifiedBy"
                    },
                    "description": "A nested block with details about who last modified the workload group.\n"
                },
                "lastModifiedTime": {
                    "type": "integer",
                    "description": "Timestamp when the workload group was last modified.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "expression",
                "expressionJsons",
                "id",
                "lastModifiedBies",
                "lastModifiedTime",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesWorkloadGroupExpressionJson:getSSLInspectionRulesWorkloadGroupExpressionJson": {
            "properties": {
                "expressionContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getSSLInspectionRulesWorkloadGroupExpressionJsonExpressionContainer:getSSLInspectionRulesWorkloadGroupExpressionJsonExpressionContainer"
                    },
                    "description": "Contains one or more tag types (and associated tags) combined using logical operators within a workload group\n"
                }
            },
            "type": "object",
            "required": [
                "expressionContainers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesWorkloadGroupExpressionJsonExpressionContainer:getSSLInspectionRulesWorkloadGroupExpressionJsonExpressionContainer": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "The operator (either AND or OR) used to create logical relationships among tag types\n"
                },
                "tagContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getSSLInspectionRulesWorkloadGroupExpressionJsonExpressionContainerTagContainer:getSSLInspectionRulesWorkloadGroupExpressionJsonExpressionContainerTagContainer"
                    },
                    "description": "Contains one or more tags and the logical operator used to combine the tags within a tag type\n"
                },
                "tagType": {
                    "type": "string",
                    "description": "The tag type selected from a predefined list\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "tagContainers",
                "tagType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesWorkloadGroupExpressionJsonExpressionContainerTagContainer:getSSLInspectionRulesWorkloadGroupExpressionJsonExpressionContainerTagContainer": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "The operator (either AND or OR) used to create logical relationships among tag types\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getSSLInspectionRulesWorkloadGroupExpressionJsonExpressionContainerTagContainerTag:getSSLInspectionRulesWorkloadGroupExpressionJsonExpressionContainerTagContainerTag"
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesWorkloadGroupExpressionJsonExpressionContainerTagContainerTag:getSSLInspectionRulesWorkloadGroupExpressionJsonExpressionContainerTagContainerTag": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesWorkloadGroupLastModifiedBy:getSSLInspectionRulesWorkloadGroupLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the time window.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSSLInspectionRulesZpaAppSegment:getSSLInspectionRulesZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "Indicates the external ID. Applicable only when this reference is of an external entity.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the SSL Inspection\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Inspection\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxReportClassification:getSandboxReportClassification": {
            "properties": {
                "category": {
                    "type": "string"
                },
                "detectedMalware": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "category",
                "detectedMalware",
                "score",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxReportExploit:getSandboxReportExploit": {
            "properties": {
                "risk": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signatureSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "risk",
                "signature",
                "signatureSources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxReportFileProperty:getSandboxReportFileProperty": {
            "properties": {
                "digitalCerificate": {
                    "type": "string"
                },
                "fileSize": {
                    "type": "integer"
                },
                "fileType": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "md5": {
                    "type": "string"
                },
                "rootCa": {
                    "type": "string"
                },
                "sha1": {
                    "type": "string"
                },
                "sha256": {
                    "type": "string"
                },
                "ssdeep": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "digitalCerificate",
                "fileSize",
                "fileType",
                "issuer",
                "md5",
                "rootCa",
                "sha1",
                "sha256",
                "ssdeep"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxReportNetworking:getSandboxReportNetworking": {
            "properties": {
                "risk": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signatureSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "risk",
                "signature",
                "signatureSources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxReportOrigin:getSandboxReportOrigin": {
            "properties": {
                "country": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "risk": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "country",
                "language",
                "risk"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxReportPersistence:getSandboxReportPersistence": {
            "properties": {
                "risk": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signatureSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "risk",
                "signature",
                "signatureSources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxReportSecurityBypass:getSandboxReportSecurityBypass": {
            "properties": {
                "risk": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signatureSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "risk",
                "signature",
                "signatureSources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxReportSpyware:getSandboxReportSpyware": {
            "properties": {
                "risk": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signatureSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "risk",
                "signature",
                "signatureSources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxReportStealth:getSandboxReportStealth": {
            "properties": {
                "risk": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signatureSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "risk",
                "signature",
                "signatureSources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxReportSummary:getSandboxReportSummary": {
            "properties": {
                "category": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "fileType": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "category",
                "duration",
                "fileType",
                "startTime",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxReportSystemSummary:getSandboxReportSystemSummary": {
            "properties": {
                "risk": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signatureSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "risk",
                "signature",
                "signatureSources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxRulesDepartment:getSandboxRulesDepartment": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Sandbox rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Sandbox rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxRulesGroup:getSandboxRulesGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Sandbox rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Sandbox rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxRulesLabel:getSandboxRulesLabel": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Sandbox rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Sandbox rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxRulesLastModifiedBy:getSandboxRulesLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Sandbox rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Sandbox rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxRulesLocation:getSandboxRulesLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Sandbox rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Sandbox rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxRulesLocationGroup:getSandboxRulesLocationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Sandbox rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Sandbox rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxRulesUser:getSandboxRulesUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional information about the entity\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Sandbox rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Sandbox rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getSandboxRulesZpaAppSegment:getSandboxRulesZpaAppSegment": {
            "properties": {
                "externalId": {
                    "type": "string",
                    "description": "Indicates the external ID. Applicable only when this reference is of an external entity.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the Sandbox rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Sandbox rule\n"
                }
            },
            "type": "object",
            "required": [
                "externalId",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getTrafficForwardingGREInternalIPRangeList:getTrafficForwardingGREInternalIPRangeList": {
            "properties": {
                "endIpAddress": {
                    "type": "string",
                    "description": "(String) Starting IP address in the range\n"
                },
                "startIpAddress": {
                    "type": "string",
                    "description": "(String) Ending IP address in the range\n"
                }
            },
            "type": "object",
            "required": [
                "endIpAddress",
                "startIpAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getTrafficForwardingGRETunnelLastModifiedBy:getTrafficForwardingGRETunnelLastModifiedBy": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Unique identifier of the static IP address that is associated to a GRE tunnel\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getTrafficForwardingGRETunnelManagedBy:getTrafficForwardingGRETunnelManagedBy": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Unique identifier of the static IP address that is associated to a GRE tunnel\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getTrafficForwardingGRETunnelPrimaryDestVip:getTrafficForwardingGRETunnelPrimaryDestVip": {
            "properties": {
                "city": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string",
                    "description": "(String) When within_country is enabled, you must set this to the country code.\n"
                },
                "datacenter": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier of the static IP address that is associated to a GRE tunnel\n"
                },
                "latitude": {
                    "type": "integer"
                },
                "longitude": {
                    "type": "integer"
                },
                "privateServiceEdge": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "virtualIp": {
                    "type": "string",
                    "description": "(String) GRE cluster virtual IP address (VIP)\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "countryCode",
                "datacenter",
                "id",
                "latitude",
                "longitude",
                "privateServiceEdge",
                "region",
                "virtualIp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getTrafficForwardingGRETunnelSecondaryDestVip:getTrafficForwardingGRETunnelSecondaryDestVip": {
            "properties": {
                "city": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string",
                    "description": "(String) When within_country is enabled, you must set this to the country code.\n"
                },
                "datacenter": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier of the static IP address that is associated to a GRE tunnel\n"
                },
                "latitude": {
                    "type": "integer"
                },
                "longitude": {
                    "type": "integer"
                },
                "privateServiceEdge": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "virtualIp": {
                    "type": "string",
                    "description": "(String) GRE cluster virtual IP address (VIP)\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "countryCode",
                "datacenter",
                "id",
                "latitude",
                "longitude",
                "privateServiceEdge",
                "region",
                "virtualIp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getTrafficForwardingStaticIPCity:getTrafficForwardingStaticIPCity": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique identifier for the static IP address\n"
                },
                "name": {
                    "type": "string",
                    "description": "(String) The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getTrafficForwardingStaticIPLastModifiedBy:getTrafficForwardingStaticIPLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The unique identifier for the static IP address\n"
                },
                "name": {
                    "type": "string",
                    "description": "(String) The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getTrafficForwardingStaticIPManagedBy:getTrafficForwardingStaticIPManagedBy": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique identifier for the static IP address\n"
                },
                "name": {
                    "type": "string",
                    "description": "(String) The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getTrafficForwardingVIPRecommendedListList:getTrafficForwardingVIPRecommendedListList": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "(String) Data center city information\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "(String) Data center information\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifer of the GRE virtual IP address (VIP)\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "(Number) The latitude coordinate of the GRE tunnel source.\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "(Number) The longitude coordinate of the GRE tunnel source.\n"
                },
                "privateServiceEdge": {
                    "type": "boolean",
                    "description": "(Boolean) Set to true if the virtual IP address (VIP) is a ZIA Private Service Edge\n"
                },
                "region": {
                    "type": "string",
                    "description": "(String) Data center region information.\n"
                },
                "virtualIp": {
                    "type": "string",
                    "description": "(String) GRE cluster virtual IP address (VIP)\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "latitude",
                "longitude",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getTrafficForwardingVPNCredentialsLocation:getTrafficForwardingVPNCredentialsLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifer of the GRE virtual IP address (VIP)\n"
                },
                "name": {
                    "type": "string",
                    "description": "(String) The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getTrafficForwardingVPNCredentialsManagedBy:getTrafficForwardingVPNCredentialsManagedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifer of the GRE virtual IP address (VIP)\n"
                },
                "name": {
                    "type": "string",
                    "description": "(String) The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLCategoriesScope:getURLCategoriesScope": {
            "properties": {
                "scopeEntities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getURLCategoriesScopeScopeEntity:getURLCategoriesScopeScopeEntity"
                    },
                    "description": "(List of Object)\n"
                },
                "scopeGroupMemberEntities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getURLCategoriesScopeScopeGroupMemberEntity:getURLCategoriesScopeScopeGroupMemberEntity"
                    },
                    "description": "(List of Object) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.\n"
                },
                "type": {
                    "type": "string",
                    "description": "(String) The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`\n"
                }
            },
            "type": "object",
            "required": [
                "scopeEntities",
                "scopeGroupMemberEntities",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLCategoriesScopeScopeEntity:getURLCategoriesScopeScopeEntity": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL category\n"
                },
                "name": {
                    "type": "string",
                    "description": "(String) The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLCategoriesScopeScopeGroupMemberEntity:getURLCategoriesScopeScopeGroupMemberEntity": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL category\n"
                },
                "name": {
                    "type": "string",
                    "description": "(String) The configured name of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLCategoriesUrlKeywordCount:getURLCategoriesUrlKeywordCount": {
            "properties": {
                "retainParentKeywordCount": {
                    "type": "integer",
                    "description": "(Number) Count of total keywords with retain parent category.\n"
                },
                "retainParentUrlCount": {
                    "type": "integer",
                    "description": "(Number) Count of URLs with retain parent category.\n"
                },
                "totalKeywordCount": {
                    "type": "integer",
                    "description": "(Number) Total keyword count for the category.\n"
                },
                "totalUrlCount": {
                    "type": "integer",
                    "description": "(Number) Custom URL count for the category.\n"
                }
            },
            "type": "object",
            "required": [
                "retainParentKeywordCount",
                "retainParentUrlCount",
                "totalKeywordCount",
                "totalUrlCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesCbiProfile:getURLFilteringRulesCbiProfile": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                },
                "url": {
                    "type": "string",
                    "description": "(String) The browser isolation profile URL\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesDepartment:getURLFilteringRulesDepartment": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesDevice:getURLFilteringRulesDevice": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesDeviceGroup:getURLFilteringRulesDeviceGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesGroup:getURLFilteringRulesGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesLabel:getURLFilteringRulesLabel": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesLastModifiedBy:getURLFilteringRulesLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesLocation:getURLFilteringRulesLocation": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesLocationGroup:getURLFilteringRulesLocationGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesOverrideGroup:getURLFilteringRulesOverrideGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesOverrideUser:getURLFilteringRulesOverrideUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesSourceIpGroup:getURLFilteringRulesSourceIpGroup": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesTimeWindow:getURLFilteringRulesTimeWindow": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesUser:getURLFilteringRulesUser": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesWorkloadGroup:getURLFilteringRulesWorkloadGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "(String) Additional information about the rule\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The description of the workload group\n"
                },
                "expressionJsons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getURLFilteringRulesWorkloadGroupExpressionJson:getURLFilteringRulesWorkloadGroupExpressionJson"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "lastModifiedBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getURLFilteringRulesWorkloadGroupLastModifiedBy:getURLFilteringRulesWorkloadGroupLastModifiedBy"
                    }
                },
                "lastModifiedTime": {
                    "type": "integer",
                    "description": "(Number) When the rule was last modified\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "expression",
                "expressionJsons",
                "id",
                "lastModifiedBies",
                "lastModifiedTime",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesWorkloadGroupExpressionJson:getURLFilteringRulesWorkloadGroupExpressionJson": {
            "properties": {
                "expressionContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getURLFilteringRulesWorkloadGroupExpressionJsonExpressionContainer:getURLFilteringRulesWorkloadGroupExpressionJsonExpressionContainer"
                    }
                }
            },
            "type": "object",
            "required": [
                "expressionContainers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesWorkloadGroupExpressionJsonExpressionContainer:getURLFilteringRulesWorkloadGroupExpressionJsonExpressionContainer": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "tagContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getURLFilteringRulesWorkloadGroupExpressionJsonExpressionContainerTagContainer:getURLFilteringRulesWorkloadGroupExpressionJsonExpressionContainerTagContainer"
                    }
                },
                "tagType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "tagContainers",
                "tagType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesWorkloadGroupExpressionJsonExpressionContainerTagContainer:getURLFilteringRulesWorkloadGroupExpressionJsonExpressionContainerTagContainer": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getURLFilteringRulesWorkloadGroupExpressionJsonExpressionContainerTagContainerTag:getURLFilteringRulesWorkloadGroupExpressionJsonExpressionContainerTagContainerTag"
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesWorkloadGroupExpressionJsonExpressionContainerTagContainerTag:getURLFilteringRulesWorkloadGroupExpressionJsonExpressionContainerTagContainerTag": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getURLFilteringRulesWorkloadGroupLastModifiedBy:getURLFilteringRulesWorkloadGroupLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "id": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the URL Filtering policy rule\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getUserManagementDepartment:getUserManagementDepartment": {
            "properties": {
                "comments": {
                    "type": "string",
                    "description": "(String) Additional information about the group\n"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "(Boolean) default: `false`\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the time window resource.\n"
                },
                "idpId": {
                    "type": "integer",
                    "description": "(Number) Unique identfier for the identity provider (IdP)\n"
                },
                "name": {
                    "type": "string",
                    "description": "User name. This appears when choosing users for policies.\n"
                }
            },
            "type": "object",
            "required": [
                "comments",
                "deleted",
                "id",
                "idpId",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getUserManagementGroup:getUserManagementGroup": {
            "properties": {
                "comments": {
                    "type": "string",
                    "description": "(String) Additional information about the group\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the time window resource.\n"
                },
                "idpId": {
                    "type": "integer",
                    "description": "(Number) Unique identfier for the identity provider (IdP)\n"
                },
                "name": {
                    "type": "string",
                    "description": "User name. This appears when choosing users for policies.\n"
                }
            },
            "type": "object",
            "required": [
                "comments",
                "id",
                "idpId",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getWorkloadGroupsExpressionJson:getWorkloadGroupsExpressionJson": {
            "properties": {
                "expressionContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getWorkloadGroupsExpressionJsonExpressionContainer:getWorkloadGroupsExpressionJsonExpressionContainer"
                    },
                    "description": "(List) Contains one or more tag types (and associated tags) combined using logical operators within a workload group\n"
                }
            },
            "type": "object",
            "required": [
                "expressionContainers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getWorkloadGroupsExpressionJsonExpressionContainer:getWorkloadGroupsExpressionJsonExpressionContainer": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "(String) The operator (either AND or OR) used to create logical relationships among tag types. Returned values are: ``AND``, ``OR``, ``OPEN_PARENTHESES``, ``CLOSE_PARENTHESES``\n"
                },
                "tagContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getWorkloadGroupsExpressionJsonExpressionContainerTagContainer:getWorkloadGroupsExpressionJsonExpressionContainerTagContainer"
                    },
                    "description": "(String) Contains one or more tags and the logical operator used to combine the tags within a tag type ``CLOSE_PARENTHESES``\n"
                },
                "tagType": {
                    "type": "string",
                    "description": "(String) The tag type selected from a predefined list. Returned values are: ``ANY``, ``VPC``, ``SUBNET``, ``VM``, ``ENI``, ``ATTR``\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "tagContainers",
                "tagType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getWorkloadGroupsExpressionJsonExpressionContainerTagContainer:getWorkloadGroupsExpressionJsonExpressionContainerTagContainer": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "(String) The operator (either AND or OR) used to create logical relationships among tag types. Returned values are: ``AND``, ``OR``, ``OPEN_PARENTHESES``, ``CLOSE_PARENTHESES``\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/getWorkloadGroupsExpressionJsonExpressionContainerTagContainerTag:getWorkloadGroupsExpressionJsonExpressionContainerTagContainerTag"
                    },
                    "description": "(String) One or more tags, each consisting of a key-value pair, selected within a tag type. If multiple tags are present within a tag type, they are combined using a logical operator. Note: A maximum of 8 tags can be added to a workload group, irrespective of the number of tag types present.\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getWorkloadGroupsExpressionJsonExpressionContainerTagContainerTag:getWorkloadGroupsExpressionJsonExpressionContainerTagContainerTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "(String) The key component present in the key-value pair contained in a tag\n"
                },
                "value": {
                    "type": "string",
                    "description": "(string) The value component present in the key-value pair contained in a tag\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "zia:index/getWorkloadGroupsLastModifiedBy:getWorkloadGroupsLastModifiedBy": {
            "properties": {
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String)\n"
                },
                "externalId": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "description": "The unique identifer for the workload group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workload group to be exported.\n"
                }
            },
            "type": "object",
            "required": [
                "extensions",
                "externalId",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the zia package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string",
                "secret": true
            },
            "clientId": {
                "type": "string",
                "description": "zpa client id\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "zpa client secret\n",
                "secret": true
            },
            "httpProxy": {
                "type": "string",
                "description": "Alternate HTTP proxy of scheme://hostname or scheme://hostname:port format\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "maximum number of retries to attempt before erroring out.\n"
            },
            "parallelism": {
                "type": "integer",
                "description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of\nhttps://help.zscaler.com/oneapi/understanding-rate-limiting.\n"
            },
            "password": {
                "type": "string",
                "secret": true
            },
            "privateKey": {
                "type": "string",
                "description": "zpa private key\n",
                "secret": true
            },
            "requestTimeout": {
                "type": "integer",
                "description": "Timeout for single request (in seconds) which is made to Zscaler, the default is `0` (means no limit is set). The\nmaximum value can be `300`.\n"
            },
            "sandboxCloud": {
                "type": "string",
                "description": "Zscaler Sandbox Cloud\n",
                "secret": true
            },
            "sandboxToken": {
                "type": "string",
                "description": "Zscaler Sandbox Token\n",
                "secret": true
            },
            "useLegacyClient": {
                "type": "boolean"
            },
            "username": {
                "type": "string"
            },
            "vanityDomain": {
                "type": "string",
                "description": "Zscaler Vanity Domain\n",
                "secret": true
            },
            "ziaCloud": {
                "type": "string"
            },
            "zscalerCloud": {
                "type": "string",
                "description": "Zscaler Cloud Name\n",
                "secret": true
            }
        },
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "ZIA_API_KEY"
                    ]
                },
                "secret": true
            },
            "clientId": {
                "type": "string",
                "description": "zpa client id\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_CLIENT_ID"
                    ]
                }
            },
            "clientSecret": {
                "type": "string",
                "description": "zpa client secret\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_CLIENT_SECRET"
                    ]
                },
                "secret": true
            },
            "httpProxy": {
                "type": "string",
                "description": "Alternate HTTP proxy of scheme://hostname or scheme://hostname:port format\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "maximum number of retries to attempt before erroring out.\n"
            },
            "parallelism": {
                "type": "integer",
                "description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of\nhttps://help.zscaler.com/oneapi/understanding-rate-limiting.\n"
            },
            "password": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "ZIA_PASSWORD"
                    ]
                },
                "secret": true
            },
            "privateKey": {
                "type": "string",
                "description": "zpa private key\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_PRIVATE_KEY"
                    ]
                },
                "secret": true
            },
            "requestTimeout": {
                "type": "integer",
                "description": "Timeout for single request (in seconds) which is made to Zscaler, the default is `0` (means no limit is set). The\nmaximum value can be `300`.\n"
            },
            "sandboxCloud": {
                "type": "string",
                "description": "Zscaler Sandbox Cloud\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_SANDBOX_CLOUD"
                    ]
                },
                "secret": true
            },
            "sandboxToken": {
                "type": "string",
                "description": "Zscaler Sandbox Token\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_SANDBOX_TOKEN"
                    ]
                },
                "secret": true
            },
            "useLegacyClient": {
                "type": "boolean",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_USE_LEGACY_CLIENT"
                    ]
                }
            },
            "username": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "ZIA_USERNAME"
                    ]
                }
            },
            "vanityDomain": {
                "type": "string",
                "description": "Zscaler Vanity Domain\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_VANITY_DOMAIN"
                    ]
                },
                "secret": true
            },
            "ziaCloud": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "ZIA_CLOUD"
                    ]
                }
            },
            "zscalerCloud": {
                "type": "string",
                "description": "Zscaler Cloud Name\n",
                "defaultInfo": {
                    "environment": [
                        "ZSCALER_CLOUD"
                    ]
                },
                "secret": true
            }
        },
        "methods": {
            "terraformConfig": "pulumi:providers:zia/terraformConfig"
        }
    },
    "resources": {
        "zia:index/aTPMaliciousURLs:ATPMaliciousURLs": {
            "description": "The **zia_atp_malicious_urls** resource alows you to Updates the malicious URLs added to the denylist in ATP policy. To learn more see [Advanced Threat Protection](https://help.zscaler.com/unified/configuring-security-exceptions-advanced-threat-protection-policy)\n\n## Example Usage\n\n```hcl\nresource \"zia_atp_malicious_urls\" \"this\" {\n    malicious_urls = [\n        \"test1.malicious.com\",\n        \"test2.malicious.com\",\n        \"test3.malicious.com\",\n    ]\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_atp_malicious_urls** can be imported by using `all_urls` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/aTPMaliciousURLs:ATPMaliciousURLs this all_urls\n```\n\n",
            "properties": {
                "maliciousUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "maliciousUrls"
            ],
            "inputProperties": {
                "maliciousUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ATPMaliciousURLs resources.\n",
                "properties": {
                    "maliciousUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "zia:index/aTPMalwareInspection:ATPMalwareInspection": {
            "description": "The **zia_atp_malware_inspection** resource allows you to update security exceptions for the Malware Protection inspection policy. To learn more see [Configuring Advanced Settings](https://help.zscaler.com/zia/configuring-advanced-settings)\n\n## Example Usage\n\n```hcl\nresource \"zia_atp_malware_inspection\" \"this\" {\n  inspect_inbound                       = true\n  inspect_outbound                      = true\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_atp_malware_inspection** can be imported by using `inspection` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/aTPMalwareInspection:ATPMalwareInspection this \"inspection\"\n```\n\n",
            "properties": {
                "inspectInbound": {
                    "type": "boolean",
                    "description": "A Boolean value that enables or disables scanning of incoming internet traffic for malicious content\n"
                },
                "inspectOutbound": {
                    "type": "boolean",
                    "description": "A Boolean value that enables or disables scanning of outgoing internet traffic for malicious content\n"
                }
            },
            "required": [
                "inspectInbound",
                "inspectOutbound"
            ],
            "inputProperties": {
                "inspectInbound": {
                    "type": "boolean",
                    "description": "A Boolean value that enables or disables scanning of incoming internet traffic for malicious content\n"
                },
                "inspectOutbound": {
                    "type": "boolean",
                    "description": "A Boolean value that enables or disables scanning of outgoing internet traffic for malicious content\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ATPMalwareInspection resources.\n",
                "properties": {
                    "inspectInbound": {
                        "type": "boolean",
                        "description": "A Boolean value that enables or disables scanning of incoming internet traffic for malicious content\n"
                    },
                    "inspectOutbound": {
                        "type": "boolean",
                        "description": "A Boolean value that enables or disables scanning of outgoing internet traffic for malicious content\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/aTPMalwarePolicy:ATPMalwarePolicy": {
            "description": "The **zia_atp_malware_policy** resource allows you to update security exceptions for the Malware Protection policy. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)\n\n## Example Usage\n\n```hcl\nresource \"zia_atp_malware_policy\" \"this\" {\n  block_unscannable_files                                     = true\n  block_password_protected_archive_files                      = true\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_atp_malware_policy** can be imported by using `policy` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/aTPMalwarePolicy:ATPMalwarePolicy this \"policy\"\n```\n\n",
            "properties": {
                "blockPasswordProtectedArchiveFiles": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether to allow or block users from uploading or downloading password-protected files\n"
                },
                "blockUnscannableFiles": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether to allow or block users from uploading or downloading files that the Zscaler service\nis unable to scan.\n"
                }
            },
            "required": [
                "blockPasswordProtectedArchiveFiles",
                "blockUnscannableFiles"
            ],
            "inputProperties": {
                "blockPasswordProtectedArchiveFiles": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether to allow or block users from uploading or downloading password-protected files\n"
                },
                "blockUnscannableFiles": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether to allow or block users from uploading or downloading files that the Zscaler service\nis unable to scan.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ATPMalwarePolicy resources.\n",
                "properties": {
                    "blockPasswordProtectedArchiveFiles": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether to allow or block users from uploading or downloading password-protected files\n"
                    },
                    "blockUnscannableFiles": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether to allow or block users from uploading or downloading files that the Zscaler service\nis unable to scan.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/aTPMalwareProtocols:ATPMalwareProtocols": {
            "description": "The **zia_atp_malware_protocols** resource allows you to update protocol inspection configurations of Malware Protection policy. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)\n\n## Example Usage\n\n```hcl\nresource \"zia_atp_malware_protocols\" \"this\" {\n  inspect_http                       = true\n  inspect_ftp_over_http              = true\n  inspect_ftp                        = true\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**atp_malware_protocols** can be imported by using `protocol` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/aTPMalwareProtocols:ATPMalwareProtocols this \"protocol\"\n```\n\n",
            "properties": {
                "inspectFtp": {
                    "type": "boolean",
                    "description": "A Boolean value that enables or disables scanning of FTP traffic for malicious content in real time\n"
                },
                "inspectFtpOverHttp": {
                    "type": "boolean",
                    "description": "A Boolean value that enables or disables scanning of FTP over HTTP traffic for malicious content in real time\n"
                },
                "inspectHttp": {
                    "type": "boolean",
                    "description": "A Boolean value that enables or disables scanning of HTTP traffic (and HTTPS traffic if SSL Inspection is enabled) for\nmalicious content in real time\n"
                }
            },
            "required": [
                "inspectFtp",
                "inspectFtpOverHttp",
                "inspectHttp"
            ],
            "inputProperties": {
                "inspectFtp": {
                    "type": "boolean",
                    "description": "A Boolean value that enables or disables scanning of FTP traffic for malicious content in real time\n"
                },
                "inspectFtpOverHttp": {
                    "type": "boolean",
                    "description": "A Boolean value that enables or disables scanning of FTP over HTTP traffic for malicious content in real time\n"
                },
                "inspectHttp": {
                    "type": "boolean",
                    "description": "A Boolean value that enables or disables scanning of HTTP traffic (and HTTPS traffic if SSL Inspection is enabled) for\nmalicious content in real time\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ATPMalwareProtocols resources.\n",
                "properties": {
                    "inspectFtp": {
                        "type": "boolean",
                        "description": "A Boolean value that enables or disables scanning of FTP traffic for malicious content in real time\n"
                    },
                    "inspectFtpOverHttp": {
                        "type": "boolean",
                        "description": "A Boolean value that enables or disables scanning of FTP over HTTP traffic for malicious content in real time\n"
                    },
                    "inspectHttp": {
                        "type": "boolean",
                        "description": "A Boolean value that enables or disables scanning of HTTP traffic (and HTTPS traffic if SSL Inspection is enabled) for\nmalicious content in real time\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/aTPMalwareSettings:ATPMalwareSettings": {
            "description": "The **zia_atp_malware_settings** resource allows you to update the malware protection policy configuration details. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)\n\n## Example Usage\n\n```hcl\nresource \"zia_atp_malware_settings\" \"this\" {\n  virus_blocked                       = true\n  virus_capture                       = false\n  unwanted_applications_blocked       = true\n  unwanted_applications_capture       = false\n  trojan_blocked                      = true\n  trojan_capture                      = false\n  worm_blocked                        = true\n  worm_capture                        = false\n  adware_blocked                      = true\n  adware_capture                      = false\n  spyware_blocked                     = true\n  spyware_capture                     = false\n  ransomware_blocked                  = true\n  ransomware_capture                  = false\n  remote_access_tool_blocked          = true\n  remote_access_tool_capture          = false\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_advanced_threat_settings** can be imported by using `advanced_threat_settings` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/aTPMalwareSettings:ATPMalwareSettings this \"advanced_threat_settings\"\n```\n\n",
            "properties": {
                "adwareBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether malicious files that automatically render advertisements and install adware are\nallowed or blocked\n"
                },
                "adwareCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware\n"
                },
                "ransomwareBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from\naccessing their devices, files, or data until a ransom payment is made.\n"
                },
                "ransomwareCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware\n"
                },
                "remoteAccessToolBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites\n"
                },
                "remoteAccessToolCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools\n"
                },
                "spywareBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are\nallowed or blocked\n"
                },
                "spywareCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware\n"
                },
                "trojanBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or\nuseful\n"
                },
                "trojanCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses\n"
                },
                "unwantedApplicationsBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by\nusers\n"
                },
                "unwantedApplicationsCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications\n"
                },
                "virusBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.\n"
                },
                "virusCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses\n"
                },
                "wormBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other\ndevices are allowed or blocked\n"
                },
                "wormCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms\n"
                }
            },
            "required": [
                "adwareBlocked",
                "adwareCapture",
                "ransomwareBlocked",
                "ransomwareCapture",
                "remoteAccessToolBlocked",
                "remoteAccessToolCapture",
                "spywareBlocked",
                "spywareCapture",
                "trojanBlocked",
                "trojanCapture",
                "unwantedApplicationsBlocked",
                "unwantedApplicationsCapture",
                "virusBlocked",
                "virusCapture",
                "wormBlocked",
                "wormCapture"
            ],
            "inputProperties": {
                "adwareBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether malicious files that automatically render advertisements and install adware are\nallowed or blocked\n"
                },
                "adwareCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware\n"
                },
                "ransomwareBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from\naccessing their devices, files, or data until a ransom payment is made.\n"
                },
                "ransomwareCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware\n"
                },
                "remoteAccessToolBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites\n"
                },
                "remoteAccessToolCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools\n"
                },
                "spywareBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are\nallowed or blocked\n"
                },
                "spywareCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware\n"
                },
                "trojanBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or\nuseful\n"
                },
                "trojanCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses\n"
                },
                "unwantedApplicationsBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by\nusers\n"
                },
                "unwantedApplicationsCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications\n"
                },
                "virusBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.\n"
                },
                "virusCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses\n"
                },
                "wormBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other\ndevices are allowed or blocked\n"
                },
                "wormCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ATPMalwareSettings resources.\n",
                "properties": {
                    "adwareBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether malicious files that automatically render advertisements and install adware are\nallowed or blocked\n"
                    },
                    "adwareCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware\n"
                    },
                    "ransomwareBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from\naccessing their devices, files, or data until a ransom payment is made.\n"
                    },
                    "ransomwareCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware\n"
                    },
                    "remoteAccessToolBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites\n"
                    },
                    "remoteAccessToolCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools\n"
                    },
                    "spywareBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are\nallowed or blocked\n"
                    },
                    "spywareCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware\n"
                    },
                    "trojanBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or\nuseful\n"
                    },
                    "trojanCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses\n"
                    },
                    "unwantedApplicationsBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by\nusers\n"
                    },
                    "unwantedApplicationsCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications\n"
                    },
                    "virusBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.\n"
                    },
                    "virusCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses\n"
                    },
                    "wormBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other\ndevices are allowed or blocked\n"
                    },
                    "wormCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/aTPSecurityExceptions:ATPSecurityExceptions": {
            "description": "The **zia_atp_security_exceptions** resource alows you to updates security exceptions for the ATP policy. To learn more see [Advanced Threat Protection](https://help.zscaler.com/unified/configuring-security-exceptions-advanced-threat-protection-policy)\n\n## Example Usage\n\n```hcl\nresource \"zia_atp_security_exceptions\" \"this\" {\n    bypass_urls = [\n        \"site1.example.com\",\n        \"site2.example.com\",\n        \"site3.example.com\",\n    ]\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_atp_security_exceptions** can be imported by using `all_urls` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/aTPSecurityExceptions:ATPSecurityExceptions this all_urls\n```\n\n",
            "properties": {
                "bypassUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "bypassUrls"
            ],
            "inputProperties": {
                "bypassUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ATPSecurityExceptions resources.\n",
                "properties": {
                    "bypassUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "zia:index/activationStatus:ActivationStatus": {
            "description": "## Example Usage\n\n```hcl\ndata \"zia_activation_status\" \"activation\" {}\n\nresource \"zia_activation_status\" \"activation\" {\n  status                      = \"ACTIVE\"\n}\n```\n\n## Import\n\nActivation is not an importable resource.\n\n",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Organization Policy Edit/Update Activation status\n"
                }
            },
            "required": [
                "status"
            ],
            "inputProperties": {
                "status": {
                    "type": "string",
                    "description": "Organization Policy Edit/Update Activation status\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ActivationStatus resources.\n",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Organization Policy Edit/Update Activation status\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "zia:index/adminRoles:AdminRoles": {
            "description": "The **zia_admin_roles** resource allows the creation and management of admin roles in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n### Create Admin Role\n\n```hcl\n# ZIA Admin Roles Resource\nresource \"zia_admin_roles\" \"this\" {\n  name               = \"AdminRoleTerraform\"\n  rank               = 7\n  alerting_access    = \"READ_WRITE\"\n  dashboard_access   = \"READ_WRITE\"\n  report_access      = \"READ_WRITE\"\n  analysis_access    = \"READ_ONLY\"\n  username_access    = \"READ_ONLY\"\n  device_info_access = \"READ_ONLY\"\n  admin_acct_access  = \"READ_WRITE\"\n  policy_access      = \"READ_WRITE\"\n  permissions = [\n \"NSS_CONFIGURATION\", \"LOCATIONS\", \"HOSTED_PAC_FILES\", \"EZ_AGENT_CONFIGURATIONS\",\n \"SECURE_AGENT_NOTIFICATIONS\", \"VPN_CREDENTIALS\", \"AUTHENTICATION_SETTINGS\", \"STATIC_IPS\",\n \"GRE_TUNNELS\", \"CLIENT_CONNECTOR_PORTAL\", \"SECURE\", \"POLICY_RESOURCE_MANAGEMENT\",\n \"CUSTOM_URL_CAT\", \"OVERRIDE_EXISTING_CAT\", \"TENANT_PROFILE_MANAGEMENT\", \"COMPLY\",\n \"SSL_POLICY\", \"ADVANCED_SETTINGS\", \"PROXY_GATEWAY\", \"SUBCLOUDS\", \"IDENTITY_PROXY_SETTINGS\",\n \"USER_MANAGEMENT\", \"APIKEY_MANAGEMENT\", \"FIREWALL_DNS\", \"VZEN_CONFIGURATION\",\n \"PARTNER_INTEGRATION\", \"USER_ACCESS\", \"CUSTOMER_ACCT_INFO\", \"CUSTOMER_SUBSCRIPTION\",\n \"CUSTOMER_ORG_SETTINGS\", \"ZIA_TRAFFIC_CAPTURE\", \"REMOTE_ASSISTANCE_MANAGEMENT\"\n  ]\n}\n```\n\n### Create Admin SDWAN Role\n\n```hcl\nresource \"zia_admin_roles\" \"this\" {\n  name               = \"SDWANAdminRoleTerraform\"\n  rank               = 7\n  policy_access      = \"READ_WRITE\"\n  alerting_access    = \"NONE\"\n  role_type          = \"SDWAN\"\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_rule_labels** can be imported by using `\u003cLABEL_ID\u003e` or `\u003cLABEL_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/adminRoles:AdminRoles example \u003clabel_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/adminRoles:AdminRoles example \u003clabel_name\u003e\n```\n\n",
            "properties": {
                "adminAcctAccess": {
                    "type": "string",
                    "description": "Admin and role management access permission.\n"
                },
                "alertingAccess": {
                    "type": "string",
                    "description": "Alerting access permission\n"
                },
                "analysisAccess": {
                    "type": "string",
                    "description": "Insights logs access permission.\n"
                },
                "dashboardAccess": {
                    "type": "string",
                    "description": "Dashboard access permission.\n"
                },
                "deviceInfoAccess": {
                    "type": "string",
                    "description": "Device information access permission. When set to NONE, device information is obfuscated.\n"
                },
                "extFeaturePermissions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "External feature access permission.\n"
                },
                "featurePermissions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Feature access permission. Indicates which features an admin role can access and if the admin has both read and write\naccess, or read-only access.\n"
                },
                "isAuditor": {
                    "type": "boolean",
                    "description": "Indicates whether this is an auditor role.\n"
                },
                "isNonEditable": {
                    "type": "boolean",
                    "description": "Indicates whether or not this admin user is editable/deletable.\n"
                },
                "logsLimit": {
                    "type": "string",
                    "description": "Log range limit.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Name of the admin role\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Request method for which the rule must be applied. If not set, rule will be applied to all methods\n"
                },
                "policyAccess": {
                    "type": "string",
                    "description": "Policy access permission.\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank of this admin role. This is applicable only when admin rank is enabled in the advanced settings. Default\nvalue is 7 (the lowest rank). The assigned admin rank determines the roles or admin users this user can manage, and\nwhich rule orders this admin can access.\n"
                },
                "reportAccess": {
                    "type": "string",
                    "description": "Report access permission.\n"
                },
                "reportTimeDuration": {
                    "type": "integer",
                    "description": "Time duration allocated to the report dashboard.\n"
                },
                "roleId": {
                    "type": "integer"
                },
                "roleType": {
                    "type": "string",
                    "description": "The admin role type. ()This attribute is subject to change.)\n"
                },
                "usernameAccess": {
                    "type": "string",
                    "description": "Username access permission. When set to NONE, the username will be obfuscated.\n"
                }
            },
            "required": [
                "adminAcctAccess",
                "alertingAccess",
                "analysisAccess",
                "dashboardAccess",
                "deviceInfoAccess",
                "name",
                "permissions",
                "policyAccess",
                "reportAccess",
                "reportTimeDuration",
                "roleId",
                "usernameAccess"
            ],
            "inputProperties": {
                "adminAcctAccess": {
                    "type": "string",
                    "description": "Admin and role management access permission.\n"
                },
                "alertingAccess": {
                    "type": "string",
                    "description": "Alerting access permission\n"
                },
                "analysisAccess": {
                    "type": "string",
                    "description": "Insights logs access permission.\n"
                },
                "dashboardAccess": {
                    "type": "string",
                    "description": "Dashboard access permission.\n"
                },
                "deviceInfoAccess": {
                    "type": "string",
                    "description": "Device information access permission. When set to NONE, device information is obfuscated.\n"
                },
                "extFeaturePermissions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "External feature access permission.\n"
                },
                "featurePermissions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Feature access permission. Indicates which features an admin role can access and if the admin has both read and write\naccess, or read-only access.\n"
                },
                "isAuditor": {
                    "type": "boolean",
                    "description": "Indicates whether this is an auditor role.\n"
                },
                "isNonEditable": {
                    "type": "boolean",
                    "description": "Indicates whether or not this admin user is editable/deletable.\n"
                },
                "logsLimit": {
                    "type": "string",
                    "description": "Log range limit.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Name of the admin role\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Request method for which the rule must be applied. If not set, rule will be applied to all methods\n"
                },
                "policyAccess": {
                    "type": "string",
                    "description": "Policy access permission.\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank of this admin role. This is applicable only when admin rank is enabled in the advanced settings. Default\nvalue is 7 (the lowest rank). The assigned admin rank determines the roles or admin users this user can manage, and\nwhich rule orders this admin can access.\n"
                },
                "reportAccess": {
                    "type": "string",
                    "description": "Report access permission.\n"
                },
                "reportTimeDuration": {
                    "type": "integer",
                    "description": "Time duration allocated to the report dashboard.\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "The admin role type. ()This attribute is subject to change.)\n"
                },
                "usernameAccess": {
                    "type": "string",
                    "description": "Username access permission. When set to NONE, the username will be obfuscated.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AdminRoles resources.\n",
                "properties": {
                    "adminAcctAccess": {
                        "type": "string",
                        "description": "Admin and role management access permission.\n"
                    },
                    "alertingAccess": {
                        "type": "string",
                        "description": "Alerting access permission\n"
                    },
                    "analysisAccess": {
                        "type": "string",
                        "description": "Insights logs access permission.\n"
                    },
                    "dashboardAccess": {
                        "type": "string",
                        "description": "Dashboard access permission.\n"
                    },
                    "deviceInfoAccess": {
                        "type": "string",
                        "description": "Device information access permission. When set to NONE, device information is obfuscated.\n"
                    },
                    "extFeaturePermissions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "External feature access permission.\n"
                    },
                    "featurePermissions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Feature access permission. Indicates which features an admin role can access and if the admin has both read and write\naccess, or read-only access.\n"
                    },
                    "isAuditor": {
                        "type": "boolean",
                        "description": "Indicates whether this is an auditor role.\n"
                    },
                    "isNonEditable": {
                        "type": "boolean",
                        "description": "Indicates whether or not this admin user is editable/deletable.\n"
                    },
                    "logsLimit": {
                        "type": "string",
                        "description": "Log range limit.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Name of the admin role\n"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Request method for which the rule must be applied. If not set, rule will be applied to all methods\n"
                    },
                    "policyAccess": {
                        "type": "string",
                        "description": "Policy access permission.\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "Admin rank of this admin role. This is applicable only when admin rank is enabled in the advanced settings. Default\nvalue is 7 (the lowest rank). The assigned admin rank determines the roles or admin users this user can manage, and\nwhich rule orders this admin can access.\n"
                    },
                    "reportAccess": {
                        "type": "string",
                        "description": "Report access permission.\n"
                    },
                    "reportTimeDuration": {
                        "type": "integer",
                        "description": "Time duration allocated to the report dashboard.\n"
                    },
                    "roleId": {
                        "type": "integer"
                    },
                    "roleType": {
                        "type": "string",
                        "description": "The admin role type. ()This attribute is subject to change.)\n"
                    },
                    "usernameAccess": {
                        "type": "string",
                        "description": "Username access permission. When set to NONE, the username will be obfuscated.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/adminUsers:AdminUsers": {
            "description": "The **zia_admin_users** resource allows the creation and management of ZIA admin user account created in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n### Organization Scope\n\n```hcl\n######### PASSWORDS IN THIS FILE ARE FAKE AND NOT USED IN PRODUCTION SYSTEMS #########\nresource \"zia_admin_users\" \"john_smith\" {\n  login_name                      = \"john.smith@acme.com\"\n  user_name                       = \"John Smith\"\n  email                           = \"john.smith@acme.com\"\n  is_password_login_allowed       = true\n  password                        = \"*********************\"\n  is_security_report_comm_enabled = true\n  is_service_update_comm_enabled  = true\n  is_product_update_comm_enabled  = true\n  comments                        = \"Administrator User\"\n  role {\n    id = data.zia_admin_roles.super_admin.id\n  }\n  admin_scope_type = \"ORGANIZATION\"\n}\n\ndata \"zia_admin_roles\" \"super_admin\" {\n  name = \"Super Admin\"\n}\n```\n\n### Department Scope\n\n```hcl\n######### PASSWORDS IN THIS FILE ARE FAKE AND NOT USED IN PRODUCTION SYSTEMS #########\nresource \"zia_admin_users\" \"john_smith\" {\n  login_name                      = \"john.smith@acme.com\"\n  user_name                       = \"John Smith\"\n  email                           = \"john.smith@acme.com\"\n  is_password_login_allowed       = true\n  password                        = \"*********************\"\n  is_security_report_comm_enabled = true\n  is_service_update_comm_enabled  = true\n  is_product_update_comm_enabled  = true\n  comments                        = \"Administrator User\"\n  role {\n    id = data.zia_admin_roles.super_admin.id\n  }\n  admin_scope_type = \"DEPARTMENT\"\n    admin_scope_entities {\n        id = [ data.zia_department_management.engineering.id, data.zia_department_management.sales.id ]\n    }\n}\n\ndata \"zia_admin_roles\" \"super_admin\" {\n  name = \"Super Admin\"\n}\n\ndata \"zia_department_management\" \"engineering\" {\n  name = \"Engineering\"\n}\n```\n\n### Location Scope\n\n```hcl\n######### PASSWORDS IN THIS FILE ARE FAKE AND NOT USED IN PRODUCTION SYSTEMS #########\nresource \"zia_admin_users\" \"john_smith\" {\n  login_name                      = \"john.smith@acme.com\"\n  user_name                       = \"John Smith\"\n  email                           = \"john.smith@acme.com\"\n  is_password_login_allowed       = true\n  password                        = \"*********************\"\n  is_security_report_comm_enabled = true\n  is_service_update_comm_enabled  = true\n  is_product_update_comm_enabled  = true\n  comments                        = \"Administrator User\"\n  role {\n    id = data.zia_admin_roles.super_admin.id\n  }\n  admin_scope_type = \"LOCATION\"\n    admin_scope_entities {\n        id = [ data.zia_location_management.au_sydney_branch01.id ]\n    }\n}\n\ndata \"zia_admin_roles\" \"super_admin\" {\n  name = \"Super Admin\"\n}\n\ndata \"zia_location_management\" \"au_sydney_branch01\" {\n  name = \"AU - Sydney - Branch01\"\n}\n```\n\n### Location Group Scope\n\n```hcl\n######### PASSWORDS IN THIS FILE ARE FAKE AND NOT USED IN PRODUCTION SYSTEMS #########\nresource \"zia_admin_users\" \"john_smith\" {\n  login_name                      = \"john.smith@acme.com\"\n  user_name                       = \"John Smith\"\n  email                           = \"john.smith@acme.com\"\n  is_password_login_allowed       = true\n password                         = \"*********************\"\n  is_security_report_comm_enabled = true\n  is_service_update_comm_enabled  = true\n  is_product_update_comm_enabled  = true\n  comments                        = \"Administrator User\"\n  role {\n    id = data.zia_admin_roles.super_admin.id\n  }\n  admin_scope_type = \"LOCATION_GROUP\"\n    admin_scope_entities {\n        id = [ data.zia_location_groups.corporate_user_traffic_group.id ]\n    }\n}\n\ndata \"zia_admin_roles\" \"super_admin\" {\n  name = \"Super Admin\"\n}\n\ndata \"zia_location_groups\" \"corporate_user_traffic_group\" {\n  name = \"Corporate User Traffic Group\"\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_admin_users** can be imported by using `\u003cADMIN ID\u003e` or `\u003cLOGIN NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/adminUsers:AdminUsers example \u003cadmin_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/adminUsers:AdminUsers example \u003clogin_name\u003e\n```\n\n⚠️ **NOTE :**:  This provider do not import the password attribute value during the importing process.\n\n",
            "properties": {
                "adminId": {
                    "type": "integer"
                },
                "adminScopeEntities": {
                    "$ref": "#/types/zia:index/AdminUsersAdminScopeEntities:AdminUsersAdminScopeEntities",
                    "description": "list of destination ip groups\n"
                },
                "adminScopeType": {
                    "type": "string"
                },
                "comments": {
                    "type": "string",
                    "description": "Additional information about the admin or auditor.\n"
                },
                "disabled": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string",
                    "description": "Admin or auditor's email address.\n"
                },
                "isAuditor": {
                    "type": "boolean"
                },
                "isExecMobileAppEnabled": {
                    "type": "boolean"
                },
                "isNonEditable": {
                    "type": "boolean"
                },
                "isPasswordExpired": {
                    "type": "boolean"
                },
                "isPasswordLoginAllowed": {
                    "type": "boolean"
                },
                "isProductUpdateCommEnabled": {
                    "type": "boolean"
                },
                "isSecurityReportCommEnabled": {
                    "type": "boolean"
                },
                "isServiceUpdateCommEnabled": {
                    "type": "boolean"
                },
                "loginName": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "description": "The admin's password. If admin single sign-on (SSO) is disabled, then this field is mandatory for POST requests. This\ninformation is not provided in a GET response.\n",
                    "secret": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/AdminUsersRole:AdminUsersRole"
                    },
                    "description": "Role of the admin. This is not required for an auditor.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Admin or auditor's username.\n"
                }
            },
            "required": [
                "adminId",
                "adminScopeType",
                "email",
                "loginName",
                "username"
            ],
            "inputProperties": {
                "adminScopeEntities": {
                    "$ref": "#/types/zia:index/AdminUsersAdminScopeEntities:AdminUsersAdminScopeEntities",
                    "description": "list of destination ip groups\n"
                },
                "adminScopeType": {
                    "type": "string"
                },
                "comments": {
                    "type": "string",
                    "description": "Additional information about the admin or auditor.\n"
                },
                "disabled": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string",
                    "description": "Admin or auditor's email address.\n"
                },
                "isAuditor": {
                    "type": "boolean"
                },
                "isExecMobileAppEnabled": {
                    "type": "boolean"
                },
                "isNonEditable": {
                    "type": "boolean"
                },
                "isPasswordExpired": {
                    "type": "boolean"
                },
                "isPasswordLoginAllowed": {
                    "type": "boolean"
                },
                "isProductUpdateCommEnabled": {
                    "type": "boolean"
                },
                "isSecurityReportCommEnabled": {
                    "type": "boolean"
                },
                "isServiceUpdateCommEnabled": {
                    "type": "boolean"
                },
                "loginName": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "description": "The admin's password. If admin single sign-on (SSO) is disabled, then this field is mandatory for POST requests. This\ninformation is not provided in a GET response.\n",
                    "secret": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/AdminUsersRole:AdminUsersRole"
                    },
                    "description": "Role of the admin. This is not required for an auditor.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Admin or auditor's username.\n"
                }
            },
            "requiredInputs": [
                "email",
                "loginName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AdminUsers resources.\n",
                "properties": {
                    "adminId": {
                        "type": "integer"
                    },
                    "adminScopeEntities": {
                        "$ref": "#/types/zia:index/AdminUsersAdminScopeEntities:AdminUsersAdminScopeEntities",
                        "description": "list of destination ip groups\n"
                    },
                    "adminScopeType": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Additional information about the admin or auditor.\n"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "email": {
                        "type": "string",
                        "description": "Admin or auditor's email address.\n"
                    },
                    "isAuditor": {
                        "type": "boolean"
                    },
                    "isExecMobileAppEnabled": {
                        "type": "boolean"
                    },
                    "isNonEditable": {
                        "type": "boolean"
                    },
                    "isPasswordExpired": {
                        "type": "boolean"
                    },
                    "isPasswordLoginAllowed": {
                        "type": "boolean"
                    },
                    "isProductUpdateCommEnabled": {
                        "type": "boolean"
                    },
                    "isSecurityReportCommEnabled": {
                        "type": "boolean"
                    },
                    "isServiceUpdateCommEnabled": {
                        "type": "boolean"
                    },
                    "loginName": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "description": "The admin's password. If admin single sign-on (SSO) is disabled, then this field is mandatory for POST requests. This\ninformation is not provided in a GET response.\n",
                        "secret": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/AdminUsersRole:AdminUsersRole"
                        },
                        "description": "Role of the admin. This is not required for an auditor.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Admin or auditor's username.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/advancedSettings:AdvancedSettings": {
            "description": "The **zia_advanced_settings** resource alows you to updates the advanced settings configuration in the ZIA Admin Portal. To learn more see [Configuring Advanced Settings](https://help.zscaler.com/zia/configuring-advanced-settings)\n\n## Example Usage\n\n```hcl\nresource \"zia_advanced_settings\" \"this\" {\n  auth_bypass_urls                                            = [\".newexample1.com\", \".newexample2.com\"]\n  dns_resolution_on_transparent_proxy_apps                    = [\"CHATGPT_AI\"]\n  basic_bypass_url_categories                                 = [\"NONE\"]\n  http_range_header_remove_url_categories                     = [\"NONE\"]\n  kerberos_bypass_urls                                        = [\"test1.com\"]\n  kerberos_bypass_apps                                        = []\n  dns_resolution_on_transparent_proxy_urls                    = [\"test1.com\", \"test2.com\"]\n  enable_dns_resolution_on_transparent_proxy                  = true\n  enable_evaluate_policy_on_global_ssl_bypass                 = true\n  enable_office365                                            = true\n  log_internal_ip                                             = true\n  enforce_surrogate_ip_for_windows_app                        = true\n  track_http_tunnel_on_http_ports                             = true\n  block_http_tunnel_on_non_http_ports                         = false\n  block_domain_fronting_on_host_header                        = false\n  zscaler_client_connector_1_and_pac_road_warrior_in_firewall = true\n  cascade_url_filtering                                       = true\n  enable_policy_for_unauthenticated_traffic                   = true\n  block_non_compliant_http_request_on_http_ports              = true\n  enable_admin_rank_access                                    = true\n  http2_nonbrowser_traffic_enabled                            = true\n  ecs_for_all_enabled                                         = false\n  dynamic_user_risk_enabled                                   = false\n  block_connect_host_sni_mismatch                             = false\n  prefer_sni_over_conn_host                                   = false\n  sipa_xff_header_enabled                                     = false\n  block_non_http_on_http_port_enabled                         = true\n  ui_session_timeout                                          = 300\n}\n\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_advanced_settings** can be imported by using `advanced_settings` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/advancedSettings:AdvancedSettings this \"advanced_settings\"\n```\n\n",
            "properties": {
                "authBypassApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications that are exempted from cookie authentication\n"
                },
                "authBypassUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories that are exempted from cookie authentication\n"
                },
                "authBypassUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom URLs that are exempted from cookie authentication for users\n"
                },
                "basicBypassApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications that are exempted from Basic authentication\n"
                },
                "basicBypassUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories that are exempted from Basic authentication\n"
                },
                "blockConnectHostSniMismatch": {
                    "type": "boolean",
                    "description": "Value indicating whether CONNECT host and SNI mismatch (i.e., CONNECT host doesn't match the SSL/TLS client hello SNI)\nis blocked or not\n"
                },
                "blockDomainFrontingApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Applications which are subjected to Domain Fronting\n"
                },
                "blockDomainFrontingOnHostHeader": {
                    "type": "boolean",
                    "description": "Value indicating whether to block or allow HTTP/S transactions in which the FQDN of the request URL is different than\nthe FQDN of the request's host header\n"
                },
                "blockHttpTunnelOnNonHttpPorts": {
                    "type": "boolean",
                    "description": "Value indicating whether HTTP CONNECT method requests to non-standard ports are allowed or not (i.e., requests directed\nto ports other than the standard HTTP/S ports 80 and 443)\n"
                },
                "blockNonCompliantHttpRequestOnHttpPorts": {
                    "type": "boolean",
                    "description": "Value indicating whether to allow or block traffic that is not compliant with RFC HTTP protocol standards\n"
                },
                "blockNonHttpOnHttpPortEnabled": {
                    "type": "boolean",
                    "description": "Value indicating whether non-HTTP Traffic on HTTP/S ports are allowed or blocked\n"
                },
                "cascadeUrlFiltering": {
                    "type": "boolean",
                    "description": "Value indicating whether to apply the URL Filtering policy even when the Cloud App Control policy already allows a\ntransaction explicitly\n"
                },
                "digestAuthBypassApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications that are exempted from Digest authentication\n"
                },
                "digestAuthBypassUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories that are exempted from Digest authentication\n"
                },
                "digestAuthBypassUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom URLs that are exempted from Digest authentication. Cloud applications that are exempted from Digest\nauthentication\n"
                },
                "dnsResolutionOnTransparentProxyApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications to which DNS optimization on transparent proxy mode applies\n"
                },
                "dnsResolutionOnTransparentProxyExemptApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications that are excluded from DNS optimization on transparent proxy mode\n"
                },
                "dnsResolutionOnTransparentProxyExemptUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dnsResolutionOnTransparentProxyExemptUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that are excluded from DNS optimization on transparent proxy mode\n"
                },
                "dnsResolutionOnTransparentProxyIpv6Apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications to which DNS optimization for IPv6 addresses on transparent proxy mode applies\n"
                },
                "dnsResolutionOnTransparentProxyIpv6ExemptApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications that are excluded from DNS optimization for IPv6 addresses on transparent proxy mode\n"
                },
                "dnsResolutionOnTransparentProxyIpv6ExemptUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dnsResolutionOnTransparentProxyIpv6UrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IPv6 URL categories to which DNS optimization on transparent proxy mode applies\n"
                },
                "dnsResolutionOnTransparentProxyUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories to which DNS optimization on transparent proxy mode applies\n"
                },
                "dnsResolutionOnTransparentProxyUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs to which DNS optimization on transparent proxy mode applies\n"
                },
                "domainFrontingBypassUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories that are exempted from domain fronting\n"
                },
                "dynamicUserRiskEnabled": {
                    "type": "boolean",
                    "description": "Value indicating whether to dynamically update user risk score by tracking risky user activities in real time\n"
                },
                "ecsForAllEnabled": {
                    "type": "boolean",
                    "description": "Value indicating whether or not to include the ECS option in all DNS queries, originating from all locations and remote\nusers.\n"
                },
                "enableAdminRankAccess": {
                    "type": "boolean",
                    "description": "Value indicating whether ranks are enabled for admins to allow admin ranks in policy configuration and management\n"
                },
                "enableDnsResolutionOnTransparentProxy": {
                    "type": "boolean",
                    "description": "Value indicating whether DNS optimization is enabled or disabled for Z-Tunnel 2.0 and transparent proxy mode traffic\n(e.g., traffic via GRE or IPSec tunnels without a PAC file).\n"
                },
                "enableEvaluatePolicyOnGlobalSslBypass": {
                    "type": "boolean",
                    "description": "Enable/Disable DNS optimization for all IPv6 transparent proxy traffic\n"
                },
                "enableIpv6DnsOptimizationOnAllTransparentProxy": {
                    "type": "boolean",
                    "description": "Enable/Disable DNS optimization for all IPv6 transparent proxy traffic\n"
                },
                "enableIpv6DnsResolutionOnTransparentProxy": {
                    "type": "boolean",
                    "description": "Value indicating whether DNS optimization is enabled or disabled for IPv6 connections to dual-stack or IPv6-only\ndestinations sent via Z-Tunnel 2.0 and transparent proxy proxy mode (e.g., traffic via GRE or IPSec tunnels without a\nPAC file).\n"
                },
                "enableOffice365": {
                    "type": "boolean",
                    "description": "Value indicating whether Microsoft Office 365 One Click Configuration is enabled or not\n"
                },
                "enablePolicyForUnauthenticatedTraffic": {
                    "type": "boolean",
                    "description": "Value indicating whether policies that include user and department criteria can be configured and applied for\nunauthenticated traffic\n"
                },
                "enforceSurrogateIpForWindowsApp": {
                    "type": "boolean",
                    "description": "Enforce Surrogate IP authentication for Windows app traffic\n"
                },
                "http2NonbrowserTrafficEnabled": {
                    "type": "boolean",
                    "description": "Value indicating whether or not HTTP/2 should be the default web protocol for accessing various applications at your\norganizational level\n"
                },
                "httpRangeHeaderRemoveUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories for which HTTP range headers must be removed\n"
                },
                "kerberosBypassApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications that are exempted from Kerberos authentication\n"
                },
                "kerberosBypassUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories that are exempted from Kerberos authentication\n"
                },
                "kerberosBypassUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom URLs that are exempted from Kerberos authentication\n"
                },
                "logInternalIp": {
                    "type": "boolean",
                    "description": "Value indicating whether to log internal IP address present in X-Forwarded-For (XFF) proxy header or not\n"
                },
                "preferSniOverConnHost": {
                    "type": "boolean",
                    "description": "Value indicating whether or not to use the SSL/TLS client hello SNI for DNS resolution instead of the CONNECT host for\nforward proxy connections\n"
                },
                "preferSniOverConnHostApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Applications that are exempted from the preferSniOverConnHost setting (i.e., prefer SSL/TLS client hello SNI for DNS\nresolution instead of the CONNECT host for forward proxy connections)\n"
                },
                "sipaXffHeaderEnabled": {
                    "type": "boolean",
                    "description": "Value indicating whether or not to insert XFF header to all traffic forwarded from ZIA to ZPA, including source\nIP-anchored and ZIA-inspected ZPA application traffic.\n"
                },
                "sniDnsOptimizationBypassUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories that are excluded from the preferSniOverConnHost setting (i.e., prefer SSL/TLS client hello SNI for DNS\nresolution instead of the CONNECT host for forward proxy connections)\n"
                },
                "trackHttpTunnelOnHttpPorts": {
                    "type": "boolean",
                    "description": "Value indicating whether to apply configured policies on tunneled HTTP traffic sent via a CONNECT method request on port\n80\n"
                },
                "uiSessionTimeout": {
                    "type": "integer",
                    "description": "Specifies the login session timeout for admins accessing the ZIA Admin Portal\n"
                },
                "zscalerClientConnector1AndPacRoadWarriorInFirewall": {
                    "type": "boolean",
                    "description": "Value indicating whether to apply the Firewall rules configured without a specified location criteria (or with the Road\nWarrior location) to remote user traffic forwarded via Z-Tunnel 1.0 or PAC files\n"
                }
            },
            "required": [
                "authBypassApps",
                "authBypassUrlCategories",
                "authBypassUrls",
                "basicBypassApps",
                "basicBypassUrlCategories",
                "blockConnectHostSniMismatch",
                "blockDomainFrontingApps",
                "blockDomainFrontingOnHostHeader",
                "blockHttpTunnelOnNonHttpPorts",
                "blockNonCompliantHttpRequestOnHttpPorts",
                "blockNonHttpOnHttpPortEnabled",
                "cascadeUrlFiltering",
                "digestAuthBypassApps",
                "digestAuthBypassUrlCategories",
                "digestAuthBypassUrls",
                "dnsResolutionOnTransparentProxyApps",
                "dnsResolutionOnTransparentProxyExemptApps",
                "dnsResolutionOnTransparentProxyExemptUrlCategories",
                "dnsResolutionOnTransparentProxyExemptUrls",
                "dnsResolutionOnTransparentProxyIpv6Apps",
                "dnsResolutionOnTransparentProxyIpv6ExemptApps",
                "dnsResolutionOnTransparentProxyIpv6ExemptUrlCategories",
                "dnsResolutionOnTransparentProxyIpv6UrlCategories",
                "dnsResolutionOnTransparentProxyUrlCategories",
                "dnsResolutionOnTransparentProxyUrls",
                "domainFrontingBypassUrlCategories",
                "dynamicUserRiskEnabled",
                "ecsForAllEnabled",
                "enableAdminRankAccess",
                "enableDnsResolutionOnTransparentProxy",
                "enableEvaluatePolicyOnGlobalSslBypass",
                "enableIpv6DnsOptimizationOnAllTransparentProxy",
                "enableIpv6DnsResolutionOnTransparentProxy",
                "enableOffice365",
                "enablePolicyForUnauthenticatedTraffic",
                "enforceSurrogateIpForWindowsApp",
                "http2NonbrowserTrafficEnabled",
                "httpRangeHeaderRemoveUrlCategories",
                "kerberosBypassApps",
                "kerberosBypassUrlCategories",
                "kerberosBypassUrls",
                "logInternalIp",
                "preferSniOverConnHost",
                "preferSniOverConnHostApps",
                "sipaXffHeaderEnabled",
                "sniDnsOptimizationBypassUrlCategories",
                "trackHttpTunnelOnHttpPorts",
                "uiSessionTimeout",
                "zscalerClientConnector1AndPacRoadWarriorInFirewall"
            ],
            "inputProperties": {
                "authBypassApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications that are exempted from cookie authentication\n"
                },
                "authBypassUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories that are exempted from cookie authentication\n"
                },
                "authBypassUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom URLs that are exempted from cookie authentication for users\n"
                },
                "basicBypassApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications that are exempted from Basic authentication\n"
                },
                "basicBypassUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories that are exempted from Basic authentication\n"
                },
                "blockConnectHostSniMismatch": {
                    "type": "boolean",
                    "description": "Value indicating whether CONNECT host and SNI mismatch (i.e., CONNECT host doesn't match the SSL/TLS client hello SNI)\nis blocked or not\n"
                },
                "blockDomainFrontingApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Applications which are subjected to Domain Fronting\n"
                },
                "blockDomainFrontingOnHostHeader": {
                    "type": "boolean",
                    "description": "Value indicating whether to block or allow HTTP/S transactions in which the FQDN of the request URL is different than\nthe FQDN of the request's host header\n"
                },
                "blockHttpTunnelOnNonHttpPorts": {
                    "type": "boolean",
                    "description": "Value indicating whether HTTP CONNECT method requests to non-standard ports are allowed or not (i.e., requests directed\nto ports other than the standard HTTP/S ports 80 and 443)\n"
                },
                "blockNonCompliantHttpRequestOnHttpPorts": {
                    "type": "boolean",
                    "description": "Value indicating whether to allow or block traffic that is not compliant with RFC HTTP protocol standards\n"
                },
                "blockNonHttpOnHttpPortEnabled": {
                    "type": "boolean",
                    "description": "Value indicating whether non-HTTP Traffic on HTTP/S ports are allowed or blocked\n"
                },
                "cascadeUrlFiltering": {
                    "type": "boolean",
                    "description": "Value indicating whether to apply the URL Filtering policy even when the Cloud App Control policy already allows a\ntransaction explicitly\n"
                },
                "digestAuthBypassApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications that are exempted from Digest authentication\n"
                },
                "digestAuthBypassUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories that are exempted from Digest authentication\n"
                },
                "digestAuthBypassUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom URLs that are exempted from Digest authentication. Cloud applications that are exempted from Digest\nauthentication\n"
                },
                "dnsResolutionOnTransparentProxyApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications to which DNS optimization on transparent proxy mode applies\n"
                },
                "dnsResolutionOnTransparentProxyExemptApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications that are excluded from DNS optimization on transparent proxy mode\n"
                },
                "dnsResolutionOnTransparentProxyExemptUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dnsResolutionOnTransparentProxyExemptUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that are excluded from DNS optimization on transparent proxy mode\n"
                },
                "dnsResolutionOnTransparentProxyIpv6Apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications to which DNS optimization for IPv6 addresses on transparent proxy mode applies\n"
                },
                "dnsResolutionOnTransparentProxyIpv6ExemptApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications that are excluded from DNS optimization for IPv6 addresses on transparent proxy mode\n"
                },
                "dnsResolutionOnTransparentProxyIpv6ExemptUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dnsResolutionOnTransparentProxyIpv6UrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IPv6 URL categories to which DNS optimization on transparent proxy mode applies\n"
                },
                "dnsResolutionOnTransparentProxyUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories to which DNS optimization on transparent proxy mode applies\n"
                },
                "dnsResolutionOnTransparentProxyUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs to which DNS optimization on transparent proxy mode applies\n"
                },
                "domainFrontingBypassUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories that are exempted from domain fronting\n"
                },
                "dynamicUserRiskEnabled": {
                    "type": "boolean",
                    "description": "Value indicating whether to dynamically update user risk score by tracking risky user activities in real time\n"
                },
                "ecsForAllEnabled": {
                    "type": "boolean",
                    "description": "Value indicating whether or not to include the ECS option in all DNS queries, originating from all locations and remote\nusers.\n"
                },
                "enableAdminRankAccess": {
                    "type": "boolean",
                    "description": "Value indicating whether ranks are enabled for admins to allow admin ranks in policy configuration and management\n"
                },
                "enableDnsResolutionOnTransparentProxy": {
                    "type": "boolean",
                    "description": "Value indicating whether DNS optimization is enabled or disabled for Z-Tunnel 2.0 and transparent proxy mode traffic\n(e.g., traffic via GRE or IPSec tunnels without a PAC file).\n"
                },
                "enableEvaluatePolicyOnGlobalSslBypass": {
                    "type": "boolean",
                    "description": "Enable/Disable DNS optimization for all IPv6 transparent proxy traffic\n"
                },
                "enableIpv6DnsOptimizationOnAllTransparentProxy": {
                    "type": "boolean",
                    "description": "Enable/Disable DNS optimization for all IPv6 transparent proxy traffic\n"
                },
                "enableIpv6DnsResolutionOnTransparentProxy": {
                    "type": "boolean",
                    "description": "Value indicating whether DNS optimization is enabled or disabled for IPv6 connections to dual-stack or IPv6-only\ndestinations sent via Z-Tunnel 2.0 and transparent proxy proxy mode (e.g., traffic via GRE or IPSec tunnels without a\nPAC file).\n"
                },
                "enableOffice365": {
                    "type": "boolean",
                    "description": "Value indicating whether Microsoft Office 365 One Click Configuration is enabled or not\n"
                },
                "enablePolicyForUnauthenticatedTraffic": {
                    "type": "boolean",
                    "description": "Value indicating whether policies that include user and department criteria can be configured and applied for\nunauthenticated traffic\n"
                },
                "enforceSurrogateIpForWindowsApp": {
                    "type": "boolean",
                    "description": "Enforce Surrogate IP authentication for Windows app traffic\n"
                },
                "http2NonbrowserTrafficEnabled": {
                    "type": "boolean",
                    "description": "Value indicating whether or not HTTP/2 should be the default web protocol for accessing various applications at your\norganizational level\n"
                },
                "httpRangeHeaderRemoveUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories for which HTTP range headers must be removed\n"
                },
                "kerberosBypassApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloud applications that are exempted from Kerberos authentication\n"
                },
                "kerberosBypassUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories that are exempted from Kerberos authentication\n"
                },
                "kerberosBypassUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom URLs that are exempted from Kerberos authentication\n"
                },
                "logInternalIp": {
                    "type": "boolean",
                    "description": "Value indicating whether to log internal IP address present in X-Forwarded-For (XFF) proxy header or not\n"
                },
                "preferSniOverConnHost": {
                    "type": "boolean",
                    "description": "Value indicating whether or not to use the SSL/TLS client hello SNI for DNS resolution instead of the CONNECT host for\nforward proxy connections\n"
                },
                "preferSniOverConnHostApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Applications that are exempted from the preferSniOverConnHost setting (i.e., prefer SSL/TLS client hello SNI for DNS\nresolution instead of the CONNECT host for forward proxy connections)\n"
                },
                "sipaXffHeaderEnabled": {
                    "type": "boolean",
                    "description": "Value indicating whether or not to insert XFF header to all traffic forwarded from ZIA to ZPA, including source\nIP-anchored and ZIA-inspected ZPA application traffic.\n"
                },
                "sniDnsOptimizationBypassUrlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL categories that are excluded from the preferSniOverConnHost setting (i.e., prefer SSL/TLS client hello SNI for DNS\nresolution instead of the CONNECT host for forward proxy connections)\n"
                },
                "trackHttpTunnelOnHttpPorts": {
                    "type": "boolean",
                    "description": "Value indicating whether to apply configured policies on tunneled HTTP traffic sent via a CONNECT method request on port\n80\n"
                },
                "uiSessionTimeout": {
                    "type": "integer",
                    "description": "Specifies the login session timeout for admins accessing the ZIA Admin Portal\n"
                },
                "zscalerClientConnector1AndPacRoadWarriorInFirewall": {
                    "type": "boolean",
                    "description": "Value indicating whether to apply the Firewall rules configured without a specified location criteria (or with the Road\nWarrior location) to remote user traffic forwarded via Z-Tunnel 1.0 or PAC files\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AdvancedSettings resources.\n",
                "properties": {
                    "authBypassApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cloud applications that are exempted from cookie authentication\n"
                    },
                    "authBypassUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URL categories that are exempted from cookie authentication\n"
                    },
                    "authBypassUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Custom URLs that are exempted from cookie authentication for users\n"
                    },
                    "basicBypassApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cloud applications that are exempted from Basic authentication\n"
                    },
                    "basicBypassUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URL categories that are exempted from Basic authentication\n"
                    },
                    "blockConnectHostSniMismatch": {
                        "type": "boolean",
                        "description": "Value indicating whether CONNECT host and SNI mismatch (i.e., CONNECT host doesn't match the SSL/TLS client hello SNI)\nis blocked or not\n"
                    },
                    "blockDomainFrontingApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Applications which are subjected to Domain Fronting\n"
                    },
                    "blockDomainFrontingOnHostHeader": {
                        "type": "boolean",
                        "description": "Value indicating whether to block or allow HTTP/S transactions in which the FQDN of the request URL is different than\nthe FQDN of the request's host header\n"
                    },
                    "blockHttpTunnelOnNonHttpPorts": {
                        "type": "boolean",
                        "description": "Value indicating whether HTTP CONNECT method requests to non-standard ports are allowed or not (i.e., requests directed\nto ports other than the standard HTTP/S ports 80 and 443)\n"
                    },
                    "blockNonCompliantHttpRequestOnHttpPorts": {
                        "type": "boolean",
                        "description": "Value indicating whether to allow or block traffic that is not compliant with RFC HTTP protocol standards\n"
                    },
                    "blockNonHttpOnHttpPortEnabled": {
                        "type": "boolean",
                        "description": "Value indicating whether non-HTTP Traffic on HTTP/S ports are allowed or blocked\n"
                    },
                    "cascadeUrlFiltering": {
                        "type": "boolean",
                        "description": "Value indicating whether to apply the URL Filtering policy even when the Cloud App Control policy already allows a\ntransaction explicitly\n"
                    },
                    "digestAuthBypassApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cloud applications that are exempted from Digest authentication\n"
                    },
                    "digestAuthBypassUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URL categories that are exempted from Digest authentication\n"
                    },
                    "digestAuthBypassUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Custom URLs that are exempted from Digest authentication. Cloud applications that are exempted from Digest\nauthentication\n"
                    },
                    "dnsResolutionOnTransparentProxyApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cloud applications to which DNS optimization on transparent proxy mode applies\n"
                    },
                    "dnsResolutionOnTransparentProxyExemptApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cloud applications that are excluded from DNS optimization on transparent proxy mode\n"
                    },
                    "dnsResolutionOnTransparentProxyExemptUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsResolutionOnTransparentProxyExemptUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URLs that are excluded from DNS optimization on transparent proxy mode\n"
                    },
                    "dnsResolutionOnTransparentProxyIpv6Apps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cloud applications to which DNS optimization for IPv6 addresses on transparent proxy mode applies\n"
                    },
                    "dnsResolutionOnTransparentProxyIpv6ExemptApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cloud applications that are excluded from DNS optimization for IPv6 addresses on transparent proxy mode\n"
                    },
                    "dnsResolutionOnTransparentProxyIpv6ExemptUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsResolutionOnTransparentProxyIpv6UrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IPv6 URL categories to which DNS optimization on transparent proxy mode applies\n"
                    },
                    "dnsResolutionOnTransparentProxyUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URL categories to which DNS optimization on transparent proxy mode applies\n"
                    },
                    "dnsResolutionOnTransparentProxyUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URLs to which DNS optimization on transparent proxy mode applies\n"
                    },
                    "domainFrontingBypassUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URL categories that are exempted from domain fronting\n"
                    },
                    "dynamicUserRiskEnabled": {
                        "type": "boolean",
                        "description": "Value indicating whether to dynamically update user risk score by tracking risky user activities in real time\n"
                    },
                    "ecsForAllEnabled": {
                        "type": "boolean",
                        "description": "Value indicating whether or not to include the ECS option in all DNS queries, originating from all locations and remote\nusers.\n"
                    },
                    "enableAdminRankAccess": {
                        "type": "boolean",
                        "description": "Value indicating whether ranks are enabled for admins to allow admin ranks in policy configuration and management\n"
                    },
                    "enableDnsResolutionOnTransparentProxy": {
                        "type": "boolean",
                        "description": "Value indicating whether DNS optimization is enabled or disabled for Z-Tunnel 2.0 and transparent proxy mode traffic\n(e.g., traffic via GRE or IPSec tunnels without a PAC file).\n"
                    },
                    "enableEvaluatePolicyOnGlobalSslBypass": {
                        "type": "boolean",
                        "description": "Enable/Disable DNS optimization for all IPv6 transparent proxy traffic\n"
                    },
                    "enableIpv6DnsOptimizationOnAllTransparentProxy": {
                        "type": "boolean",
                        "description": "Enable/Disable DNS optimization for all IPv6 transparent proxy traffic\n"
                    },
                    "enableIpv6DnsResolutionOnTransparentProxy": {
                        "type": "boolean",
                        "description": "Value indicating whether DNS optimization is enabled or disabled for IPv6 connections to dual-stack or IPv6-only\ndestinations sent via Z-Tunnel 2.0 and transparent proxy proxy mode (e.g., traffic via GRE or IPSec tunnels without a\nPAC file).\n"
                    },
                    "enableOffice365": {
                        "type": "boolean",
                        "description": "Value indicating whether Microsoft Office 365 One Click Configuration is enabled or not\n"
                    },
                    "enablePolicyForUnauthenticatedTraffic": {
                        "type": "boolean",
                        "description": "Value indicating whether policies that include user and department criteria can be configured and applied for\nunauthenticated traffic\n"
                    },
                    "enforceSurrogateIpForWindowsApp": {
                        "type": "boolean",
                        "description": "Enforce Surrogate IP authentication for Windows app traffic\n"
                    },
                    "http2NonbrowserTrafficEnabled": {
                        "type": "boolean",
                        "description": "Value indicating whether or not HTTP/2 should be the default web protocol for accessing various applications at your\norganizational level\n"
                    },
                    "httpRangeHeaderRemoveUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URL categories for which HTTP range headers must be removed\n"
                    },
                    "kerberosBypassApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cloud applications that are exempted from Kerberos authentication\n"
                    },
                    "kerberosBypassUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URL categories that are exempted from Kerberos authentication\n"
                    },
                    "kerberosBypassUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Custom URLs that are exempted from Kerberos authentication\n"
                    },
                    "logInternalIp": {
                        "type": "boolean",
                        "description": "Value indicating whether to log internal IP address present in X-Forwarded-For (XFF) proxy header or not\n"
                    },
                    "preferSniOverConnHost": {
                        "type": "boolean",
                        "description": "Value indicating whether or not to use the SSL/TLS client hello SNI for DNS resolution instead of the CONNECT host for\nforward proxy connections\n"
                    },
                    "preferSniOverConnHostApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Applications that are exempted from the preferSniOverConnHost setting (i.e., prefer SSL/TLS client hello SNI for DNS\nresolution instead of the CONNECT host for forward proxy connections)\n"
                    },
                    "sipaXffHeaderEnabled": {
                        "type": "boolean",
                        "description": "Value indicating whether or not to insert XFF header to all traffic forwarded from ZIA to ZPA, including source\nIP-anchored and ZIA-inspected ZPA application traffic.\n"
                    },
                    "sniDnsOptimizationBypassUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URL categories that are excluded from the preferSniOverConnHost setting (i.e., prefer SSL/TLS client hello SNI for DNS\nresolution instead of the CONNECT host for forward proxy connections)\n"
                    },
                    "trackHttpTunnelOnHttpPorts": {
                        "type": "boolean",
                        "description": "Value indicating whether to apply configured policies on tunneled HTTP traffic sent via a CONNECT method request on port\n80\n"
                    },
                    "uiSessionTimeout": {
                        "type": "integer",
                        "description": "Specifies the login session timeout for admins accessing the ZIA Admin Portal\n"
                    },
                    "zscalerClientConnector1AndPacRoadWarriorInFirewall": {
                        "type": "boolean",
                        "description": "Value indicating whether to apply the Firewall rules configured without a specified location criteria (or with the Road\nWarrior location) to remote user traffic forwarded via Z-Tunnel 1.0 or PAC files\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/advancedThreatSettings:AdvancedThreatSettings": {
            "description": "The **zia_advanced_threat_settings** resource allows you to update the advanced threat configuration settings. To learn more see [Configuring Advanced Settings](https://help.zscaler.com/zia/configuring-advanced-settings)\n\n## Example Usage\n\n```hcl\nresource \"zia_advanced_threat_settings\" \"this\" {\n  risk_tolerance                           = 80\n  risk_tolerance_capture                   = false\n  cmd_ctl_server_blocked                   = true\n  cmd_ctl_server_capture                   = false\n  cmd_ctl_traffic_blocked                  = true\n  cmd_ctl_traffic_capture                  = false\n  malware_sites_blocked                    = true\n  malware_sites_capture                    = false\n  activex_blocked                          = true\n  activex_capture                          = false\n  browser_exploits_blocked                 = true\n  browser_exploits_capture                 = false\n  file_format_vunerabilites_blocked        = true\n  file_format_vunerabilites_capture        = false\n  known_phishing_sites_blocked             = true\n  known_phishing_sites_capture             = false\n  suspected_phishing_sites_blocked         = true\n  suspected_phishing_sites_capture         = false\n  suspect_adware_spyware_sites_blocked     = true\n  suspect_adware_spyware_sites_capture     = false\n  web_spam_blocked                         = true\n  web_spam_capture                         = false\n  irc_tunnelling_blocked                   = true\n  irc_tunnelling_capture                   = false\n  anonymizer_blocked                       = true\n  anonymizer_capture                       = false\n  cookie_stealing_blocked                  = true\n  cookie_stealing_pcap_enabled             = false\n  potential_malicious_requests_blocked     = true\n  potential_malicious_requests_capture     = false\n  blocked_countries                        = [\"BR\",\"US\", \"CN\", \"RU\"]\n  block_countries_capture                  = false\n  bit_torrent_blocked                      = true\n  bit_torrent_capture                      = false\n  tor_blocked                              = true\n  tor_capture                              = false\n  google_talk_blocked                      = true\n  google_talk_capture                      = false\n  ssh_tunnelling_blocked                   = true\n  ssh_tunnelling_capture                   = false\n  crypto_mining_blocked                    = true\n  crypto_mining_capture                    = false\n  ad_spyware_sites_blocked                 = true\n  ad_spyware_sites_capture                 = false\n  dga_domains_blocked                      = true\n  dga_domains_capture                      = false\n  alert_for_unknown_suspicious_c2_traffic  = false\n  malicious_urls_capture                   = false\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_advanced_threat_settings** can be imported by using `advanced_threat_settings` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/advancedThreatSettings:AdvancedThreatSettings this \"advanced_threat_settings\"\n```\n\n",
            "properties": {
                "activexBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether sites are allowed or blocked from accessing vulnerable ActiveX controls that are\nknown to have been exploited.\n"
                },
                "activexCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for ActiveX controls\n"
                },
                "adSpywareSitesBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block websites known to contain adware or spyware that displays malicious\nadvertisements that can collect users' information without their knowledge\n"
                },
                "adSpywareSitesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for adware and spyware sites\n"
                },
                "alertForUnknownSuspiciousC2Traffic": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to send alerts upon detecting unknown or suspicious C2 traffic\n"
                },
                "anonymizerBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block applications and methods used to obscure the destination and the\ncontent accessed by the user, therefore blocking traffic to anonymizing web proxies\n"
                },
                "anonymizerCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for anonymizers\n"
                },
                "bitTorrentBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for blocked countries\n"
                },
                "bitTorrentCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for BitTorrent\n"
                },
                "blockCountriesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for blocked countries\n"
                },
                "blockedCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination\ncountries.\n"
                },
                "browserExploitsBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether known web browser vulnerabilities prone to exploitation are allowed or blocked.\n"
                },
                "browserExploitsCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for browser exploits\n"
                },
                "cmdCtlServerBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether connections to known Command \u0026 Control (C2) Servers are allowed or blocked\n"
                },
                "cmdCtlServerCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for connections to known C2 servers\n"
                },
                "cmdCtlTrafficBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether botnets are allowed or blocked from sending or receiving commands to unknown servers\n"
                },
                "cmdCtlTrafficCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for botnets\n"
                },
                "cookieStealingBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block third-party websites that gather cookie information\n"
                },
                "cookieStealingPcapEnabled": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for cookie stealing\n"
                },
                "cryptoMiningBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block cryptocurrency mining network traffic and script\n"
                },
                "cryptoMiningCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for cryptomining\n"
                },
                "dgaDomainsBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block domains that are suspected to be generated using domain generation\nalgorithms (DGA)\n"
                },
                "dgaDomainsCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for DGA domains\n"
                },
                "fileFormatVunerabilitesBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether known file format vulnerabilities and suspicious or malicious content in Microsoft\nOffice or PDF documents are allowed or blocked\n"
                },
                "fileFormatVunerabilitesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for file format vulnerabilities\n"
                },
                "googleTalkBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block access to Google Hangouts, a popular P2P VoIP application.\n"
                },
                "googleTalkCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for Google Hangouts\n"
                },
                "ircTunnellingBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for web spam\n"
                },
                "ircTunnellingCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for IRC tunnels\n"
                },
                "knownPhishingSitesBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether known phishing sites are allowed or blocked\n"
                },
                "knownPhishingSitesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for known phishing sites\n"
                },
                "maliciousUrlsCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for malicious URLs\n"
                },
                "malwareSitesBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether known malicious sites and content are allowed or blocked\n"
                },
                "malwareSitesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for malicious sites\n"
                },
                "potentialMaliciousRequestsBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block this type of cross-site scripting (XSS)\n"
                },
                "potentialMaliciousRequestsCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for (XSS) attacks\n"
                },
                "riskTolerance": {
                    "type": "integer",
                    "description": "The Page Risk tolerance index set between 0 and 100 (100 being the highest risk).\n"
                },
                "riskToleranceCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for suspicious web pages\n"
                },
                "sshTunnellingBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block SSH traffic being tunneled over HTTP/Ss\n"
                },
                "sshTunnellingCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for SSH tunnels\n"
                },
                "suspectAdwareSpywareSitesBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block any detections of communication and callback traffic associated\nwith spyware agents and data transmission\n"
                },
                "suspectAdwareSpywareSitesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for suspected adware and spyware sites\n"
                },
                "suspectedPhishingSitesBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block suspected phishing sites identified through heuristic detection.\n"
                },
                "suspectedPhishingSitesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for suspected phishing sites\n"
                },
                "torBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block the usage of Tor, a popular P2P anonymizer protocol with support\nfor encryption.\n"
                },
                "torCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for Tor\n"
                },
                "webSpamBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block web pages that pretend to contain useful information, to get higher\nranking in search engine results or drive traffic to phishing, adware, or spyware distribution sites.\n"
                },
                "webSpamCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for web spam\n"
                }
            },
            "required": [
                "blockedCountries"
            ],
            "inputProperties": {
                "activexBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether sites are allowed or blocked from accessing vulnerable ActiveX controls that are\nknown to have been exploited.\n"
                },
                "activexCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for ActiveX controls\n"
                },
                "adSpywareSitesBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block websites known to contain adware or spyware that displays malicious\nadvertisements that can collect users' information without their knowledge\n"
                },
                "adSpywareSitesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for adware and spyware sites\n"
                },
                "alertForUnknownSuspiciousC2Traffic": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to send alerts upon detecting unknown or suspicious C2 traffic\n"
                },
                "anonymizerBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block applications and methods used to obscure the destination and the\ncontent accessed by the user, therefore blocking traffic to anonymizing web proxies\n"
                },
                "anonymizerCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for anonymizers\n"
                },
                "bitTorrentBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for blocked countries\n"
                },
                "bitTorrentCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for BitTorrent\n"
                },
                "blockCountriesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for blocked countries\n"
                },
                "blockedCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination\ncountries.\n"
                },
                "browserExploitsBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether known web browser vulnerabilities prone to exploitation are allowed or blocked.\n"
                },
                "browserExploitsCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for browser exploits\n"
                },
                "cmdCtlServerBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether connections to known Command \u0026 Control (C2) Servers are allowed or blocked\n"
                },
                "cmdCtlServerCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for connections to known C2 servers\n"
                },
                "cmdCtlTrafficBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether botnets are allowed or blocked from sending or receiving commands to unknown servers\n"
                },
                "cmdCtlTrafficCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for botnets\n"
                },
                "cookieStealingBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block third-party websites that gather cookie information\n"
                },
                "cookieStealingPcapEnabled": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for cookie stealing\n"
                },
                "cryptoMiningBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block cryptocurrency mining network traffic and script\n"
                },
                "cryptoMiningCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for cryptomining\n"
                },
                "dgaDomainsBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block domains that are suspected to be generated using domain generation\nalgorithms (DGA)\n"
                },
                "dgaDomainsCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for DGA domains\n"
                },
                "fileFormatVunerabilitesBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether known file format vulnerabilities and suspicious or malicious content in Microsoft\nOffice or PDF documents are allowed or blocked\n"
                },
                "fileFormatVunerabilitesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for file format vulnerabilities\n"
                },
                "googleTalkBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block access to Google Hangouts, a popular P2P VoIP application.\n"
                },
                "googleTalkCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for Google Hangouts\n"
                },
                "ircTunnellingBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for web spam\n"
                },
                "ircTunnellingCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for IRC tunnels\n"
                },
                "knownPhishingSitesBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether known phishing sites are allowed or blocked\n"
                },
                "knownPhishingSitesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for known phishing sites\n"
                },
                "maliciousUrlsCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for malicious URLs\n"
                },
                "malwareSitesBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether known malicious sites and content are allowed or blocked\n"
                },
                "malwareSitesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for malicious sites\n"
                },
                "potentialMaliciousRequestsBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block this type of cross-site scripting (XSS)\n"
                },
                "potentialMaliciousRequestsCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for (XSS) attacks\n"
                },
                "riskTolerance": {
                    "type": "integer",
                    "description": "The Page Risk tolerance index set between 0 and 100 (100 being the highest risk).\n"
                },
                "riskToleranceCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for suspicious web pages\n"
                },
                "sshTunnellingBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block SSH traffic being tunneled over HTTP/Ss\n"
                },
                "sshTunnellingCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for SSH tunnels\n"
                },
                "suspectAdwareSpywareSitesBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block any detections of communication and callback traffic associated\nwith spyware agents and data transmission\n"
                },
                "suspectAdwareSpywareSitesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for suspected adware and spyware sites\n"
                },
                "suspectedPhishingSitesBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block suspected phishing sites identified through heuristic detection.\n"
                },
                "suspectedPhishingSitesCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for suspected phishing sites\n"
                },
                "torBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block the usage of Tor, a popular P2P anonymizer protocol with support\nfor encryption.\n"
                },
                "torCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for Tor\n"
                },
                "webSpamBlocked": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether to allow or block web pages that pretend to contain useful information, to get higher\nranking in search engine results or drive traffic to phishing, adware, or spyware distribution sites.\n"
                },
                "webSpamCapture": {
                    "type": "boolean",
                    "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for web spam\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AdvancedThreatSettings resources.\n",
                "properties": {
                    "activexBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether sites are allowed or blocked from accessing vulnerable ActiveX controls that are\nknown to have been exploited.\n"
                    },
                    "activexCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for ActiveX controls\n"
                    },
                    "adSpywareSitesBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block websites known to contain adware or spyware that displays malicious\nadvertisements that can collect users' information without their knowledge\n"
                    },
                    "adSpywareSitesCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for adware and spyware sites\n"
                    },
                    "alertForUnknownSuspiciousC2Traffic": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to send alerts upon detecting unknown or suspicious C2 traffic\n"
                    },
                    "anonymizerBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block applications and methods used to obscure the destination and the\ncontent accessed by the user, therefore blocking traffic to anonymizing web proxies\n"
                    },
                    "anonymizerCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for anonymizers\n"
                    },
                    "bitTorrentBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for blocked countries\n"
                    },
                    "bitTorrentCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for BitTorrent\n"
                    },
                    "blockCountriesCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for blocked countries\n"
                    },
                    "blockedCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination\ncountries.\n"
                    },
                    "browserExploitsBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether known web browser vulnerabilities prone to exploitation are allowed or blocked.\n"
                    },
                    "browserExploitsCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for browser exploits\n"
                    },
                    "cmdCtlServerBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether connections to known Command \u0026 Control (C2) Servers are allowed or blocked\n"
                    },
                    "cmdCtlServerCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for connections to known C2 servers\n"
                    },
                    "cmdCtlTrafficBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether botnets are allowed or blocked from sending or receiving commands to unknown servers\n"
                    },
                    "cmdCtlTrafficCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for botnets\n"
                    },
                    "cookieStealingBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block third-party websites that gather cookie information\n"
                    },
                    "cookieStealingPcapEnabled": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for cookie stealing\n"
                    },
                    "cryptoMiningBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block cryptocurrency mining network traffic and script\n"
                    },
                    "cryptoMiningCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for cryptomining\n"
                    },
                    "dgaDomainsBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block domains that are suspected to be generated using domain generation\nalgorithms (DGA)\n"
                    },
                    "dgaDomainsCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for DGA domains\n"
                    },
                    "fileFormatVunerabilitesBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether known file format vulnerabilities and suspicious or malicious content in Microsoft\nOffice or PDF documents are allowed or blocked\n"
                    },
                    "fileFormatVunerabilitesCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for file format vulnerabilities\n"
                    },
                    "googleTalkBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block access to Google Hangouts, a popular P2P VoIP application.\n"
                    },
                    "googleTalkCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for Google Hangouts\n"
                    },
                    "ircTunnellingBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for web spam\n"
                    },
                    "ircTunnellingCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for IRC tunnels\n"
                    },
                    "knownPhishingSitesBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether known phishing sites are allowed or blocked\n"
                    },
                    "knownPhishingSitesCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for known phishing sites\n"
                    },
                    "maliciousUrlsCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for malicious URLs\n"
                    },
                    "malwareSitesBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether known malicious sites and content are allowed or blocked\n"
                    },
                    "malwareSitesCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for malicious sites\n"
                    },
                    "potentialMaliciousRequestsBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block this type of cross-site scripting (XSS)\n"
                    },
                    "potentialMaliciousRequestsCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for (XSS) attacks\n"
                    },
                    "riskTolerance": {
                        "type": "integer",
                        "description": "The Page Risk tolerance index set between 0 and 100 (100 being the highest risk).\n"
                    },
                    "riskToleranceCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for suspicious web pages\n"
                    },
                    "sshTunnellingBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block SSH traffic being tunneled over HTTP/Ss\n"
                    },
                    "sshTunnellingCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for SSH tunnels\n"
                    },
                    "suspectAdwareSpywareSitesBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block any detections of communication and callback traffic associated\nwith spyware agents and data transmission\n"
                    },
                    "suspectAdwareSpywareSitesCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for suspected adware and spyware sites\n"
                    },
                    "suspectedPhishingSitesBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block suspected phishing sites identified through heuristic detection.\n"
                    },
                    "suspectedPhishingSitesCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for suspected phishing sites\n"
                    },
                    "torBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block the usage of Tor, a popular P2P anonymizer protocol with support\nfor encryption.\n"
                    },
                    "torCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for Tor\n"
                    },
                    "webSpamBlocked": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether to allow or block web pages that pretend to contain useful information, to get higher\nranking in search engine results or drive traffic to phishing, adware, or spyware distribution sites.\n"
                    },
                    "webSpamCapture": {
                        "type": "boolean",
                        "description": "A Boolean value specifying whether packet capture (PCAP) is enabled or not for web spam\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/authSettingsURLs:AuthSettingsURLs": {
            "description": "The **zia_auth_settings_urls** resource alows you to add or remove a URL from the cookie authentication exempt list in the Zscaler Internet Access cloud or via the API. To learn more see [URL Format Guidelines](https://help.zscaler.com/zia/url-format-guidelines)\n\n## Example Usage\n\n```hcl\n# ZIA User Auth Settings Data Source\nresource \"zia_auth_settings_urls\" \"example\" {\n  urls = [\n    \".okta.com\",\n    \".oktacdn.com\",\n    \".mtls.oktapreview.com\",\n    \".mtls.okta.com\",\n    \"d3l44rcogcb7iv.cloudfront.net\",\n    \"pac.zdxcloud.net\",\n    \".windowsazure.com\",\n    \".fedoraproject.org\",\n    \"login.windows.net\",\n    \"d32a6ru7mhaq0c.cloudfront.net\",\n    \".kerberos.oktapreview.com\",\n    \".oktapreview.com\",\n    \"login.zdxcloud.net\",\n    \"login.microsoftonline.com\",\n    \"smres.zdxcloud.net\",\n    \".kerberos.okta.com\"\n  ]\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_auth_settings_urls** can be imported by using `all_urls` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/authSettingsURLs:AuthSettingsURLs example all_urls\n```\n\n",
            "properties": {
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "urls"
            ],
            "inputProperties": {
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthSettingsURLs resources.\n",
                "properties": {
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "zia:index/cloudAppControlRule:CloudAppControlRule": {
            "description": "The **zia_cloud_app_control_rule** resource allows the creation and management of ZIA Cloud Application Control rules in the Zscaler Internet Access.\n\n**NOTE** Resources or DataSources to retrieve Tenant Profile or Cloud Application Risk Profile ID information are not currently available.\n\n## Example Usage\n\n### Basic Rule Configuration\n\n```hcl\nresource \"zia_cloud_app_control_rule\" \"this\" {\n    name                         = \"Example_WebMail_Rule\"\n    description                  = \"Example_WebMail_Rule\"\n    order                        = 1\n    rank                         = 7\n    state                        = \"ENABLED\"\n    type                         = \"WEBMAIL\"\n    actions                      = [\n        \"ALLOW_WEBMAIL_VIEW\",\n        \"ALLOW_WEBMAIL_ATTACHMENT_SEND\",\n        \"ALLOW_WEBMAIL_SEND\",\n    ]\n    applications          = [\n        \"GOOGLE_WEBMAIL\",\n        \"YAHOO_WEBMAIL\",\n    ]\n    device_trust_levels   = [\"UNKNOWN_DEVICETRUSTLEVEL\", \"LOW_TRUST\", \"MEDIUM_TRUST\", \"HIGH_TRUST\"]\n    user_agent_types      = [\"OPERA\", \"FIREFOX\", \"MSIE\", \"MSEDGE\", \"CHROME\", \"SAFARI\", \"MSCHREDGE\"]\n}\n```\n\n### With Cloud Risk Profile Configuration\n\n```hcl\nresource \"zia_cloud_app_control_rule\" \"this\" {\n    name                         = \"Example_WebMail_Rule\"\n    description                  = \"Example_WebMail_Rule\"\n    order                        = 1\n    rank                         = 7\n    state                        = \"ENABLED\"\n    type                         = \"WEBMAIL\"\n    actions                      = [\n        \"ALLOW_WEBMAIL_VIEW\",\n        \"ALLOW_WEBMAIL_ATTACHMENT_SEND\",\n        \"ALLOW_WEBMAIL_SEND\",\n    ]\n    applications          = [\n        \"GOOGLE_WEBMAIL\",\n        \"YAHOO_WEBMAIL\",\n    ]\n    cloud_app_risk_profile {\n      id = 318\n    }\n}\n```\n\n### With Tenant Profile Configuration\n\n**NOTE** Tenant profile is supported only for specific applications depending on the type\n\n```hcl\nresource \"zia_cloud_app_control_rule\" \"this\" {\n    name                         = \"Example_WebMail_Rule\"\n    description                  = \"Example_WebMail_Rule\"\n    order                        = 1\n    rank                         = 7\n    state                        = \"ENABLED\"\n    type                         = \"WEBMAIL\"\n    actions                      = [\n        \"ALLOW_WEBMAIL_VIEW\",\n        \"ALLOW_WEBMAIL_ATTACHMENT_SEND\",\n        \"ALLOW_WEBMAIL_SEND\",\n    ]\n    applications          = [\n        \"GOOGLE_WEBMAIL\",\n        \"YAHOO_WEBMAIL\",\n    ]\n    tenancy_profile_ids {\n        id = [ 19016237 ]\n    }\n}\n```\n\n### With ISOLATE ACTION\n\n⚠️ **WARNING 1:**: Creating a Cloud Application Control Rule with the actions containing `ISOLATE_` Cloud Browser Isolation subscription is required. See the \"Cloud Application Control - Rule Types vs Actions Matrix\" below. To learn more, contact Zscaler Support or your local account team.\n\n```hcl\ndata \"zia_cloud_browser_isolation_profile\" \"this\" {\n    name = \"BD_SA_Profile1_ZIA\"\n}\n\nresource \"zia_cloud_app_control_rule\" \"this\" {\n    name                         = \"Example\"\n    description                  = \"Example\"\n    state                        = \"ENABLED\"\n    type                         = \"WEBMAIL\"\n    actions                      = [\n        \"ALLOW_WEBMAIL_VIEW\",\n        \"ALLOW_WEBMAIL_ATTACHMENT_SEND\",\n        \"ALLOW_WEBMAIL_SEND\",\n    ]\n    applications          = [\n        \"GOOGLE_WEBMAIL\",\n        \"YAHOO_WEBMAIL\",\n    ]\n    order                 = 1\n    enforce_time_validity = true\n    validity_start_time   = \"Mon, 17 Jun 2024 23:30:00 UTC\"\n    validity_end_time     = \"Tue, 17 Jun 2025 23:00:00 UTC\"\n    validity_time_zone_id = \"US/Pacific\"\n    time_quota            = 15\n    size_quota            = 10\n    device_trust_levels   = [\"UNKNOWN_DEVICETRUSTLEVEL\", \"LOW_TRUST\", \"MEDIUM_TRUST\", \"HIGH_TRUST\"]\n    cbi_profile {\n        id = data.zia_cloud_browser_isolation_profile.this.id\n        name = data.zia_cloud_browser_isolation_profile.this.name\n        url = data.zia_cloud_browser_isolation_profile.this.url\n    }\n    user_agent_types = [ \"OPERA\", \"FIREFOX\", \"MSIE\", \"MSEDGE\", \"CHROME\", \"SAFARI\", \"MSCHREDGE\" ]\n}\n```\n\n## Cloud Application Control - Rule Types vs Actions Matrix\n\n**Note**: Refer to this matrix when configuring types vs actions for each specific rules\n\n|              Types                   |                    Actions                                                |\n|:------------------------------------:|:-------------------------------------------------------------------------:|\n|---------------|--------------------------------------------------|\n|               `AI_ML`                | `DENY_AI_ML_WEB_USE`, `ALLOW_AI_ML_WEB_USE`, `ISOLATE_AI_ML_WEB_USE`,     |\n|               `AI_ML`                | `CAUTION_AI_ML_WEB_USE`, `DENY_AI_ML_UPLOAD`, `ALLOW_AI_ML_UPLOAD`,       |\n|               `AI_ML`                | `DENY_AI_ML_SHARE`, `ALLOW_AI_ML_SHARE`, `DENY_AI_ML_DOWNLOAD`,           |\n|               `AI_ML`                | `ALLOW_AI_ML_DOWNLOAD`, `DENY_AI_ML_DELETE`,`ALLOW_AI_ML_DELETE`,         |\n|               `AI_ML`                | `DENY_AI_ML_INVITE`, `ALLOW_AI_ML_INVITE`, `DENY_AI_ML_CHAT`,             |\n|               `AI_ML`                | `ALLOW_AI_ML_CHAT`, `DENY_AI_ML_CREATE`, `ALLOW_AI_ML_CREATE`,            |\n|               `AI_ML`                | `DENY_AI_ML_RENAME`, `ALLOW_AI_ML_RENAME`                                 |\n|-------------------------|--------------------------------------------------------|\n|       `BUSINESS_PRODUCTIVITY`        | `ALLOW_BUSINESS_PRODUCTIVITY_APPS`, `BLOCK_BUSINESS_PRODUCTIVITY_APPS`    |\n|       `BUSINESS_PRODUCTIVITY`        | `CAUTION_BUSINESS_PRODUCTIVITY_APPS`, `ISOLATE_BUSINESS_PRODUCTIVITY_APPS`|\n|------------------------|---------------------------------------------------------|\n|           `CONSUMER`                 | `ALLOW_CONSUMER_APPS`, `BLOCK_CONSUMER_APPS`                         |\n|           `CONSUMER`                 | `CAUTION_CONSUMER_APPS`, `ISOLATE_CONSUMER_APPS`                                   |\n|--------------------------|---------------------------------------------------------|\n|          `CUSTOM_CAPP`               |     `BLOCK_CUSTOM_CAPP_USE`, `ALLOW_CUSTOM_CAPP_USE`    |\n|          `CUSTOM_CAPP`               |     `ISOLATE_CUSTOM_CAPP_USE`, `CAUTION_CUSTOM_CAPP_USE`|\n|--------------------------|---------------------------------------------------------|\n|     `DNS_OVER_HTTPS`                 |            `ALLOW_DNS_OVER_HTTPS_USE`                   |\n|     `DNS_OVER_HTTPS`                 |             `DENY_DNS_OVER_HTTPS_USE`                   |\n|-------------------------|---------------------------------------------------------|\n|        `ENTERPRISE_COLLABORATION`    | `ALLOW_ENTERPRISE_COLLABORATION_APPS`, `ALLOW_ENTERPRISE_COLLABORATION_CHAT`, |\n|        `ENTERPRISE_COLLABORATION`    | `ALLOW_ENTERPRISE_COLLABORATION_UPLOAD`, `ALLOW_ENTERPRISE_COLLABORATION_SHARE`, |\n|        `ENTERPRISE_COLLABORATION`    | `BLOCK_ENTERPRISE_COLLABORATION_APPS`, `ALLOW_ENTERPRISE_COLLABORATION_EDIT`, |\n|        `ENTERPRISE_COLLABORATION`    | `ALLOW_ENTERPRISE_COLLABORATION_RENAME`, `ALLOW_ENTERPRISE_COLLABORATION_CREATE`, |\n|        `ENTERPRISE_COLLABORATION`    | `ALLOW_ENTERPRISE_COLLABORATION_DOWNLOAD`, `ALLOW_ENTERPRISE_COLLABORATION_HUDDLE`,|\n|        `ENTERPRISE_COLLABORATION`    | `ALLOW_ENTERPRISE_COLLABORATION_INVITE`, `ALLOW_ENTERPRISE_COLLABORATION_MEETING`, |\n|        `ENTERPRISE_COLLABORATION`    | `ALLOW_ENTERPRISE_COLLABORATION_DELETE`, `ALLOW_ENTERPRISE_COLLABORATION_SCREEN_SHARE`, |\n|        `ENTERPRISE_COLLABORATION`    | `BLOCK_ENTERPRISE_COLLABORATION_CHAT`, `BLOCK_ENTERPRISE_COLLABORATION_UPLOAD`, |\n|        `ENTERPRISE_COLLABORATION`    | `BLOCK_ENTERPRISE_COLLABORATION_SHARE`, `BLOCK_ENTERPRISE_COLLABORATION_EDIT`, |\n|        `ENTERPRISE_COLLABORATION`    | `BLOCK_ENTERPRISE_COLLABORATION_RENAME`,  `BLOCK_ENTERPRISE_COLLABORATION_CREATE`, |\n|        `ENTERPRISE_COLLABORATION`    | `BLOCK_ENTERPRISE_COLLABORATION_DO       WNLOAD`, `BLOCK_ENTERPRISE_COLLABORATION_DELETE`, |\n|        `ENTERPRISE_COLLABORATION`    | `BLOCK_ENTERPRISE_COLLABORATION_HUDDLE`, `BLOCK_ENTERPRISE_COLLABORATION_INVITE`, |\n|        `ENTERPRISE_COLLABORATION`    | `BLOCK_ENTERPRISE_COLLABORATION_MEETING`, `BLOCK_ENTERPRISE_COLLABORATION_SCREEN_SHARE`, |\n|        `ENTERPRISE_COLLABORATION`    | `ISOLATE_ENTERPRISE_COLLABORATION_APPS`, `CAUTION_ENTERPRISE_COLLABORATION_APPS`,       |\n|--------------------------|-------------------------------------------------|\n|     `FILE_SHARE`                     | `DENY_FILE_SHARE_VIEW`, `ALLOW_FILE_SHARE_VIEW`, `CAUTION_FILE_SHARE_VIEW`,                 |\n|     `FILE_SHARE`                     | `DENY_FILE_SHARE_UPLOAD`, `ALLOW_FILE_SHARE_UPLOAD`, `ISOLATE_FILE_SHARE_VIEW`,              |\n|     `FILE_SHARE`                     | `DENY_FILE_SHARE_SHARE`, `ALLOW_FILE_SHARE_SHARE`, `DENY_FILE_SHARE_EDIT`,               |\n|     `FILE_SHARE`                     | `ALLOW_FILE_SHARE_EDIT`, `DENY_FILE_SHARE_RENAME`, `ALLOW_FILE_SHARE_RENAME`,                 |\n|     `FILE_SHARE`                     | `DENY_FILE_SHARE_CREATE`, `ALLOW_FILE_SHARE_CREATE`, `DENY_FILE_SHARE_DOWNLOAD`,               |\n|     `FILE_SHARE`                     | `ALLOW_FILE_SHARE_DOWNLOAD`, `DENY_FILE_SHARE_DELETE`, `ALLOW_FILE_SHARE_DELETE`, |\n|     `FILE_SHARE`                     | `DENY_FILE_SHARE_FORM_SHARE`, `ALLOW_FILE_SHARE_FORM_SHARE`, `DENY_FILE_SHARE_INVITE`, |\n|     `FILE_SHARE`                     | `ALLOW_FILE_SHARE_INVITE` |\n|-------------------------|-------------------------------------------------|\n|     `FINANCE`                        | `ALLOW_FINANCE_USE`, `CAUTION_FINANCE_USE`      |\n|     `FINANCE`                        | `DENY_FINANCE_USE`, `ISOLATE_FINANCE_USE`       |\n|--------------------------|-------------------------------------------------|\n|     `HEALTH_CARE`                    | `ALLOW_HEALTH_CARE_USE`,  `CAUTION_HEALTH_CARE_USE`                |\n|     `HEALTH_CARE`                    | `DENY_HEALTH_CARE_USE`, `ISOLATE_HEALTH_CARE_USE`                        |\n|-------------------------|-------------------------------------------------|\n|     `HOSTING_PROVIDER`               | `ALLOW_HOSTING_PROVIDER_DELETE`, `DENY_HOSTING_PROVIDER_EDIT`, `ALLOW_HOSTING_PROVIDER_EDIT`,           |\n|     `HOSTING_PROVIDER`               | `ALLOW_HOSTING_PROVIDER_CREATE`, `DENY_HOSTING_PROVIDER_CREATE`,`DENY_HOSTING_PROVIDER_DELETE`,         |\n|     `HOSTING_PROVIDER`               | `ALLOW_HOSTING_PROVIDER_USE`, `DENY_HOSTING_PROVIDER_USE`,            |\n|     `HOSTING_PROVIDER`               | `ALLOW_HOSTING_PROVIDER_DOWNLOAD`, `DENY_HOSTING_PROVIDER_DOWNLOAD`,         |\n|     `HOSTING_PROVIDER`               | `ALLOW_HOSTING_PROVIDER_MOVE`, `DENY_HOSTING_PROVIDER_MOVE`,          |\n|     `HOSTING_PROVIDER`               | `ISOLATE_HOSTING_PROVIDER_USE`, `CAUTION_HOSTING_PROVIDER_USE`,          |\n|--------------------------|-------------------------------------------------|\n|     `HUMAN_RESOURCES`                | `ALLOW_HUMAN_RESOURCES_USE`, `CAUTION_HUMAN_RESOURCES_USE`,            |\n|     `HUMAN_RESOURCES`                | `DENY_HUMAN_RESOURCES_USE`, `ISOLATE_HUMAN_RESOURCES_USE`,                    |\n|--------------------------|-------------------------------------------------|\n|     `INSTANT_MESSAGING`              | `ALLOW_CHAT`, `ALLOW_FILE_TRANSFER_IN_CHAT`,                           |\n|     `INSTANT_MESSAGING`              | `ALLOW_FILE_TRANSFER_IN_CHAT`, `BLOCK_CHAT`,          |\n|     `INSTANT_MESSAGING`              | `BLOCK_FILE_TRANSFER_IN_CHAT`, `CAUTION_CHAT`,                                      |\n|     `INSTANT_MESSAGING`              | `CAUTION_FILE_TRANSFER_IN_CHAT`, `ISOLATE_CHAT`                      |\n|--------------------------|-------------------------------------------------|\n|     `IT_SERVICES`                    | `ALLOW_IT_SERVICES_USE`, `CAUTION_LEGAL_USE`,                |\n|     `IT_SERVICES`                    | `DENY_IT_SERVICES_USE`, `ISOLATE_IT_SERVICES_USE`                              |\n|-------------------------|-------------------------------------------------|\n|     `LEGAL`                          | `ALLOW_LEGAL_USE`, `DENY_DNS_OVER_HTTPS_USE`,                        |\n|     `LEGAL`                          |  `DENY_LEGAL_USE`, `ISOLATE_LEGAL_USE`                       |\n|-------------------------|-------------------------------------------------|\n|     `SALES_AND_MARKETING`            | `ALLOW_SALES_MARKETING_APPS`, `BLOCK_SALES_MARKETING_APPS`,           |\n|     `SALES_AND_MARKETING`            | `CAUTION_SALES_MARKETING_APPS`, `ISOLATE_SALES_MARKETING_APPS`                      |\n|-------------------------|-------------------------------------------------|\n|     `STREAMING_MEDIA`                | `BLOCK_STREAMING_VIEW_LISTEN`, `ALLOW_STREAMING_VIEW_LISTEN`,          |\n|     `STREAMING_MEDIA`                | `CAUTION_STREAMING_VIEW_LISTEN`, `BLOCK_STREAMING_UPLOAD`,               |\n|     `STREAMING_MEDIA`                | `ALLOW_STREAMING_UPLOAD`, `ISOLATE_STREAMING_VIEW_LISTEN`               |\n|-----------------------|-------------------------------------------------|\n|     `SOCIAL_NETWORKING`              | `ALLOW_SOCIAL_NETWORKING_CHAT`, `ALLOW_SOCIAL_NETWORKING_COMMENT`,          |\n|     `SOCIAL_NETWORKING`              | `ALLOW_SOCIAL_NETWORKING_CREATE`, `ALLOW_SOCIAL_NETWORKING_EDIT`,         |\n|     `SOCIAL_NETWORKING`              | `ALLOW_SOCIAL_NETWORKING_POST`, `ALLOW_SOCIAL_NETWORKING_SHARE`,          |\n|     `SOCIAL_NETWORKING`              | `ALLOW_SOCIAL_NETWORKING_UPLOAD`, `ALLOW_SOCIAL_NETWORKING_VIEW`,         |\n|     `SOCIAL_NETWORKING`              | `BLOCK_SOCIAL_NETWORKING_CHAT`, `BLOCK_SOCIAL_NETWORKING_COMMENT`,       |\n|     `SOCIAL_NETWORKING`              | `BLOCK_SOCIAL_NETWORKING_CREATE`, `BLOCK_SOCIAL_NETWORKING_EDIT`,       |\n|     `SOCIAL_NETWORKING`              | `BLOCK_SOCIAL_NETWORKING_POST`,`BLOCK_SOCIAL_NETWORKING_SHARE`,       |\n|     `SOCIAL_NETWORKING`              | `BLOCK_SOCIAL_NETWORKING_UPLOAD`, `BLOCK_SOCIAL_NETWORKING_VIEW`,       |\n|     `SOCIAL_NETWORKING`              | `CAUTION_SOCIAL_NETWORKING_POST`, `CAUTION_SOCIAL_NETWORKING_VIEW`,       |\n|     `SOCIAL_NETWORKING`              | `ISOLATE_SOCIAL_NETWORKING_VIEW`,        |\n|-------------------------|-------------------------------------------------|\n|     `SYSTEM_AND_DEVELOPMENT`         | `BLOCK_SYSTEM_DEVELOPMENT_APPS`, `ALLOW_SYSTEM_DEVELOPMENT_APPS`,         |\n|     `SYSTEM_AND_DEVELOPMENT`         | `ISOLATE_SYSTEM_DEVELOPMENT_APPS`, `BLOCK_SYSTEM_DEVELOPMENT_UPLOAD`,       |\n|     `SYSTEM_AND_DEVELOPMENT`         | `ALLOW_SYSTEM_DEVELOPMENT_UPLOAD`,`CAUTION_SYSTEM_DEVELOPMENT_APPS`,        |\n|     `SYSTEM_AND_DEVELOPMENT`         | `BLOCK_SYSTEM_DEVELOPMENT_CREATE`, `ALLOW_SYSTEM_DEVELOPMENT_CREATE`,      |\n|     `SYSTEM_AND_DEVELOPMENT`         | `BLOCK_SYSTEM_DEVELOPMENT_EDIT`, `ALLOW_SYSTEM_DEVELOPMENT_EDIT`,      |\n|     `SYSTEM_AND_DEVELOPMENT`         | `BLOCK_SYSTEM_DEVELOPMENT_SHARE`, `ALLOW_SYSTEM_DEVELOPMENT_SHARE`,         |\n|     `SYSTEM_AND_DEVELOPMENT`         | `BLOCK_SYSTEM_DEVELOPMENT_COMMENT`, `ALLOW_SYSTEM_DEVELOPMENT_COMMENT`,         |\n|     `SYSTEM_AND_DEVELOPMENT`         | `BLOCK_SYSTEM_DEVELOPMENT_REACTION`,`ALLOW_SYSTEM_DEVELOPMENT_REACTION`         |\n|--------------------------|-------------------------------------------------|\n|     `WEBMAIL`                        | `ALLOW_WEBMAIL_VIEW`, `ALLOW_WEBMAIL_ATTACHMENT_SEND`                   |\n|     `WEBMAIL`                        | `ALLOW_WEBMAIL_SEND`, `CAUTION_WEBMAIL_VIEW`                    |\n|     `WEBMAIL`                        | `BLOCK_WEBMAIL_VIEW`, `BLOCK_WEBMAIL_ATTACHMENT_SEND`                            |\n|     `WEBMAIL`                        | `BLOCK_WEBMAIL_SEND`, `ISOLATE_WEBMAIL_VIEW`                          |\n|-------------------------|-------------------------------------------------|\n\n## Cloud Application Control - Rule Types vs Tenant Profile Support\n\n**Note**: Refer to this matrix when configuring a Cloud App Control rule with Tenant Profile\n\n[Reference](https://help.zscaler.com/zia/documentation-knowledgebase/policies/cloud-apps/cloud-app-control-policies)\n\n|               Type               |         Applications          | tenancy_profile_ids |\n|:--------------------------------:|:-----------------------------:|:-------------------:|\n|----------------------------------|-------------------------------|---------------------|\n| `BUSINESS_PRODUCTIVITY`          | `\"GOOGLEANALYTICS\"`           |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `ENTERPRISE_COLLABORATION`       | `\"GOOGLECALENDAR\"`            |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"GOOGLEKEEP\"`                |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"GOOGLEMEET\"`                |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"GOOGLESITES\"`               |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"WEBEX\"`                     |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"SLACK\"`                     |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"WEBEX_TEAMS\"`               |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"ZOOM\"`                      |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `FILE_SHARE`                     | `\"DROPBOX\"`                   |          ✅         |\n| `FILE_SHARE`                     | `\"GDRIVE\"`                    |          ✅         |\n| `FILE_SHARE`                     | `\"GPHOTOS\"`                   |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `HOSTING_PROVIDER`               | `\"GCLOUDCOMPUTE\"`             |          ✅         |\n| `HOSTING_PROVIDER`               | `\"AWS\"`                       |          ✅         |\n| `HOSTING_PROVIDER`               | `\"IBMSMARTCLOUD\"`             |          ✅         |\n| `HOSTING_PROVIDER`               | `\"GAPPENGINE\"`                |          ✅         |\n| `HOSTING_PROVIDER`               | `\"GOOGLE_CLOUD_PLATFORM\"`     |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `IT_SERVICES`                    | `\"MSLOGINSERVICES\"`           |          ✅         |\n| `IT_SERVICES`                    | `\"GOOGLOGINSERVICE\"`          |          ✅         |\n| `IT_SERVICES`                    | `\"WEBEX_LOGIN_SERVICES\"`      |          ✅         |\n| `IT_SERVICES`                    | `\"ZOHO_LOGIN_SERVICES\"`       |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `SOCIAL_NETWORKING`              | `\"GOOGLE_GROUPS\"`             |          ✅         |\n| `SOCIAL_NETWORKING`              | `\"GOOGLE_PLUS\"`               |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `STREAMING_MEDIA`                | `\"YOUTUBE\"`                   |          ✅         |\n| `STREAMING_MEDIA`                | `\"GOOGLE_STREAMING\"`          |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `SYSTEM_AND_DEVELOPMENT`         | `\"GOOGLE_DEVELOPERS\"`         |          ✅         |\n| `SYSTEM_AND_DEVELOPMENT`         | `\"GOOGLEAPPMAKER\"`            |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `WEBMAIL`                        | `\"GOOGLE_WEBMAIL\"`            |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\nPolicy access rule can be imported by using `\u003cRULE_TYPE:RULE_ID\u003e` or `\u003cRULE_TYPE:RULE_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/cloudAppControlRule:CloudAppControlRule this \u003crule_type:rule_id\u003e\n```\n\n```sh\n$ pulumi import zia:index/cloudAppControlRule:CloudAppControlRule this \u003c\"rule_type:rule_name\"\u003e\n```\n\n",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Actions allowed for the specified type.\n"
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of cloud applications for which rule will be applied\n"
                },
                "cascadingEnabled": {
                    "type": "boolean",
                    "description": "nforce the URL Filtering policy on a transaction, even after it is explicitly allowed by the Cloud App Control policy.\n"
                },
                "cbiProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleCbiProfile:CloudAppControlRuleCbiProfile"
                    }
                },
                "cloudAppRiskProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleCloudAppRiskProfile:CloudAppControlRuleCloudAppRiskProfile"
                    },
                    "description": "The DLP server, using ICAP, to which the transaction content is forwarded.\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleDepartments:CloudAppControlRuleDepartments",
                    "description": "Name-ID pairs of departments for which rule must be applied\n"
                },
                "description": {
                    "type": "string",
                    "description": "Additional information about the forwarding rule\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleDeviceGroups:CloudAppControlRuleDeviceGroups",
                    "description": "This field is applicable for devices that are managed using Zscaler Client Connector.\n"
                },
                "deviceTrustLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed\nusing Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the\nZscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleDevices:CloudAppControlRuleDevices",
                    "description": "Name-ID pairs of devices for which rule must be applied.\n"
                },
                "enforceTimeValidity": {
                    "type": "boolean",
                    "description": "Enforce a set a validity time period for the URL Filtering rule.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleGroups:CloudAppControlRuleGroups",
                    "description": "Name-ID pairs of groups for which rule must be applied\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleLabels:CloudAppControlRuleLabels",
                    "description": "The URL Filtering rule's label.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleLocationGroups:CloudAppControlRuleLocationGroups",
                    "description": "Name-ID pairs of the location groups to which the rule must be applied.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleLocations:CloudAppControlRuleLocations",
                    "description": "Name-ID pairs of locations for which rule must be applied\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule\n"
                },
                "order": {
                    "type": "integer",
                    "description": "The order of execution for the forwarding rule order\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank assigned to the forwarding rule\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule\n"
                },
                "sizeQuota": {
                    "type": "integer",
                    "description": "Size quota in KB beyond which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule\naction is set to 'BLOCK', this field is not applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Determines whether the Firewall Filtering policy rule is enabled or disabled\n"
                },
                "tenancyProfileIds": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleTenancyProfileIds:CloudAppControlRuleTenancyProfileIds",
                    "description": "Name-ID pairs of groups for which rule must be applied\n"
                },
                "timeQuota": {
                    "type": "integer",
                    "description": "Time quota in minutes, after which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule\naction is set to 'BLOCK', this field is not applicable.\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleTimeWindows:CloudAppControlRuleTimeWindows",
                    "description": "Name-ID pairs of time interval during which rule must be enforced.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Supported App Control Types\n"
                },
                "userAgentTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported User Agent Types\n"
                },
                "userRiskScoreLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleUsers:CloudAppControlRuleUsers",
                    "description": "Name-ID pairs of users for which rule must be applied\n"
                },
                "validityEndTime": {
                    "type": "string",
                    "description": "If enforceTimeValidity is set to true, the URL Filtering rule ceases to be valid on this end date and time.\n"
                },
                "validityStartTime": {
                    "type": "string",
                    "description": "If enforceTimeValidity is set to true, the URL Filtering rule is valid starting on this date and time.\n"
                },
                "validityTimeZoneId": {
                    "type": "string",
                    "description": "If enforceTimeValidity is set to true, the URL Filtering rule date and time is valid based on this time zone ID. Use\nIANA Format TimeZone.\n"
                }
            },
            "required": [
                "cloudAppRiskProfiles",
                "name",
                "order",
                "ruleId"
            ],
            "inputProperties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Actions allowed for the specified type.\n"
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of cloud applications for which rule will be applied\n"
                },
                "cascadingEnabled": {
                    "type": "boolean",
                    "description": "nforce the URL Filtering policy on a transaction, even after it is explicitly allowed by the Cloud App Control policy.\n"
                },
                "cbiProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleCbiProfile:CloudAppControlRuleCbiProfile"
                    }
                },
                "cloudAppRiskProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleCloudAppRiskProfile:CloudAppControlRuleCloudAppRiskProfile"
                    },
                    "description": "The DLP server, using ICAP, to which the transaction content is forwarded.\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleDepartments:CloudAppControlRuleDepartments",
                    "description": "Name-ID pairs of departments for which rule must be applied\n"
                },
                "description": {
                    "type": "string",
                    "description": "Additional information about the forwarding rule\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleDeviceGroups:CloudAppControlRuleDeviceGroups",
                    "description": "This field is applicable for devices that are managed using Zscaler Client Connector.\n"
                },
                "deviceTrustLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed\nusing Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the\nZscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleDevices:CloudAppControlRuleDevices",
                    "description": "Name-ID pairs of devices for which rule must be applied.\n"
                },
                "enforceTimeValidity": {
                    "type": "boolean",
                    "description": "Enforce a set a validity time period for the URL Filtering rule.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleGroups:CloudAppControlRuleGroups",
                    "description": "Name-ID pairs of groups for which rule must be applied\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleLabels:CloudAppControlRuleLabels",
                    "description": "The URL Filtering rule's label.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleLocationGroups:CloudAppControlRuleLocationGroups",
                    "description": "Name-ID pairs of the location groups to which the rule must be applied.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleLocations:CloudAppControlRuleLocations",
                    "description": "Name-ID pairs of locations for which rule must be applied\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding rule\n"
                },
                "order": {
                    "type": "integer",
                    "description": "The order of execution for the forwarding rule order\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank assigned to the forwarding rule\n"
                },
                "sizeQuota": {
                    "type": "integer",
                    "description": "Size quota in KB beyond which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule\naction is set to 'BLOCK', this field is not applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Determines whether the Firewall Filtering policy rule is enabled or disabled\n"
                },
                "tenancyProfileIds": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleTenancyProfileIds:CloudAppControlRuleTenancyProfileIds",
                    "description": "Name-ID pairs of groups for which rule must be applied\n"
                },
                "timeQuota": {
                    "type": "integer",
                    "description": "Time quota in minutes, after which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule\naction is set to 'BLOCK', this field is not applicable.\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleTimeWindows:CloudAppControlRuleTimeWindows",
                    "description": "Name-ID pairs of time interval during which rule must be enforced.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Supported App Control Types\n"
                },
                "userAgentTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported User Agent Types\n"
                },
                "userRiskScoreLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "$ref": "#/types/zia:index/CloudAppControlRuleUsers:CloudAppControlRuleUsers",
                    "description": "Name-ID pairs of users for which rule must be applied\n"
                },
                "validityEndTime": {
                    "type": "string",
                    "description": "If enforceTimeValidity is set to true, the URL Filtering rule ceases to be valid on this end date and time.\n"
                },
                "validityStartTime": {
                    "type": "string",
                    "description": "If enforceTimeValidity is set to true, the URL Filtering rule is valid starting on this date and time.\n"
                },
                "validityTimeZoneId": {
                    "type": "string",
                    "description": "If enforceTimeValidity is set to true, the URL Filtering rule date and time is valid based on this time zone ID. Use\nIANA Format TimeZone.\n"
                }
            },
            "requiredInputs": [
                "order"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudAppControlRule resources.\n",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Actions allowed for the specified type.\n"
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of cloud applications for which rule will be applied\n"
                    },
                    "cascadingEnabled": {
                        "type": "boolean",
                        "description": "nforce the URL Filtering policy on a transaction, even after it is explicitly allowed by the Cloud App Control policy.\n"
                    },
                    "cbiProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/CloudAppControlRuleCbiProfile:CloudAppControlRuleCbiProfile"
                        }
                    },
                    "cloudAppRiskProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/CloudAppControlRuleCloudAppRiskProfile:CloudAppControlRuleCloudAppRiskProfile"
                        },
                        "description": "The DLP server, using ICAP, to which the transaction content is forwarded.\n"
                    },
                    "departments": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleDepartments:CloudAppControlRuleDepartments",
                        "description": "Name-ID pairs of departments for which rule must be applied\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Additional information about the forwarding rule\n"
                    },
                    "deviceGroups": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleDeviceGroups:CloudAppControlRuleDeviceGroups",
                        "description": "This field is applicable for devices that are managed using Zscaler Client Connector.\n"
                    },
                    "deviceTrustLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed\nusing Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the\nZscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "devices": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleDevices:CloudAppControlRuleDevices",
                        "description": "Name-ID pairs of devices for which rule must be applied.\n"
                    },
                    "enforceTimeValidity": {
                        "type": "boolean",
                        "description": "Enforce a set a validity time period for the URL Filtering rule.\n"
                    },
                    "groups": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleGroups:CloudAppControlRuleGroups",
                        "description": "Name-ID pairs of groups for which rule must be applied\n"
                    },
                    "labels": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleLabels:CloudAppControlRuleLabels",
                        "description": "The URL Filtering rule's label.\n"
                    },
                    "locationGroups": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleLocationGroups:CloudAppControlRuleLocationGroups",
                        "description": "Name-ID pairs of the location groups to which the rule must be applied.\n"
                    },
                    "locations": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleLocations:CloudAppControlRuleLocations",
                        "description": "Name-ID pairs of locations for which rule must be applied\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the forwarding rule\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "The order of execution for the forwarding rule order\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "Admin rank assigned to the forwarding rule\n"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": "A unique identifier assigned to the forwarding rule\n"
                    },
                    "sizeQuota": {
                        "type": "integer",
                        "description": "Size quota in KB beyond which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule\naction is set to 'BLOCK', this field is not applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Determines whether the Firewall Filtering policy rule is enabled or disabled\n"
                    },
                    "tenancyProfileIds": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleTenancyProfileIds:CloudAppControlRuleTenancyProfileIds",
                        "description": "Name-ID pairs of groups for which rule must be applied\n"
                    },
                    "timeQuota": {
                        "type": "integer",
                        "description": "Time quota in minutes, after which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule\naction is set to 'BLOCK', this field is not applicable.\n"
                    },
                    "timeWindows": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleTimeWindows:CloudAppControlRuleTimeWindows",
                        "description": "Name-ID pairs of time interval during which rule must be enforced.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Supported App Control Types\n"
                    },
                    "userAgentTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Supported User Agent Types\n"
                    },
                    "userRiskScoreLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "$ref": "#/types/zia:index/CloudAppControlRuleUsers:CloudAppControlRuleUsers",
                        "description": "Name-ID pairs of users for which rule must be applied\n"
                    },
                    "validityEndTime": {
                        "type": "string",
                        "description": "If enforceTimeValidity is set to true, the URL Filtering rule ceases to be valid on this end date and time.\n"
                    },
                    "validityStartTime": {
                        "type": "string",
                        "description": "If enforceTimeValidity is set to true, the URL Filtering rule is valid starting on this date and time.\n"
                    },
                    "validityTimeZoneId": {
                        "type": "string",
                        "description": "If enforceTimeValidity is set to true, the URL Filtering rule date and time is valid based on this time zone ID. Use\nIANA Format TimeZone.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/dLPDictionaries:DLPDictionaries": {
            "description": "The **zia_dlp_dictionaries** resource allows the creation and management of ZIA DLP dictionaries in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\nresource \"zia_dlp_dictionaries\" \"example\"{\n    name = \"Your Dictionary Name\"\n    description = \"Your Description\"\n    phrases {\n        action = \"PHRASE_COUNT_TYPE_ALL\"\n        phrase = \"YourPhrase\"\n    }\n    custom_phrase_match_type = \"MATCH_ALL_CUSTOM_PHRASE_PATTERN_DICTIONARY\"\n    patterns {\n        action = \"PATTERN_COUNT_TYPE_UNIQUE\"\n        pattern = \"YourPattern\"\n    }\n    dictionary_type = \"PATTERNS_AND_PHRASES\"\n}\n```\n\n### With Hierarchical Identifiers\n\n```hcl\nresource \"zia_dlp_dictionaries\" \"example\"{\n    name                     = \"Example Dictionary Clone\"\n    description              = \"Example Dictionary Clone\"\n    confidence_level_for_predefined_dict = \"CONFIDENCE_LEVEL_MEDIUM\"\n    hierarchical_identifiers = [\"CRED_LEAKAGE\"]\n    confidence_threshold     = \"CONFIDENCE_LEVEL_HIGH\"\n    dict_template_id         = data.zia_dlp_dictionaries.this.id\n    phrases {\n        action = \"PHRASE_COUNT_TYPE_ALL\"\n        phrase = \"YourPhrase1\"\n    }\n    custom_phrase_match_type = \"MATCH_ALL_CUSTOM_PHRASE_PATTERN_DICTIONARY\"\n    dictionary_type          = \"PATTERNS_AND_PHRASES\"\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_dlp_dictionaries** can be imported by using `\u003cDICTIONARY ID\u003e` or `\u003cDICTIONARY_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/dLPDictionaries:DLPDictionaries example \u003cdictionary_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/dLPDictionaries:DLPDictionaries example \u003cdictionary_name\u003e\n```\n\n",
            "properties": {
                "binNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of Bank Identification Number (BIN) values that are included or excluded from the Credit Cards dictionary. BIN\nvalues can be specified only for Diners Club, Mastercard, RuPay, and Visa cards. Up to 512 BIN values can be configured\nin a dictionary. Note: This field is applicable only to the predefined Credit Cards dictionary and its clones.\n"
                },
                "confidenceLevelForPredefinedDict": {
                    "type": "string",
                    "description": "The DLP confidence threshold for predefined dictionaries\n"
                },
                "confidenceThreshold": {
                    "type": "string",
                    "description": "The DLP confidence threshold\n"
                },
                "custom": {
                    "type": "boolean",
                    "description": "The DLP dictionary proximity length.\n"
                },
                "customPhraseMatchType": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The desciption of the DLP dictionary\n"
                },
                "dictTemplateId": {
                    "type": "integer",
                    "description": "ID of the predefined dictionary (original source dictionary) that is used for cloning. This field is applicable only to\ncloned dictionaries. Only a limited set of identification-based predefined dictionaries (e.g., Credit Cards, Social\nSecurity Numbers, National Identification Numbers, etc.) can be cloned. Up to 4 clones can be created from a predefined\ndictionary.\n"
                },
                "dictionaryId": {
                    "type": "integer"
                },
                "dictionaryType": {
                    "type": "string",
                    "description": "The DLP dictionary type.\n"
                },
                "exactDataMatchDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPDictionariesExactDataMatchDetail:DLPDictionariesExactDataMatchDetail"
                    },
                    "description": "Exact Data Match (EDM) related information for custom DLP dictionaries.\n"
                },
                "hierarchicalIdentifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of hierarchical identifiers for the DLP dictionary.\n"
                },
                "idmProfileMatchAccuracies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPDictionariesIdmProfileMatchAccuracy:DLPDictionariesIdmProfileMatchAccuracy"
                    },
                    "description": "List of Indexed Document Match (IDM) profiles and their corresponding match accuracy for custom DLP dictionaries.\n"
                },
                "ignoreExactMatchIdmDict": {
                    "type": "boolean",
                    "description": "Indicates whether to exclude documents that are a 100% match to already-indexed documents from triggering an Indexed\nDocument Match (IDM) Dictionary.\n"
                },
                "includeBinNumbers": {
                    "type": "boolean",
                    "description": "A true value denotes that the specified Bank Identification Number (BIN) values are included in the Credit Cards\ndictionary. A false value denotes that the specified BIN values are excluded from the Credit Cards dictionary.Note: This\nfield is applicable only to the predefined Credit Cards dictionary and its clones.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The DLP dictionary's name\n"
                },
                "patterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPDictionariesPattern:DLPDictionariesPattern"
                    },
                    "description": "List containing the patterns used within a custom DLP dictionary. This attribute is not applicable to predefined DLP\ndictionaries\n"
                },
                "phrases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPDictionariesPhrase:DLPDictionariesPhrase"
                    }
                },
                "proximity": {
                    "type": "integer",
                    "description": "The DLP dictionary proximity length.\n"
                }
            },
            "required": [
                "custom",
                "customPhraseMatchType",
                "dictionaryId",
                "idmProfileMatchAccuracies",
                "includeBinNumbers",
                "name",
                "patterns",
                "phrases"
            ],
            "inputProperties": {
                "binNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of Bank Identification Number (BIN) values that are included or excluded from the Credit Cards dictionary. BIN\nvalues can be specified only for Diners Club, Mastercard, RuPay, and Visa cards. Up to 512 BIN values can be configured\nin a dictionary. Note: This field is applicable only to the predefined Credit Cards dictionary and its clones.\n"
                },
                "confidenceLevelForPredefinedDict": {
                    "type": "string",
                    "description": "The DLP confidence threshold for predefined dictionaries\n"
                },
                "confidenceThreshold": {
                    "type": "string",
                    "description": "The DLP confidence threshold\n"
                },
                "custom": {
                    "type": "boolean",
                    "description": "The DLP dictionary proximity length.\n"
                },
                "customPhraseMatchType": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The desciption of the DLP dictionary\n"
                },
                "dictTemplateId": {
                    "type": "integer",
                    "description": "ID of the predefined dictionary (original source dictionary) that is used for cloning. This field is applicable only to\ncloned dictionaries. Only a limited set of identification-based predefined dictionaries (e.g., Credit Cards, Social\nSecurity Numbers, National Identification Numbers, etc.) can be cloned. Up to 4 clones can be created from a predefined\ndictionary.\n"
                },
                "dictionaryType": {
                    "type": "string",
                    "description": "The DLP dictionary type.\n"
                },
                "exactDataMatchDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPDictionariesExactDataMatchDetail:DLPDictionariesExactDataMatchDetail"
                    },
                    "description": "Exact Data Match (EDM) related information for custom DLP dictionaries.\n"
                },
                "hierarchicalIdentifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of hierarchical identifiers for the DLP dictionary.\n"
                },
                "idmProfileMatchAccuracies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPDictionariesIdmProfileMatchAccuracy:DLPDictionariesIdmProfileMatchAccuracy"
                    },
                    "description": "List of Indexed Document Match (IDM) profiles and their corresponding match accuracy for custom DLP dictionaries.\n"
                },
                "ignoreExactMatchIdmDict": {
                    "type": "boolean",
                    "description": "Indicates whether to exclude documents that are a 100% match to already-indexed documents from triggering an Indexed\nDocument Match (IDM) Dictionary.\n"
                },
                "includeBinNumbers": {
                    "type": "boolean",
                    "description": "A true value denotes that the specified Bank Identification Number (BIN) values are included in the Credit Cards\ndictionary. A false value denotes that the specified BIN values are excluded from the Credit Cards dictionary.Note: This\nfield is applicable only to the predefined Credit Cards dictionary and its clones.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The DLP dictionary's name\n"
                },
                "patterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPDictionariesPattern:DLPDictionariesPattern"
                    },
                    "description": "List containing the patterns used within a custom DLP dictionary. This attribute is not applicable to predefined DLP\ndictionaries\n"
                },
                "phrases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPDictionariesPhrase:DLPDictionariesPhrase"
                    }
                },
                "proximity": {
                    "type": "integer",
                    "description": "The DLP dictionary proximity length.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DLPDictionaries resources.\n",
                "properties": {
                    "binNumbers": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of Bank Identification Number (BIN) values that are included or excluded from the Credit Cards dictionary. BIN\nvalues can be specified only for Diners Club, Mastercard, RuPay, and Visa cards. Up to 512 BIN values can be configured\nin a dictionary. Note: This field is applicable only to the predefined Credit Cards dictionary and its clones.\n"
                    },
                    "confidenceLevelForPredefinedDict": {
                        "type": "string",
                        "description": "The DLP confidence threshold for predefined dictionaries\n"
                    },
                    "confidenceThreshold": {
                        "type": "string",
                        "description": "The DLP confidence threshold\n"
                    },
                    "custom": {
                        "type": "boolean",
                        "description": "The DLP dictionary proximity length.\n"
                    },
                    "customPhraseMatchType": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "The desciption of the DLP dictionary\n"
                    },
                    "dictTemplateId": {
                        "type": "integer",
                        "description": "ID of the predefined dictionary (original source dictionary) that is used for cloning. This field is applicable only to\ncloned dictionaries. Only a limited set of identification-based predefined dictionaries (e.g., Credit Cards, Social\nSecurity Numbers, National Identification Numbers, etc.) can be cloned. Up to 4 clones can be created from a predefined\ndictionary.\n"
                    },
                    "dictionaryId": {
                        "type": "integer"
                    },
                    "dictionaryType": {
                        "type": "string",
                        "description": "The DLP dictionary type.\n"
                    },
                    "exactDataMatchDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/DLPDictionariesExactDataMatchDetail:DLPDictionariesExactDataMatchDetail"
                        },
                        "description": "Exact Data Match (EDM) related information for custom DLP dictionaries.\n"
                    },
                    "hierarchicalIdentifiers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of hierarchical identifiers for the DLP dictionary.\n"
                    },
                    "idmProfileMatchAccuracies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/DLPDictionariesIdmProfileMatchAccuracy:DLPDictionariesIdmProfileMatchAccuracy"
                        },
                        "description": "List of Indexed Document Match (IDM) profiles and their corresponding match accuracy for custom DLP dictionaries.\n"
                    },
                    "ignoreExactMatchIdmDict": {
                        "type": "boolean",
                        "description": "Indicates whether to exclude documents that are a 100% match to already-indexed documents from triggering an Indexed\nDocument Match (IDM) Dictionary.\n"
                    },
                    "includeBinNumbers": {
                        "type": "boolean",
                        "description": "A true value denotes that the specified Bank Identification Number (BIN) values are included in the Credit Cards\ndictionary. A false value denotes that the specified BIN values are excluded from the Credit Cards dictionary.Note: This\nfield is applicable only to the predefined Credit Cards dictionary and its clones.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The DLP dictionary's name\n"
                    },
                    "patterns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/DLPDictionariesPattern:DLPDictionariesPattern"
                        },
                        "description": "List containing the patterns used within a custom DLP dictionary. This attribute is not applicable to predefined DLP\ndictionaries\n"
                    },
                    "phrases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/DLPDictionariesPhrase:DLPDictionariesPhrase"
                        }
                    },
                    "proximity": {
                        "type": "integer",
                        "description": "The DLP dictionary proximity length.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/dLPEngines:DLPEngines": {
            "description": "Use the **zia_dlp_engines** resource allows the creation and management of ZIA DLP Engines in the Zscaler Internet Access cloud or via the API.\n\n⚠️ **WARNING:** \"Before using the new ``zia.DLPEngines`` resource contact [Zscaler Support](https://help.zscaler.com/login-tickets).\" and request the following API methods ``POST``, ``PUT``, and ``DELETE`` to be enabled for your organization.\n\n## Example Usage\n\n```hcl\n# Retrieve a DLP Engine by name\nresource \"zia_dlp_engines\" \"this\" {\n  name = \"Example\"\n  description = \"Example\"\n  engine_expression = \"((D63.S \u003e 1))\"\n  custom_dlp_engine = true\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_dlp_engines** can be imported by using `\u003cENGINE_ID\u003e` or `\u003cENGINE_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/dLPEngines:DLPEngines example \u003cengine_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/dLPEngines:DLPEngines example \u003cengine_name\u003e\n```\n\n",
            "properties": {
                "customDlpEngine": {
                    "type": "boolean",
                    "description": "Indicates whether this is a custom DLP engine. If this value is set to true, the engine is custom.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The DLP engine's description.\n"
                },
                "engineExpression": {
                    "type": "string",
                    "description": "The boolean logical operator in which various DLP dictionaries are combined within a DLP engine's expression.\n"
                },
                "engineId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "The DLP engine name as configured by the admin.\n"
                }
            },
            "required": [
                "engineId",
                "name"
            ],
            "inputProperties": {
                "customDlpEngine": {
                    "type": "boolean",
                    "description": "Indicates whether this is a custom DLP engine. If this value is set to true, the engine is custom.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The DLP engine's description.\n"
                },
                "engineExpression": {
                    "type": "string",
                    "description": "The boolean logical operator in which various DLP dictionaries are combined within a DLP engine's expression.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The DLP engine name as configured by the admin.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DLPEngines resources.\n",
                "properties": {
                    "customDlpEngine": {
                        "type": "boolean",
                        "description": "Indicates whether this is a custom DLP engine. If this value is set to true, the engine is custom.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The DLP engine's description.\n"
                    },
                    "engineExpression": {
                        "type": "string",
                        "description": "The boolean logical operator in which various DLP dictionaries are combined within a DLP engine's expression.\n"
                    },
                    "engineId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "The DLP engine name as configured by the admin.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/dLPNotificationTemplates:DLPNotificationTemplates": {
            "description": "The **zia_dlp_notification_templates** resource allows the creation and management of ZIA DLP Notification Templates in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\nresource \"zia_dlp_notification_templates\" \"example\" {\n    name                = \"DLP Auditor Template Test\"\n    subject             = \"DLP Violation: ${TRANSACTION_ID} ${ENGINES}\"\n    attach_content      = true\n    tls_enabled         = true\n    html_message        = file(\"./index.html\")\n    plain_text_message = file(\"./dlp.txt\")\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_dlp_notification_templates** can be imported by using `\u003cTEMPLATE ID\u003e` or `\u003cTEMPLATE NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/dLPNotificationTemplates:DLPNotificationTemplates example \u003ctemplate_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/dLPNotificationTemplates:DLPNotificationTemplates example \u003ctemplate_name\u003e\n```\n\n",
            "properties": {
                "attachContent": {
                    "type": "boolean",
                    "description": "f set to true, the content that is violation is attached to the DLP notification email\n"
                },
                "htmlMessage": {
                    "type": "string",
                    "description": "The template for the HTML message body that must be displayed in the DLP notification email\n"
                },
                "name": {
                    "type": "string",
                    "description": "The DLP notification template name\n"
                },
                "plainTextMessage": {
                    "type": "string",
                    "description": "The template for the plain text UTF-8 message body that must be displayed in the DLP notification email\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The Subject line that is displayed within the DLP notification email\n"
                },
                "templateId": {
                    "type": "integer",
                    "description": "The unique identifier for a DLP notification template\n"
                },
                "tlsEnabled": {
                    "type": "boolean",
                    "description": "If set to true, TLS will be enabled\n"
                }
            },
            "required": [
                "htmlMessage",
                "name",
                "plainTextMessage",
                "subject",
                "templateId"
            ],
            "inputProperties": {
                "attachContent": {
                    "type": "boolean",
                    "description": "f set to true, the content that is violation is attached to the DLP notification email\n"
                },
                "htmlMessage": {
                    "type": "string",
                    "description": "The template for the HTML message body that must be displayed in the DLP notification email\n"
                },
                "name": {
                    "type": "string",
                    "description": "The DLP notification template name\n"
                },
                "plainTextMessage": {
                    "type": "string",
                    "description": "The template for the plain text UTF-8 message body that must be displayed in the DLP notification email\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The Subject line that is displayed within the DLP notification email\n"
                },
                "tlsEnabled": {
                    "type": "boolean",
                    "description": "If set to true, TLS will be enabled\n"
                }
            },
            "requiredInputs": [
                "htmlMessage",
                "plainTextMessage",
                "subject"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DLPNotificationTemplates resources.\n",
                "properties": {
                    "attachContent": {
                        "type": "boolean",
                        "description": "f set to true, the content that is violation is attached to the DLP notification email\n"
                    },
                    "htmlMessage": {
                        "type": "string",
                        "description": "The template for the HTML message body that must be displayed in the DLP notification email\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The DLP notification template name\n"
                    },
                    "plainTextMessage": {
                        "type": "string",
                        "description": "The template for the plain text UTF-8 message body that must be displayed in the DLP notification email\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "The Subject line that is displayed within the DLP notification email\n"
                    },
                    "templateId": {
                        "type": "integer",
                        "description": "The unique identifier for a DLP notification template\n"
                    },
                    "tlsEnabled": {
                        "type": "boolean",
                        "description": "If set to true, TLS will be enabled\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/dLPWebRules:DLPWebRules": {
            "description": "The **zia_dlp_web_rules** resource allows the creation and management of ZIA DLP Web Rules in the Zscaler Internet Access cloud or via the API.\n\n⚠️ **WARNING:** Zscaler Internet Access DLP supports a maximum of 127 Web DLP Rules to be created via API.\n\n## Example Usage\n\n### \"FTCATEGORY_ALL_OUTBOUND\" File Type\"\n\n```hcl\ndata \"zia_dlp_engines\" \"this\" {\n  predefined_engine_name = \"EXTERNAL\"\n}\n\nresource \"zia_dlp_web_rules\" \"this\" {\n  name                       = \"Example\"\n  description                = \"Example\"\n  action                     = \"BLOCK\"\n  order                      = 1\n  rank                       = 7\n  state                      = \"ENABLED\"\n  protocols                  = [ \"FTP_RULE\", \"HTTPS_RULE\", \"HTTP_RULE\" ]\n  file_types                 = [ \"FTCATEGORY_ALL_OUTBOUND\" ]\n  zscaler_incident_receiver  = false\n  without_content_inspection = true\n  user_risk_score_levels     = [ \"LOW\", \"MEDIUM\", \"HIGH\", \"CRITICAL\" ]\n  severity                   = \"RULE_SEVERITY_HIGH\"\n  dlp_engines {\n    id = [ data.zia_dlp_engines.this.id ]\n  }\n}\n```\n\n```hcl\n// Retrieve a custom URL Category by Name\ndata \"zia_url_categories\" \"this\"{\n    configured_name = \"Example\"\n}\n\n// Retrieve an ICAP Server by Name\ndata \"zia_dlp_icap_servers\" \"this\" {\n  name = \"ZS_ICAP_01\"\n}\n\nresource \"zia_dlp_web_rules\" \"this\" {\n  name                      = \"Terraform_Test\"\n  description               = \"Terraform_Test\"\n  action                    = \"BLOCK\"\n  order                     = 1\n  protocols                 = [\"FTP_RULE\", \"HTTPS_RULE\", \"HTTP_RULE\"]\n  rank                      = 7\n  state                     = \"ENABLED\"\n  zscaler_incident_receiver = true\n  without_content_inspection = false\n  url_categories {\n    id = [ data.zia_url_categories.this.val ]\n  }\n  icap_server {\n    id = data.zia_dlp_icap_servers.this.id\n  }\n}\n```\n\n### \"Specify Incident Receiver Setting\"\n\n```hcl\n// Retrieve a custom URL Category by Name\ndata \"zia_url_categories\" \"this\"{\n    configured_name = \"Example\"\n}\n\n// Retrieve a Incident Receiver by Name\ndata \"zia_dlp_incident_receiver_servers\" \"this\" {\n  name = \"ZS_INC_RECEIVER_01\"\n}\n\nresource \"zia_dlp_web_rules\" \"this\" {\n  name                      = \"Terraform_Test\"\n  description               = \"Terraform_Test\"\n  action                    = \"BLOCK\"\n  order                     = 1\n  protocols                 = [\"FTP_RULE\", \"HTTPS_RULE\", \"HTTP_RULE\"]\n  rank                      = 7\n  state                     = \"ENABLED\"\n  zscaler_incident_receiver = true\n  without_content_inspection = false\n  url_categories {\n    id = [ data.zia_url_categories.this.val ]\n  }\n  icap_server {\n    id = data.zia_dlp_incident_receiver_servers.this.id\n  }\n  notification_template {\n    id = data.zia_dlp_notification_templates.this.id\n  }\n}\n```\n\n### \"Creating Parent Rules And SubRules\"\n\n⚠️ **WARNING:** Destroying a parent rule will also destroy all subrules\n\n **NOTE** Exception rules can be configured only when the inline DLP rule evaluation type is set\n to evaluate all DLP rules in the DLP Advanced Settings.\n To learn more, see [Configuring DLP Advanced Settings](https://help.zscaler.com/%22/zia/configuring-dlp-advanced-settings/%22)\n\n```hcl\nresource \"zia_dlp_web_rules\" \"parent_rule\" {\n  name                       = \"ParentRule1\"\n  description                = \"ParentRule1\"\n  action                     = \"ALLOW\"\n  state                      = \"ENABLED\"\n  order                      = 1\n  rank                       = 0\n  protocols                  = [\"FTP_RULE\", \"HTTPS_RULE\", \"HTTP_RULE\"]\n  cloud_applications         = [\"GOOGLE_WEBMAIL\", \"WINDOWS_LIVE_HOTMAIL\"]\n  without_content_inspection = false\n  match_only                 = false\n  min_size                   = 20\n  zscaler_incident_receiver  = true\n}\n\nresource \"zia_dlp_web_rules\" \"subrule1\" {\n  name                       = \"SubRule1\"\n  description                = \"SubRule1\"\n  action                     = \"ALLOW\"\n  state                      = \"ENABLED\"\n  order                      = 1\n  rank                       = 0\n  protocols                  = [\"FTP_RULE\", \"HTTPS_RULE\", \"HTTP_RULE\"]\n  cloud_applications         = [\"GOOGLE_WEBMAIL\", \"WINDOWS_LIVE_HOTMAIL\"]\n  without_content_inspection = false\n  match_only                 = false\n  parent_rule = zia_dlp_web_rules.parent_rule.id\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_dlp_web_rules** can be imported by using `\u003cRULE ID\u003e` or `\u003cRULE NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/dLPWebRules:DLPWebRules example \u003crule_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/dLPWebRules:DLPWebRules example \u003crule_name\u003e\n```\n\n",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action taken when traffic matches the DLP policy rule criteria.\n"
                },
                "auditors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPWebRulesAuditor:DLPWebRulesAuditor"
                    },
                    "description": "The auditor to which the DLP policy rule must be applied.\n"
                },
                "cloudApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of cloud applications to which the DLP policy rule must be applied.\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/DLPWebRulesDepartments:DLPWebRulesDepartments",
                    "description": "The Name-ID pairs of departments to which the DLP policy rule must be applied.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the DLP policy rule.\n"
                },
                "dlpDownloadScanEnabled": {
                    "type": "boolean",
                    "description": "Indicates a DLP policy rule without content inspection, when the value is set to true.\n"
                },
                "dlpEngines": {
                    "$ref": "#/types/zia:index/DLPWebRulesDlpEngines:DLPWebRulesDlpEngines",
                    "description": "The list of DLP engines to which the DLP policy rule must be applied.\n"
                },
                "excludedDepartments": {
                    "$ref": "#/types/zia:index/DLPWebRulesExcludedDepartments:DLPWebRulesExcludedDepartments",
                    "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                },
                "excludedDomainProfiles": {
                    "$ref": "#/types/zia:index/DLPWebRulesExcludedDomainProfiles:DLPWebRulesExcludedDomainProfiles",
                    "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                },
                "excludedGroups": {
                    "$ref": "#/types/zia:index/DLPWebRulesExcludedGroups:DLPWebRulesExcludedGroups",
                    "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                },
                "excludedUsers": {
                    "$ref": "#/types/zia:index/DLPWebRulesExcludedUsers:DLPWebRulesExcludedUsers",
                    "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                },
                "externalAuditorEmail": {
                    "type": "string",
                    "description": "The email address of an external auditor to whom DLP email notifications are sent.\n"
                },
                "fileTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of file types for which the DLP policy rule must be applied.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/DLPWebRulesGroups:DLPWebRulesGroups",
                    "description": "The Name-ID pairs of groups to which the DLP policy rule must be applied.\n"
                },
                "icapServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPWebRulesIcapServer:DLPWebRulesIcapServer"
                    },
                    "description": "The DLP server, using ICAP, to which the transaction content is forwarded.\n"
                },
                "includedDomainProfiles": {
                    "$ref": "#/types/zia:index/DLPWebRulesIncludedDomainProfiles:DLPWebRulesIncludedDomainProfiles",
                    "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                },
                "inspectHttpGetEnabled": {
                    "type": "boolean"
                },
                "labels": {
                    "$ref": "#/types/zia:index/DLPWebRulesLabels:DLPWebRulesLabels",
                    "description": "list of Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/DLPWebRulesLocationGroups:DLPWebRulesLocationGroups",
                    "description": "The Name-ID pairs of locations groups to which the DLP policy rule must be applied.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/DLPWebRulesLocations:DLPWebRulesLocations",
                    "description": "The Name-ID pairs of locations to which the DLP policy rule must be applied.\n"
                },
                "matchOnly": {
                    "type": "boolean",
                    "description": "The match only criteria for DLP engines.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum file size (in KB) used for evaluation of the DLP policy rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The DLP policy rule name.\n"
                },
                "notificationTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPWebRulesNotificationTemplate:DLPWebRulesNotificationTemplate"
                    },
                    "description": "The template used for DLP notification emails.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "The rule order of execution for the DLP policy rule with respect to other rules.\n"
                },
                "parentRule": {
                    "type": "integer",
                    "description": "The unique identifier of the parent rule under which an exception rule is added\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The protocol criteria specified for the DLP policy rule.\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank of the admin who creates this rule\n"
                },
                "ruleId": {
                    "type": "integer"
                },
                "severity": {
                    "type": "string",
                    "description": "Indicates the severity selected for the DLP rule violation\n"
                },
                "sourceIpGroups": {
                    "$ref": "#/types/zia:index/DLPWebRulesSourceIpGroups:DLPWebRulesSourceIpGroups",
                    "description": "list of source ip groups\n"
                },
                "state": {
                    "type": "string",
                    "description": "Enables or disables the DLP policy rule.\n"
                },
                "subRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of exception rules added to a parent rule\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/DLPWebRulesTimeWindows:DLPWebRulesTimeWindows",
                    "description": "list of time interval during which rule must be enforced.\n"
                },
                "urlCategories": {
                    "$ref": "#/types/zia:index/DLPWebRulesUrlCategories:DLPWebRulesUrlCategories",
                    "description": "The list of URL categories to which the DLP policy rule must be applied.\n"
                },
                "userRiskScoreLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "$ref": "#/types/zia:index/DLPWebRulesUsers:DLPWebRulesUsers",
                    "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                },
                "withoutContentInspection": {
                    "type": "boolean",
                    "description": "Indicates a DLP policy rule without content inspection, when the value is set to true.\n"
                },
                "workloadGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPWebRulesWorkloadGroup:DLPWebRulesWorkloadGroup"
                    },
                    "description": "The list of preconfigured workload groups to which the policy must be applied\n"
                },
                "zccNotificationsEnabled": {
                    "type": "boolean",
                    "description": "Indicates a DLP policy rule without content inspection, when the value is set to true.\n"
                },
                "zscalerIncidentReceiver": {
                    "type": "boolean",
                    "description": "Indicates whether a Zscaler Incident Receiver is associated to the DLP policy rule.\n"
                }
            },
            "required": [
                "action",
                "auditors",
                "cloudApplications",
                "dlpDownloadScanEnabled",
                "externalAuditorEmail",
                "fileTypes",
                "icapServers",
                "matchOnly",
                "minSize",
                "name",
                "notificationTemplates",
                "order",
                "parentRule",
                "protocols",
                "rank",
                "ruleId",
                "severity",
                "state",
                "subRules",
                "userRiskScoreLevels",
                "withoutContentInspection",
                "workloadGroups",
                "zccNotificationsEnabled"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The action taken when traffic matches the DLP policy rule criteria.\n"
                },
                "auditors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPWebRulesAuditor:DLPWebRulesAuditor"
                    },
                    "description": "The auditor to which the DLP policy rule must be applied.\n"
                },
                "cloudApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of cloud applications to which the DLP policy rule must be applied.\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/DLPWebRulesDepartments:DLPWebRulesDepartments",
                    "description": "The Name-ID pairs of departments to which the DLP policy rule must be applied.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the DLP policy rule.\n"
                },
                "dlpDownloadScanEnabled": {
                    "type": "boolean",
                    "description": "Indicates a DLP policy rule without content inspection, when the value is set to true.\n"
                },
                "dlpEngines": {
                    "$ref": "#/types/zia:index/DLPWebRulesDlpEngines:DLPWebRulesDlpEngines",
                    "description": "The list of DLP engines to which the DLP policy rule must be applied.\n"
                },
                "excludedDepartments": {
                    "$ref": "#/types/zia:index/DLPWebRulesExcludedDepartments:DLPWebRulesExcludedDepartments",
                    "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                },
                "excludedDomainProfiles": {
                    "$ref": "#/types/zia:index/DLPWebRulesExcludedDomainProfiles:DLPWebRulesExcludedDomainProfiles",
                    "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                },
                "excludedGroups": {
                    "$ref": "#/types/zia:index/DLPWebRulesExcludedGroups:DLPWebRulesExcludedGroups",
                    "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                },
                "excludedUsers": {
                    "$ref": "#/types/zia:index/DLPWebRulesExcludedUsers:DLPWebRulesExcludedUsers",
                    "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                },
                "externalAuditorEmail": {
                    "type": "string",
                    "description": "The email address of an external auditor to whom DLP email notifications are sent.\n"
                },
                "fileTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of file types for which the DLP policy rule must be applied.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/DLPWebRulesGroups:DLPWebRulesGroups",
                    "description": "The Name-ID pairs of groups to which the DLP policy rule must be applied.\n"
                },
                "icapServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPWebRulesIcapServer:DLPWebRulesIcapServer"
                    },
                    "description": "The DLP server, using ICAP, to which the transaction content is forwarded.\n"
                },
                "includedDomainProfiles": {
                    "$ref": "#/types/zia:index/DLPWebRulesIncludedDomainProfiles:DLPWebRulesIncludedDomainProfiles",
                    "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                },
                "inspectHttpGetEnabled": {
                    "type": "boolean"
                },
                "labels": {
                    "$ref": "#/types/zia:index/DLPWebRulesLabels:DLPWebRulesLabels",
                    "description": "list of Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/DLPWebRulesLocationGroups:DLPWebRulesLocationGroups",
                    "description": "The Name-ID pairs of locations groups to which the DLP policy rule must be applied.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/DLPWebRulesLocations:DLPWebRulesLocations",
                    "description": "The Name-ID pairs of locations to which the DLP policy rule must be applied.\n"
                },
                "matchOnly": {
                    "type": "boolean",
                    "description": "The match only criteria for DLP engines.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum file size (in KB) used for evaluation of the DLP policy rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The DLP policy rule name.\n"
                },
                "notificationTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPWebRulesNotificationTemplate:DLPWebRulesNotificationTemplate"
                    },
                    "description": "The template used for DLP notification emails.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "The rule order of execution for the DLP policy rule with respect to other rules.\n"
                },
                "parentRule": {
                    "type": "integer",
                    "description": "The unique identifier of the parent rule under which an exception rule is added\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The protocol criteria specified for the DLP policy rule.\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank of the admin who creates this rule\n"
                },
                "severity": {
                    "type": "string",
                    "description": "Indicates the severity selected for the DLP rule violation\n"
                },
                "sourceIpGroups": {
                    "$ref": "#/types/zia:index/DLPWebRulesSourceIpGroups:DLPWebRulesSourceIpGroups",
                    "description": "list of source ip groups\n"
                },
                "state": {
                    "type": "string",
                    "description": "Enables or disables the DLP policy rule.\n"
                },
                "subRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of exception rules added to a parent rule\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/DLPWebRulesTimeWindows:DLPWebRulesTimeWindows",
                    "description": "list of time interval during which rule must be enforced.\n"
                },
                "urlCategories": {
                    "$ref": "#/types/zia:index/DLPWebRulesUrlCategories:DLPWebRulesUrlCategories",
                    "description": "The list of URL categories to which the DLP policy rule must be applied.\n"
                },
                "userRiskScoreLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "$ref": "#/types/zia:index/DLPWebRulesUsers:DLPWebRulesUsers",
                    "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                },
                "withoutContentInspection": {
                    "type": "boolean",
                    "description": "Indicates a DLP policy rule without content inspection, when the value is set to true.\n"
                },
                "workloadGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/DLPWebRulesWorkloadGroup:DLPWebRulesWorkloadGroup"
                    },
                    "description": "The list of preconfigured workload groups to which the policy must be applied\n"
                },
                "zccNotificationsEnabled": {
                    "type": "boolean",
                    "description": "Indicates a DLP policy rule without content inspection, when the value is set to true.\n"
                },
                "zscalerIncidentReceiver": {
                    "type": "boolean",
                    "description": "Indicates whether a Zscaler Incident Receiver is associated to the DLP policy rule.\n"
                }
            },
            "requiredInputs": [
                "order"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DLPWebRules resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action taken when traffic matches the DLP policy rule criteria.\n"
                    },
                    "auditors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/DLPWebRulesAuditor:DLPWebRulesAuditor"
                        },
                        "description": "The auditor to which the DLP policy rule must be applied.\n"
                    },
                    "cloudApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of cloud applications to which the DLP policy rule must be applied.\n"
                    },
                    "departments": {
                        "$ref": "#/types/zia:index/DLPWebRulesDepartments:DLPWebRulesDepartments",
                        "description": "The Name-ID pairs of departments to which the DLP policy rule must be applied.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the DLP policy rule.\n"
                    },
                    "dlpDownloadScanEnabled": {
                        "type": "boolean",
                        "description": "Indicates a DLP policy rule without content inspection, when the value is set to true.\n"
                    },
                    "dlpEngines": {
                        "$ref": "#/types/zia:index/DLPWebRulesDlpEngines:DLPWebRulesDlpEngines",
                        "description": "The list of DLP engines to which the DLP policy rule must be applied.\n"
                    },
                    "excludedDepartments": {
                        "$ref": "#/types/zia:index/DLPWebRulesExcludedDepartments:DLPWebRulesExcludedDepartments",
                        "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                    },
                    "excludedDomainProfiles": {
                        "$ref": "#/types/zia:index/DLPWebRulesExcludedDomainProfiles:DLPWebRulesExcludedDomainProfiles",
                        "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                    },
                    "excludedGroups": {
                        "$ref": "#/types/zia:index/DLPWebRulesExcludedGroups:DLPWebRulesExcludedGroups",
                        "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                    },
                    "excludedUsers": {
                        "$ref": "#/types/zia:index/DLPWebRulesExcludedUsers:DLPWebRulesExcludedUsers",
                        "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                    },
                    "externalAuditorEmail": {
                        "type": "string",
                        "description": "The email address of an external auditor to whom DLP email notifications are sent.\n"
                    },
                    "fileTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of file types for which the DLP policy rule must be applied.\n"
                    },
                    "groups": {
                        "$ref": "#/types/zia:index/DLPWebRulesGroups:DLPWebRulesGroups",
                        "description": "The Name-ID pairs of groups to which the DLP policy rule must be applied.\n"
                    },
                    "icapServers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/DLPWebRulesIcapServer:DLPWebRulesIcapServer"
                        },
                        "description": "The DLP server, using ICAP, to which the transaction content is forwarded.\n"
                    },
                    "includedDomainProfiles": {
                        "$ref": "#/types/zia:index/DLPWebRulesIncludedDomainProfiles:DLPWebRulesIncludedDomainProfiles",
                        "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                    },
                    "inspectHttpGetEnabled": {
                        "type": "boolean"
                    },
                    "labels": {
                        "$ref": "#/types/zia:index/DLPWebRulesLabels:DLPWebRulesLabels",
                        "description": "list of Labels that are applicable to the rule.\n"
                    },
                    "locationGroups": {
                        "$ref": "#/types/zia:index/DLPWebRulesLocationGroups:DLPWebRulesLocationGroups",
                        "description": "The Name-ID pairs of locations groups to which the DLP policy rule must be applied.\n"
                    },
                    "locations": {
                        "$ref": "#/types/zia:index/DLPWebRulesLocations:DLPWebRulesLocations",
                        "description": "The Name-ID pairs of locations to which the DLP policy rule must be applied.\n"
                    },
                    "matchOnly": {
                        "type": "boolean",
                        "description": "The match only criteria for DLP engines.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The minimum file size (in KB) used for evaluation of the DLP policy rule.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The DLP policy rule name.\n"
                    },
                    "notificationTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/DLPWebRulesNotificationTemplate:DLPWebRulesNotificationTemplate"
                        },
                        "description": "The template used for DLP notification emails.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "The rule order of execution for the DLP policy rule with respect to other rules.\n"
                    },
                    "parentRule": {
                        "type": "integer",
                        "description": "The unique identifier of the parent rule under which an exception rule is added\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The protocol criteria specified for the DLP policy rule.\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "Admin rank of the admin who creates this rule\n"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "severity": {
                        "type": "string",
                        "description": "Indicates the severity selected for the DLP rule violation\n"
                    },
                    "sourceIpGroups": {
                        "$ref": "#/types/zia:index/DLPWebRulesSourceIpGroups:DLPWebRulesSourceIpGroups",
                        "description": "list of source ip groups\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Enables or disables the DLP policy rule.\n"
                    },
                    "subRules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of exception rules added to a parent rule\n"
                    },
                    "timeWindows": {
                        "$ref": "#/types/zia:index/DLPWebRulesTimeWindows:DLPWebRulesTimeWindows",
                        "description": "list of time interval during which rule must be enforced.\n"
                    },
                    "urlCategories": {
                        "$ref": "#/types/zia:index/DLPWebRulesUrlCategories:DLPWebRulesUrlCategories",
                        "description": "The list of URL categories to which the DLP policy rule must be applied.\n"
                    },
                    "userRiskScoreLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "$ref": "#/types/zia:index/DLPWebRulesUsers:DLPWebRulesUsers",
                        "description": "The Name-ID pairs of users to which the DLP policy rule must be applied.\n"
                    },
                    "withoutContentInspection": {
                        "type": "boolean",
                        "description": "Indicates a DLP policy rule without content inspection, when the value is set to true.\n"
                    },
                    "workloadGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/DLPWebRulesWorkloadGroup:DLPWebRulesWorkloadGroup"
                        },
                        "description": "The list of preconfigured workload groups to which the policy must be applied\n"
                    },
                    "zccNotificationsEnabled": {
                        "type": "boolean",
                        "description": "Indicates a DLP policy rule without content inspection, when the value is set to true.\n"
                    },
                    "zscalerIncidentReceiver": {
                        "type": "boolean",
                        "description": "Indicates whether a Zscaler Incident Receiver is associated to the DLP policy rule.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/endUserNotification:EndUserNotification": {
            "description": "The **zia_end_user_notification** resource allows you to update the browser-based end user notification (EUN) configuration details. To learn more see [Understanding Browser-Based End User Notifications](https://help.zscaler.com/unified/understanding-browser-based-end-user-notifications)\n\n## Example Usage\n\n### NOTIFICATION TYPE - DEFAULT\n\n```hcl\n# END USER NOTIFICATION TYPE - DEFAULT\nresource \"zia_end_user_notification\" \"this\" {\n  aup_frequency     = \"NEVER\"\n  aup_message       = \"Please review and accept the terms.\"\n  notification_type = \"DEFAULT\"\n  custom_text       = \"Website blocked\"\n\n  url_cat_review_enabled                  = true\n  url_cat_review_submit_to_security_cloud = true\n  url_cat_review_text                     = \"Click here to submit a review request.\"\n\n  security_review_enabled                  = true\n  security_review_submit_to_security_cloud = true\n  security_review_text                     = \"Request a security review if this message appears in error.\"\n\n  web_dlp_review_enabled                  = true\n  web_dlp_review_submit_to_security_cloud = false\n  web_dlp_review_custom_location          = \"https://dlp-review-location.com\"\n  web_dlp_review_text                     = \"This file is being reviewed for security reasons.\"\n\n  redirect_url    = \"https://dlp-review-location.com\"\n  support_email   = \"support@8061240.zscalerbeta.net\"\n  support_phone   = \"+91-9000000000\"\n  org_policy_link = \"http://8061240.zscalerbeta.net/policy.html\"\n\n  caution_again_after = 300\n  caution_per_domain  = true\n  caution_custom_text = \"Access to this site is restricted. Proceed with caution.\"\n\n  idp_proxy_notification_text         = \"Your connection is being proxied through the organization's secure access service.\"\n  quarantine_custom_notification_text = \"The file is being analyzed for potential security risks. Please wait while the process completes.\"\n}\n```\n\n### NOTIFICATION TYPE - CUSTOM\n\n```hcl\n# END USER NOTIFICATION TYPE - CUSTOM\nresource \"zia_end_user_notification\" \"this\" {\n  aup_frequency     = \"ON_WEEKDAY\"\n  aup_day_offset    = \"1\"\n  aup_message       = \"Please review and accept the terms.\"\n  notification_type = \"CUSTOM\"\n  display_reason    = true\n  display_comp_name = true\n  display_comp_logo = true\n  custom_text       = \"Website blocked\"\n\n  url_cat_review_enabled                  = true\n  url_cat_review_submit_to_security_cloud = true\n  url_cat_review_custom_location          = \"https://custom-review-location.com\"\n  url_cat_review_text                     = \"Click here to submit a review request.\"\n\n  security_review_enabled                  = true\n  security_review_submit_to_security_cloud = true\n  security_review_custom_location          = \"https://security-review-location.com\"\n  security_review_text                     = \"Request a security review if this message appears in error.\"\n\n  web_dlp_review_enabled                  = true\n  web_dlp_review_submit_to_security_cloud = false\n  web_dlp_review_custom_location          = \"https://dlp-review-location.com\"\n  web_dlp_review_text                     = \"This file is being reviewed for security reasons.\"\n\n  redirect_url    = \"https://dlp-review-location.com\"\n  support_email   = \"support@8061240.zscalerbeta.net\"\n  support_phone   = \"+91-9000000000\"\n  org_policy_link = \"http://8061240.zscalerbeta.net/policy.html\"\n\n  caution_again_after = 300\n  caution_per_domain  = true\n  caution_custom_text = \"Access to this site is restricted. Proceed with caution.\"\n\n  idp_proxy_notification_text         = \"Your connection is being proxied through the organization's secure access service.\"\n  quarantine_custom_notification_text = \"The file is being analyzed for potential security risks. Please wait while the process completes.\"\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_end_user_notification** can be imported by using `enduser_notification` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/endUserNotification:EndUserNotification this \"enduser_notification\"\n```\n\n",
            "properties": {
                "aupCustomFrequency": {
                    "type": "integer",
                    "description": "The custom frequency (in days) for showing the AUP to the end users. Valid range is 0 to 180.\n"
                },
                "aupDayOffset": {
                    "type": "integer",
                    "description": "Specifies which day of the week or month the AUP is shown for users when aupFrequency is set. Valid range is 0 to 31.\n"
                },
                "aupFrequency": {
                    "type": "string",
                    "description": "The frequency at which the Acceptable Use Policy (AUP) is shown to the end users\n"
                },
                "aupMessage": {
                    "type": "string",
                    "description": "The acceptable use statement that is shown in the AUP\n"
                },
                "cautionAgainAfter": {
                    "type": "integer",
                    "description": "The time interval at which the caution notification is shown when users continue browsing a restricted site.\n"
                },
                "cautionCustomText": {
                    "type": "string",
                    "description": "The custom message that appears in the caution notification\n"
                },
                "cautionPerDomain": {
                    "type": "boolean",
                    "description": "Specifies whether to display the caution notification at a specific time interval for URLs in the Miscellaneous or\nUnknown category.\n"
                },
                "customText": {
                    "type": "string",
                    "description": "The custom text shown in the EUN\n"
                },
                "displayCompLogo": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether your organization's logo appears in the EUN or not\n"
                },
                "displayCompName": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether the organization's name appears in the EUN or not\n"
                },
                "displayReason": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether or not the reason for cautioning or blocking access to a site, file, or application\nis shown when the respective notification is triggered\n"
                },
                "idpProxyNotificationText": {
                    "type": "string",
                    "description": "The message that appears in the IdP Proxy notification\n"
                },
                "notificationType": {
                    "type": "string",
                    "description": "The type of EUN as default or custom\n"
                },
                "orgPolicyLink": {
                    "type": "string",
                    "description": "The URL of the organization's policy page. This field is required for the default notification type.\n"
                },
                "quarantineCustomNotificationText": {
                    "type": "string",
                    "description": "The message that appears in the quarantine notification\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL for the external site hosting the EUN specified when the custom notification type is selected\n"
                },
                "securityReviewCustomLocation": {
                    "type": "string",
                    "description": "Value indicating whether or not to include the ECS option in all DNS queries, originating from all locations and remote\nusers.\n"
                },
                "securityReviewEnabled": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether the Security Violation notification is enabled or disabled\n"
                },
                "securityReviewSubmitToSecurityCloud": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether users' review requests for blocked URLs are submitted to the Zscaler service (i.e.,\nSecurity Cloud) or a custom location.\n"
                },
                "securityReviewText": {
                    "type": "string",
                    "description": "The message that appears in the Security Violation notification\n"
                },
                "supportEmail": {
                    "type": "string",
                    "description": "The email address for writing to IT Support\n"
                },
                "supportPhone": {
                    "type": "string",
                    "description": "The phone number for contacting IT Support\n"
                },
                "urlCatReviewCustomLocation": {
                    "type": "string",
                    "description": "A custom URL location where users' review requests for blocked URLs are sent\n"
                },
                "urlCatReviewEnabled": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether the URL Categorization notification is enabled or disabled\n"
                },
                "urlCatReviewSubmitToSecurityCloud": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether users' review requests for possibly misclassified URLs are submitted to the Zscaler\nservice (i.e., Security Cloud) or a custom location.\n"
                },
                "urlCatReviewText": {
                    "type": "string",
                    "description": "The message that appears in the URL Categorization notification\n"
                },
                "webDlpReviewCustomLocation": {
                    "type": "string",
                    "description": "A custom URL location where users' review requests for the web DLP policy violation are sent\n"
                },
                "webDlpReviewEnabled": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether the Web DLP Violation notification is enabled or disabled\n"
                },
                "webDlpReviewSubmitToSecurityCloud": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether users' review requests for web DLP policy violation are submitted to the Zscaler\nservice (i.e., Security Cloud) or a custom location.\n"
                },
                "webDlpReviewText": {
                    "type": "string",
                    "description": "The message that appears in the Web DLP Violation notification\n"
                }
            },
            "required": [
                "aupCustomFrequency",
                "aupDayOffset",
                "aupFrequency",
                "aupMessage",
                "cautionAgainAfter",
                "cautionCustomText",
                "cautionPerDomain",
                "customText",
                "displayCompLogo",
                "displayCompName",
                "displayReason",
                "idpProxyNotificationText",
                "notificationType",
                "orgPolicyLink",
                "redirectUrl",
                "securityReviewCustomLocation",
                "securityReviewEnabled",
                "securityReviewSubmitToSecurityCloud",
                "securityReviewText",
                "supportEmail",
                "supportPhone",
                "urlCatReviewCustomLocation",
                "urlCatReviewEnabled",
                "urlCatReviewSubmitToSecurityCloud",
                "urlCatReviewText",
                "webDlpReviewCustomLocation",
                "webDlpReviewEnabled",
                "webDlpReviewSubmitToSecurityCloud",
                "webDlpReviewText"
            ],
            "inputProperties": {
                "aupCustomFrequency": {
                    "type": "integer",
                    "description": "The custom frequency (in days) for showing the AUP to the end users. Valid range is 0 to 180.\n"
                },
                "aupDayOffset": {
                    "type": "integer",
                    "description": "Specifies which day of the week or month the AUP is shown for users when aupFrequency is set. Valid range is 0 to 31.\n"
                },
                "aupFrequency": {
                    "type": "string",
                    "description": "The frequency at which the Acceptable Use Policy (AUP) is shown to the end users\n"
                },
                "aupMessage": {
                    "type": "string",
                    "description": "The acceptable use statement that is shown in the AUP\n"
                },
                "cautionAgainAfter": {
                    "type": "integer",
                    "description": "The time interval at which the caution notification is shown when users continue browsing a restricted site.\n"
                },
                "cautionCustomText": {
                    "type": "string",
                    "description": "The custom message that appears in the caution notification\n"
                },
                "cautionPerDomain": {
                    "type": "boolean",
                    "description": "Specifies whether to display the caution notification at a specific time interval for URLs in the Miscellaneous or\nUnknown category.\n"
                },
                "customText": {
                    "type": "string",
                    "description": "The custom text shown in the EUN\n"
                },
                "displayCompLogo": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether your organization's logo appears in the EUN or not\n"
                },
                "displayCompName": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether the organization's name appears in the EUN or not\n"
                },
                "displayReason": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether or not the reason for cautioning or blocking access to a site, file, or application\nis shown when the respective notification is triggered\n"
                },
                "idpProxyNotificationText": {
                    "type": "string",
                    "description": "The message that appears in the IdP Proxy notification\n"
                },
                "notificationType": {
                    "type": "string",
                    "description": "The type of EUN as default or custom\n"
                },
                "orgPolicyLink": {
                    "type": "string",
                    "description": "The URL of the organization's policy page. This field is required for the default notification type.\n"
                },
                "quarantineCustomNotificationText": {
                    "type": "string",
                    "description": "The message that appears in the quarantine notification\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL for the external site hosting the EUN specified when the custom notification type is selected\n"
                },
                "securityReviewCustomLocation": {
                    "type": "string",
                    "description": "Value indicating whether or not to include the ECS option in all DNS queries, originating from all locations and remote\nusers.\n"
                },
                "securityReviewEnabled": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether the Security Violation notification is enabled or disabled\n"
                },
                "securityReviewSubmitToSecurityCloud": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether users' review requests for blocked URLs are submitted to the Zscaler service (i.e.,\nSecurity Cloud) or a custom location.\n"
                },
                "securityReviewText": {
                    "type": "string",
                    "description": "The message that appears in the Security Violation notification\n"
                },
                "supportEmail": {
                    "type": "string",
                    "description": "The email address for writing to IT Support\n"
                },
                "supportPhone": {
                    "type": "string",
                    "description": "The phone number for contacting IT Support\n"
                },
                "urlCatReviewCustomLocation": {
                    "type": "string",
                    "description": "A custom URL location where users' review requests for blocked URLs are sent\n"
                },
                "urlCatReviewEnabled": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether the URL Categorization notification is enabled or disabled\n"
                },
                "urlCatReviewSubmitToSecurityCloud": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether users' review requests for possibly misclassified URLs are submitted to the Zscaler\nservice (i.e., Security Cloud) or a custom location.\n"
                },
                "urlCatReviewText": {
                    "type": "string",
                    "description": "The message that appears in the URL Categorization notification\n"
                },
                "webDlpReviewCustomLocation": {
                    "type": "string",
                    "description": "A custom URL location where users' review requests for the web DLP policy violation are sent\n"
                },
                "webDlpReviewEnabled": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether the Web DLP Violation notification is enabled or disabled\n"
                },
                "webDlpReviewSubmitToSecurityCloud": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether users' review requests for web DLP policy violation are submitted to the Zscaler\nservice (i.e., Security Cloud) or a custom location.\n"
                },
                "webDlpReviewText": {
                    "type": "string",
                    "description": "The message that appears in the Web DLP Violation notification\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EndUserNotification resources.\n",
                "properties": {
                    "aupCustomFrequency": {
                        "type": "integer",
                        "description": "The custom frequency (in days) for showing the AUP to the end users. Valid range is 0 to 180.\n"
                    },
                    "aupDayOffset": {
                        "type": "integer",
                        "description": "Specifies which day of the week or month the AUP is shown for users when aupFrequency is set. Valid range is 0 to 31.\n"
                    },
                    "aupFrequency": {
                        "type": "string",
                        "description": "The frequency at which the Acceptable Use Policy (AUP) is shown to the end users\n"
                    },
                    "aupMessage": {
                        "type": "string",
                        "description": "The acceptable use statement that is shown in the AUP\n"
                    },
                    "cautionAgainAfter": {
                        "type": "integer",
                        "description": "The time interval at which the caution notification is shown when users continue browsing a restricted site.\n"
                    },
                    "cautionCustomText": {
                        "type": "string",
                        "description": "The custom message that appears in the caution notification\n"
                    },
                    "cautionPerDomain": {
                        "type": "boolean",
                        "description": "Specifies whether to display the caution notification at a specific time interval for URLs in the Miscellaneous or\nUnknown category.\n"
                    },
                    "customText": {
                        "type": "string",
                        "description": "The custom text shown in the EUN\n"
                    },
                    "displayCompLogo": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether your organization's logo appears in the EUN or not\n"
                    },
                    "displayCompName": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether the organization's name appears in the EUN or not\n"
                    },
                    "displayReason": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether or not the reason for cautioning or blocking access to a site, file, or application\nis shown when the respective notification is triggered\n"
                    },
                    "idpProxyNotificationText": {
                        "type": "string",
                        "description": "The message that appears in the IdP Proxy notification\n"
                    },
                    "notificationType": {
                        "type": "string",
                        "description": "The type of EUN as default or custom\n"
                    },
                    "orgPolicyLink": {
                        "type": "string",
                        "description": "The URL of the organization's policy page. This field is required for the default notification type.\n"
                    },
                    "quarantineCustomNotificationText": {
                        "type": "string",
                        "description": "The message that appears in the quarantine notification\n"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "description": "The redirect URL for the external site hosting the EUN specified when the custom notification type is selected\n"
                    },
                    "securityReviewCustomLocation": {
                        "type": "string",
                        "description": "Value indicating whether or not to include the ECS option in all DNS queries, originating from all locations and remote\nusers.\n"
                    },
                    "securityReviewEnabled": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether the Security Violation notification is enabled or disabled\n"
                    },
                    "securityReviewSubmitToSecurityCloud": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether users' review requests for blocked URLs are submitted to the Zscaler service (i.e.,\nSecurity Cloud) or a custom location.\n"
                    },
                    "securityReviewText": {
                        "type": "string",
                        "description": "The message that appears in the Security Violation notification\n"
                    },
                    "supportEmail": {
                        "type": "string",
                        "description": "The email address for writing to IT Support\n"
                    },
                    "supportPhone": {
                        "type": "string",
                        "description": "The phone number for contacting IT Support\n"
                    },
                    "urlCatReviewCustomLocation": {
                        "type": "string",
                        "description": "A custom URL location where users' review requests for blocked URLs are sent\n"
                    },
                    "urlCatReviewEnabled": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether the URL Categorization notification is enabled or disabled\n"
                    },
                    "urlCatReviewSubmitToSecurityCloud": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether users' review requests for possibly misclassified URLs are submitted to the Zscaler\nservice (i.e., Security Cloud) or a custom location.\n"
                    },
                    "urlCatReviewText": {
                        "type": "string",
                        "description": "The message that appears in the URL Categorization notification\n"
                    },
                    "webDlpReviewCustomLocation": {
                        "type": "string",
                        "description": "A custom URL location where users' review requests for the web DLP policy violation are sent\n"
                    },
                    "webDlpReviewEnabled": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether the Web DLP Violation notification is enabled or disabled\n"
                    },
                    "webDlpReviewSubmitToSecurityCloud": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether users' review requests for web DLP policy violation are submitted to the Zscaler\nservice (i.e., Security Cloud) or a custom location.\n"
                    },
                    "webDlpReviewText": {
                        "type": "string",
                        "description": "The message that appears in the Web DLP Violation notification\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/fileTypeControlRules:FileTypeControlRules": {
            "description": "The **zia_file_type_control_rules** resource allows the creation and management of ZIA file type control rules in the Zscaler Internet Access.\n\n## Example Usage\n\n```hcl\ndata \"zia_department_management\" \"engineering\" {\n name = \"Engineering\"\n}\n\ndata \"zia_group_management\" \"normal_internet\" {\n    name = \"Normal_Internet\"\n}\n\ndata \"zia_cloud_applications\" \"this\" {\n  policy_type = \"cloud_application_policy\"\n  app_class   = [\"AI_ML\"]\n}\n\nresource \"zia_file_type_control_rules\" \"this\" {\n    name               = \"Terraform_File_Type01\"\n    description        = \"Terraform_File_Type01\"\n    state              = \"ENABLED\"\n    order              = 1\n    rank               = 7\n    filtering_action   = \"BLOCK\"\n    operation          = \"DOWNLOAD\"\n    active_content     = true\n    unscannable        = false\n    device_trust_levels = [\"UNKNOWN_DEVICETRUSTLEVEL\", \"LOW_TRUST\", \"MEDIUM_TRUST\", \"HIGH_TRUST\"]\n    file_types         = [\"FTCATEGORY_MS_WORD\", \"FTCATEGORY_MS_POWERPOINT\", \"FTCATEGORY_PDF_DOCUMENT\", \"FTCATEGORY_MS_EXCEL\"]\n    protocols          = [\"FOHTTP_RULE\", \"FTP_RULE\", \"HTTPS_RULE\", \"HTTP_RULE\"]\n    cloud_applications = tolist([for app in data.zia_cloud_applications.this.applications : app[\"app\"]])\n\n    departments {\n        id = [ data.zia_department_management.engineering.id ]\n    }\n    groups {\n        id = [ data.zia_group_management.normal_internet.id ]\n    }\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_file_type_control_rules** can be imported by using `\u003cRULE ID\u003e` or `\u003cRULE NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/fileTypeControlRules:FileTypeControlRules example \u003crule_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/fileTypeControlRules:FileTypeControlRules example \u003crule_name\u003e\n```\n\n",
            "properties": {
                "activeContent": {
                    "type": "boolean",
                    "description": "Flag to check whether a file has active content or not\n"
                },
                "capturePcap": {
                    "type": "boolean",
                    "description": "A Boolean value that indicates whether packet capture (PCAP) is enabled or not\n"
                },
                "cloudApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of cloud applications to which the File Type Control rule must be applied.\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesDepartments:FileTypeControlRulesDepartments",
                    "description": "The Name-ID pairs of departments to which the File Type Control rule must be applied.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the File Type Control rule.\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesDeviceGroups:FileTypeControlRulesDeviceGroups",
                    "description": "This field is applicable for devices that are managed using Zscaler Client Connector.\n"
                },
                "deviceTrustLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed\nusing Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the\nZscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesDevices:FileTypeControlRulesDevices",
                    "description": "Name-ID pairs of devices for which rule must be applied.\n"
                },
                "fileTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File type categories for which the policy is applied. If not set, the rule is applied across all file types.\n"
                },
                "filteringAction": {
                    "type": "string",
                    "description": "Action taken when traffic matches policy. This field is not applicable to the Lite API.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesGroups:FileTypeControlRulesGroups",
                    "description": "The Name-ID pairs of groups to which the File Type Control rule must be applied.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesLabels:FileTypeControlRulesLabels",
                    "description": "list of Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesLocationGroups:FileTypeControlRulesLocationGroups",
                    "description": "Name-ID pairs of locations groups for which rule must be applied.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesLocations:FileTypeControlRulesLocations",
                    "description": "Name-ID pairs of locations for the which policy must be applied. If not set, policy is applied for all locations.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "Maximum file size (in KB) used for evaluation of the FTP rule\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "Minimum file size (in KB) used for evaluation of the FTP rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "The File Type Control policy rule name.\n"
                },
                "operation": {
                    "type": "string",
                    "description": "File operation performed. This field is not applicable to the Lite API.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "The rule order of execution for the File Type Control rule with respect to other rules.\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Protocol for the given rule. This field is not applicable to the Lite API.\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank of the admin who creates this rule\n"
                },
                "ruleId": {
                    "type": "integer"
                },
                "state": {
                    "type": "string",
                    "description": "Enables or disables the File Type Control rule.\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesTimeWindows:FileTypeControlRulesTimeWindows",
                    "description": "list of time interval during which rule must be enforced.\n"
                },
                "unscannable": {
                    "type": "boolean",
                    "description": "Flag to check whether a file has active content or not\n"
                },
                "urlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URL categories for which rule must be applied\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesUsers:FileTypeControlRulesUsers",
                    "description": "The Name-ID pairs of users to which the File Type Control rule must be applied.\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FileTypeControlRulesZpaAppSegment:FileTypeControlRulesZpaAppSegment"
                    },
                    "description": "List of Source IP Anchoring-enabled ZPA Application Segments for which this rule is applicable\n"
                }
            },
            "required": [
                "activeContent",
                "capturePcap",
                "cloudApplications",
                "filteringAction",
                "maxSize",
                "minSize",
                "name",
                "operation",
                "order",
                "protocols",
                "rank",
                "ruleId",
                "state",
                "unscannable",
                "zpaAppSegments"
            ],
            "inputProperties": {
                "activeContent": {
                    "type": "boolean",
                    "description": "Flag to check whether a file has active content or not\n"
                },
                "capturePcap": {
                    "type": "boolean",
                    "description": "A Boolean value that indicates whether packet capture (PCAP) is enabled or not\n"
                },
                "cloudApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of cloud applications to which the File Type Control rule must be applied.\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesDepartments:FileTypeControlRulesDepartments",
                    "description": "The Name-ID pairs of departments to which the File Type Control rule must be applied.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the File Type Control rule.\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesDeviceGroups:FileTypeControlRulesDeviceGroups",
                    "description": "This field is applicable for devices that are managed using Zscaler Client Connector.\n"
                },
                "deviceTrustLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed\nusing Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the\nZscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesDevices:FileTypeControlRulesDevices",
                    "description": "Name-ID pairs of devices for which rule must be applied.\n"
                },
                "fileTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File type categories for which the policy is applied. If not set, the rule is applied across all file types.\n"
                },
                "filteringAction": {
                    "type": "string",
                    "description": "Action taken when traffic matches policy. This field is not applicable to the Lite API.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesGroups:FileTypeControlRulesGroups",
                    "description": "The Name-ID pairs of groups to which the File Type Control rule must be applied.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesLabels:FileTypeControlRulesLabels",
                    "description": "list of Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesLocationGroups:FileTypeControlRulesLocationGroups",
                    "description": "Name-ID pairs of locations groups for which rule must be applied.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesLocations:FileTypeControlRulesLocations",
                    "description": "Name-ID pairs of locations for the which policy must be applied. If not set, policy is applied for all locations.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "Maximum file size (in KB) used for evaluation of the FTP rule\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "Minimum file size (in KB) used for evaluation of the FTP rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "The File Type Control policy rule name.\n"
                },
                "operation": {
                    "type": "string",
                    "description": "File operation performed. This field is not applicable to the Lite API.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "The rule order of execution for the File Type Control rule with respect to other rules.\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Protocol for the given rule. This field is not applicable to the Lite API.\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank of the admin who creates this rule\n"
                },
                "state": {
                    "type": "string",
                    "description": "Enables or disables the File Type Control rule.\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesTimeWindows:FileTypeControlRulesTimeWindows",
                    "description": "list of time interval during which rule must be enforced.\n"
                },
                "unscannable": {
                    "type": "boolean",
                    "description": "Flag to check whether a file has active content or not\n"
                },
                "urlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URL categories for which rule must be applied\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/FileTypeControlRulesUsers:FileTypeControlRulesUsers",
                    "description": "The Name-ID pairs of users to which the File Type Control rule must be applied.\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FileTypeControlRulesZpaAppSegment:FileTypeControlRulesZpaAppSegment"
                    },
                    "description": "List of Source IP Anchoring-enabled ZPA Application Segments for which this rule is applicable\n"
                }
            },
            "requiredInputs": [
                "order",
                "protocols"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FileTypeControlRules resources.\n",
                "properties": {
                    "activeContent": {
                        "type": "boolean",
                        "description": "Flag to check whether a file has active content or not\n"
                    },
                    "capturePcap": {
                        "type": "boolean",
                        "description": "A Boolean value that indicates whether packet capture (PCAP) is enabled or not\n"
                    },
                    "cloudApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of cloud applications to which the File Type Control rule must be applied.\n"
                    },
                    "departments": {
                        "$ref": "#/types/zia:index/FileTypeControlRulesDepartments:FileTypeControlRulesDepartments",
                        "description": "The Name-ID pairs of departments to which the File Type Control rule must be applied.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the File Type Control rule.\n"
                    },
                    "deviceGroups": {
                        "$ref": "#/types/zia:index/FileTypeControlRulesDeviceGroups:FileTypeControlRulesDeviceGroups",
                        "description": "This field is applicable for devices that are managed using Zscaler Client Connector.\n"
                    },
                    "deviceTrustLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed\nusing Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the\nZscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "devices": {
                        "$ref": "#/types/zia:index/FileTypeControlRulesDevices:FileTypeControlRulesDevices",
                        "description": "Name-ID pairs of devices for which rule must be applied.\n"
                    },
                    "fileTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "File type categories for which the policy is applied. If not set, the rule is applied across all file types.\n"
                    },
                    "filteringAction": {
                        "type": "string",
                        "description": "Action taken when traffic matches policy. This field is not applicable to the Lite API.\n"
                    },
                    "groups": {
                        "$ref": "#/types/zia:index/FileTypeControlRulesGroups:FileTypeControlRulesGroups",
                        "description": "The Name-ID pairs of groups to which the File Type Control rule must be applied.\n"
                    },
                    "labels": {
                        "$ref": "#/types/zia:index/FileTypeControlRulesLabels:FileTypeControlRulesLabels",
                        "description": "list of Labels that are applicable to the rule.\n"
                    },
                    "locationGroups": {
                        "$ref": "#/types/zia:index/FileTypeControlRulesLocationGroups:FileTypeControlRulesLocationGroups",
                        "description": "Name-ID pairs of locations groups for which rule must be applied.\n"
                    },
                    "locations": {
                        "$ref": "#/types/zia:index/FileTypeControlRulesLocations:FileTypeControlRulesLocations",
                        "description": "Name-ID pairs of locations for the which policy must be applied. If not set, policy is applied for all locations.\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "Maximum file size (in KB) used for evaluation of the FTP rule\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "Minimum file size (in KB) used for evaluation of the FTP rule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The File Type Control policy rule name.\n"
                    },
                    "operation": {
                        "type": "string",
                        "description": "File operation performed. This field is not applicable to the Lite API.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "The rule order of execution for the File Type Control rule with respect to other rules.\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Protocol for the given rule. This field is not applicable to the Lite API.\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "Admin rank of the admin who creates this rule\n"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string",
                        "description": "Enables or disables the File Type Control rule.\n"
                    },
                    "timeWindows": {
                        "$ref": "#/types/zia:index/FileTypeControlRulesTimeWindows:FileTypeControlRulesTimeWindows",
                        "description": "list of time interval during which rule must be enforced.\n"
                    },
                    "unscannable": {
                        "type": "boolean",
                        "description": "Flag to check whether a file has active content or not\n"
                    },
                    "urlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URL categories for which rule must be applied\n"
                    },
                    "users": {
                        "$ref": "#/types/zia:index/FileTypeControlRulesUsers:FileTypeControlRulesUsers",
                        "description": "The Name-ID pairs of users to which the File Type Control rule must be applied.\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/FileTypeControlRulesZpaAppSegment:FileTypeControlRulesZpaAppSegment"
                        },
                        "description": "List of Source IP Anchoring-enabled ZPA Application Segments for which this rule is applicable\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/firewallDNSRule:FirewallDNSRule": {
            "description": "## Example Usage\n\n### Create Firewall DNS Rules - Redirect Action\n\n```hcl\ndata \"zia_department_management\" \"engineering\" {\n name = \"Engineering\"\n}\n\ndata \"zia_group_management\" \"normal_internet\" {\n    name = \"Normal_Internet\"\n}\n\ndata \"zia_firewall_filtering_time_window\" \"work_hours\" {\n    name = \"Work hours\"\n}\n\nresource \"zia_firewall_dns_rule\" \"this\" {\n    name = \"Example_DNS_Rule01\"\n    description = \"Example_DNS_Rule01\"\n    action = \"REDIR_REQ\"\n    state = \"ENABLED\"\n    order = 10\n    rank = 7\n    redirect_ip = \"8.8.8.8\"\n    dest_countries = [\"CA\", \"US\"]\n    source_countries = [\"CA\", \"US\"]\n    protocols = [\"ANY_RULE\"]\n    departments {\n        id = [ data.zia_department_management.engineering.id ]\n    }\n    groups {\n        id = [ data.zia_group_management.normal_internet.id ]\n    }\n    time_windows {\n        id = [ data.zia_firewall_filtering_time_window.work_hours.id ]\n    }\n}\n```\n\n### Create Firewall DNS Rules - Redirect Request DOH\n\n```hcl\nresource \"zia_firewall_dns_rule\" \"this2\" {\n    name = \"Example_DNS_Rule02\"\n    description = \"Example_DNS_Rule02\"\n    action = \"REDIR_REQ_DOH\"\n    state = \"ENABLED\"\n    order = 12\n    rank = 7\n    dest_countries = [\"CA\", \"US\"]\n    source_countries = [\"CA\", \"US\"]\n    protocols = [\"ANY_RULE\"]\n    dns_gateway {\n      id = 18207342\n      name = \"DNS_GW01\"\n    }\n}\n```\n\n### Create Firewall DNS Rules - Redirect TCP Request\n\nresource \"zia.FirewallDNSRule\" \"this3\" {\n    name = \"Example_DNS_Rule03\"\n    description = \"Example_DNS_Rule03\"\n    action = \"REDIR_REQ_TCP\"\n    state = \"ENABLED\"\n    order = 13\n    rank = 7\n    dest_countries = [\"CA\", \"US\"]\n    source_countries = [\"CA\", \"US\"]\n    protocols = [\"ANY_RULE\"]\n    dns_gateway {\n      id = 18207342\n      name = \"DNS_GW01\"\n    }\n}\n",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK`, `REDIR_REQ`, `REDIR_RES`, `REDIR_ZPA`, `REDIR_REQ_DOH`, `REDIR_REQ_KEEP_SENDER`, `REDIR_REQ_TCP`, `REDIR_REQ_UDP`, `BLOCK_WITH_RESPONSE`\n"
                },
                "applicationGroups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleApplicationGroups:FirewallDNSRuleApplicationGroups",
                    "description": "(List of Objects) DNS application groups to which the rule applies\n"
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of Strings) DNS tunnels and network applications to which the rule applies. To retrieve the available list of DNS tunnels applications use the data source: `zia.getCloudApplications` with the `app_class` value `DNS_OVER_HTTPS`. See example:\n"
                },
                "blockResponseCode": {
                    "type": "string",
                    "description": "(String) Specifies the DNS response code to be sent to the client when the action is configured to block and send response code. Supported values are: `ANY`, `NONE`, `FORMERR`, `SERVFAIL`, `NXDOMAIN`, `NOTIMP`, `REFUSED`, `YXDOMAIN`, `YXRRSET`, `NXRRSET`, `NOTAUTH`, `NOTZONE`, `BADVERS`, `BADKEY`, `BADTIME`, `BADMODE`, `BADNAME`, `BADALG`, `BADTRUNC`, `UNSUPPORTED`, `BYPASS`, `INT_ERROR`, `SRV_TIMEOUT`, `EMPTY_RESP`,\n`REQ_BLOCKED`, `ADMIN_DROP`, `WCDN_TIMEOUT`, `IPS_BLOCK`, `FQDN_RESOLV_FAIL`\n"
                },
                "capturePcap": {
                    "type": "boolean",
                    "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "(Boolean) Value that indicates whether the rule is the Default Cloud DNS Rule or not\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleDepartments:FirewallDNSRuleDepartments",
                    "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                },
                "destAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                },
                "destCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                },
                "destIpCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                },
                "destIpGroups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleDestIpGroups:FirewallDNSRuleDestIpGroups",
                    "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                },
                "destIpv6Groups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleDestIpv6Groups:FirewallDNSRuleDestIpv6Groups",
                    "description": "list of destination ip groups\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleDeviceGroups:FirewallDNSRuleDeviceGroups",
                    "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleDevices:FirewallDNSRuleDevices",
                    "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "dnsGateway": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleDnsGateway:FirewallDNSRuleDnsGateway",
                    "description": "(Set of Objects) The DNS gateway used to redirect traffic, specified when the rule action is to redirect DNS request to an external DNS service. Only one DNS Gateway is supported.\n"
                },
                "dnsRuleRequestTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of Strings) DNS request types to which the rule applies. Supportedn values are:\n`A`, `NS`, `MD`, `MF`, `CNAME`, `SOA`, `MB`, `MG`, `MR`, `NULL`, `WKS`, `PTR`, `HINFO`, `MINFO`, `MX`, `TXT`, `RP`, `AFSDB`,\n`X25`, `ISDN`, `RT`, `NSAP`, `NSAP_PTR`, `SIG`, `KEY`, `PX`, `GPOS`, `AAAA`, `LOC`, `NXT`, `EID`, `NIMLOC`, `SRV`, `ATMA`,\n`NAPTR`, `KX`, `CERT`, `A6`, `DNAME`, `SINK`, `OPT`, `APL`, `DS`, `SSHFP`, `PSECKEF`, `RRSIG`, `NSEC`, `DNSKEY`,\n`DHCID`, `NSEC3`, `NSEC3PARAM`, `TLSA`, `HIP`, `NINFO`, `RKEY`, `TALINK`, `CDS`, `CDNSKEY`, `OPENPGPKEY`, `CSYNC`,\n`ZONEMD`, `SVCB`, `HTTPS`,\n"
                },
                "ednsEcsObject": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleEdnsEcsObject:FirewallDNSRuleEdnsEcsObject",
                    "description": "(List of Objects) The EDNS ECS object which resolves DNS request. Only one object is supported.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleGroups:FirewallDNSRuleGroups",
                    "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleLabels:FirewallDNSRuleLabels",
                    "description": "(List of Objects) Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleLocationGroups:FirewallDNSRuleLocationGroups",
                    "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleLocations:FirewallDNSRuleLocations",
                    "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                },
                "order": {
                    "type": "integer",
                    "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                },
                "predefined": {
                    "type": "boolean",
                    "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of Strings) The protocols to which the rules applies. Supported Values: `ANY_RULE`, `SMRULEF_CASCADING_ALLOWED`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                },
                "redirectIp": {
                    "type": "string",
                    "description": "(String) The IP address to which the traffic will be redirected to when the DNAT rule is triggered. If not set, no redirection is done to specific IP addresses. Only supported when the `action` is `REDIR_REQ`\n"
                },
                "resCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                },
                "ruleId": {
                    "type": "integer"
                },
                "sourceCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                },
                "srcIpGroups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleSrcIpGroups:FirewallDNSRuleSrcIpGroups",
                    "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                },
                "srcIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                },
                "srcIpv6Groups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleSrcIpv6Groups:FirewallDNSRuleSrcIpv6Groups",
                    "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                },
                "state": {
                    "type": "string",
                    "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleTimeWindows:FirewallDNSRuleTimeWindows",
                    "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleUsers:FirewallDNSRuleUsers",
                    "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                },
                "zpaIpGroup": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleZpaIpGroup:FirewallDNSRuleZpaIpGroup",
                    "description": "(Set of Objects) The ZPA IP pool specified when the rule action is to resolve domain names of ZPA applications to an ephemeral IP address from a preconfigured IP pool. Only one object is supported.\n"
                }
            },
            "required": [
                "applications",
                "capturePcap",
                "destCountries",
                "dnsGateway",
                "ednsEcsObject",
                "name",
                "order",
                "ruleId",
                "sourceCountries",
                "zpaIpGroup"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK`, `REDIR_REQ`, `REDIR_RES`, `REDIR_ZPA`, `REDIR_REQ_DOH`, `REDIR_REQ_KEEP_SENDER`, `REDIR_REQ_TCP`, `REDIR_REQ_UDP`, `BLOCK_WITH_RESPONSE`\n"
                },
                "applicationGroups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleApplicationGroups:FirewallDNSRuleApplicationGroups",
                    "description": "(List of Objects) DNS application groups to which the rule applies\n"
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of Strings) DNS tunnels and network applications to which the rule applies. To retrieve the available list of DNS tunnels applications use the data source: `zia.getCloudApplications` with the `app_class` value `DNS_OVER_HTTPS`. See example:\n"
                },
                "blockResponseCode": {
                    "type": "string",
                    "description": "(String) Specifies the DNS response code to be sent to the client when the action is configured to block and send response code. Supported values are: `ANY`, `NONE`, `FORMERR`, `SERVFAIL`, `NXDOMAIN`, `NOTIMP`, `REFUSED`, `YXDOMAIN`, `YXRRSET`, `NXRRSET`, `NOTAUTH`, `NOTZONE`, `BADVERS`, `BADKEY`, `BADTIME`, `BADMODE`, `BADNAME`, `BADALG`, `BADTRUNC`, `UNSUPPORTED`, `BYPASS`, `INT_ERROR`, `SRV_TIMEOUT`, `EMPTY_RESP`,\n`REQ_BLOCKED`, `ADMIN_DROP`, `WCDN_TIMEOUT`, `IPS_BLOCK`, `FQDN_RESOLV_FAIL`\n"
                },
                "capturePcap": {
                    "type": "boolean",
                    "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "(Boolean) Value that indicates whether the rule is the Default Cloud DNS Rule or not\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleDepartments:FirewallDNSRuleDepartments",
                    "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                },
                "destAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                },
                "destCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                },
                "destIpCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                },
                "destIpGroups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleDestIpGroups:FirewallDNSRuleDestIpGroups",
                    "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                },
                "destIpv6Groups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleDestIpv6Groups:FirewallDNSRuleDestIpv6Groups",
                    "description": "list of destination ip groups\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleDeviceGroups:FirewallDNSRuleDeviceGroups",
                    "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleDevices:FirewallDNSRuleDevices",
                    "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "dnsGateway": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleDnsGateway:FirewallDNSRuleDnsGateway",
                    "description": "(Set of Objects) The DNS gateway used to redirect traffic, specified when the rule action is to redirect DNS request to an external DNS service. Only one DNS Gateway is supported.\n"
                },
                "dnsRuleRequestTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of Strings) DNS request types to which the rule applies. Supportedn values are:\n`A`, `NS`, `MD`, `MF`, `CNAME`, `SOA`, `MB`, `MG`, `MR`, `NULL`, `WKS`, `PTR`, `HINFO`, `MINFO`, `MX`, `TXT`, `RP`, `AFSDB`,\n`X25`, `ISDN`, `RT`, `NSAP`, `NSAP_PTR`, `SIG`, `KEY`, `PX`, `GPOS`, `AAAA`, `LOC`, `NXT`, `EID`, `NIMLOC`, `SRV`, `ATMA`,\n`NAPTR`, `KX`, `CERT`, `A6`, `DNAME`, `SINK`, `OPT`, `APL`, `DS`, `SSHFP`, `PSECKEF`, `RRSIG`, `NSEC`, `DNSKEY`,\n`DHCID`, `NSEC3`, `NSEC3PARAM`, `TLSA`, `HIP`, `NINFO`, `RKEY`, `TALINK`, `CDS`, `CDNSKEY`, `OPENPGPKEY`, `CSYNC`,\n`ZONEMD`, `SVCB`, `HTTPS`,\n"
                },
                "ednsEcsObject": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleEdnsEcsObject:FirewallDNSRuleEdnsEcsObject",
                    "description": "(List of Objects) The EDNS ECS object which resolves DNS request. Only one object is supported.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleGroups:FirewallDNSRuleGroups",
                    "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleLabels:FirewallDNSRuleLabels",
                    "description": "(List of Objects) Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleLocationGroups:FirewallDNSRuleLocationGroups",
                    "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleLocations:FirewallDNSRuleLocations",
                    "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                },
                "order": {
                    "type": "integer",
                    "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                },
                "predefined": {
                    "type": "boolean",
                    "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of Strings) The protocols to which the rules applies. Supported Values: `ANY_RULE`, `SMRULEF_CASCADING_ALLOWED`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                },
                "redirectIp": {
                    "type": "string",
                    "description": "(String) The IP address to which the traffic will be redirected to when the DNAT rule is triggered. If not set, no redirection is done to specific IP addresses. Only supported when the `action` is `REDIR_REQ`\n"
                },
                "resCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                },
                "sourceCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                },
                "srcIpGroups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleSrcIpGroups:FirewallDNSRuleSrcIpGroups",
                    "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                },
                "srcIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                },
                "srcIpv6Groups": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleSrcIpv6Groups:FirewallDNSRuleSrcIpv6Groups",
                    "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                },
                "state": {
                    "type": "string",
                    "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleTimeWindows:FirewallDNSRuleTimeWindows",
                    "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleUsers:FirewallDNSRuleUsers",
                    "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                },
                "zpaIpGroup": {
                    "$ref": "#/types/zia:index/FirewallDNSRuleZpaIpGroup:FirewallDNSRuleZpaIpGroup",
                    "description": "(Set of Objects) The ZPA IP pool specified when the rule action is to resolve domain names of ZPA applications to an ephemeral IP address from a preconfigured IP pool. Only one object is supported.\n"
                }
            },
            "requiredInputs": [
                "order"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallDNSRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK`, `REDIR_REQ`, `REDIR_RES`, `REDIR_ZPA`, `REDIR_REQ_DOH`, `REDIR_REQ_KEEP_SENDER`, `REDIR_REQ_TCP`, `REDIR_REQ_UDP`, `BLOCK_WITH_RESPONSE`\n"
                    },
                    "applicationGroups": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleApplicationGroups:FirewallDNSRuleApplicationGroups",
                        "description": "(List of Objects) DNS application groups to which the rule applies\n"
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of Strings) DNS tunnels and network applications to which the rule applies. To retrieve the available list of DNS tunnels applications use the data source: `zia.getCloudApplications` with the `app_class` value `DNS_OVER_HTTPS`. See example:\n"
                    },
                    "blockResponseCode": {
                        "type": "string",
                        "description": "(String) Specifies the DNS response code to be sent to the client when the action is configured to block and send response code. Supported values are: `ANY`, `NONE`, `FORMERR`, `SERVFAIL`, `NXDOMAIN`, `NOTIMP`, `REFUSED`, `YXDOMAIN`, `YXRRSET`, `NXRRSET`, `NOTAUTH`, `NOTZONE`, `BADVERS`, `BADKEY`, `BADTIME`, `BADMODE`, `BADNAME`, `BADALG`, `BADTRUNC`, `UNSUPPORTED`, `BYPASS`, `INT_ERROR`, `SRV_TIMEOUT`, `EMPTY_RESP`,\n`REQ_BLOCKED`, `ADMIN_DROP`, `WCDN_TIMEOUT`, `IPS_BLOCK`, `FQDN_RESOLV_FAIL`\n"
                    },
                    "capturePcap": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                    },
                    "defaultRule": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether the rule is the Default Cloud DNS Rule or not\n"
                    },
                    "departments": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleDepartments:FirewallDNSRuleDepartments",
                        "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                    },
                    "destAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "destCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "destIpCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                    },
                    "destIpGroups": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleDestIpGroups:FirewallDNSRuleDestIpGroups",
                        "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                    },
                    "destIpv6Groups": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleDestIpv6Groups:FirewallDNSRuleDestIpv6Groups",
                        "description": "list of destination ip groups\n"
                    },
                    "deviceGroups": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleDeviceGroups:FirewallDNSRuleDeviceGroups",
                        "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "devices": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleDevices:FirewallDNSRuleDevices",
                        "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "dnsGateway": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleDnsGateway:FirewallDNSRuleDnsGateway",
                        "description": "(Set of Objects) The DNS gateway used to redirect traffic, specified when the rule action is to redirect DNS request to an external DNS service. Only one DNS Gateway is supported.\n"
                    },
                    "dnsRuleRequestTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of Strings) DNS request types to which the rule applies. Supportedn values are:\n`A`, `NS`, `MD`, `MF`, `CNAME`, `SOA`, `MB`, `MG`, `MR`, `NULL`, `WKS`, `PTR`, `HINFO`, `MINFO`, `MX`, `TXT`, `RP`, `AFSDB`,\n`X25`, `ISDN`, `RT`, `NSAP`, `NSAP_PTR`, `SIG`, `KEY`, `PX`, `GPOS`, `AAAA`, `LOC`, `NXT`, `EID`, `NIMLOC`, `SRV`, `ATMA`,\n`NAPTR`, `KX`, `CERT`, `A6`, `DNAME`, `SINK`, `OPT`, `APL`, `DS`, `SSHFP`, `PSECKEF`, `RRSIG`, `NSEC`, `DNSKEY`,\n`DHCID`, `NSEC3`, `NSEC3PARAM`, `TLSA`, `HIP`, `NINFO`, `RKEY`, `TALINK`, `CDS`, `CDNSKEY`, `OPENPGPKEY`, `CSYNC`,\n`ZONEMD`, `SVCB`, `HTTPS`,\n"
                    },
                    "ednsEcsObject": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleEdnsEcsObject:FirewallDNSRuleEdnsEcsObject",
                        "description": "(List of Objects) The EDNS ECS object which resolves DNS request. Only one object is supported.\n"
                    },
                    "groups": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleGroups:FirewallDNSRuleGroups",
                        "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "labels": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleLabels:FirewallDNSRuleLabels",
                        "description": "(List of Objects) Labels that are applicable to the rule.\n"
                    },
                    "locationGroups": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleLocationGroups:FirewallDNSRuleLocationGroups",
                        "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                    },
                    "locations": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleLocations:FirewallDNSRuleLocations",
                        "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Firewall Filtering policy rule\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                    },
                    "predefined": {
                        "type": "boolean",
                        "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of Strings) The protocols to which the rules applies. Supported Values: `ANY_RULE`, `SMRULEF_CASCADING_ALLOWED`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                    },
                    "redirectIp": {
                        "type": "string",
                        "description": "(String) The IP address to which the traffic will be redirected to when the DNAT rule is triggered. If not set, no redirection is done to specific IP addresses. Only supported when the `action` is `REDIR_REQ`\n"
                    },
                    "resCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "sourceCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "srcIpGroups": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleSrcIpGroups:FirewallDNSRuleSrcIpGroups",
                        "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                    },
                    "srcIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "srcIpv6Groups": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleSrcIpv6Groups:FirewallDNSRuleSrcIpv6Groups",
                        "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                    },
                    "timeWindows": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleTimeWindows:FirewallDNSRuleTimeWindows",
                        "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                    },
                    "users": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleUsers:FirewallDNSRuleUsers",
                        "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                    },
                    "zpaIpGroup": {
                        "$ref": "#/types/zia:index/FirewallDNSRuleZpaIpGroup:FirewallDNSRuleZpaIpGroup",
                        "description": "(Set of Objects) The ZPA IP pool specified when the rule action is to resolve domain names of ZPA applications to an ephemeral IP address from a preconfigured IP pool. Only one object is supported.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/firewallFilteringApplicationGroups:FirewallFilteringApplicationGroups": {
            "description": "The **zia_firewall_filtering_network_application_groups** resource allows the creation and management of ZIA Cloud Firewall IP source groups in the Zscaler Internet Access. This resource can then be associated with a ZIA cloud firewall filtering rule.\n\n## Example Usage\n\n```hcl\n# Add applications to a network application group\nresource \"zia_firewall_filtering_network_application_groups\" \"example\" {\n  name        = \"Example\"\n  description = \"Example\"\n  network_applications = [ \"LDAP\", \"LDAPS\", \"SRVLOC\"]\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_firewall_filtering_network_application_groups** can be imported by using `\u003cGROUP_ID\u003e` or `\u003cGROUP_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/firewallFilteringApplicationGroups:FirewallFilteringApplicationGroups example \u003cgroup_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/firewallFilteringApplicationGroups:FirewallFilteringApplicationGroups example \u003cgroup_name\u003e\n```\n\n",
            "properties": {
                "appId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networkApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "appId",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networkApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallFilteringApplicationGroups resources.\n",
                "properties": {
                    "appId": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "zia:index/firewallFilteringDestinationGroups:FirewallFilteringDestinationGroups": {
            "description": "The **zia_firewall_filtering_destination_groups** resource allows the creation and management of ZIA Cloud Firewall IP destination groups in the Zscaler Internet Access. This resource can then be associated with a ZIA cloud firewall filtering rule.\n\n## Example Usage\n\n```hcl\n# IP Destination Group of Type DSTN_FQDN\nresource \"zia_firewall_filtering_destination_groups\" \"dstn_fqdn\" {\n  name        = \"Example Destination FQDN\"\n  description = \"Example Destination FQDN\"\n  type        = \"DSTN_FQDN\"\n  addresses = [ \"test1.acme.com\", \"test2.acme.com\", \"test3.acme.com\" ]\n}\n```\n\n```hcl\n# IP Destination Group of Type DSTN_IP\nresource \"zia_firewall_filtering_destination_groups\" \"example_dstn_ip\" {\n  name        = \"Example Destination IP\"\n  description = \"Example Destination IP\"\n  type        = \"DSTN_IP\"\n  addresses = [\"3.217.228.0-3.217.231.255\",\n    \"3.235.112.0-3.235.119.255\",\n    \"52.23.61.0-52.23.62.25\",\n    \"35.80.88.0-35.80.95.255\"]\n}\n```\n\n```hcl\n# IP Destination Group of Type DSTN_DOMAIN\nresource \"zia_firewall_filtering_destination_groups\" \"example_dstn_domain\" {\n  name          = \"Example Destination Domain\"\n  description   = \"Example Destination Domain\"\n  type          = \"DSTN_DOMAIN\"\n  addresses     = [\"acme.com\", \"acme1.com\"]\n}\n```\n\n```hcl\n# IP Destination Group of Type DSTN_OTHER\nresource \"zia_firewall_filtering_destination_groups\" \"example_dstn_other\" {\n  name          = \"Example Destination Other\"\n  description   = \"Example Destination Other\"\n  type          = \"DSTN_OTHER\"\n  countries     = [\"COUNTRY_CA\"]\n  ip_categories = [\"CUSTOM_01\", \"CUSTOM_02\"]\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_firewall_filtering_destination_groups** can be imported by using `\u003cGROUP_ID\u003e` or `\u003cGROUP_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/firewallFilteringDestinationGroups:FirewallFilteringDestinationGroups example \u003cgroup_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/firewallFilteringDestinationGroups:FirewallFilteringDestinationGroups example \u003cgroup_name\u003e\n```\n\n",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Destination IP addresses within the group\n"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination\ncountries.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Additional information about the destination IP group\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "Unique identifer for the destination IP group\n"
                },
                "ipCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URL categories for which rule must be applied\n"
                },
                "name": {
                    "type": "string",
                    "description": "Destination IP group name\n"
                },
                "type": {
                    "type": "string",
                    "description": "Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)\n"
                }
            },
            "required": [
                "addresses",
                "countries",
                "groupId",
                "name",
                "type"
            ],
            "inputProperties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Destination IP addresses within the group\n"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination\ncountries.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Additional information about the destination IP group\n"
                },
                "ipCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URL categories for which rule must be applied\n"
                },
                "name": {
                    "type": "string",
                    "description": "Destination IP group name\n"
                },
                "type": {
                    "type": "string",
                    "description": "Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallFilteringDestinationGroups resources.\n",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Destination IP addresses within the group\n"
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination\ncountries.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Additional information about the destination IP group\n"
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Unique identifer for the destination IP group\n"
                    },
                    "ipCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URL categories for which rule must be applied\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Destination IP group name\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "zia:index/firewallFilteringNetworkServices:FirewallFilteringNetworkServices": {
            "description": "The **zia_firewall_filtering_network_service** resource allows the creation and management of ZIA Cloud Firewall IP network services in the Zscaler Internet Access. This resource can then be associated with a ZIA cloud firewall filtering rule and network service group resources.\n\n## Example Usage\n\n```hcl\nresource \"zia_firewall_filtering_network_service\" \"example\" {\n  name        = \"example\"\n  description = \"example\"\n  src_tcp_ports {\n    start = 5000\n  }\n  src_tcp_ports {\n    start = 5001\n  }\n  src_tcp_ports {\n    start = 5002\n    end   = 5005\n  }\n  dest_tcp_ports {\n    start = 5000\n  }\n    dest_tcp_ports {\n    start = 5001\n  }\n  dest_tcp_ports {\n    start = 5003\n    end   = 5005\n  }\n  type = \"CUSTOM\"\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_firewall_filtering_network_service** can be imported by using `\u003cSERVICE_ID\u003e` or `\u003cSERVICE_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/firewallFilteringNetworkServices:FirewallFilteringNetworkServices example \u003cservice_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/firewallFilteringNetworkServices:FirewallFilteringNetworkServices example \u003cservice_name\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string"
                },
                "destTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringNetworkServicesDestTcpPort:FirewallFilteringNetworkServicesDestTcpPort"
                    },
                    "description": "dest tcp ports\n"
                },
                "destUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringNetworkServicesDestUdpPort:FirewallFilteringNetworkServicesDestUdpPort"
                    },
                    "description": "dest udp ports\n"
                },
                "isNameL10nTag": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "networkServiceId": {
                    "type": "integer"
                },
                "srcTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringNetworkServicesSrcTcpPort:FirewallFilteringNetworkServicesSrcTcpPort"
                    },
                    "description": "src tcp ports\n"
                },
                "srcUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringNetworkServicesSrcUdpPort:FirewallFilteringNetworkServicesSrcUdpPort"
                    },
                    "description": "src udp ports\n"
                },
                "tag": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "networkServiceId",
                "tag"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "destTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringNetworkServicesDestTcpPort:FirewallFilteringNetworkServicesDestTcpPort"
                    },
                    "description": "dest tcp ports\n"
                },
                "destUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringNetworkServicesDestUdpPort:FirewallFilteringNetworkServicesDestUdpPort"
                    },
                    "description": "dest udp ports\n"
                },
                "isNameL10nTag": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "srcTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringNetworkServicesSrcTcpPort:FirewallFilteringNetworkServicesSrcTcpPort"
                    },
                    "description": "src tcp ports\n"
                },
                "srcUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringNetworkServicesSrcUdpPort:FirewallFilteringNetworkServicesSrcUdpPort"
                    },
                    "description": "src udp ports\n"
                },
                "tag": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallFilteringNetworkServices resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "destTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/FirewallFilteringNetworkServicesDestTcpPort:FirewallFilteringNetworkServicesDestTcpPort"
                        },
                        "description": "dest tcp ports\n"
                    },
                    "destUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/FirewallFilteringNetworkServicesDestUdpPort:FirewallFilteringNetworkServicesDestUdpPort"
                        },
                        "description": "dest udp ports\n"
                    },
                    "isNameL10nTag": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkServiceId": {
                        "type": "integer"
                    },
                    "srcTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/FirewallFilteringNetworkServicesSrcTcpPort:FirewallFilteringNetworkServicesSrcTcpPort"
                        },
                        "description": "src tcp ports\n"
                    },
                    "srcUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/FirewallFilteringNetworkServicesSrcUdpPort:FirewallFilteringNetworkServicesSrcUdpPort"
                        },
                        "description": "src udp ports\n"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/firewallFilteringRule:FirewallFilteringRule": {
            "description": "## Example Usage\n\n```hcl\ndata \"zia_firewall_filtering_network_service\" \"zscaler_proxy_nw_services\" {\n    name = \"ZSCALER_PROXY_NW_SERVICES\"\n}\n\ndata \"zia_department_management\" \"engineering\" {\n name = \"Engineering\"\n}\n\ndata \"zia_group_management\" \"normal_internet\" {\n    name = \"Normal_Internet\"\n}\n\ndata \"zia_firewall_filtering_time_window\" \"work_hours\" {\n    name = \"Work hours\"\n}\n\nresource \"zia_firewall_filtering_rule\" \"example\" {\n    name                = \"Example\"\n    description         = \"Example\"\n    action              = \"ALLOW\"\n    state               = \"ENABLED\"\n    order               = 1\n    enable_full_logging = true\n    nw_services {\n        id = [ data.zia_firewall_filtering_network_service.zscaler_proxy_nw_services.id ]\n    }\n    departments {\n        id = [ data.zia_department_management.engineering.id ]\n    }\n    groups {\n        id = [ data.zia_group_management.normal_internet.id ]\n    }\n    time_windows {\n        id = [ data.zia_firewall_filtering_time_window.work_hours.id ]\n    }\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_firewall_filtering_rule** can be imported by using `\u003cRULE ID\u003e` or `\u003cRULE NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/firewallFilteringRule:FirewallFilteringRule example \u003crule_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/firewallFilteringRule:FirewallFilteringRule example \u003crule_name\u003e\n```\n\n",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action the Firewall Filtering policy rule takes when packets match the rule\n"
                },
                "appServiceGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleAppServiceGroups:FirewallFilteringRuleAppServiceGroups",
                    "description": "list of application service groups\n"
                },
                "appServices": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleAppServices:FirewallFilteringRuleAppServices",
                    "description": "list of application services\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "If set to true, the default rule is applied\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleDepartments:FirewallFilteringRuleDepartments",
                    "description": "list of departments for which rule must be applied\n"
                },
                "description": {
                    "type": "string",
                    "description": "Additional information about the rule\n"
                },
                "destAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Destination addresses. Supports IPv4, FQDNs, or wildcard FQDNs\n"
                },
                "destCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination\ncountries.\n"
                },
                "destIpCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "destIpGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleDestIpGroups:FirewallFilteringRuleDestIpGroups",
                    "description": "list of destination ip groups\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleDeviceGroups:FirewallFilteringRuleDeviceGroups",
                    "description": "This field is applicable for devices that are managed using Zscaler Client Connector.\n"
                },
                "deviceTrustLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed\nusing Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the\nZscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleDevices:FirewallFilteringRuleDevices",
                    "description": "Name-ID pairs of devices for which rule must be applied.\n"
                },
                "enableFullLogging": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleGroups:FirewallFilteringRuleGroups",
                    "description": "list of groups for which rule must be applied\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleLabels:FirewallFilteringRuleLabels",
                    "description": "list of Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleLocationGroups:FirewallFilteringRuleLocationGroups",
                    "description": "list of locations groups\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleLocations:FirewallFilteringRuleLocations",
                    "description": "list of locations for which rule must be applied\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                },
                "nwApplicationGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleNwApplicationGroups:FirewallFilteringRuleNwApplicationGroups",
                    "description": "list of nw application groups\n"
                },
                "nwApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User-defined network service applications on which the rule is applied. If not set, the rule is not restricted to a\nspecific network service application.\n"
                },
                "nwServiceGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleNwServiceGroups:FirewallFilteringRuleNwServiceGroups",
                    "description": "list of nw service groups\n"
                },
                "nwServices": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleNwServices:FirewallFilteringRuleNwServices",
                    "description": "list of nw services\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Rule order number. If omitted, the rule will be added to the end of the rule set.\n"
                },
                "predefined": {
                    "type": "boolean",
                    "description": "If set to true, a predefined rule is applied\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank of the Firewall Filtering policy rule\n"
                },
                "ruleId": {
                    "type": "integer"
                },
                "sourceCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination\ncountries.\n"
                },
                "srcIpGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleSrcIpGroups:FirewallFilteringRuleSrcIpGroups",
                    "description": "list of source ip groups\n"
                },
                "srcIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User-defined source IP addresses for which the rule is applicable. If not set, the rule is not restricted to a specific\nsource IP address.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Determines whether the Firewall Filtering policy rule is enabled or disabled\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleTimeWindows:FirewallFilteringRuleTimeWindows",
                    "description": "The time interval in which the Firewall Filtering policy rule applies\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleUsers:FirewallFilteringRuleUsers",
                    "description": "list of users for which rule must be applied\n"
                },
                "workloadGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleWorkloadGroup:FirewallFilteringRuleWorkloadGroup"
                    },
                    "description": "The list of preconfigured workload groups to which the policy must be applied\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleZpaAppSegment:FirewallFilteringRuleZpaAppSegment"
                    },
                    "description": "The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the ZPA\nGateway forwarding method.\n"
                }
            },
            "required": [
                "destCountries",
                "name",
                "nwApplications",
                "order",
                "ruleId",
                "sourceCountries",
                "workloadGroups",
                "zpaAppSegments"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The action the Firewall Filtering policy rule takes when packets match the rule\n"
                },
                "appServiceGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleAppServiceGroups:FirewallFilteringRuleAppServiceGroups",
                    "description": "list of application service groups\n"
                },
                "appServices": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleAppServices:FirewallFilteringRuleAppServices",
                    "description": "list of application services\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "If set to true, the default rule is applied\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleDepartments:FirewallFilteringRuleDepartments",
                    "description": "list of departments for which rule must be applied\n"
                },
                "description": {
                    "type": "string",
                    "description": "Additional information about the rule\n"
                },
                "destAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Destination addresses. Supports IPv4, FQDNs, or wildcard FQDNs\n"
                },
                "destCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination\ncountries.\n"
                },
                "destIpCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "destIpGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleDestIpGroups:FirewallFilteringRuleDestIpGroups",
                    "description": "list of destination ip groups\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleDeviceGroups:FirewallFilteringRuleDeviceGroups",
                    "description": "This field is applicable for devices that are managed using Zscaler Client Connector.\n"
                },
                "deviceTrustLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed\nusing Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the\nZscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleDevices:FirewallFilteringRuleDevices",
                    "description": "Name-ID pairs of devices for which rule must be applied.\n"
                },
                "enableFullLogging": {
                    "type": "boolean"
                },
                "groups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleGroups:FirewallFilteringRuleGroups",
                    "description": "list of groups for which rule must be applied\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleLabels:FirewallFilteringRuleLabels",
                    "description": "list of Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleLocationGroups:FirewallFilteringRuleLocationGroups",
                    "description": "list of locations groups\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleLocations:FirewallFilteringRuleLocations",
                    "description": "list of locations for which rule must be applied\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                },
                "nwApplicationGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleNwApplicationGroups:FirewallFilteringRuleNwApplicationGroups",
                    "description": "list of nw application groups\n"
                },
                "nwApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User-defined network service applications on which the rule is applied. If not set, the rule is not restricted to a\nspecific network service application.\n"
                },
                "nwServiceGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleNwServiceGroups:FirewallFilteringRuleNwServiceGroups",
                    "description": "list of nw service groups\n"
                },
                "nwServices": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleNwServices:FirewallFilteringRuleNwServices",
                    "description": "list of nw services\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Rule order number. If omitted, the rule will be added to the end of the rule set.\n"
                },
                "predefined": {
                    "type": "boolean",
                    "description": "If set to true, a predefined rule is applied\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank of the Firewall Filtering policy rule\n"
                },
                "sourceCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination\ncountries.\n"
                },
                "srcIpGroups": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleSrcIpGroups:FirewallFilteringRuleSrcIpGroups",
                    "description": "list of source ip groups\n"
                },
                "srcIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User-defined source IP addresses for which the rule is applicable. If not set, the rule is not restricted to a specific\nsource IP address.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Determines whether the Firewall Filtering policy rule is enabled or disabled\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleTimeWindows:FirewallFilteringRuleTimeWindows",
                    "description": "The time interval in which the Firewall Filtering policy rule applies\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/FirewallFilteringRuleUsers:FirewallFilteringRuleUsers",
                    "description": "list of users for which rule must be applied\n"
                },
                "workloadGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleWorkloadGroup:FirewallFilteringRuleWorkloadGroup"
                    },
                    "description": "The list of preconfigured workload groups to which the policy must be applied\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleZpaAppSegment:FirewallFilteringRuleZpaAppSegment"
                    },
                    "description": "The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the ZPA\nGateway forwarding method.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallFilteringRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action the Firewall Filtering policy rule takes when packets match the rule\n"
                    },
                    "appServiceGroups": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleAppServiceGroups:FirewallFilteringRuleAppServiceGroups",
                        "description": "list of application service groups\n"
                    },
                    "appServices": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleAppServices:FirewallFilteringRuleAppServices",
                        "description": "list of application services\n"
                    },
                    "defaultRule": {
                        "type": "boolean",
                        "description": "If set to true, the default rule is applied\n"
                    },
                    "departments": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleDepartments:FirewallFilteringRuleDepartments",
                        "description": "list of departments for which rule must be applied\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Additional information about the rule\n"
                    },
                    "destAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Destination addresses. Supports IPv4, FQDNs, or wildcard FQDNs\n"
                    },
                    "destCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination\ncountries.\n"
                    },
                    "destIpCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "destIpGroups": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleDestIpGroups:FirewallFilteringRuleDestIpGroups",
                        "description": "list of destination ip groups\n"
                    },
                    "deviceGroups": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleDeviceGroups:FirewallFilteringRuleDeviceGroups",
                        "description": "This field is applicable for devices that are managed using Zscaler Client Connector.\n"
                    },
                    "deviceTrustLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed\nusing Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the\nZscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "devices": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleDevices:FirewallFilteringRuleDevices",
                        "description": "Name-ID pairs of devices for which rule must be applied.\n"
                    },
                    "enableFullLogging": {
                        "type": "boolean"
                    },
                    "groups": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleGroups:FirewallFilteringRuleGroups",
                        "description": "list of groups for which rule must be applied\n"
                    },
                    "labels": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleLabels:FirewallFilteringRuleLabels",
                        "description": "list of Labels that are applicable to the rule.\n"
                    },
                    "locationGroups": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleLocationGroups:FirewallFilteringRuleLocationGroups",
                        "description": "list of locations groups\n"
                    },
                    "locations": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleLocations:FirewallFilteringRuleLocations",
                        "description": "list of locations for which rule must be applied\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Firewall Filtering policy rule\n"
                    },
                    "nwApplicationGroups": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleNwApplicationGroups:FirewallFilteringRuleNwApplicationGroups",
                        "description": "list of nw application groups\n"
                    },
                    "nwApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "User-defined network service applications on which the rule is applied. If not set, the rule is not restricted to a\nspecific network service application.\n"
                    },
                    "nwServiceGroups": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleNwServiceGroups:FirewallFilteringRuleNwServiceGroups",
                        "description": "list of nw service groups\n"
                    },
                    "nwServices": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleNwServices:FirewallFilteringRuleNwServices",
                        "description": "list of nw services\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Rule order number. If omitted, the rule will be added to the end of the rule set.\n"
                    },
                    "predefined": {
                        "type": "boolean",
                        "description": "If set to true, a predefined rule is applied\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "Admin rank of the Firewall Filtering policy rule\n"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "sourceCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination\ncountries.\n"
                    },
                    "srcIpGroups": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleSrcIpGroups:FirewallFilteringRuleSrcIpGroups",
                        "description": "list of source ip groups\n"
                    },
                    "srcIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "User-defined source IP addresses for which the rule is applicable. If not set, the rule is not restricted to a specific\nsource IP address.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Determines whether the Firewall Filtering policy rule is enabled or disabled\n"
                    },
                    "timeWindows": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleTimeWindows:FirewallFilteringRuleTimeWindows",
                        "description": "The time interval in which the Firewall Filtering policy rule applies\n"
                    },
                    "users": {
                        "$ref": "#/types/zia:index/FirewallFilteringRuleUsers:FirewallFilteringRuleUsers",
                        "description": "list of users for which rule must be applied\n"
                    },
                    "workloadGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/FirewallFilteringRuleWorkloadGroup:FirewallFilteringRuleWorkloadGroup"
                        },
                        "description": "The list of preconfigured workload groups to which the policy must be applied\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/FirewallFilteringRuleZpaAppSegment:FirewallFilteringRuleZpaAppSegment"
                        },
                        "description": "The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the ZPA\nGateway forwarding method.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/firewallFilteringServiceGroups:FirewallFilteringServiceGroups": {
            "description": "The **zia_firewall_filtering_network_service_groups** resource allows the creation and management of ZIA Cloud Firewall IP network service groups in the Zscaler Internet Access. This resource can then be associated with a ZIA cloud firewall filtering rule.\n\n## Example Usage\n\n```hcl\ndata \"zia_firewall_filtering_network_service\" \"example1\" {\n  name = \"FTP\"\n}\n\ndata \"zia_firewall_filtering_network_service\" \"example2\" {\n  name = \"NETBIOS\"\n}\n\ndata \"zia_firewall_filtering_network_service\" \"example3\" {\n  name = \"DNS\"\n}\n\n# Add network services to a network services group\nresource \"zia_firewall_filtering_network_service_groups\" \"example\"{\n    name        = \"example\"\n    description = \"example\"\n    services {\n        id = [\n            data.zia_firewall_filtering_network_service.example1.id,\n            data.zia_firewall_filtering_network_service.example2.id,\n            data.zia_firewall_filtering_network_service.example3.id\n        ]\n    }\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**firewall_filtering_network_service_groups** can be imported by using `\u003cGROUP_ID\u003e` or `\u003cGROUP_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/firewallFilteringServiceGroups:FirewallFilteringServiceGroups example \u003cgroup_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/firewallFilteringServiceGroups:FirewallFilteringServiceGroups example \u003cgroup_name\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string"
                },
                "groupId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringServiceGroupsService:FirewallFilteringServiceGroupsService"
                    },
                    "description": "list of services IDs\n"
                }
            },
            "required": [
                "groupId",
                "name",
                "services"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallFilteringServiceGroupsService:FirewallFilteringServiceGroupsService"
                    },
                    "description": "list of services IDs\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallFilteringServiceGroups resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/FirewallFilteringServiceGroupsService:FirewallFilteringServiceGroupsService"
                        },
                        "description": "list of services IDs\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/firewallFilteringSourceGroups:FirewallFilteringSourceGroups": {
            "description": "The **zia_firewall_filtering_ip_source_groups** resource allows the creation and management of ZIA Cloud Firewall IP source groups in the Zscaler Internet Access. This resource can then be associated with a ZIA cloud firewall filtering rule.\n\n## Example Usage\n\n```hcl\n# Add an IP address or addresses to a new IP Source Group\nresource \"zia_firewall_filtering_ip_source_groups\" \"example\" {\n  name        = \"Example\"\n  description = \"Example\"\n  ip_addresses = [ \"192.168.100.1\", \"192.168.100.2\", \"192.168.100.3\"]\n}\n```\n\n```hcl\n# Add an IP address range(s) to a new IP Source Group\nresource \"zia_firewall_filtering_ip_source_groups\" \"example\" {\n  name        = \"Example\"\n  description = \"Example\"\n  ip_addresses = [ \"192.0.2.1-192.0.2.10\" ]\n}\n```\n\n```hcl\n# Add subnet to a new IP Source Group\nresource \"zia_firewall_filtering_ip_source_groups\" \"example\" {\n  name        = \"Example\"\n  description = \"Example\"\n  ip_addresses = [ \"203.0.113.0/24\" ]\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_firewall_filtering_ip_source_groups** can be imported by using `\u003cGROUP_ID\u003e` or `\u003cGROUP_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/firewallFilteringSourceGroups:FirewallFilteringSourceGroups example \u003cgroup_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/firewallFilteringSourceGroups:FirewallFilteringSourceGroups example \u003cgroup_name\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string"
                },
                "groupId": {
                    "type": "integer"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "groupId",
                "ipAddresses",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "ipAddresses"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallFilteringSourceGroups resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "integer"
                    },
                    "ipAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/firewallIPSRule:FirewallIPSRule": {
            "description": "The **zia_firewall_ips_rule** resource allows the creation and management of ZIA Cloud Firewall IPS rules in the Zscaler Internet Access.\n\n## Example Usage\n\n```hcl\ndata \"zia_firewall_filtering_network_service\" \"zscaler_proxy_nw_services\" {\n    name = \"ZSCALER_PROXY_NW_SERVICES\"\n}\n\ndata \"zia_department_management\" \"engineering\" {\n name = \"Engineering\"\n}\n\ndata \"zia_group_management\" \"normal_internet\" {\n    name = \"Normal_Internet\"\n}\n\ndata \"zia_firewall_filtering_time_window\" \"work_hours\" {\n    name = \"Work hours\"\n}\n\nresource \"zia_firewall_ips_rule\" \"example\" {\n    name = \"Example_IPS_Rule01\"\n    description = \"Example_IPS_Rule01\"\n    action = \"ALLOW\"\n    state = \"ENABLED\"\n    order = 1\n    enable_full_logging = true\n    dest_countries = [\"CA\", \"US\"]\n    source_countries = [\"CA\", \"US\"]\n    threat_categories {\n        id = [ 66 ]\n    }\n    nw_services {\n        id = [ data.zia_firewall_filtering_network_service.zscaler_proxy_nw_services.id ]\n    }\n    departments {\n        id = [ data.zia_department_management.engineering.id ]\n    }\n    groups {\n        id = [ data.zia_group_management.normal_internet.id ]\n    }\n    time_windows {\n        id = [ data.zia_firewall_filtering_time_window.work_hours.id ]\n    }\n}\n```\n",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`\n"
                },
                "capturePcap": {
                    "type": "boolean",
                    "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "(Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleDepartments:FirewallIPSRuleDepartments",
                    "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                },
                "destAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                },
                "destCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                },
                "destIpCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                },
                "destIpGroups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleDestIpGroups:FirewallIPSRuleDestIpGroups",
                    "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                },
                "destIpv6Groups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleDestIpv6Groups:FirewallIPSRuleDestIpv6Groups",
                    "description": "list of destination ip groups\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleDeviceGroups:FirewallIPSRuleDeviceGroups",
                    "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleDevices:FirewallIPSRuleDevices",
                    "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "enableFullLogging": {
                    "type": "boolean",
                    "description": "(Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleGroups:FirewallIPSRuleGroups",
                    "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleLabels:FirewallIPSRuleLabels",
                    "description": "(List of Objects) Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleLocationGroups:FirewallIPSRuleLocationGroups",
                    "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleLocations:FirewallIPSRuleLocations",
                    "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the IPS Control rule\n"
                },
                "nwServiceGroups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleNwServiceGroups:FirewallIPSRuleNwServiceGroups",
                    "description": "(List of Objects) Any number of predefined or custom network service groups to which the rule applies.\n"
                },
                "nwServices": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleNwServices:FirewallIPSRuleNwServices",
                    "description": "(List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                },
                "predefined": {
                    "type": "boolean",
                    "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                },
                "resCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                },
                "ruleId": {
                    "type": "integer"
                },
                "sourceCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                },
                "srcIpGroups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleSrcIpGroups:FirewallIPSRuleSrcIpGroups",
                    "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                },
                "srcIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                },
                "srcIpv6Groups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleSrcIpv6Groups:FirewallIPSRuleSrcIpv6Groups",
                    "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                },
                "state": {
                    "type": "string",
                    "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                },
                "threatCategories": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleThreatCategories:FirewallIPSRuleThreatCategories",
                    "description": "(List of Objects) Advanced threat categories to which the rule applies\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleTimeWindows:FirewallIPSRuleTimeWindows",
                    "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleUsers:FirewallIPSRuleUsers",
                    "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleZpaAppSegment:FirewallIPSRuleZpaAppSegment"
                    },
                    "description": "(List of Objects) The ZPA application segments to which the rule applies\n"
                }
            },
            "required": [
                "capturePcap",
                "destCountries",
                "name",
                "order",
                "ruleId",
                "sourceCountries",
                "zpaAppSegments"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`\n"
                },
                "capturePcap": {
                    "type": "boolean",
                    "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "(Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleDepartments:FirewallIPSRuleDepartments",
                    "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                },
                "destAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                },
                "destCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                },
                "destIpCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                },
                "destIpGroups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleDestIpGroups:FirewallIPSRuleDestIpGroups",
                    "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                },
                "destIpv6Groups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleDestIpv6Groups:FirewallIPSRuleDestIpv6Groups",
                    "description": "list of destination ip groups\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleDeviceGroups:FirewallIPSRuleDeviceGroups",
                    "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleDevices:FirewallIPSRuleDevices",
                    "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "enableFullLogging": {
                    "type": "boolean",
                    "description": "(Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleGroups:FirewallIPSRuleGroups",
                    "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleLabels:FirewallIPSRuleLabels",
                    "description": "(List of Objects) Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleLocationGroups:FirewallIPSRuleLocationGroups",
                    "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleLocations:FirewallIPSRuleLocations",
                    "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the IPS Control rule\n"
                },
                "nwServiceGroups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleNwServiceGroups:FirewallIPSRuleNwServiceGroups",
                    "description": "(List of Objects) Any number of predefined or custom network service groups to which the rule applies.\n"
                },
                "nwServices": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleNwServices:FirewallIPSRuleNwServices",
                    "description": "(List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                },
                "predefined": {
                    "type": "boolean",
                    "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                },
                "resCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                },
                "sourceCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                },
                "srcIpGroups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleSrcIpGroups:FirewallIPSRuleSrcIpGroups",
                    "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                },
                "srcIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                },
                "srcIpv6Groups": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleSrcIpv6Groups:FirewallIPSRuleSrcIpv6Groups",
                    "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                },
                "state": {
                    "type": "string",
                    "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                },
                "threatCategories": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleThreatCategories:FirewallIPSRuleThreatCategories",
                    "description": "(List of Objects) Advanced threat categories to which the rule applies\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleTimeWindows:FirewallIPSRuleTimeWindows",
                    "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/FirewallIPSRuleUsers:FirewallIPSRuleUsers",
                    "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleZpaAppSegment:FirewallIPSRuleZpaAppSegment"
                    },
                    "description": "(List of Objects) The ZPA application segments to which the rule applies\n"
                }
            },
            "requiredInputs": [
                "order"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallIPSRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`\n"
                    },
                    "capturePcap": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                    },
                    "defaultRule": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not\n"
                    },
                    "departments": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleDepartments:FirewallIPSRuleDepartments",
                        "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                    },
                    "destAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "destCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "destIpCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                    },
                    "destIpGroups": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleDestIpGroups:FirewallIPSRuleDestIpGroups",
                        "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                    },
                    "destIpv6Groups": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleDestIpv6Groups:FirewallIPSRuleDestIpv6Groups",
                        "description": "list of destination ip groups\n"
                    },
                    "deviceGroups": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleDeviceGroups:FirewallIPSRuleDeviceGroups",
                        "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "devices": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleDevices:FirewallIPSRuleDevices",
                        "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "enableFullLogging": {
                        "type": "boolean",
                        "description": "(Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.\n"
                    },
                    "groups": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleGroups:FirewallIPSRuleGroups",
                        "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "labels": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleLabels:FirewallIPSRuleLabels",
                        "description": "(List of Objects) Labels that are applicable to the rule.\n"
                    },
                    "locationGroups": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleLocationGroups:FirewallIPSRuleLocationGroups",
                        "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                    },
                    "locations": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleLocations:FirewallIPSRuleLocations",
                        "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the IPS Control rule\n"
                    },
                    "nwServiceGroups": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleNwServiceGroups:FirewallIPSRuleNwServiceGroups",
                        "description": "(List of Objects) Any number of predefined or custom network service groups to which the rule applies.\n"
                    },
                    "nwServices": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleNwServices:FirewallIPSRuleNwServices",
                        "description": "(List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                    },
                    "predefined": {
                        "type": "boolean",
                        "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                    },
                    "resCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "sourceCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "srcIpGroups": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleSrcIpGroups:FirewallIPSRuleSrcIpGroups",
                        "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                    },
                    "srcIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "srcIpv6Groups": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleSrcIpv6Groups:FirewallIPSRuleSrcIpv6Groups",
                        "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                    },
                    "threatCategories": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleThreatCategories:FirewallIPSRuleThreatCategories",
                        "description": "(List of Objects) Advanced threat categories to which the rule applies\n"
                    },
                    "timeWindows": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleTimeWindows:FirewallIPSRuleTimeWindows",
                        "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                    },
                    "users": {
                        "$ref": "#/types/zia:index/FirewallIPSRuleUsers:FirewallIPSRuleUsers",
                        "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/FirewallIPSRuleZpaAppSegment:FirewallIPSRuleZpaAppSegment"
                        },
                        "description": "(List of Objects) The ZPA application segments to which the rule applies\n"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "zia.index/firewallipsrule.FirewallIPSRule has been deprecated in favor of zia.index/ipsfirewallrule.IPSFirewallRule"
        },
        "zia:index/forwardingControlRule:ForwardingControlRule": {
            "description": "\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_forwarding_control_rule** can be imported by using `\u003cRULE ID\u003e` or `\u003cRULE NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/forwardingControlRule:ForwardingControlRule example \u003crule_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/forwardingControlRule:ForwardingControlRule example \u003crule_name\u003e\n```\n\n",
            "properties": {
                "appServiceGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleAppServiceGroups:ForwardingControlRuleAppServiceGroups",
                    "description": "(list) - Application service groups on which this rule is applied\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleDepartments:ForwardingControlRuleDepartments",
                    "description": "(list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(string) - Additional information about the forwarding rule\n"
                },
                "destAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.\n"
                },
                "destCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "** - (list) destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).\n"
                },
                "destIpCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                },
                "destIpGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleDestIpGroups:ForwardingControlRuleDestIpGroups",
                    "description": "** - (list) Any number of destination IP address groups that you want to control with this rule.\n"
                },
                "destIpv6Groups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleDestIpv6Groups:ForwardingControlRuleDestIpv6Groups",
                    "description": "** - (list) Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                },
                "ecGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleEcGroups:ForwardingControlRuleEcGroups",
                    "description": "(list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies\n"
                },
                "forwardMethod": {
                    "type": "string",
                    "description": "The type of traffic forwarding method selected from the available options\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleGroups:ForwardingControlRuleGroups",
                    "description": "(list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleLabels:ForwardingControlRuleLabels",
                    "description": "(list) Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleLocationGroups:ForwardingControlRuleLocationGroups",
                    "description": "(Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleLocations:ForwardingControlRuleLocations",
                    "description": "(Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "name": {
                    "type": "string",
                    "description": "(string) The configured name of the entity\n"
                },
                "nwApplicationGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleNwApplicationGroups:ForwardingControlRuleNwApplicationGroups",
                    "description": "(list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify\n"
                },
                "nwServiceGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleNwServiceGroups:ForwardingControlRuleNwServiceGroups",
                    "description": "(list) Any number of predefined or custom network service groups to which the rule applies.\n"
                },
                "nwServices": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleNwServices:ForwardingControlRuleNwServices",
                    "description": "(list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "(int) - The order of execution for the forwarding rule order.\n"
                },
                "proxyGateway": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleProxyGateway:ForwardingControlRuleProxyGateway",
                    "description": "(set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank assigned to the forwarding rule\n"
                },
                "resCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "** - (list) List of destination domain categories to which the rule applies.\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "A unique identifier assigned to the forwarding rule\n"
                },
                "srcIpGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleSrcIpGroups:ForwardingControlRuleSrcIpGroups",
                    "description": "(list) Any number of source IP address groups that you want to control with this rule.\n"
                },
                "srcIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Optional) You can enter individual IP addresses, subnets, or address ranges.\n"
                },
                "srcIpv6Groups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleSrcIpv6Groups:ForwardingControlRuleSrcIpv6Groups",
                    "description": "(list) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                },
                "state": {
                    "type": "string",
                    "description": "(string) - Indicates whether the forwarding rule is enabled or disabled. Supported values are: `ENABLED` and `DISABLED`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The rule type selected from the available options\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleUsers:ForwardingControlRuleUsers",
                    "description": "(list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleZpaAppSegment:ForwardingControlRuleZpaAppSegment"
                    },
                    "description": "(set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.\n"
                },
                "zpaApplicationSegmentGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleZpaApplicationSegmentGroups:ForwardingControlRuleZpaApplicationSegmentGroups",
                    "description": "(set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).\n"
                },
                "zpaApplicationSegments": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleZpaApplicationSegments:ForwardingControlRuleZpaApplicationSegments",
                    "description": "(set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).\n"
                },
                "zpaGateway": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleZpaGateway:ForwardingControlRuleZpaGateway",
                    "description": "(set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.\n"
                }
            },
            "required": [
                "destCountries",
                "forwardMethod",
                "name",
                "order",
                "proxyGateway",
                "ruleId",
                "zpaAppSegments",
                "zpaGateway"
            ],
            "inputProperties": {
                "appServiceGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleAppServiceGroups:ForwardingControlRuleAppServiceGroups",
                    "description": "(list) - Application service groups on which this rule is applied\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleDepartments:ForwardingControlRuleDepartments",
                    "description": "(list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(string) - Additional information about the forwarding rule\n"
                },
                "destAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.\n"
                },
                "destCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "** - (list) destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).\n"
                },
                "destIpCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                },
                "destIpGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleDestIpGroups:ForwardingControlRuleDestIpGroups",
                    "description": "** - (list) Any number of destination IP address groups that you want to control with this rule.\n"
                },
                "destIpv6Groups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleDestIpv6Groups:ForwardingControlRuleDestIpv6Groups",
                    "description": "** - (list) Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                },
                "ecGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleEcGroups:ForwardingControlRuleEcGroups",
                    "description": "(list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies\n"
                },
                "forwardMethod": {
                    "type": "string",
                    "description": "The type of traffic forwarding method selected from the available options\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleGroups:ForwardingControlRuleGroups",
                    "description": "(list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleLabels:ForwardingControlRuleLabels",
                    "description": "(list) Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleLocationGroups:ForwardingControlRuleLocationGroups",
                    "description": "(Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleLocations:ForwardingControlRuleLocations",
                    "description": "(Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "name": {
                    "type": "string",
                    "description": "(string) The configured name of the entity\n"
                },
                "nwApplicationGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleNwApplicationGroups:ForwardingControlRuleNwApplicationGroups",
                    "description": "(list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify\n"
                },
                "nwServiceGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleNwServiceGroups:ForwardingControlRuleNwServiceGroups",
                    "description": "(list) Any number of predefined or custom network service groups to which the rule applies.\n"
                },
                "nwServices": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleNwServices:ForwardingControlRuleNwServices",
                    "description": "(list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "(int) - The order of execution for the forwarding rule order.\n"
                },
                "proxyGateway": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleProxyGateway:ForwardingControlRuleProxyGateway",
                    "description": "(set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank assigned to the forwarding rule\n"
                },
                "resCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "** - (list) List of destination domain categories to which the rule applies.\n"
                },
                "srcIpGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleSrcIpGroups:ForwardingControlRuleSrcIpGroups",
                    "description": "(list) Any number of source IP address groups that you want to control with this rule.\n"
                },
                "srcIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Optional) You can enter individual IP addresses, subnets, or address ranges.\n"
                },
                "srcIpv6Groups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleSrcIpv6Groups:ForwardingControlRuleSrcIpv6Groups",
                    "description": "(list) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                },
                "state": {
                    "type": "string",
                    "description": "(string) - Indicates whether the forwarding rule is enabled or disabled. Supported values are: `ENABLED` and `DISABLED`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The rule type selected from the available options\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleUsers:ForwardingControlRuleUsers",
                    "description": "(list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleZpaAppSegment:ForwardingControlRuleZpaAppSegment"
                    },
                    "description": "(set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.\n"
                },
                "zpaApplicationSegmentGroups": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleZpaApplicationSegmentGroups:ForwardingControlRuleZpaApplicationSegmentGroups",
                    "description": "(set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).\n"
                },
                "zpaApplicationSegments": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleZpaApplicationSegments:ForwardingControlRuleZpaApplicationSegments",
                    "description": "(set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).\n"
                },
                "zpaGateway": {
                    "$ref": "#/types/zia:index/ForwardingControlRuleZpaGateway:ForwardingControlRuleZpaGateway",
                    "description": "(set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.\n"
                }
            },
            "requiredInputs": [
                "forwardMethod",
                "order"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ForwardingControlRule resources.\n",
                "properties": {
                    "appServiceGroups": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleAppServiceGroups:ForwardingControlRuleAppServiceGroups",
                        "description": "(list) - Application service groups on which this rule is applied\n"
                    },
                    "departments": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleDepartments:ForwardingControlRuleDepartments",
                        "description": "(list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(string) - Additional information about the forwarding rule\n"
                    },
                    "destAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.\n"
                    },
                    "destCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "** - (list) destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).\n"
                    },
                    "destIpCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                    },
                    "destIpGroups": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleDestIpGroups:ForwardingControlRuleDestIpGroups",
                        "description": "** - (list) Any number of destination IP address groups that you want to control with this rule.\n"
                    },
                    "destIpv6Groups": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleDestIpv6Groups:ForwardingControlRuleDestIpv6Groups",
                        "description": "** - (list) Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                    },
                    "ecGroups": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleEcGroups:ForwardingControlRuleEcGroups",
                        "description": "(list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies\n"
                    },
                    "forwardMethod": {
                        "type": "string",
                        "description": "The type of traffic forwarding method selected from the available options\n"
                    },
                    "groups": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleGroups:ForwardingControlRuleGroups",
                        "description": "(list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "labels": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleLabels:ForwardingControlRuleLabels",
                        "description": "(list) Labels that are applicable to the rule.\n"
                    },
                    "locationGroups": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleLocationGroups:ForwardingControlRuleLocationGroups",
                        "description": "(Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                    },
                    "locations": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleLocations:ForwardingControlRuleLocations",
                        "description": "(Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(string) The configured name of the entity\n"
                    },
                    "nwApplicationGroups": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleNwApplicationGroups:ForwardingControlRuleNwApplicationGroups",
                        "description": "(list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify\n"
                    },
                    "nwServiceGroups": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleNwServiceGroups:ForwardingControlRuleNwServiceGroups",
                        "description": "(list) Any number of predefined or custom network service groups to which the rule applies.\n"
                    },
                    "nwServices": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleNwServices:ForwardingControlRuleNwServices",
                        "description": "(list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(int) - The order of execution for the forwarding rule order.\n"
                    },
                    "proxyGateway": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleProxyGateway:ForwardingControlRuleProxyGateway",
                        "description": "(set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "Admin rank assigned to the forwarding rule\n"
                    },
                    "resCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "** - (list) List of destination domain categories to which the rule applies.\n"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": "A unique identifier assigned to the forwarding rule\n"
                    },
                    "srcIpGroups": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleSrcIpGroups:ForwardingControlRuleSrcIpGroups",
                        "description": "(list) Any number of source IP address groups that you want to control with this rule.\n"
                    },
                    "srcIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Optional) You can enter individual IP addresses, subnets, or address ranges.\n"
                    },
                    "srcIpv6Groups": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleSrcIpv6Groups:ForwardingControlRuleSrcIpv6Groups",
                        "description": "(list) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "(string) - Indicates whether the forwarding rule is enabled or disabled. Supported values are: `ENABLED` and `DISABLED`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The rule type selected from the available options\n"
                    },
                    "users": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleUsers:ForwardingControlRuleUsers",
                        "description": "(list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/ForwardingControlRuleZpaAppSegment:ForwardingControlRuleZpaAppSegment"
                        },
                        "description": "(set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.\n"
                    },
                    "zpaApplicationSegmentGroups": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleZpaApplicationSegmentGroups:ForwardingControlRuleZpaApplicationSegmentGroups",
                        "description": "(set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).\n"
                    },
                    "zpaApplicationSegments": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleZpaApplicationSegments:ForwardingControlRuleZpaApplicationSegments",
                        "description": "(set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).\n"
                    },
                    "zpaGateway": {
                        "$ref": "#/types/zia:index/ForwardingControlRuleZpaGateway:ForwardingControlRuleZpaGateway",
                        "description": "(set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/forwardingControlZPAGateway:ForwardingControlZPAGateway": {
            "description": "## Example Usage\n\n```hcl\n# ZIA Forwarding Control - ZPA Gateway\ndata \"zpa_server_group\" \"this\" {\n  name = \"Server_Group_IP_Source_Anchoring\"\n}\n\ndata \"zpa_application_segment\" \"this1\" {\n  name = \"App_Segment_IP_Source_Anchoring\"\n}\n\ndata \"zpa_application_segment\" \"this2\" {\n  name = \"App_Segment_IP_Source_Anchoring2\"\n}\n\nresource \"zia_forwarding_control_zpa_gateway\" \"this\" {\n    name = \"ZPA_GW01\"\n    description = \"ZPA_GW01\"\n    type = \"ZPA\"\n    zpa_server_group {\n      external_id = data.zpa_server_group.this.id\n      name = data.zpa_server_group.this.id\n    }\n    zpa_app_segments {\n        external_id = data.zpa_application_segment.this1.id\n        name = data.zpa_application_segment.this1.name\n    }\n    zpa_app_segments {\n        external_id = data.zpa_application_segment.this2.id\n        name = data.zpa_application_segment.this2.name\n    }\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**forwarding_control_zpa_gateway** can be imported by using `\u003cGATEWAY_ID\u003e` or `\u003cGATEWAY_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/forwardingControlZPAGateway:ForwardingControlZPAGateway example \u003cgateway_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/forwardingControlZPAGateway:ForwardingControlZPAGateway example \u003cgateway_name\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "(string) - Additional details about the ZPA gateway\n"
                },
                "gatewayId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding control ZPA Gateway to be exported.\n"
                },
                "type": {
                    "type": "string",
                    "description": "(string) - Indicates whether the ZPA gateway is configured for Zscaler Internet Access (using option ZPA) or Zscaler Cloud Connector (using option ECZPA). Supported values: ``ZPA`` and ``ECZPA``\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/ForwardingControlZPAGatewayZpaAppSegment:ForwardingControlZPAGatewayZpaAppSegment"
                    },
                    "description": "The ZPA Server Group that is configured for Source IP Anchoring\n"
                },
                "zpaServerGroup": {
                    "$ref": "#/types/zia:index/ForwardingControlZPAGatewayZpaServerGroup:ForwardingControlZPAGatewayZpaServerGroup",
                    "description": "The ZPA Server Group that is configured for Source IP Anchoring\n"
                }
            },
            "required": [
                "gatewayId",
                "name",
                "zpaAppSegments",
                "zpaServerGroup"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "(string) - Additional details about the ZPA gateway\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the forwarding control ZPA Gateway to be exported.\n"
                },
                "type": {
                    "type": "string",
                    "description": "(string) - Indicates whether the ZPA gateway is configured for Zscaler Internet Access (using option ZPA) or Zscaler Cloud Connector (using option ECZPA). Supported values: ``ZPA`` and ``ECZPA``\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/ForwardingControlZPAGatewayZpaAppSegment:ForwardingControlZPAGatewayZpaAppSegment"
                    },
                    "description": "The ZPA Server Group that is configured for Source IP Anchoring\n"
                },
                "zpaServerGroup": {
                    "$ref": "#/types/zia:index/ForwardingControlZPAGatewayZpaServerGroup:ForwardingControlZPAGatewayZpaServerGroup",
                    "description": "The ZPA Server Group that is configured for Source IP Anchoring\n"
                }
            },
            "requiredInputs": [
                "zpaAppSegments",
                "zpaServerGroup"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ForwardingControlZPAGateway resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "(string) - Additional details about the ZPA gateway\n"
                    },
                    "gatewayId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the forwarding control ZPA Gateway to be exported.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "(string) - Indicates whether the ZPA gateway is configured for Zscaler Internet Access (using option ZPA) or Zscaler Cloud Connector (using option ECZPA). Supported values: ``ZPA`` and ``ECZPA``\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/ForwardingControlZPAGatewayZpaAppSegment:ForwardingControlZPAGatewayZpaAppSegment"
                        },
                        "description": "The ZPA Server Group that is configured for Source IP Anchoring\n"
                    },
                    "zpaServerGroup": {
                        "$ref": "#/types/zia:index/ForwardingControlZPAGatewayZpaServerGroup:ForwardingControlZPAGatewayZpaServerGroup",
                        "description": "The ZPA Server Group that is configured for Source IP Anchoring\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/iPSFirewallRule:IPSFirewallRule": {
            "description": "The **zia_firewall_ips_rule** resource allows the creation and management of ZIA Cloud Firewall IPS rules in the Zscaler Internet Access.\n\n## Example Usage\n\n```hcl\ndata \"zia_firewall_filtering_network_service\" \"zscaler_proxy_nw_services\" {\n    name = \"ZSCALER_PROXY_NW_SERVICES\"\n}\n\ndata \"zia_department_management\" \"engineering\" {\n name = \"Engineering\"\n}\n\ndata \"zia_group_management\" \"normal_internet\" {\n    name = \"Normal_Internet\"\n}\n\ndata \"zia_firewall_filtering_time_window\" \"work_hours\" {\n    name = \"Work hours\"\n}\n\nresource \"zia_firewall_ips_rule\" \"example\" {\n    name = \"Example_IPS_Rule01\"\n    description = \"Example_IPS_Rule01\"\n    action = \"ALLOW\"\n    state = \"ENABLED\"\n    order = 1\n    enable_full_logging = true\n    dest_countries = [\"CA\", \"US\"]\n    source_countries = [\"CA\", \"US\"]\n    threat_categories {\n        id = [ 66 ]\n    }\n    nw_services {\n        id = [ data.zia_firewall_filtering_network_service.zscaler_proxy_nw_services.id ]\n    }\n    departments {\n        id = [ data.zia_department_management.engineering.id ]\n    }\n    groups {\n        id = [ data.zia_group_management.normal_internet.id ]\n    }\n    time_windows {\n        id = [ data.zia_firewall_filtering_time_window.work_hours.id ]\n    }\n}\n```\n",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`\n"
                },
                "capturePcap": {
                    "type": "boolean",
                    "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "(Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleDepartments:IPSFirewallRuleDepartments",
                    "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                },
                "destAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                },
                "destCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                },
                "destIpCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                },
                "destIpGroups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleDestIpGroups:IPSFirewallRuleDestIpGroups",
                    "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                },
                "destIpv6Groups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleDestIpv6Groups:IPSFirewallRuleDestIpv6Groups",
                    "description": "list of destination ip groups\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleDeviceGroups:IPSFirewallRuleDeviceGroups",
                    "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleDevices:IPSFirewallRuleDevices",
                    "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "enableFullLogging": {
                    "type": "boolean",
                    "description": "(Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleGroups:IPSFirewallRuleGroups",
                    "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleLabels:IPSFirewallRuleLabels",
                    "description": "(List of Objects) Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleLocationGroups:IPSFirewallRuleLocationGroups",
                    "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleLocations:IPSFirewallRuleLocations",
                    "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the IPS Control rule\n"
                },
                "nwServiceGroups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleNwServiceGroups:IPSFirewallRuleNwServiceGroups",
                    "description": "(List of Objects) Any number of predefined or custom network service groups to which the rule applies.\n"
                },
                "nwServices": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleNwServices:IPSFirewallRuleNwServices",
                    "description": "(List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                },
                "predefined": {
                    "type": "boolean",
                    "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                },
                "resCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                },
                "ruleId": {
                    "type": "integer"
                },
                "sourceCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                },
                "srcIpGroups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleSrcIpGroups:IPSFirewallRuleSrcIpGroups",
                    "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                },
                "srcIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                },
                "srcIpv6Groups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleSrcIpv6Groups:IPSFirewallRuleSrcIpv6Groups",
                    "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                },
                "state": {
                    "type": "string",
                    "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                },
                "threatCategories": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleThreatCategories:IPSFirewallRuleThreatCategories",
                    "description": "(List of Objects) Advanced threat categories to which the rule applies\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleTimeWindows:IPSFirewallRuleTimeWindows",
                    "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleUsers:IPSFirewallRuleUsers",
                    "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleZpaAppSegment:IPSFirewallRuleZpaAppSegment"
                    },
                    "description": "(List of Objects) The ZPA application segments to which the rule applies\n"
                }
            },
            "required": [
                "capturePcap",
                "destCountries",
                "name",
                "order",
                "ruleId",
                "sourceCountries",
                "zpaAppSegments"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`\n"
                },
                "capturePcap": {
                    "type": "boolean",
                    "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                },
                "defaultRule": {
                    "type": "boolean",
                    "description": "(Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleDepartments:IPSFirewallRuleDepartments",
                    "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                },
                "destAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                },
                "destCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                },
                "destIpCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                },
                "destIpGroups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleDestIpGroups:IPSFirewallRuleDestIpGroups",
                    "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                },
                "destIpv6Groups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleDestIpv6Groups:IPSFirewallRuleDestIpv6Groups",
                    "description": "list of destination ip groups\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleDeviceGroups:IPSFirewallRuleDeviceGroups",
                    "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleDevices:IPSFirewallRuleDevices",
                    "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "enableFullLogging": {
                    "type": "boolean",
                    "description": "(Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleGroups:IPSFirewallRuleGroups",
                    "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleLabels:IPSFirewallRuleLabels",
                    "description": "(List of Objects) Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleLocationGroups:IPSFirewallRuleLocationGroups",
                    "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleLocations:IPSFirewallRuleLocations",
                    "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the IPS Control rule\n"
                },
                "nwServiceGroups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleNwServiceGroups:IPSFirewallRuleNwServiceGroups",
                    "description": "(List of Objects) Any number of predefined or custom network service groups to which the rule applies.\n"
                },
                "nwServices": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleNwServices:IPSFirewallRuleNwServices",
                    "description": "(List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                },
                "predefined": {
                    "type": "boolean",
                    "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                },
                "resCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                },
                "sourceCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                },
                "srcIpGroups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleSrcIpGroups:IPSFirewallRuleSrcIpGroups",
                    "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                },
                "srcIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                },
                "srcIpv6Groups": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleSrcIpv6Groups:IPSFirewallRuleSrcIpv6Groups",
                    "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                },
                "state": {
                    "type": "string",
                    "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                },
                "threatCategories": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleThreatCategories:IPSFirewallRuleThreatCategories",
                    "description": "(List of Objects) Advanced threat categories to which the rule applies\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleTimeWindows:IPSFirewallRuleTimeWindows",
                    "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/IPSFirewallRuleUsers:IPSFirewallRuleUsers",
                    "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleZpaAppSegment:IPSFirewallRuleZpaAppSegment"
                    },
                    "description": "(List of Objects) The ZPA application segments to which the rule applies\n"
                }
            },
            "requiredInputs": [
                "order"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPSFirewallRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`\n"
                    },
                    "capturePcap": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                    },
                    "defaultRule": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not\n"
                    },
                    "departments": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleDepartments:IPSFirewallRuleDepartments",
                        "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                    },
                    "destAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "destCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "destIpCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                    },
                    "destIpGroups": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleDestIpGroups:IPSFirewallRuleDestIpGroups",
                        "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                    },
                    "destIpv6Groups": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleDestIpv6Groups:IPSFirewallRuleDestIpv6Groups",
                        "description": "list of destination ip groups\n"
                    },
                    "deviceGroups": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleDeviceGroups:IPSFirewallRuleDeviceGroups",
                        "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "devices": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleDevices:IPSFirewallRuleDevices",
                        "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "enableFullLogging": {
                        "type": "boolean",
                        "description": "(Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.\n"
                    },
                    "groups": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleGroups:IPSFirewallRuleGroups",
                        "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "labels": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleLabels:IPSFirewallRuleLabels",
                        "description": "(List of Objects) Labels that are applicable to the rule.\n"
                    },
                    "locationGroups": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleLocationGroups:IPSFirewallRuleLocationGroups",
                        "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                    },
                    "locations": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleLocations:IPSFirewallRuleLocations",
                        "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the IPS Control rule\n"
                    },
                    "nwServiceGroups": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleNwServiceGroups:IPSFirewallRuleNwServiceGroups",
                        "description": "(List of Objects) Any number of predefined or custom network service groups to which the rule applies.\n"
                    },
                    "nwServices": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleNwServices:IPSFirewallRuleNwServices",
                        "description": "(List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                    },
                    "predefined": {
                        "type": "boolean",
                        "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                    },
                    "resCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "sourceCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "srcIpGroups": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleSrcIpGroups:IPSFirewallRuleSrcIpGroups",
                        "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                    },
                    "srcIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "srcIpv6Groups": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleSrcIpv6Groups:IPSFirewallRuleSrcIpv6Groups",
                        "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                    },
                    "threatCategories": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleThreatCategories:IPSFirewallRuleThreatCategories",
                        "description": "(List of Objects) Advanced threat categories to which the rule applies\n"
                    },
                    "timeWindows": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleTimeWindows:IPSFirewallRuleTimeWindows",
                        "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                    },
                    "users": {
                        "$ref": "#/types/zia:index/IPSFirewallRuleUsers:IPSFirewallRuleUsers",
                        "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/IPSFirewallRuleZpaAppSegment:IPSFirewallRuleZpaAppSegment"
                        },
                        "description": "(List of Objects) The ZPA application segments to which the rule applies\n"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "zia:index/firewallIPSRule:FirewallIPSRule"
                }
            ]
        },
        "zia:index/locationManagement:LocationManagement": {
            "description": "The **zia_location_management** resource allows the creation and management of ZIA locations in the Zscaler Internet Access. This resource can then be associated with a:\n\n* Static IP resource\n* GRE Tunnel resource\n* VPN credentials resource\n* URL filtering and firewall filtering rules\n\n## Example Usage\n\n### Location Management With UFQDN VPN Credential\n\n```hcl\nresource \"zia_location_management\" \"usa_sjc37\"{\n    name                        = \"USA_SJC_37\"\n    description                 = \"Created with Terraform\"\n    country                     = \"UNITED_STATES\"\n    tz                          = \"UNITED_STATES_AMERICA_LOS_ANGELES\"\n    auth_required               = true\n    idle_time_in_minutes        = 720\n    display_time_unit           = \"HOUR\"\n    surrogate_ip                = true\n    xff_forward_enabled         = true\n    ofw_enabled                 = true\n    ips_control                 = true\n    vpn_credentials {\n       id = zia_traffic_forwarding_vpn_credentials.usa_sjc37.id\n       type = zia_traffic_forwarding_vpn_credentials.usa_sjc37.type\n    }\n    depends_on = [zia_traffic_forwarding_vpn_credentials.usa_sjc37 ]\n}\n\nresource \"zia_traffic_forwarding_vpn_credentials\" \"usa_sjc37\"{\n    type            = \"UFQDN\"\n    fqdn            = \"usa_sjc37@acme.com\"\n    comments        = \"USA - San Jose IPSec Tunnel\"\n    pre_shared_key  = \"***************\"\n}\n```\n\n### Location Management With IP VPN Credential\n\n```hcl\n# ZIA Location Management with IP VPN Credential\nresource \"zia_location_management\" \"usa_sjc37\"{\n    name = \"USA_SJC_37\"\n    description = \"Created with Terraform\"\n    country = \"UNITED_STATES\"\n    tz = \"UNITED_STATES_AMERICA_LOS_ANGELES\"\n    auth_required = true\n    idle_time_in_minutes = 720\n    display_time_unit = \"HOUR\"\n    surrogate_ip = true\n    xff_forward_enabled = true\n    ofw_enabled = true\n    ips_control = true\n    ip_addresses = [ zia_traffic_forwarding_static_ip.usa_sjc37.ip_address ]\n    depends_on = [ zia_traffic_forwarding_static_ip.usa_sjc37, zia_traffic_forwarding_vpn_credentials.usa_sjc37 ]\n    vpn_credentials {\n       id = zia_traffic_forwarding_vpn_credentials.usa_sjc37.id\n       type = zia_traffic_forwarding_vpn_credentials.usa_sjc37.type\n       ip_address = zia_traffic_forwarding_static_ip.usa_sjc37.ip_address\n    }\n}\n\nresource \"zia_traffic_forwarding_vpn_credentials\" \"usa_sjc37\"{\n    type        = \"IP\"\n    ip_address  =  zia_traffic_forwarding_static_ip.usa_sjc37.ip_address\n    depends_on = [ zia_traffic_forwarding_static_ip.usa_sjc37 ]\n    comments    = \"Created via Terraform\"\n    pre_shared_key = \"******************\"\n}\n\nresource \"zia_traffic_forwarding_static_ip\" \"usa_sjc37\"{\n    ip_address =  \"1.1.1.1\"\n    routable_ip = true\n    comment = \"SJC37 - Static IP\"\n    geo_override = false\n}\n```\n\n### Location Management With Manual And Dynamic Location Groups\n\n```hcl\n# Retrieve ZIA Manual Location Groups\ndata \"zia_location_groups\" \"this\"{\n    name = \"SDWAN_CAN\"\n}\n\n# ZIA Location Management with UFQDN VPN Credential\nresource \"zia_location_management\" \"usa_sjc37\"{\n    name                        = \"USA_SJC_37\"\n    description                 = \"Created with Terraform\"\n    country                     = \"UNITED_STATES\"\n    tz                          = \"UNITED_STATES_AMERICA_LOS_ANGELES\"\n    state                       = \"California\"\n    auth_required               = true\n    idle_time_in_minutes        = 720\n    display_time_unit           = \"HOUR\"\n    surrogate_ip                = true\n    xff_forward_enabled         = true\n    ofw_enabled                 = true\n    ips_control                 = true\n    profile                     = \"CORPORATE\"\n    vpn_credentials {\n       id = zia_traffic_forwarding_vpn_credentials.usa_sjc37.id\n       type = zia_traffic_forwarding_vpn_credentials.usa_sjc37.type\n    }\n    static_location_groups {\n      id = [data.zia_location_groups.this.id]\n    }\n    depends_on = [zia_traffic_forwarding_vpn_credentials.usa_sjc37 ]\n}\n\nresource \"zia_traffic_forwarding_vpn_credentials\" \"usa_sjc37\"{\n    type            = \"UFQDN\"\n    fqdn            = \"usa_sjc37@acme.com\"\n    comments        = \"USA - San Jose IPSec Tunnel\"\n    pre_shared_key  = \"***************\"\n}\n```\n\n### Location Management With Excluded Manual And Dynamic Location Groups\n\n```hcl\n# Retrieve ZIA Manual Location Groups\ndata \"zia_location_groups\" \"this\"{\n    name = \"SDWAN_CAN\"\n}\n\n# ZIA Location Management with UFQDN VPN Credential\nresource \"zia_location_management\" \"usa_sjc37\"{\n    name                        = \"USA_SJC_37\"\n    description                 = \"Created with Terraform\"\n    country                     = \"UNITED_STATES\"\n    tz                          = \"UNITED_STATES_AMERICA_LOS_ANGELES\"\n    state                       = \"California\"\n    auth_required               = true\n    idle_time_in_minutes        = 720\n    display_time_unit           = \"HOUR\"\n    surrogate_ip                = true\n    xff_forward_enabled         = true\n    ofw_enabled                 = true\n    ips_control                 = true\n    exclude_from_dynamic_groups = true\n    exclude_from_manual_groups  = true\n    profile                     = \"CORPORATE\"\n    vpn_credentials {\n       id = zia_traffic_forwarding_vpn_credentials.usa_sjc37.id\n       type = zia_traffic_forwarding_vpn_credentials.usa_sjc37.type\n    }\n    depends_on = [zia_traffic_forwarding_vpn_credentials.usa_sjc37 ]\n}\n\nresource \"zia_traffic_forwarding_vpn_credentials\" \"usa_sjc37\"{\n    type            = \"UFQDN\"\n    fqdn            = \"usa_sjc37@acme.com\"\n    comments        = \"USA - San Jose IPSec Tunnel\"\n    pre_shared_key  = \"***************\"\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_location_management** can be imported by using `\u003cLOCATION_ID\u003e` or `\u003cLOCATION_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/locationManagement:LocationManagement example \u003clocation_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/locationManagement:LocationManagement example \u003clocation_name\u003e\n```\n\n",
            "properties": {
                "aupBlockInternetUntilAccepted": {
                    "type": "boolean",
                    "description": "For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is\ndisabled until the user accepts the AUP.\n"
                },
                "aupEnabled": {
                    "type": "boolean",
                    "description": "Enable AUP. When set to true, AUP is enabled for the location.\n"
                },
                "aupForceSslInspection": {
                    "type": "boolean",
                    "description": "For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP\nfor HTTPS traffic.\n"
                },
                "aupTimeoutInDays": {
                    "type": "integer",
                    "description": "Custom AUP Frequency. Refresh time (in days) to re-validate the AUP.\n"
                },
                "authRequired": {
                    "type": "boolean",
                    "description": "Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.\n"
                },
                "basicAuthEnabled": {
                    "type": "boolean",
                    "description": "Enable Basic Authentication at the location\n"
                },
                "cautionEnabled": {
                    "type": "boolean",
                    "description": "Enable Caution. When set to true, a caution notifcation is enabled for the location.\n"
                },
                "cookiesAndProxy": {
                    "type": "boolean"
                },
                "country": {
                    "type": "string",
                    "description": "Supported Countries\n"
                },
                "description": {
                    "type": "string",
                    "description": "Additional notes or information regarding the location or sub-location. The description cannot exceed 1024 characters.\n"
                },
                "digestAuthEnabled": {
                    "type": "boolean",
                    "description": "Enable Digest Authentication at the location\n"
                },
                "displayTimeUnit": {
                    "type": "string",
                    "description": "Display Time Unit. The time unit to display for IP Surrogate idle time to disassociation.\n"
                },
                "dnBandwidth": {
                    "type": "integer",
                    "description": "Download bandwidth in bytes. The value 0 implies no Bandwidth Control enforcement.\n"
                },
                "dynamicLocationGroups": {
                    "$ref": "#/types/zia:index/LocationManagementDynamicLocationGroups:LocationManagementDynamicLocationGroups",
                    "description": "Name-ID pairs of locations for which rule must be applied\n"
                },
                "excludeFromDynamicGroups": {
                    "type": "boolean"
                },
                "excludeFromManualGroups": {
                    "type": "boolean"
                },
                "idleTimeInMinutes": {
                    "type": "integer",
                    "description": "Idle Time to Disassociation. The user mapping idle time (in minutes) is required if a Surrogate IP is enabled.\n"
                },
                "iotDiscoveryEnabled": {
                    "type": "boolean",
                    "description": "Enable IOT Discovery at the location\n"
                },
                "iotEnforcePolicySet": {
                    "type": "boolean"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "For locations: IP addresses of the egress points that are provisioned in the Zscaler Cloud. Each entry is a single IP\naddress (e.g., 238.10.33.9).\n"
                },
                "ipsControl": {
                    "type": "boolean",
                    "description": "Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.\n"
                },
                "ipv6Dns64prefix": {
                    "type": "boolean",
                    "description": "(Optional) Name-ID pair of the NAT64 prefix configured as the DNS64 prefix for the location. If specified, the DNS64\nprefix is used for the IP addresses that reside in this location. If not specified, a prefix is selected from the set of\nsupported prefixes.\n"
                },
                "ipv6Enabled": {
                    "type": "boolean",
                    "description": "If set to true, IPv6 is enabled for the location and IPv6 traffic from the location can be forwarded to the Zscaler\nservice to enforce security policies.\n"
                },
                "kerberosAuthEnabled": {
                    "type": "boolean",
                    "description": "Enable Kerberos Authentication at the location\n"
                },
                "locationId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "Location Name.\n"
                },
                "ofwEnabled": {
                    "type": "boolean",
                    "description": "Enable Firewall. When set to true, Firewall is enabled for the location.\n"
                },
                "other6Sublocation": {
                    "type": "boolean",
                    "description": "If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv6\naddresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other6\nand it can be renamed, if required. This field is applicable only if ipv6Enabled is set is true.\n"
                },
                "otherSublocation": {
                    "type": "boolean",
                    "description": "If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv4\naddresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other\nand it can be renamed, if required.\n"
                },
                "parentId": {
                    "type": "integer",
                    "description": "Parent Location ID. If this ID does not exist or is 0, it is implied that it is a parent location. Otherwise, it is a\nsub-location whose parent has this ID. x-applicableTo: SUB\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IP ports that are associated with the location.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Profile tag that specifies the location traffic type. If not specified, this tag defaults to `Unassigned`.\n"
                },
                "sslScanEnabled": {
                    "type": "boolean",
                    "description": "Enable SSL Inspection. Set to true in order to apply your SSL Inspection policy to HTTPS traffic in the location and\ninspect HTTPS transactions for data leakage, malicious content, and viruses.\n"
                },
                "state": {
                    "type": "string",
                    "description": "IP ports that are associated with the location.\n"
                },
                "staticLocationGroups": {
                    "$ref": "#/types/zia:index/LocationManagementStaticLocationGroups:LocationManagementStaticLocationGroups",
                    "description": "Name-ID pairs of locations for which rule must be applied\n"
                },
                "surrogateIp": {
                    "type": "boolean",
                    "description": "Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.\n"
                },
                "surrogateIpEnforcedForKnownBrowsers": {
                    "type": "boolean",
                    "description": "Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.\n"
                },
                "surrogateRefreshTimeInMinutes": {
                    "type": "integer",
                    "description": "Refresh Time for re-validation of Surrogacy. The surrogate refresh time (in minutes) to re-validate the IP surrogates.\n"
                },
                "surrogateRefreshTimeUnit": {
                    "type": "string",
                    "description": "Display Refresh Time Unit. The time unit to display for refresh time for re-validation of surrogacy.\n"
                },
                "tz": {
                    "type": "string",
                    "description": "Timezone of the location. If not specified, it defaults to GMT.\n"
                },
                "upBandwidth": {
                    "type": "integer",
                    "description": "Upload bandwidth in bytes. The value 0 implies no Bandwidth Control enforcement.\n"
                },
                "vpnCredentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/LocationManagementVpnCredential:LocationManagementVpnCredential"
                    }
                },
                "xffForwardEnabled": {
                    "type": "boolean",
                    "description": "Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.\n"
                },
                "zappSslScanEnabled": {
                    "type": "boolean",
                    "description": "Enable Zscaler App SSL Setting. When set to true, the Zscaler App SSL Scan Setting will take effect, irrespective of the\nSSL policy that is configured for the location.\n"
                }
            },
            "required": [
                "aupBlockInternetUntilAccepted",
                "aupEnabled",
                "aupForceSslInspection",
                "authRequired",
                "basicAuthEnabled",
                "cautionEnabled",
                "cookiesAndProxy",
                "country",
                "digestAuthEnabled",
                "dynamicLocationGroups",
                "iotDiscoveryEnabled",
                "iotEnforcePolicySet",
                "ipsControl",
                "kerberosAuthEnabled",
                "locationId",
                "name",
                "ofwEnabled",
                "other6Sublocation",
                "otherSublocation",
                "profile",
                "sslScanEnabled",
                "staticLocationGroups",
                "surrogateIp",
                "surrogateIpEnforcedForKnownBrowsers",
                "tz",
                "xffForwardEnabled",
                "zappSslScanEnabled"
            ],
            "inputProperties": {
                "aupBlockInternetUntilAccepted": {
                    "type": "boolean",
                    "description": "For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is\ndisabled until the user accepts the AUP.\n"
                },
                "aupEnabled": {
                    "type": "boolean",
                    "description": "Enable AUP. When set to true, AUP is enabled for the location.\n"
                },
                "aupForceSslInspection": {
                    "type": "boolean",
                    "description": "For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP\nfor HTTPS traffic.\n"
                },
                "aupTimeoutInDays": {
                    "type": "integer",
                    "description": "Custom AUP Frequency. Refresh time (in days) to re-validate the AUP.\n"
                },
                "authRequired": {
                    "type": "boolean",
                    "description": "Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.\n"
                },
                "basicAuthEnabled": {
                    "type": "boolean",
                    "description": "Enable Basic Authentication at the location\n"
                },
                "cautionEnabled": {
                    "type": "boolean",
                    "description": "Enable Caution. When set to true, a caution notifcation is enabled for the location.\n"
                },
                "cookiesAndProxy": {
                    "type": "boolean"
                },
                "country": {
                    "type": "string",
                    "description": "Supported Countries\n"
                },
                "description": {
                    "type": "string",
                    "description": "Additional notes or information regarding the location or sub-location. The description cannot exceed 1024 characters.\n"
                },
                "digestAuthEnabled": {
                    "type": "boolean",
                    "description": "Enable Digest Authentication at the location\n"
                },
                "displayTimeUnit": {
                    "type": "string",
                    "description": "Display Time Unit. The time unit to display for IP Surrogate idle time to disassociation.\n"
                },
                "dnBandwidth": {
                    "type": "integer",
                    "description": "Download bandwidth in bytes. The value 0 implies no Bandwidth Control enforcement.\n"
                },
                "dynamicLocationGroups": {
                    "$ref": "#/types/zia:index/LocationManagementDynamicLocationGroups:LocationManagementDynamicLocationGroups",
                    "description": "Name-ID pairs of locations for which rule must be applied\n"
                },
                "excludeFromDynamicGroups": {
                    "type": "boolean"
                },
                "excludeFromManualGroups": {
                    "type": "boolean"
                },
                "idleTimeInMinutes": {
                    "type": "integer",
                    "description": "Idle Time to Disassociation. The user mapping idle time (in minutes) is required if a Surrogate IP is enabled.\n"
                },
                "iotDiscoveryEnabled": {
                    "type": "boolean",
                    "description": "Enable IOT Discovery at the location\n"
                },
                "iotEnforcePolicySet": {
                    "type": "boolean"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "For locations: IP addresses of the egress points that are provisioned in the Zscaler Cloud. Each entry is a single IP\naddress (e.g., 238.10.33.9).\n"
                },
                "ipsControl": {
                    "type": "boolean",
                    "description": "Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.\n"
                },
                "ipv6Dns64prefix": {
                    "type": "boolean",
                    "description": "(Optional) Name-ID pair of the NAT64 prefix configured as the DNS64 prefix for the location. If specified, the DNS64\nprefix is used for the IP addresses that reside in this location. If not specified, a prefix is selected from the set of\nsupported prefixes.\n"
                },
                "ipv6Enabled": {
                    "type": "boolean",
                    "description": "If set to true, IPv6 is enabled for the location and IPv6 traffic from the location can be forwarded to the Zscaler\nservice to enforce security policies.\n"
                },
                "kerberosAuthEnabled": {
                    "type": "boolean",
                    "description": "Enable Kerberos Authentication at the location\n"
                },
                "name": {
                    "type": "string",
                    "description": "Location Name.\n"
                },
                "ofwEnabled": {
                    "type": "boolean",
                    "description": "Enable Firewall. When set to true, Firewall is enabled for the location.\n"
                },
                "other6Sublocation": {
                    "type": "boolean",
                    "description": "If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv6\naddresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other6\nand it can be renamed, if required. This field is applicable only if ipv6Enabled is set is true.\n"
                },
                "otherSublocation": {
                    "type": "boolean",
                    "description": "If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv4\naddresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other\nand it can be renamed, if required.\n"
                },
                "parentId": {
                    "type": "integer",
                    "description": "Parent Location ID. If this ID does not exist or is 0, it is implied that it is a parent location. Otherwise, it is a\nsub-location whose parent has this ID. x-applicableTo: SUB\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IP ports that are associated with the location.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Profile tag that specifies the location traffic type. If not specified, this tag defaults to `Unassigned`.\n"
                },
                "sslScanEnabled": {
                    "type": "boolean",
                    "description": "Enable SSL Inspection. Set to true in order to apply your SSL Inspection policy to HTTPS traffic in the location and\ninspect HTTPS transactions for data leakage, malicious content, and viruses.\n"
                },
                "state": {
                    "type": "string",
                    "description": "IP ports that are associated with the location.\n"
                },
                "staticLocationGroups": {
                    "$ref": "#/types/zia:index/LocationManagementStaticLocationGroups:LocationManagementStaticLocationGroups",
                    "description": "Name-ID pairs of locations for which rule must be applied\n"
                },
                "surrogateIp": {
                    "type": "boolean",
                    "description": "Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.\n"
                },
                "surrogateIpEnforcedForKnownBrowsers": {
                    "type": "boolean",
                    "description": "Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.\n"
                },
                "surrogateRefreshTimeInMinutes": {
                    "type": "integer",
                    "description": "Refresh Time for re-validation of Surrogacy. The surrogate refresh time (in minutes) to re-validate the IP surrogates.\n"
                },
                "surrogateRefreshTimeUnit": {
                    "type": "string",
                    "description": "Display Refresh Time Unit. The time unit to display for refresh time for re-validation of surrogacy.\n"
                },
                "tz": {
                    "type": "string",
                    "description": "Timezone of the location. If not specified, it defaults to GMT.\n"
                },
                "upBandwidth": {
                    "type": "integer",
                    "description": "Upload bandwidth in bytes. The value 0 implies no Bandwidth Control enforcement.\n"
                },
                "vpnCredentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/LocationManagementVpnCredential:LocationManagementVpnCredential"
                    }
                },
                "xffForwardEnabled": {
                    "type": "boolean",
                    "description": "Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.\n"
                },
                "zappSslScanEnabled": {
                    "type": "boolean",
                    "description": "Enable Zscaler App SSL Setting. When set to true, the Zscaler App SSL Scan Setting will take effect, irrespective of the\nSSL policy that is configured for the location.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocationManagement resources.\n",
                "properties": {
                    "aupBlockInternetUntilAccepted": {
                        "type": "boolean",
                        "description": "For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is\ndisabled until the user accepts the AUP.\n"
                    },
                    "aupEnabled": {
                        "type": "boolean",
                        "description": "Enable AUP. When set to true, AUP is enabled for the location.\n"
                    },
                    "aupForceSslInspection": {
                        "type": "boolean",
                        "description": "For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP\nfor HTTPS traffic.\n"
                    },
                    "aupTimeoutInDays": {
                        "type": "integer",
                        "description": "Custom AUP Frequency. Refresh time (in days) to re-validate the AUP.\n"
                    },
                    "authRequired": {
                        "type": "boolean",
                        "description": "Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.\n"
                    },
                    "basicAuthEnabled": {
                        "type": "boolean",
                        "description": "Enable Basic Authentication at the location\n"
                    },
                    "cautionEnabled": {
                        "type": "boolean",
                        "description": "Enable Caution. When set to true, a caution notifcation is enabled for the location.\n"
                    },
                    "cookiesAndProxy": {
                        "type": "boolean"
                    },
                    "country": {
                        "type": "string",
                        "description": "Supported Countries\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Additional notes or information regarding the location or sub-location. The description cannot exceed 1024 characters.\n"
                    },
                    "digestAuthEnabled": {
                        "type": "boolean",
                        "description": "Enable Digest Authentication at the location\n"
                    },
                    "displayTimeUnit": {
                        "type": "string",
                        "description": "Display Time Unit. The time unit to display for IP Surrogate idle time to disassociation.\n"
                    },
                    "dnBandwidth": {
                        "type": "integer",
                        "description": "Download bandwidth in bytes. The value 0 implies no Bandwidth Control enforcement.\n"
                    },
                    "dynamicLocationGroups": {
                        "$ref": "#/types/zia:index/LocationManagementDynamicLocationGroups:LocationManagementDynamicLocationGroups",
                        "description": "Name-ID pairs of locations for which rule must be applied\n"
                    },
                    "excludeFromDynamicGroups": {
                        "type": "boolean"
                    },
                    "excludeFromManualGroups": {
                        "type": "boolean"
                    },
                    "idleTimeInMinutes": {
                        "type": "integer",
                        "description": "Idle Time to Disassociation. The user mapping idle time (in minutes) is required if a Surrogate IP is enabled.\n"
                    },
                    "iotDiscoveryEnabled": {
                        "type": "boolean",
                        "description": "Enable IOT Discovery at the location\n"
                    },
                    "iotEnforcePolicySet": {
                        "type": "boolean"
                    },
                    "ipAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "For locations: IP addresses of the egress points that are provisioned in the Zscaler Cloud. Each entry is a single IP\naddress (e.g., 238.10.33.9).\n"
                    },
                    "ipsControl": {
                        "type": "boolean",
                        "description": "Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.\n"
                    },
                    "ipv6Dns64prefix": {
                        "type": "boolean",
                        "description": "(Optional) Name-ID pair of the NAT64 prefix configured as the DNS64 prefix for the location. If specified, the DNS64\nprefix is used for the IP addresses that reside in this location. If not specified, a prefix is selected from the set of\nsupported prefixes.\n"
                    },
                    "ipv6Enabled": {
                        "type": "boolean",
                        "description": "If set to true, IPv6 is enabled for the location and IPv6 traffic from the location can be forwarded to the Zscaler\nservice to enforce security policies.\n"
                    },
                    "kerberosAuthEnabled": {
                        "type": "boolean",
                        "description": "Enable Kerberos Authentication at the location\n"
                    },
                    "locationId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "Location Name.\n"
                    },
                    "ofwEnabled": {
                        "type": "boolean",
                        "description": "Enable Firewall. When set to true, Firewall is enabled for the location.\n"
                    },
                    "other6Sublocation": {
                        "type": "boolean",
                        "description": "If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv6\naddresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other6\nand it can be renamed, if required. This field is applicable only if ipv6Enabled is set is true.\n"
                    },
                    "otherSublocation": {
                        "type": "boolean",
                        "description": "If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv4\naddresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other\nand it can be renamed, if required.\n"
                    },
                    "parentId": {
                        "type": "integer",
                        "description": "Parent Location ID. If this ID does not exist or is 0, it is implied that it is a parent location. Otherwise, it is a\nsub-location whose parent has this ID. x-applicableTo: SUB\n"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "IP ports that are associated with the location.\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "Profile tag that specifies the location traffic type. If not specified, this tag defaults to `Unassigned`.\n"
                    },
                    "sslScanEnabled": {
                        "type": "boolean",
                        "description": "Enable SSL Inspection. Set to true in order to apply your SSL Inspection policy to HTTPS traffic in the location and\ninspect HTTPS transactions for data leakage, malicious content, and viruses.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "IP ports that are associated with the location.\n"
                    },
                    "staticLocationGroups": {
                        "$ref": "#/types/zia:index/LocationManagementStaticLocationGroups:LocationManagementStaticLocationGroups",
                        "description": "Name-ID pairs of locations for which rule must be applied\n"
                    },
                    "surrogateIp": {
                        "type": "boolean",
                        "description": "Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.\n"
                    },
                    "surrogateIpEnforcedForKnownBrowsers": {
                        "type": "boolean",
                        "description": "Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.\n"
                    },
                    "surrogateRefreshTimeInMinutes": {
                        "type": "integer",
                        "description": "Refresh Time for re-validation of Surrogacy. The surrogate refresh time (in minutes) to re-validate the IP surrogates.\n"
                    },
                    "surrogateRefreshTimeUnit": {
                        "type": "string",
                        "description": "Display Refresh Time Unit. The time unit to display for refresh time for re-validation of surrogacy.\n"
                    },
                    "tz": {
                        "type": "string",
                        "description": "Timezone of the location. If not specified, it defaults to GMT.\n"
                    },
                    "upBandwidth": {
                        "type": "integer",
                        "description": "Upload bandwidth in bytes. The value 0 implies no Bandwidth Control enforcement.\n"
                    },
                    "vpnCredentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/LocationManagementVpnCredential:LocationManagementVpnCredential"
                        }
                    },
                    "xffForwardEnabled": {
                        "type": "boolean",
                        "description": "Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.\n"
                    },
                    "zappSslScanEnabled": {
                        "type": "boolean",
                        "description": "Enable Zscaler App SSL Setting. When set to true, the Zscaler App SSL Scan Setting will take effect, irrespective of the\nSSL policy that is configured for the location.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/ruleLabels:RuleLabels": {
            "description": "The **zia_rule_labels** resource allows the creation and management of rule labels in the Zscaler Internet Access cloud or via the API. This resource can then be associated with resources such as: Firewall Rules and URL filtering rules\n\n## Example Usage\n\n```hcl\n# ZIA Rule Labels Resource\nresource \"zia_rule_labels\" \"example\" {\n    name        = \"Example\"\n    description = \"Example\"\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_rule_labels** can be imported by using `\u003cLABEL_ID\u003e` or `\u003cLABEL_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/ruleLabels:RuleLabels example \u003clabel_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/ruleLabels:RuleLabels example \u003clabel_name\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the devices to be created.\n"
                },
                "ruleLabelId": {
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "ruleLabelId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the devices to be created.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuleLabels resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the devices to be created.\n"
                    },
                    "ruleLabelId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/sSLInspectionRules:SSLInspectionRules": {
            "description": "## Example Usage\n\n### Action - DECRYPT\n\n```hcl\n\ndata \"zia_group_management\" \"this\" {\n    name = \"A000\"\n}\n\nresource \"zia_ssl_inspection_rules\" \"this\" {\n  name                         = \"SSL_Inspection_Rule_Decrypt\"\n  description                  = \"SSL_Inspection_Rule_Decrypt\"\n  state                        = \"ENABLED\"\n  order                        = 1\n  rank                         = 7\n  road_warrior_for_kerberos    = true\n  cloud_applications           = [\"CHATGPT_AI\", \"ANDI\"]\n  platforms                    = [\"SCAN_IOS\", \"SCAN_ANDROID\", \"SCAN_MACOS\", \"SCAN_WINDOWS\", \"NO_CLIENT_CONNECTOR\", \"SCAN_LINUX\"]\n\n  action {\n    type                         = \"DECRYPT\"\n    # show_eun                   = false\n    # show_eunatp                = false\n    override_default_certificate = false\n\n    ssl_interception_cert {\n      id                  = 1\n      name                = \"Zscaler Intermediate CA Certificate\"\n      default_certificate = true\n    }\n\n    decrypt_sub_actions {\n      server_certificates                   = \"ALLOW\"\n      ocsp_check                            = true\n      block_ssl_traffic_with_no_sni_enabled = true\n      min_client_tls_version                = \"CLIENT_TLS_1_0\"\n      min_server_tls_version                = \"SERVER_TLS_1_0\"\n      block_undecrypt                       = true\n      http2_enabled                         = false\n    }\n  }\n  groups {\n        id = [ data.zia_group_management.this.id ]\n    }\n}\n```\n\n### Action - DO_NOT_DECRYPT - Bypass Rule (False)\n\n```hcl\n\ndata \"zia_group_management\" \"this\" {\n    name = \"A000\"\n}\n\nresource \"zia_ssl_inspection_rules\" \"this\" {\n  name                         = \"SSL_Rule_Do_Not_Decrypt\"\n  description                  = \"SSL_Rule_Do_Not_Decrypt\"\n  state                        = \"ENABLED\"\n  order                        = 1\n  rank                         = 7\n  road_warrior_for_kerberos    = true\n  cloud_applications           = [\"CHATGPT_AI\", \"ANDI\"]\n  platforms                    = [\"SCAN_IOS\", \"SCAN_ANDROID\", \"SCAN_MACOS\", \"SCAN_WINDOWS\", \"NO_CLIENT_CONNECTOR\", \"SCAN_LINUX\"]\n\n  action {\n    type                                    = \"DO_NOT_DECRYPT\"\n    do_not_decrypt_sub_actions {\n      bypass_other_policies                 = false\n      server_certificates                   = \"ALLOW\"\n      ocsp_check                            = true\n      block_ssl_traffic_with_no_sni_enabled = true\n      min_tls_version                       = \"SERVER_TLS_1_0\"\n    }\n  }\n  groups {\n        id = [ data.zia_group_management.this.id ]\n    }\n}\n```\n\n### Action - DO_NOT_DECRYPT - Bypass Rule (True)\n\n```hcl\n\ndata \"zia_group_management\" \"this\" {\n    name = \"A000\"\n}\n\nresource \"zia_ssl_inspection_rules\" \"this\" {\n  name                         = \"SSL_Rule_Bypass_Rule\"\n  description                  = \"SSL_Rule_Bypass_Rule\"\n  state                        = \"ENABLED\"\n  order                        = 1\n  rank                         = 7\n  road_warrior_for_kerberos    = true\n  cloud_applications           = [\"CHATGPT_AI\", \"ANDI\"]\n  platforms                    = [\"SCAN_IOS\", \"SCAN_ANDROID\", \"SCAN_MACOS\", \"SCAN_WINDOWS\", \"NO_CLIENT_CONNECTOR\", \"SCAN_LINUX\"]\n\n  action {\n    type                                    = \"DO_NOT_DECRYPT\"\n    do_not_decrypt_sub_actions {\n      bypass_other_policies                 = true\n      block_ssl_traffic_with_no_sni_enabled = true\n    }\n  }\n  groups {\n        id = [ data.zia_group_management.this.id ]\n    }\n}\n```\n\n### Action - BLOCK\n\n```hcl\n\ndata \"zia_group_management\" \"this\" {\n    name = \"A000\"\n}\n\nresource \"zia_ssl_inspection_rules\" \"this\" {\n  name                         = \"SSL_Rule_BLOCK\"\n  description                  = \"SSL_Rule_BLOCK\"\n  state                        = \"ENABLED\"\n  order                        = 1\n  rank                         = 7\n  road_warrior_for_kerberos    = true\n  cloud_applications           = [\"CHATGPT_AI\", \"ANDI\"]\n  platforms                    = [\"SCAN_IOS\", \"SCAN_ANDROID\", \"SCAN_MACOS\", \"SCAN_WINDOWS\", \"NO_CLIENT_CONNECTOR\", \"SCAN_LINUX\"]\n\n  action {\n    type                                    = \"BLOCK\"\n    ssl_interception_cert {\n      id                                    = 1\n    }\n  }\n  groups {\n        id = [ data.zia_group_management.this.id ]\n    }\n}\n```\n",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesAction:SSLInspectionRulesAction"
                    },
                    "description": "(Block List) - Action taken when the traffic matches policy\n"
                },
                "cloudApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) -  The list of URL categories to which the DLP policy rule must be applied. For the complete list of supported file types refer to the  [ZIA API documentation](https://help.zscaler.com/zia/data-loss-prevention#/webDlpRules-post)\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesDepartments:SSLInspectionRulesDepartments",
                    "description": "(Block List) - ID pairs of departments for which the rule is applied.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(String) -  Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                },
                "destIpGroups": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesDestIpGroups:SSLInspectionRulesDestIpGroups",
                    "description": "(Block List) - ID pairs of destination IP address groups for which the rule is applied.\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesDeviceGroups:SSLInspectionRulesDeviceGroups",
                    "description": "(Block List) - ID pairs of device groups for which the rule is applied.\n"
                },
                "deviceTrustLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String)  - List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed using Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the Zscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation. Supported values: `ANY`, `UNKNOWN_DEVICETRUSTLEVEL`, `LOW_TRUST`, `MEDIUM_TRUST`, `HIGH_TRUST`\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesDevices:SSLInspectionRulesDevices",
                    "description": "(Block List) - ID pairs of devices for which the rule is applied\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesGroups:SSLInspectionRulesGroups",
                    "description": "(Block List) - ID pairs of groups for which the rule is applied. If not set, rule is applied for all groups.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesLabels:SSLInspectionRulesLabels",
                    "description": "(Block List) - ID pairs of labels associated with the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesLocationGroups:SSLInspectionRulesLocationGroups",
                    "description": "(Block List) - ID pairs of location groups to which the rule is applied. When empty, it implies applying to all location groups.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesLocations:SSLInspectionRulesLocations",
                    "description": "(Block List) - ID pairs of locations to which the rule is applied. When empty, it implies applying to all locations.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the SSL Inspection rule\n"
                },
                "order": {
                    "type": "integer",
                    "description": "(String) -  Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                },
                "platforms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) -  Zscaler Client Connector device platforms for which this rule is applied. Supported Values: `SCAN_IOS`, `SCAN_ANDROID`, `SCAN_MACOS`, `SCAN_WINDOWS`, `NO_CLIENT_CONNECTOR`, `SCAN_LINUX`\n"
                },
                "proxyGateways": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesProxyGateways:SSLInspectionRulesProxyGateways",
                    "description": "(Block List) - When using ZPA Gateway forwarding, name-ID pairs of ZPA Application Segments for which the rule is applicable.\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "(Integer) - The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.\n"
                },
                "roadWarriorForKerberos": {
                    "type": "boolean",
                    "description": "(Boolean) - Indicates whether this rule is applied to remote users that use PAC with Kerberos authentication.\n"
                },
                "ruleId": {
                    "type": "integer"
                },
                "sourceIpGroups": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesSourceIpGroups:SSLInspectionRulesSourceIpGroups",
                    "description": "(Block List) - ID pairs of source IP address groups for which the rule is applied.\n"
                },
                "state": {
                    "type": "string",
                    "description": "(String) - The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesTimeWindows:SSLInspectionRulesTimeWindows",
                    "description": "(Block List) - The time intervals during which the rule applies\n"
                },
                "urlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) -  The list of URL categories to which the DLP policy rule must be applied.\n"
                },
                "userAgentTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) -  A list of user agent types the rule applies to.\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesUsers:SSLInspectionRulesUsers",
                    "description": "(Block List) - The list of preconfigured workload groups to which the policy must be applied.\n"
                },
                "workloadGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesWorkloadGroup:SSLInspectionRulesWorkloadGroup"
                    },
                    "description": "(Block List) - The list of preconfigured workload groups to which the policy must be applied.\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesZpaAppSegment:SSLInspectionRulesZpaAppSegment"
                    },
                    "description": "(Block List) - The list of ZPA Application Segments for which this rule is applicable (applicable only for ZPA Gateway forwarding).\n"
                }
            },
            "required": [
                "name",
                "order",
                "ruleId",
                "workloadGroups",
                "zpaAppSegments"
            ],
            "inputProperties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesAction:SSLInspectionRulesAction"
                    },
                    "description": "(Block List) - Action taken when the traffic matches policy\n"
                },
                "cloudApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) -  The list of URL categories to which the DLP policy rule must be applied. For the complete list of supported file types refer to the  [ZIA API documentation](https://help.zscaler.com/zia/data-loss-prevention#/webDlpRules-post)\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesDepartments:SSLInspectionRulesDepartments",
                    "description": "(Block List) - ID pairs of departments for which the rule is applied.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(String) -  Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                },
                "destIpGroups": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesDestIpGroups:SSLInspectionRulesDestIpGroups",
                    "description": "(Block List) - ID pairs of destination IP address groups for which the rule is applied.\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesDeviceGroups:SSLInspectionRulesDeviceGroups",
                    "description": "(Block List) - ID pairs of device groups for which the rule is applied.\n"
                },
                "deviceTrustLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String)  - List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed using Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the Zscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation. Supported values: `ANY`, `UNKNOWN_DEVICETRUSTLEVEL`, `LOW_TRUST`, `MEDIUM_TRUST`, `HIGH_TRUST`\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesDevices:SSLInspectionRulesDevices",
                    "description": "(Block List) - ID pairs of devices for which the rule is applied\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesGroups:SSLInspectionRulesGroups",
                    "description": "(Block List) - ID pairs of groups for which the rule is applied. If not set, rule is applied for all groups.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesLabels:SSLInspectionRulesLabels",
                    "description": "(Block List) - ID pairs of labels associated with the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesLocationGroups:SSLInspectionRulesLocationGroups",
                    "description": "(Block List) - ID pairs of location groups to which the rule is applied. When empty, it implies applying to all location groups.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesLocations:SSLInspectionRulesLocations",
                    "description": "(Block List) - ID pairs of locations to which the rule is applied. When empty, it implies applying to all locations.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the SSL Inspection rule\n"
                },
                "order": {
                    "type": "integer",
                    "description": "(String) -  Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                },
                "platforms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) -  Zscaler Client Connector device platforms for which this rule is applied. Supported Values: `SCAN_IOS`, `SCAN_ANDROID`, `SCAN_MACOS`, `SCAN_WINDOWS`, `NO_CLIENT_CONNECTOR`, `SCAN_LINUX`\n"
                },
                "proxyGateways": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesProxyGateways:SSLInspectionRulesProxyGateways",
                    "description": "(Block List) - When using ZPA Gateway forwarding, name-ID pairs of ZPA Application Segments for which the rule is applicable.\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "(Integer) - The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.\n"
                },
                "roadWarriorForKerberos": {
                    "type": "boolean",
                    "description": "(Boolean) - Indicates whether this rule is applied to remote users that use PAC with Kerberos authentication.\n"
                },
                "sourceIpGroups": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesSourceIpGroups:SSLInspectionRulesSourceIpGroups",
                    "description": "(Block List) - ID pairs of source IP address groups for which the rule is applied.\n"
                },
                "state": {
                    "type": "string",
                    "description": "(String) - The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesTimeWindows:SSLInspectionRulesTimeWindows",
                    "description": "(Block List) - The time intervals during which the rule applies\n"
                },
                "urlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) -  The list of URL categories to which the DLP policy rule must be applied.\n"
                },
                "userAgentTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Set of String) -  A list of user agent types the rule applies to.\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/SSLInspectionRulesUsers:SSLInspectionRulesUsers",
                    "description": "(Block List) - The list of preconfigured workload groups to which the policy must be applied.\n"
                },
                "workloadGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesWorkloadGroup:SSLInspectionRulesWorkloadGroup"
                    },
                    "description": "(Block List) - The list of preconfigured workload groups to which the policy must be applied.\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesZpaAppSegment:SSLInspectionRulesZpaAppSegment"
                    },
                    "description": "(Block List) - The list of ZPA Application Segments for which this rule is applicable (applicable only for ZPA Gateway forwarding).\n"
                }
            },
            "requiredInputs": [
                "order"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SSLInspectionRules resources.\n",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/SSLInspectionRulesAction:SSLInspectionRulesAction"
                        },
                        "description": "(Block List) - Action taken when the traffic matches policy\n"
                    },
                    "cloudApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) -  The list of URL categories to which the DLP policy rule must be applied. For the complete list of supported file types refer to the  [ZIA API documentation](https://help.zscaler.com/zia/data-loss-prevention#/webDlpRules-post)\n"
                    },
                    "departments": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesDepartments:SSLInspectionRulesDepartments",
                        "description": "(Block List) - ID pairs of departments for which the rule is applied.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) -  Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                    },
                    "destIpGroups": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesDestIpGroups:SSLInspectionRulesDestIpGroups",
                        "description": "(Block List) - ID pairs of destination IP address groups for which the rule is applied.\n"
                    },
                    "deviceGroups": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesDeviceGroups:SSLInspectionRulesDeviceGroups",
                        "description": "(Block List) - ID pairs of device groups for which the rule is applied.\n"
                    },
                    "deviceTrustLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String)  - List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed using Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the Zscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation. Supported values: `ANY`, `UNKNOWN_DEVICETRUSTLEVEL`, `LOW_TRUST`, `MEDIUM_TRUST`, `HIGH_TRUST`\n"
                    },
                    "devices": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesDevices:SSLInspectionRulesDevices",
                        "description": "(Block List) - ID pairs of devices for which the rule is applied\n"
                    },
                    "groups": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesGroups:SSLInspectionRulesGroups",
                        "description": "(Block List) - ID pairs of groups for which the rule is applied. If not set, rule is applied for all groups.\n"
                    },
                    "labels": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesLabels:SSLInspectionRulesLabels",
                        "description": "(Block List) - ID pairs of labels associated with the rule.\n"
                    },
                    "locationGroups": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesLocationGroups:SSLInspectionRulesLocationGroups",
                        "description": "(Block List) - ID pairs of location groups to which the rule is applied. When empty, it implies applying to all location groups.\n"
                    },
                    "locations": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesLocations:SSLInspectionRulesLocations",
                        "description": "(Block List) - ID pairs of locations to which the rule is applied. When empty, it implies applying to all locations.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the SSL Inspection rule\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(String) -  Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                    },
                    "platforms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) -  Zscaler Client Connector device platforms for which this rule is applied. Supported Values: `SCAN_IOS`, `SCAN_ANDROID`, `SCAN_MACOS`, `SCAN_WINDOWS`, `NO_CLIENT_CONNECTOR`, `SCAN_LINUX`\n"
                    },
                    "proxyGateways": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesProxyGateways:SSLInspectionRulesProxyGateways",
                        "description": "(Block List) - When using ZPA Gateway forwarding, name-ID pairs of ZPA Application Segments for which the rule is applicable.\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "(Integer) - The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.\n"
                    },
                    "roadWarriorForKerberos": {
                        "type": "boolean",
                        "description": "(Boolean) - Indicates whether this rule is applied to remote users that use PAC with Kerberos authentication.\n"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "sourceIpGroups": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesSourceIpGroups:SSLInspectionRulesSourceIpGroups",
                        "description": "(Block List) - ID pairs of source IP address groups for which the rule is applied.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "(String) - The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`\n"
                    },
                    "timeWindows": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesTimeWindows:SSLInspectionRulesTimeWindows",
                        "description": "(Block List) - The time intervals during which the rule applies\n"
                    },
                    "urlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) -  The list of URL categories to which the DLP policy rule must be applied.\n"
                    },
                    "userAgentTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) -  A list of user agent types the rule applies to.\n"
                    },
                    "users": {
                        "$ref": "#/types/zia:index/SSLInspectionRulesUsers:SSLInspectionRulesUsers",
                        "description": "(Block List) - The list of preconfigured workload groups to which the policy must be applied.\n"
                    },
                    "workloadGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/SSLInspectionRulesWorkloadGroup:SSLInspectionRulesWorkloadGroup"
                        },
                        "description": "(Block List) - The list of preconfigured workload groups to which the policy must be applied.\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/SSLInspectionRulesZpaAppSegment:SSLInspectionRulesZpaAppSegment"
                        },
                        "description": "(Block List) - The list of ZPA Application Segments for which this rule is applicable (applicable only for ZPA Gateway forwarding).\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/sandboxBehavioralAnalysis:SandboxBehavioralAnalysis": {
            "description": "The **zia_sandbox_behavioral_analysis** resource updates the custom list of MD5 file hashes that are blocked by Sandbox. This overwrites a previously generated blocklist. If you need to completely erase the blocklist, submit an empty list.\n\n**Note**: Only the file types that are supported by Sandbox analysis can be blocked using MD5 hashes.\n\n## Example Usage\n\n### Add MD5 Hashes To Sandbox\n\n```hcl\n# Add MD5 Hashes to Sandbox\nresource \"zia_sandbox_behavioral_analysis\" \"this\" {\n  file_hashes_to_be_blocked = [\n        \"42914d6d213a20a2684064be5c80ffa9\",\n        \"c0202cf6aeab8437c638533d14563d35\",\n  ]\n}\n```\n\n### Remove All MD5 Hashes To Sandbox\n\n```hcl\n# Remove All MD5 Hashes to Sandbox\nresource \"zia_sandbox_behavioral_analysis\" \"this\" {\n  file_hashes_to_be_blocked = []\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_sandbox_behavioral_analysis** can be imported by using `sandbox_settings` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/sandboxBehavioralAnalysis:SandboxBehavioralAnalysis example sandbox_settings\n```\n\n",
            "properties": {
                "fileHashesToBeBlockeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A custom list of unique MD5 file hashes that must be blocked by Sandbox. A maximum of 10000 MD5 file hashes can be\nblocked\n"
                }
            },
            "inputProperties": {
                "fileHashesToBeBlockeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A custom list of unique MD5 file hashes that must be blocked by Sandbox. A maximum of 10000 MD5 file hashes can be\nblocked\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SandboxBehavioralAnalysis resources.\n",
                "properties": {
                    "fileHashesToBeBlockeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A custom list of unique MD5 file hashes that must be blocked by Sandbox. A maximum of 10000 MD5 file hashes can be\nblocked\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/sandboxFileSubmission:SandboxFileSubmission": {
            "description": "## Example Usage\n\n### Submit Raw Or Archive Files\n\n```hcl\n# Submit raw EXE file to Zscaler Sandbox\nlocals {\n  files = toset([\n    \"zs-test-pe-file.exe\"\n  ])\n}\n\nresource \"zia_sandbox_file_submission\" \"this\" {\n  for_each = local.files\n  file_path     = each.key\n  submission_method = \"submit\"\n  force = true\n}\n```\n\n### Submits Raw Or Archive For Out-Of-Band File Inspection\n\n```hcl\n# Submit raw EXE file to Zscaler Sandbox\nlocals {\n  files = toset([\n    \"zs-test-pe-file.exe\"\n  ])\n}\n\nresource \"zia_sandbox_file_submission\" \"this\" {\n  for_each = local.files\n  file_path     = each.key\n  submission_method = \"discan\"\n  force = true\n}\n```\n",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "filePath": {
                    "type": "string",
                    "description": "(Required) The path where the raw or archive files for submission are located.\n"
                },
                "fileType": {
                    "type": "string"
                },
                "force": {
                    "type": "boolean",
                    "description": "(Optional) Submit file to sandbox even if found malicious during AV scan and a verdict already exists. Supported values are `true` or `false`\n"
                },
                "md5": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "sandboxSubmission": {
                    "type": "string"
                },
                "submissionMethod": {
                    "type": "string",
                    "description": "(Required) The submission method to be used. Supportedd values are: `submit` and `discan`\n"
                },
                "virusName": {
                    "type": "string"
                },
                "virusType": {
                    "type": "string"
                }
            },
            "required": [
                "code",
                "filePath",
                "fileType",
                "md5",
                "message",
                "sandboxSubmission",
                "submissionMethod",
                "virusName",
                "virusType"
            ],
            "inputProperties": {
                "filePath": {
                    "type": "string",
                    "description": "(Required) The path where the raw or archive files for submission are located.\n"
                },
                "force": {
                    "type": "boolean",
                    "description": "(Optional) Submit file to sandbox even if found malicious during AV scan and a verdict already exists. Supported values are `true` or `false`\n"
                },
                "submissionMethod": {
                    "type": "string",
                    "description": "(Required) The submission method to be used. Supportedd values are: `submit` and `discan`\n"
                }
            },
            "requiredInputs": [
                "filePath",
                "submissionMethod"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SandboxFileSubmission resources.\n",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "filePath": {
                        "type": "string",
                        "description": "(Required) The path where the raw or archive files for submission are located.\n"
                    },
                    "fileType": {
                        "type": "string"
                    },
                    "force": {
                        "type": "boolean",
                        "description": "(Optional) Submit file to sandbox even if found malicious during AV scan and a verdict already exists. Supported values are `true` or `false`\n"
                    },
                    "md5": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "sandboxSubmission": {
                        "type": "string"
                    },
                    "submissionMethod": {
                        "type": "string",
                        "description": "(Required) The submission method to be used. Supportedd values are: `submit` and `discan`\n"
                    },
                    "virusName": {
                        "type": "string"
                    },
                    "virusType": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/sandboxRules:SandboxRules": {
            "description": "The **zia_sandbox_rules** resource allows the creation and management of SAndbox rules in the Zscaler Internet Access.\n\n## Example Usage\n\n```hcl\ndata \"zia_department_management\" \"engineering\" {\n name = \"Engineering\"\n}\n\ndata \"zia_group_management\" \"normal_internet\" {\n    name = \"Normal_Internet\"\n}\n\nresource \"zia_sandbox_rules\" \"this\" {\n    name                 = \"SandboxRule01\"\n    description          = \"SandboxRule01\"\n    rank                 = 7\n    order                = 1\n    first_time_enable    = true\n    ml_action_enabled    = true\n    first_time_operation = \"ALLOW_SCAN\"\n    ba_rule_action       = \"BLOCK\"\n    state                = \"ENABLED\"\n    ba_policy_categories = [\"ADWARE_BLOCK\", \"BOTMAL_BLOCK\", \"ANONYP2P_BLOCK\", \"RANSOMWARE_BLOCK\"]\n    file_types           = [\"FTCATEGORY_P7Z\",\n        \"FTCATEGORY_MS_WORD\",\n        \"FTCATEGORY_PDF_DOCUMENT\",\n        \"FTCATEGORY_TAR\",\n        \"FTCATEGORY_SCZIP\",\n        \"FTCATEGORY_WINDOWS_EXECUTABLES\",\n        \"FTCATEGORY_HTA\",\n        \"FTCATEGORY_FLASH\",\n        \"FTCATEGORY_RAR\",\n        \"FTCATEGORY_MS_EXCEL\",\n        \"FTCATEGORY_VISUAL_BASIC_SCRIPT\",\n        \"FTCATEGORY_MS_POWERPOINT\",\n        \"FTCATEGORY_WINDOWS_LIBRARY\",\n        \"FTCATEGORY_POWERSHELL\",\n        \"FTCATEGORY_APK\",\n        \"FTCATEGORY_ZIP\",\n        \"FTCATEGORY_BZIP2\",\n        \"FTCATEGORY_JAVA_APPLET\",\n        \"FTCATEGORY_MS_RTF\"]\n    protocols            = [\n        \"FOHTTP_RULE\",\n        \"FTP_RULE\",\n        \"HTTPS_RULE\",\n        \"HTTP_RULE\",\n    ]\n    departments {\n        id = [ data.zia_department_management.engineering.id ]\n    }\n    groups {\n        id = [ data.zia_group_management.normal_internet.id ]\n    }\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_sandbox_rules** can be imported by using `\u003cRULE ID\u003e` or `\u003cRULE NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/sandboxRules:SandboxRules example \u003crule_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/sandboxRules:SandboxRules example \u003crule_name\u003e\n```\n\n",
            "properties": {
                "baPolicyCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The threat categories to which the rule applies\n"
                },
                "baRuleAction": {
                    "type": "string",
                    "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`\n"
                },
                "byThreatScore": {
                    "type": "integer",
                    "description": "(Integer)\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/SandboxRulesDepartments:SandboxRulesDepartments",
                    "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                },
                "fileTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.\n"
                },
                "firstTimeEnable": {
                    "type": "boolean",
                    "description": "(Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.\n"
                },
                "firstTimeOperation": {
                    "type": "string",
                    "description": "(String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/SandboxRulesGroups:SandboxRulesGroups",
                    "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/SandboxRulesLabels:SandboxRulesLabels",
                    "description": "(List of Objects) Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/SandboxRulesLocationGroups:SandboxRulesLocationGroups",
                    "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/SandboxRulesLocations:SandboxRulesLocations",
                    "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "mlActionEnabled": {
                    "type": "boolean",
                    "description": "(Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The File Type Control policy rule name.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Protocol for the given rule. This field is not applicable to the Lite API.\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "(Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.\n"
                },
                "ruleId": {
                    "type": "integer"
                },
                "state": {
                    "type": "string",
                    "description": "(String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`\n"
                },
                "urlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(List of Strings) The list of URL categories to which the DLP policy rule must be applied.\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/SandboxRulesUsers:SandboxRulesUsers",
                    "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/SandboxRulesZpaAppSegment:SandboxRulesZpaAppSegment"
                    },
                    "description": "(List of Objects) The ZPA application segments to which the rule applies\n"
                }
            },
            "required": [
                "baRuleAction",
                "byThreatScore",
                "fileTypes",
                "firstTimeEnable",
                "firstTimeOperation",
                "mlActionEnabled",
                "name",
                "order",
                "protocols",
                "rank",
                "ruleId",
                "state",
                "zpaAppSegments"
            ],
            "inputProperties": {
                "baPolicyCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The threat categories to which the rule applies\n"
                },
                "baRuleAction": {
                    "type": "string",
                    "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`\n"
                },
                "byThreatScore": {
                    "type": "integer",
                    "description": "(Integer)\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/SandboxRulesDepartments:SandboxRulesDepartments",
                    "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                },
                "fileTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.\n"
                },
                "firstTimeEnable": {
                    "type": "boolean",
                    "description": "(Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.\n"
                },
                "firstTimeOperation": {
                    "type": "string",
                    "description": "(String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/SandboxRulesGroups:SandboxRulesGroups",
                    "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/SandboxRulesLabels:SandboxRulesLabels",
                    "description": "(List of Objects) Labels that are applicable to the rule.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/SandboxRulesLocationGroups:SandboxRulesLocationGroups",
                    "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/SandboxRulesLocations:SandboxRulesLocations",
                    "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                },
                "mlActionEnabled": {
                    "type": "boolean",
                    "description": "(Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The File Type Control policy rule name.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Protocol for the given rule. This field is not applicable to the Lite API.\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "(Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.\n"
                },
                "state": {
                    "type": "string",
                    "description": "(String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`\n"
                },
                "urlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(List of Strings) The list of URL categories to which the DLP policy rule must be applied.\n"
                },
                "users": {
                    "$ref": "#/types/zia:index/SandboxRulesUsers:SandboxRulesUsers",
                    "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                },
                "zpaAppSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/SandboxRulesZpaAppSegment:SandboxRulesZpaAppSegment"
                    },
                    "description": "(List of Objects) The ZPA application segments to which the rule applies\n"
                }
            },
            "requiredInputs": [
                "fileTypes",
                "order",
                "protocols"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SandboxRules resources.\n",
                "properties": {
                    "baPolicyCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The threat categories to which the rule applies\n"
                    },
                    "baRuleAction": {
                        "type": "string",
                        "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`\n"
                    },
                    "byThreatScore": {
                        "type": "integer",
                        "description": "(Integer)\n"
                    },
                    "departments": {
                        "$ref": "#/types/zia:index/SandboxRulesDepartments:SandboxRulesDepartments",
                        "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                    },
                    "fileTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.\n"
                    },
                    "firstTimeEnable": {
                        "type": "boolean",
                        "description": "(Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.\n"
                    },
                    "firstTimeOperation": {
                        "type": "string",
                        "description": "(String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`\n"
                    },
                    "groups": {
                        "$ref": "#/types/zia:index/SandboxRulesGroups:SandboxRulesGroups",
                        "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "labels": {
                        "$ref": "#/types/zia:index/SandboxRulesLabels:SandboxRulesLabels",
                        "description": "(List of Objects) Labels that are applicable to the rule.\n"
                    },
                    "locationGroups": {
                        "$ref": "#/types/zia:index/SandboxRulesLocationGroups:SandboxRulesLocationGroups",
                        "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                    },
                    "locations": {
                        "$ref": "#/types/zia:index/SandboxRulesLocations:SandboxRulesLocations",
                        "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "mlActionEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The File Type Control policy rule name.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Protocol for the given rule. This field is not applicable to the Lite API.\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "(Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.\n"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string",
                        "description": "(String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`\n"
                    },
                    "urlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of Strings) The list of URL categories to which the DLP policy rule must be applied.\n"
                    },
                    "users": {
                        "$ref": "#/types/zia:index/SandboxRulesUsers:SandboxRulesUsers",
                        "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/SandboxRulesZpaAppSegment:SandboxRulesZpaAppSegment"
                        },
                        "description": "(List of Objects) The ZPA application segments to which the rule applies\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/securitySettings:SecuritySettings": {
            "description": "The **zia_security_settings** resource alows you to add or remove a URL to the allow and denylist under the Advanced Threat Protection policy in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\n# Add URLs to ZIA Whitelist - Malware Protection\nresource \"zia_security_settings\" \"this\" {\n  whitelist_urls = [\n    \"resource5.acme.net\",\n    \"resource6.acme.net\",\n    \"resource7.acme.net\",\n    \"resource8.acme.net\",\n  ]\n}\n```\n\n```hcl\n# Add URLs to ZIA Blacklist - Advanced Threat Protection\nresource \"zia_security_settings\" \"this\" {\n  blacklist_urls = [\n    \"resource1.acme.net\",\n    \"resource2.acme.net\",\n    \"resource3.acme.net\",\n    \"resource4.acme.net\",\n  ]\n}\n```\n\n```hcl\n# Add URLs to both Whitelist and Blacklist\n# Advanced Threat Protection \u0026 Malware Protection\nresource \"zia_security_settings\" \"this\" {\n  whitelist_urls = [\n    \"resource5.acme.net\",\n    \"resource6.acme.net\",\n    \"resource7.acme.net\",\n    \"resource8.acme.net\",\n  ]\n  blacklist_urls = [\n    \"resource1.acme.net\",\n    \"resource2.acme.net\",\n    \"resource3.acme.net\",\n    \"resource4.acme.net\",\n  ]\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_security_settings** can be imported by using `all_urls` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/securitySettings:SecuritySettings example all_urls\n```\n\n",
            "properties": {
                "blacklistUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs on the denylist for your organization. Allow up to 25000 URLs.\n"
                },
                "whitelistUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowlist URLs whose contents will not be scanned. Allows up to 255 URLs.\n"
                }
            },
            "required": [
                "blacklistUrls",
                "whitelistUrls"
            ],
            "inputProperties": {
                "blacklistUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs on the denylist for your organization. Allow up to 25000 URLs.\n"
                },
                "whitelistUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowlist URLs whose contents will not be scanned. Allows up to 255 URLs.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecuritySettings resources.\n",
                "properties": {
                    "blacklistUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URLs on the denylist for your organization. Allow up to 25000 URLs.\n"
                    },
                    "whitelistUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Allowlist URLs whose contents will not be scanned. Allows up to 255 URLs.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/trafficForwardingGRETunnel:TrafficForwardingGRETunnel": {
            "description": "\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_traffic_forwarding_gre_tunnel** can be imported by using `\u003cTUNNEL_ID\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/trafficForwardingGRETunnel:TrafficForwardingGRETunnel example \u003ctunnel_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/trafficForwardingGRETunnel:TrafficForwardingGRETunnel example \u003cengine_name\u003e\n```\n\n",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Additional information about this GRE tunnel\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "When within_country is enabled, you must set this to the country code.\n"
                },
                "internalIpRange": {
                    "type": "string",
                    "description": "The start of the internal IP address in /29 CIDR range\n"
                },
                "ipUnnumbered": {
                    "type": "boolean",
                    "description": "This is required to support the automated SD-WAN provisioning of GRE tunnels, when set to true gre_tun_ip and gre_tun_id\nare set to null\n"
                },
                "primaryDestVips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/TrafficForwardingGRETunnelPrimaryDestVip:TrafficForwardingGRETunnelPrimaryDestVip"
                    },
                    "description": "The primary destination data center and virtual IP address (VIP) of the GRE tunnel\n"
                },
                "secondaryDestVips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/TrafficForwardingGRETunnelSecondaryDestVip:TrafficForwardingGRETunnelSecondaryDestVip"
                    },
                    "description": "The secondary destination data center and virtual IP address (VIP) of the GRE tunnel\n"
                },
                "sourceIp": {
                    "type": "string",
                    "description": "The source IP address of the GRE tunnel. This is typically a static IP address in the organization or SD-WAN.\n"
                },
                "tunnelId": {
                    "type": "integer",
                    "description": "The ID of the GRE tunnel.\n"
                },
                "withinCountry": {
                    "type": "boolean",
                    "description": "Restrict the data center virtual IP addresses (VIPs) only to those within the same country as the source IP address\n"
                }
            },
            "required": [
                "countryCode",
                "ipUnnumbered",
                "primaryDestVips",
                "secondaryDestVips",
                "sourceIp",
                "tunnelId",
                "withinCountry"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string",
                    "description": "Additional information about this GRE tunnel\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "When within_country is enabled, you must set this to the country code.\n"
                },
                "internalIpRange": {
                    "type": "string",
                    "description": "The start of the internal IP address in /29 CIDR range\n"
                },
                "ipUnnumbered": {
                    "type": "boolean",
                    "description": "This is required to support the automated SD-WAN provisioning of GRE tunnels, when set to true gre_tun_ip and gre_tun_id\nare set to null\n"
                },
                "primaryDestVips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/TrafficForwardingGRETunnelPrimaryDestVip:TrafficForwardingGRETunnelPrimaryDestVip"
                    },
                    "description": "The primary destination data center and virtual IP address (VIP) of the GRE tunnel\n"
                },
                "secondaryDestVips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/TrafficForwardingGRETunnelSecondaryDestVip:TrafficForwardingGRETunnelSecondaryDestVip"
                    },
                    "description": "The secondary destination data center and virtual IP address (VIP) of the GRE tunnel\n"
                },
                "sourceIp": {
                    "type": "string",
                    "description": "The source IP address of the GRE tunnel. This is typically a static IP address in the organization or SD-WAN.\n"
                },
                "withinCountry": {
                    "type": "boolean",
                    "description": "Restrict the data center virtual IP addresses (VIPs) only to those within the same country as the source IP address\n"
                }
            },
            "requiredInputs": [
                "sourceIp"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TrafficForwardingGRETunnel resources.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "Additional information about this GRE tunnel\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "When within_country is enabled, you must set this to the country code.\n"
                    },
                    "internalIpRange": {
                        "type": "string",
                        "description": "The start of the internal IP address in /29 CIDR range\n"
                    },
                    "ipUnnumbered": {
                        "type": "boolean",
                        "description": "This is required to support the automated SD-WAN provisioning of GRE tunnels, when set to true gre_tun_ip and gre_tun_id\nare set to null\n"
                    },
                    "primaryDestVips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/TrafficForwardingGRETunnelPrimaryDestVip:TrafficForwardingGRETunnelPrimaryDestVip"
                        },
                        "description": "The primary destination data center and virtual IP address (VIP) of the GRE tunnel\n"
                    },
                    "secondaryDestVips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/TrafficForwardingGRETunnelSecondaryDestVip:TrafficForwardingGRETunnelSecondaryDestVip"
                        },
                        "description": "The secondary destination data center and virtual IP address (VIP) of the GRE tunnel\n"
                    },
                    "sourceIp": {
                        "type": "string",
                        "description": "The source IP address of the GRE tunnel. This is typically a static IP address in the organization or SD-WAN.\n"
                    },
                    "tunnelId": {
                        "type": "integer",
                        "description": "The ID of the GRE tunnel.\n"
                    },
                    "withinCountry": {
                        "type": "boolean",
                        "description": "Restrict the data center virtual IP addresses (VIPs) only to those within the same country as the source IP address\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/trafficForwardingStaticIP:TrafficForwardingStaticIP": {
            "description": "The **zia_traffic_forwarding_static_ip** resource allows the creation and management of static ip addresses in the Zscaler Internet Access cloud. The resource, can then be associated with other resources such as:\n\n* VPN Credentials of type `IP`\n* Location Management\n* GRE Tunnel\n\n## Example Usage\n\n```hcl\n# ZIA Traffic Forwarding - Static IP\nresource \"zia_traffic_forwarding_static_ip\" \"example\"{\n    ip_address      =  \"1.1.1.1\"\n    routable_ip     = true\n    comment         = \"Example\"\n    geo_override    = true\n    latitude        = -36.848461\n    longitude       = 174.763336\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\nStatic IP resources can be imported by using `\u003cSTATIC IP ID\u003e` or `\u003cIP ADDRESS\u003e`as the import ID.\n\n```sh\n$ pulumi import zia:index/trafficForwardingStaticIP:TrafficForwardingStaticIP example \u003cstatic_ip_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/trafficForwardingStaticIP:TrafficForwardingStaticIP example \u003cip_address\u003e\n```\n\n",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Additional information about this static IP address\n"
                },
                "geoOverride": {
                    "type": "boolean",
                    "description": "If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude\nand longitude coordinates must be provided.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The static IP address\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between\n-90 and 90 degrees.\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between\n-180 and 180 degrees.\n"
                },
                "routableIp": {
                    "type": "boolean",
                    "description": "Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private\nService Edge associated to the organization.\n"
                },
                "staticIpId": {
                    "type": "integer",
                    "description": "The ID of the Static IP.\n"
                }
            },
            "required": [
                "comment",
                "geoOverride",
                "ipAddress",
                "latitude",
                "longitude",
                "routableIp",
                "staticIpId"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string",
                    "description": "Additional information about this static IP address\n"
                },
                "geoOverride": {
                    "type": "boolean",
                    "description": "If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude\nand longitude coordinates must be provided.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The static IP address\n",
                    "willReplaceOnChanges": true
                },
                "latitude": {
                    "type": "number",
                    "description": "Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between\n-90 and 90 degrees.\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between\n-180 and 180 degrees.\n"
                },
                "routableIp": {
                    "type": "boolean",
                    "description": "Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private\nService Edge associated to the organization.\n"
                }
            },
            "requiredInputs": [
                "ipAddress"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TrafficForwardingStaticIP resources.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "Additional information about this static IP address\n"
                    },
                    "geoOverride": {
                        "type": "boolean",
                        "description": "If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude\nand longitude coordinates must be provided.\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The static IP address\n",
                        "willReplaceOnChanges": true
                    },
                    "latitude": {
                        "type": "number",
                        "description": "Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between\n-90 and 90 degrees.\n"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between\n-180 and 180 degrees.\n"
                    },
                    "routableIp": {
                        "type": "boolean",
                        "description": "Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private\nService Edge associated to the organization.\n"
                    },
                    "staticIpId": {
                        "type": "integer",
                        "description": "The ID of the Static IP.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/trafficForwardingVPNCredentials:TrafficForwardingVPNCredentials": {
            "description": "The **zia_traffic_forwarding_vpn_credentials** creates and manages VPN credentials that can be associated to locations. VPN is one way to route traffic from customer locations to the cloud. Site-to-site IPSec VPN credentials can be identified by the cloud through one of the following methods:\n\n* Common Name (CN) of IPSec Certificate\n* VPN User FQDN - requires VPN_SITE_TO_SITE subscription\n* VPN IP Address - requires VPN_SITE_TO_SITE subscription\n* Extended Authentication (XAUTH) or hosted mobile UserID - requires VPN_MOBILE subscription\n\n## Example Usage\n\n```hcl\n######### PASSWORDS IN THIS FILE ARE FAKE AND NOT USED IN PRODUCTION SYSTEMS #########\n# ZIA Traffic Forwarding - VPN Credentials (UFQDN)\nresource \"zia_traffic_forwarding_vpn_credentials\" \"example\"{\n    type            = \"UFQDN\"\n    fqdn            = \"sjc-1-37@acme.com\"\n    comments        = \"Example\"\n    pre_shared_key = \"*********************\"\n}\n```\n\n```hcl\n# ZIA Traffic Forwarding - VPN Credentials (IP)\n######### PASSWORDS IN THIS FILE ARE FAKE AND NOT USED IN PRODUCTION SYSTEMS #########\nresource \"zia_traffic_forwarding_vpn_credentials\" \"example\"{\n    type            = \"IP\"\n    ip_address      = zia_traffic_forwarding_static_ip.example.ip_address\n    comments        = \"Example\"\n    pre_shared_key  = \"*********************\"\n    depends_on = [ zia_traffic_forwarding_static_ip.example ]\n}\n\nresource \"zia_traffic_forwarding_static_ip\" \"example\"{\n    ip_address      =  \"1.1.1.1\"\n    routable_ip     = true\n    comment         = \"Example\"\n    geo_override    = true\n    latitude        = -36.848461\n    longitude       = 174.763336\n}\n```\n\n\u003e **NOTE** For VPN Credentials of Type `IP` a static IP resource must be created first.\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_traffic_forwarding_vpn_credentials** can be imported by using one of the following prefixes as the import ID:\n\n* `'IP'` - Imports all VPN Credentials of type IP\n\n```sh\n$ pulumi import zia:index/trafficForwardingVPNCredentials:TrafficForwardingVPNCredentials example 'IP'\n```\n\n* `'UFQDN'` - Imports all VPN Credentials of type UFQDN\n\n```sh\n$ pulumi import zia:index/trafficForwardingVPNCredentials:TrafficForwardingVPNCredentials this 'UFQDN'\n```\n\n* `UFQDN'` - Imports a VPN Credentials of type UFQDN containing a specific UFQDN address\n\n```sh\n$ pulumi import zia:index/trafficForwardingVPNCredentials:TrafficForwardingVPNCredentials example 'testvpn@example.com'\n```\n\n* `IP Address'` - Imports a VPN Credentials of type IP containing a specific IP address\n\n```sh\n$ pulumi import zia:index/trafficForwardingVPNCredentials:TrafficForwardingVPNCredentials example '1.1.1.1'\n```\n\n",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string",
                    "description": "Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.\n"
                },
                "ipAddress": {
                    "type": "string"
                },
                "preSharedKey": {
                    "type": "string",
                    "description": "Pre-shared key. This is a required field for UFQDN and IP auth type.\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created. The supported values are: `UFQDN` and `IP`\n"
                },
                "vpnId": {
                    "type": "integer"
                }
            },
            "required": [
                "vpnId"
            ],
            "inputProperties": {
                "comments": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string",
                    "description": "Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "preSharedKey": {
                    "type": "string",
                    "description": "Pre-shared key. This is a required field for UFQDN and IP auth type.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created. The supported values are: `UFQDN` and `IP`\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TrafficForwardingVPNCredentials resources.\n",
                "properties": {
                    "comments": {
                        "type": "string"
                    },
                    "fqdn": {
                        "type": "string",
                        "description": "Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.\n",
                        "willReplaceOnChanges": true
                    },
                    "ipAddress": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "preSharedKey": {
                        "type": "string",
                        "description": "Pre-shared key. This is a required field for UFQDN and IP auth type.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created. The supported values are: `UFQDN` and `IP`\n",
                        "willReplaceOnChanges": true
                    },
                    "vpnId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/uRLCategories:URLCategories": {
            "description": "The **zia_url_categories** resource creates and manages a new custom URL category. If keywords are included within the request, they will be added to the new category.\n\n## Example Usage\n\n```hcl\nresource \"zia_url_categories\" \"example\" {\n  super_category      = \"USER_DEFINED\"\n  configured_name     = \"MCAS Unsanctioned Apps\"\n  description         = \"MCAS Unsanctioned Apps\"\n  keywords            = [\"microsoft\"]\n  custom_category     = true\n  type                = \"URL_CATEGORY\"\n  scopes {\n    type = \"LOCATION\"\n    scope_entities {\n      id = [ data.zia_location_management.nyc_site.id ]\n    }\n    scope_group_member_entities {\n      id = [ data.zia_group_management.engineering.id ]\n    }\n  }\n  urls = [\n    \".coupons.com\",\n    \".resource.alaskaair.net\",\n    \".techrepublic.com\",\n    \".dailymotion.com\",\n    \".osiriscomm.com\",\n    \".uefa.com\",\n    \".Logz.io\",\n    \".alexa.com\",\n    \".baidu.com\",\n    \".cnn.com\",\n    \".level3.com\",\n  ]\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_url_categories** can be imported by using `\u003cCATEGORY_ID\u003e` or `\u003cCATEGORY_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/uRLCategories:URLCategories example \u003ccategory_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/uRLCategories:URLCategories example \u003ccategory_name\u003e\n```\n\n⚠️ **NOTE :**:  This provider only supports the importing of custom URL categories. The importing of built-in categories is not supported.\n\n",
            "properties": {
                "categoryId": {
                    "type": "string"
                },
                "configuredName": {
                    "type": "string",
                    "description": "Name of the URL category. This is only required for custom URL categories.\n"
                },
                "customCategory": {
                    "type": "boolean"
                },
                "customIpRangesCount": {
                    "type": "integer"
                },
                "customUrlsCount": {
                    "type": "integer"
                },
                "dbCategorizedUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "editable": {
                    "type": "boolean"
                },
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipRangesRetainingParentCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipRangesRetainingParentCategoryCount": {
                    "type": "integer"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keywordsRetainingParentCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/URLCategoriesScope:URLCategoriesScope"
                    }
                },
                "superCategory": {
                    "type": "string",
                    "description": "Super Category of the URL category. This field is required when creating custom URL categories.\n"
                },
                "type": {
                    "type": "string"
                },
                "urlKeywordCounts": {
                    "$ref": "#/types/zia:index/URLCategoriesUrlKeywordCounts:URLCategoriesUrlKeywordCounts"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "urlsRetainingParentCategoryCount": {
                    "type": "integer"
                }
            },
            "required": [
                "categoryId",
                "customIpRangesCount",
                "customUrlsCount",
                "editable",
                "ipRangesRetainingParentCategoryCount",
                "urlKeywordCounts",
                "urlsRetainingParentCategoryCount"
            ],
            "inputProperties": {
                "configuredName": {
                    "type": "string",
                    "description": "Name of the URL category. This is only required for custom URL categories.\n"
                },
                "customCategory": {
                    "type": "boolean"
                },
                "customIpRangesCount": {
                    "type": "integer"
                },
                "customUrlsCount": {
                    "type": "integer"
                },
                "dbCategorizedUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "editable": {
                    "type": "boolean"
                },
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipRangesRetainingParentCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipRangesRetainingParentCategoryCount": {
                    "type": "integer"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keywordsRetainingParentCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/URLCategoriesScope:URLCategoriesScope"
                    }
                },
                "superCategory": {
                    "type": "string",
                    "description": "Super Category of the URL category. This field is required when creating custom URL categories.\n"
                },
                "type": {
                    "type": "string"
                },
                "urlKeywordCounts": {
                    "$ref": "#/types/zia:index/URLCategoriesUrlKeywordCounts:URLCategoriesUrlKeywordCounts"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "urlsRetainingParentCategoryCount": {
                    "type": "integer"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering URLCategories resources.\n",
                "properties": {
                    "categoryId": {
                        "type": "string"
                    },
                    "configuredName": {
                        "type": "string",
                        "description": "Name of the URL category. This is only required for custom URL categories.\n"
                    },
                    "customCategory": {
                        "type": "boolean"
                    },
                    "customIpRangesCount": {
                        "type": "integer"
                    },
                    "customUrlsCount": {
                        "type": "integer"
                    },
                    "dbCategorizedUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "editable": {
                        "type": "boolean"
                    },
                    "ipRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipRangesRetainingParentCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipRangesRetainingParentCategoryCount": {
                        "type": "integer"
                    },
                    "keywords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "keywordsRetainingParentCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/URLCategoriesScope:URLCategoriesScope"
                        }
                    },
                    "superCategory": {
                        "type": "string",
                        "description": "Super Category of the URL category. This field is required when creating custom URL categories.\n"
                    },
                    "type": {
                        "type": "string"
                    },
                    "urlKeywordCounts": {
                        "$ref": "#/types/zia:index/URLCategoriesUrlKeywordCounts:URLCategoriesUrlKeywordCounts"
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "urlsRetainingParentCategoryCount": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/uRLFilteringCloudAppSettings:URLFilteringCloudAppSettings": {
            "description": "The **zia_url_filtering_and_cloud_app_settings** resource allows you to updates the the URL and Cloud App Control advanced policy settings To learn more see [Configuring Advanced Policy Settings](https://help.zscaler.com/unified/configuring-advanced-policy-settings)\n\n## Example Usage\n\n```hcl\nresource \"zia_url_filtering_and_cloud_app_settings\" \"this\" {\n    block_skype                             = true\n    consider_embedded_sites                 = false\n    enable_block_override_for_non_auth_user = false\n    enable_chatgpt_prompt                   = false\n    enable_cipa_compliance                  = false\n    enable_dynamic_content_cat              = true\n    enable_gemini_prompt                    = false\n    enable_meta_prompt                      = false\n    enable_microsoft_copilot_prompt         = false\n    enable_msft_o365                        = false\n    enable_newly_registered_domains         = false\n    enable_office365                        = true\n    enable_per_plexity_prompt               = false\n    enable_poep_prompt                      = false\n    enable_ucaas_logmein                    = false\n    enable_ucaas_ring_central               = false\n    enable_ucaas_talkdesk                   = false\n    enable_ucaas_webex                      = false\n    enable_ucaas_zoom                       = false\n    enforce_safe_search                     = false\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_url_filtering_and_cloud_app_settings** can be imported by using `app_setting` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/uRLFilteringCloudAppSettings:URLFilteringCloudAppSettings this \"app_setting\"\n```\n\n",
            "properties": {
                "blockSkype": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether access to Skype is blocked or not.\n"
                },
                "considerEmbeddedSites": {
                    "type": "boolean",
                    "description": "A Boolean value that indicates if URL filtering rules must be applied to sites that are translated using translation\nservices or not.\n"
                },
                "enableBlockOverrideForNonAuthUser": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if authorized users can temporarily override block action on websites by providing their\nauthentication information\n"
                },
                "enableChatgptPrompt": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the use of generative AI prompts with ChatGPT by users should be categorized and logged\n"
                },
                "enableCipaCompliance": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the predefined CIPA Compliance Rule is enabled or not.\n"
                },
                "enableDynamicContentCat": {
                    "type": "boolean",
                    "description": "A Boolean value that indicates if dynamic categorization of URLs by analyzing content of uncategorized websites using\nAI/ML tools is enabled or not.\n"
                },
                "enableGeminiPrompt": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the use of generative AI prompts with Google Gemini by users should be categorized and\nlogged\n"
                },
                "enableMetaPrompt": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the use of generative AI prompts with Meta AI by users should be categorized and logged\n"
                },
                "enableMicrosoftCopilotPrompt": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the use of generative AI prompts with Microsoft Copilot by users should be categorized and\nlogged\n"
                },
                "enableMsftO365": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the Zscaler service is allowed to permit secure local breakout for Office 365 traffic\nautomatically without any manual configuration needed.\n"
                },
                "enableNewlyRegisteredDomains": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether newly registered and observed domains that are identified within hours of going live\nare allowed or blocked\n"
                },
                "enableOffice365": {
                    "type": "boolean",
                    "description": "A Boolean value that enables or disables Microsoft Office 365 configuration.\n"
                },
                "enablePerPlexityPrompt": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the use of generative AI prompts with Perplexity by users should be categorized and logged\n"
                },
                "enablePoepPrompt": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the use of generative AI prompts with Poe by users should be categorized and logged\n"
                },
                "enableUcaasLogmein": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for GoTo\ntraffic, without any manual configuration needed.\n"
                },
                "enableUcaasRingCentral": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for\nRingCentral traffic, without any manual configuration needed.\n"
                },
                "enableUcaasTalkdesk": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for Talkdesk\ntraffic, with minimal or no manual configuration needed.\n"
                },
                "enableUcaasWebex": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for Webex\ntraffic, without any manual configuration needed.\n"
                },
                "enableUcaasZoom": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for Zoom\ntraffic, without any manual configuration needed.\n"
                },
                "enforceSafeSearch": {
                    "type": "boolean",
                    "description": "A Boolean value that indicates whether only safe content must be returned for web, image, and video search.\n"
                }
            },
            "required": [
                "blockSkype",
                "considerEmbeddedSites",
                "enableBlockOverrideForNonAuthUser",
                "enableChatgptPrompt",
                "enableCipaCompliance",
                "enableDynamicContentCat",
                "enableGeminiPrompt",
                "enableMetaPrompt",
                "enableMicrosoftCopilotPrompt",
                "enableMsftO365",
                "enableNewlyRegisteredDomains",
                "enableOffice365",
                "enablePerPlexityPrompt",
                "enablePoepPrompt",
                "enableUcaasLogmein",
                "enableUcaasRingCentral",
                "enableUcaasTalkdesk",
                "enableUcaasWebex",
                "enableUcaasZoom",
                "enforceSafeSearch"
            ],
            "inputProperties": {
                "blockSkype": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether access to Skype is blocked or not.\n"
                },
                "considerEmbeddedSites": {
                    "type": "boolean",
                    "description": "A Boolean value that indicates if URL filtering rules must be applied to sites that are translated using translation\nservices or not.\n"
                },
                "enableBlockOverrideForNonAuthUser": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if authorized users can temporarily override block action on websites by providing their\nauthentication information\n"
                },
                "enableChatgptPrompt": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the use of generative AI prompts with ChatGPT by users should be categorized and logged\n"
                },
                "enableCipaCompliance": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the predefined CIPA Compliance Rule is enabled or not.\n"
                },
                "enableDynamicContentCat": {
                    "type": "boolean",
                    "description": "A Boolean value that indicates if dynamic categorization of URLs by analyzing content of uncategorized websites using\nAI/ML tools is enabled or not.\n"
                },
                "enableGeminiPrompt": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the use of generative AI prompts with Google Gemini by users should be categorized and\nlogged\n"
                },
                "enableMetaPrompt": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the use of generative AI prompts with Meta AI by users should be categorized and logged\n"
                },
                "enableMicrosoftCopilotPrompt": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the use of generative AI prompts with Microsoft Copilot by users should be categorized and\nlogged\n"
                },
                "enableMsftO365": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the Zscaler service is allowed to permit secure local breakout for Office 365 traffic\nautomatically without any manual configuration needed.\n"
                },
                "enableNewlyRegisteredDomains": {
                    "type": "boolean",
                    "description": "A Boolean value indicating whether newly registered and observed domains that are identified within hours of going live\nare allowed or blocked\n"
                },
                "enableOffice365": {
                    "type": "boolean",
                    "description": "A Boolean value that enables or disables Microsoft Office 365 configuration.\n"
                },
                "enablePerPlexityPrompt": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the use of generative AI prompts with Perplexity by users should be categorized and logged\n"
                },
                "enablePoepPrompt": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the use of generative AI prompts with Poe by users should be categorized and logged\n"
                },
                "enableUcaasLogmein": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for GoTo\ntraffic, without any manual configuration needed.\n"
                },
                "enableUcaasRingCentral": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for\nRingCentral traffic, without any manual configuration needed.\n"
                },
                "enableUcaasTalkdesk": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for Talkdesk\ntraffic, with minimal or no manual configuration needed.\n"
                },
                "enableUcaasWebex": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for Webex\ntraffic, without any manual configuration needed.\n"
                },
                "enableUcaasZoom": {
                    "type": "boolean",
                    "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for Zoom\ntraffic, without any manual configuration needed.\n"
                },
                "enforceSafeSearch": {
                    "type": "boolean",
                    "description": "A Boolean value that indicates whether only safe content must be returned for web, image, and video search.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering URLFilteringCloudAppSettings resources.\n",
                "properties": {
                    "blockSkype": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether access to Skype is blocked or not.\n"
                    },
                    "considerEmbeddedSites": {
                        "type": "boolean",
                        "description": "A Boolean value that indicates if URL filtering rules must be applied to sites that are translated using translation\nservices or not.\n"
                    },
                    "enableBlockOverrideForNonAuthUser": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if authorized users can temporarily override block action on websites by providing their\nauthentication information\n"
                    },
                    "enableChatgptPrompt": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the use of generative AI prompts with ChatGPT by users should be categorized and logged\n"
                    },
                    "enableCipaCompliance": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the predefined CIPA Compliance Rule is enabled or not.\n"
                    },
                    "enableDynamicContentCat": {
                        "type": "boolean",
                        "description": "A Boolean value that indicates if dynamic categorization of URLs by analyzing content of uncategorized websites using\nAI/ML tools is enabled or not.\n"
                    },
                    "enableGeminiPrompt": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the use of generative AI prompts with Google Gemini by users should be categorized and\nlogged\n"
                    },
                    "enableMetaPrompt": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the use of generative AI prompts with Meta AI by users should be categorized and logged\n"
                    },
                    "enableMicrosoftCopilotPrompt": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the use of generative AI prompts with Microsoft Copilot by users should be categorized and\nlogged\n"
                    },
                    "enableMsftO365": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the Zscaler service is allowed to permit secure local breakout for Office 365 traffic\nautomatically without any manual configuration needed.\n"
                    },
                    "enableNewlyRegisteredDomains": {
                        "type": "boolean",
                        "description": "A Boolean value indicating whether newly registered and observed domains that are identified within hours of going live\nare allowed or blocked\n"
                    },
                    "enableOffice365": {
                        "type": "boolean",
                        "description": "A Boolean value that enables or disables Microsoft Office 365 configuration.\n"
                    },
                    "enablePerPlexityPrompt": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the use of generative AI prompts with Perplexity by users should be categorized and logged\n"
                    },
                    "enablePoepPrompt": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the use of generative AI prompts with Poe by users should be categorized and logged\n"
                    },
                    "enableUcaasLogmein": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for GoTo\ntraffic, without any manual configuration needed.\n"
                    },
                    "enableUcaasRingCentral": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for\nRingCentral traffic, without any manual configuration needed.\n"
                    },
                    "enableUcaasTalkdesk": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for Talkdesk\ntraffic, with minimal or no manual configuration needed.\n"
                    },
                    "enableUcaasWebex": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for Webex\ntraffic, without any manual configuration needed.\n"
                    },
                    "enableUcaasZoom": {
                        "type": "boolean",
                        "description": "A Boolean value indicating if the Zscaler service is allowed to automatically permit secure local breakout for Zoom\ntraffic, without any manual configuration needed.\n"
                    },
                    "enforceSafeSearch": {
                        "type": "boolean",
                        "description": "A Boolean value that indicates whether only safe content must be returned for web, image, and video search.\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/uRLFilteringRules:URLFilteringRules": {
            "description": "The **zia_url_filtering_rules** resource creates and manages a URL filtering rules within the Zscaler Internet Access cloud.\n\n## Example Usage\n\n### ALLOW ACTION\n\n```hcl\nresource \"zia_url_filtering_rules\" \"this\" {\n    name                  = \"Example\"\n    description           = \"Example\"\n    state                 = \"ENABLED\"\n    action                = \"ALLOW\"\n    order                 = 1\n    enforce_time_validity = true\n    validity_start_time   = \"Mon, 17 Jun 2024 23:30:00 UTC\"\n    validity_end_time     = \"Tue, 17 Jun 2025 23:00:00 UTC\"\n    validity_time_zone_id = \"US/Pacific\"\n    time_quota            = 15\n    size_quota            = 10\n    url_categories        = [\"ANY\"]\n    device_trust_levels   = [\"UNKNOWN_DEVICETRUSTLEVEL\", \"LOW_TRUST\", \"MEDIUM_TRUST\", \"HIGH_TRUST\"]\n    protocols             = [\"ANY_RULE\"]\n    request_methods       = [ \"CONNECT\", \"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"OTHER\", \"POST\", \"PUT\", \"TRACE\"]\n    user_agent_types      = [\"OPERA\", \"FIREFOX\", \"MSIE\", \"MSEDGE\", \"CHROME\", \"SAFARI\", \"MSCHREDGE\"]\n}\n```\n\n### BLOCK ACTION\n\n```hcl\nresource \"zia_url_filtering_rules\" \"this\" {\n    name                  = \"Example\"\n    description           = \"Example\"\n    state                 = \"ENABLED\"\n    action                = \"BLOCK\"\n    order                 = 1\n    enforce_time_validity = true\n    validity_start_time   = \"Mon, 17 Jun 2024 23:30:00 UTC\"\n    validity_end_time     = \"Tue, 17 Jun 2025 23:00:00 UTC\"\n    validity_time_zone_id = \"US/Pacific\"\n    time_quota = 15\n    size_quota = 10\n    url_categories        = [\"ANY\"]\n    device_trust_levels   = [\"UNKNOWN_DEVICETRUSTLEVEL\", \"LOW_TRUST\", \"MEDIUM_TRUST\", \"HIGH_TRUST\"]\n    protocols             = [\"ANY_RULE\"]\n    request_methods       = [ \"CONNECT\", \"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"OTHER\", \"POST\", \"PUT\", \"TRACE\"]\n    user_agent_types      = [\"OPERA\", \"FIREFOX\", \"MSIE\", \"MSEDGE\", \"CHROME\", \"SAFARI\", \"MSCHREDGE\"]\n    block_override        = true\n    override_users {\n      id = [ 45513075 ]\n    }\n    override_groups {\n      id = [ 76662385 ]\n    }\n}\n```\n\n### CAUTION ACTION\n\n```hcl\nresource \"zia_url_filtering_rules\" \"this\" {\n    name                  = \"Example\"\n    description           = \"Example\"\n    state                 = \"ENABLED\"\n    action                = \"CAUTION\"\n    order                 = 1\n    enforce_time_validity = true\n    validity_start_time   = \"Mon, 17 Jun 2024 23:30:00 UTC\"\n    validity_end_time     = \"Tue, 17 Jun 2025 23:00:00 UTC\"\n    validity_time_zone_id = \"US/Pacific\"\n    time_quota            = 15\n    size_quota            = 10\n    url_categories        = [\"ANY\"]\n    device_trust_levels   = [\"UNKNOWN_DEVICETRUSTLEVEL\", \"LOW_TRUST\", \"MEDIUM_TRUST\", \"HIGH_TRUST\"]\n    protocols             = [\"ANY_RULE\"]\n    request_methods       = [ \"CONNECT\", \"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"OTHER\", \"POST\", \"PUT\", \"TRACE\"]\n    user_agent_types      = [\"OPERA\", \"FIREFOX\", \"MSIE\", \"MSEDGE\", \"CHROME\", \"SAFARI\", \"MSCHREDGE\"]\n    end_user_notification_url = \"https://caution.acme.com\"\n}\n```\n\n### ISOLATE ACTION\n\n⚠️ **WARNING 1:**: Creating a URL Filtering rule with the action of `ISOLATE` requires the Cloud Browser Isolation subscription. To learn more, contact Zscaler Support or your local account team.\n\n```hcl\ndata \"zia_cloud_browser_isolation_profile\" \"this\" {\n    name = \"BD_SA_Profile1_ZIA\"\n}\n\nresource \"zia_url_filtering_rules\" \"this\" {\n    name                  = \"Example\"\n    description           = \"Example\"\n    state                 = \"ENABLED\"\n    action                = \"ISOLATE\"\n    order                 = 1\n    enforce_time_validity = true\n    validity_start_time   = \"Mon, 17 Jun 2024 23:30:00 UTC\"\n    validity_end_time     = \"Tue, 17 Jun 2025 23:00:00 UTC\"\n    validity_time_zone_id = \"US/Pacific\"\n    time_quota            = 15\n    size_quota            = 10\n    url_categories        = [\"ANY\"]\n    device_trust_levels   = [\"UNKNOWN_DEVICETRUSTLEVEL\", \"LOW_TRUST\", \"MEDIUM_TRUST\", \"HIGH_TRUST\"]\n    protocols             = [ \"HTTPS_RULE\", \"HTTP_RULE\" ]\n    request_methods       = [ \"CONNECT\", \"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"OTHER\", \"POST\", \"PUT\", \"TRACE\" ]\n    cbi_profile {\n        id = data.zia_cloud_browser_isolation_profile.this.id\n        name = data.zia_cloud_browser_isolation_profile.this.name\n        url = data.zia_cloud_browser_isolation_profile.this.url\n    }\n    user_agent_types = [ \"OPERA\", \"FIREFOX\", \"MSIE\", \"MSEDGE\", \"CHROME\", \"SAFARI\", \"MSCHREDGE\" ]\n}\n```\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_url_filtering_rules** can be imported by using `\u003cRULE_ID\u003e` or `\u003cRULE_NAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/uRLFilteringRules:URLFilteringRules example \u003crule_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/uRLFilteringRules:URLFilteringRules example \u003crule_name\u003e\n```\n\n",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action taken when traffic matches rule criteria\n"
                },
                "blockOverride": {
                    "type": "boolean"
                },
                "cbiProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/URLFilteringRulesCbiProfile:URLFilteringRulesCbiProfile"
                    }
                },
                "ciparule": {
                    "type": "boolean",
                    "description": "If set to true, the CIPA Compliance rule is enabled\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/URLFilteringRulesDepartments:URLFilteringRulesDepartments",
                    "description": "Name-ID pairs of departments for which rule must be applied\n"
                },
                "description": {
                    "type": "string",
                    "description": "Additional information about the URL Filtering rule\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/URLFilteringRulesDeviceGroups:URLFilteringRulesDeviceGroups",
                    "description": "This field is applicable for devices that are managed using Zscaler Client Connector.\n"
                },
                "deviceTrustLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed\nusing Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the\nZscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/URLFilteringRulesDevices:URLFilteringRulesDevices",
                    "description": "Name-ID pairs of devices for which rule must be applied.\n"
                },
                "endUserNotificationUrl": {
                    "type": "string",
                    "description": "URL of end user notification page to be displayed when the rule is matched. Not applicable if either 'overrideUsers' or\n'overrideGroups' is specified.\n"
                },
                "enforceTimeValidity": {
                    "type": "boolean",
                    "description": "Enforce a set a validity time period for the URL Filtering rule.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/URLFilteringRulesGroups:URLFilteringRulesGroups",
                    "description": "Name-ID pairs of groups for which rule must be applied\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/URLFilteringRulesLabels:URLFilteringRulesLabels",
                    "description": "The URL Filtering rule's label.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/URLFilteringRulesLocationGroups:URLFilteringRulesLocationGroups",
                    "description": "Name-ID pairs of the location groups to which the rule must be applied.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/URLFilteringRulesLocations:URLFilteringRulesLocations",
                    "description": "Name-ID pairs of locations for which rule must be applied\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Order of execution of rule with respect to other URL Filtering rules\n"
                },
                "overrideGroups": {
                    "$ref": "#/types/zia:index/URLFilteringRulesOverrideGroups:URLFilteringRulesOverrideGroups",
                    "description": "Name-ID pairs of groups for which this rule can be overridden.\n"
                },
                "overrideUsers": {
                    "$ref": "#/types/zia:index/URLFilteringRulesOverrideUsers:URLFilteringRulesOverrideUsers",
                    "description": "Name-ID pairs of users for which this rule can be overridden.\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Protocol criteria. Supported values: `SMRULEF_ZPA_BROKERS_RULE`, `ANY_RULE`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`, `TUNNELSSL_RULE`, `HTTP_PROXY`, `FOHTTP_RULE`, `FTP_RULE`, `HTTPS_RULE`, `HTTP_RULE`, `SSL_RULE`, `TUNNEL_RULE`, `WEBSOCKETSSL_RULE`, `WEBSOCKET_RULE`,\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank of the Firewall Filtering policy rule\n"
                },
                "requestMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Request method for which the rule must be applied. If not set, rule will be applied to all methods\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "URL Filtering Rule ID\n"
                },
                "sizeQuota": {
                    "type": "integer",
                    "description": "Size quota in KB beyond which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule\naction is set to 'BLOCK', this field is not applicable.\n"
                },
                "sourceIpGroups": {
                    "$ref": "#/types/zia:index/URLFilteringRulesSourceIpGroups:URLFilteringRulesSourceIpGroups",
                    "description": "list of source ip groups\n"
                },
                "state": {
                    "type": "string"
                },
                "timeQuota": {
                    "type": "integer",
                    "description": "Time quota in minutes, after which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule\naction is set to 'BLOCK', this field is not applicable.\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/URLFilteringRulesTimeWindows:URLFilteringRulesTimeWindows",
                    "description": "Name-ID pairs of time interval during which rule must be enforced.\n"
                },
                "urlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URL categories for which rule must be applied\n"
                },
                "userAgentTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported User Agent Types\n"
                },
                "userRiskScoreLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "$ref": "#/types/zia:index/URLFilteringRulesUsers:URLFilteringRulesUsers",
                    "description": "Name-ID pairs of users for which rule must be applied\n"
                },
                "validityEndTime": {
                    "type": "string",
                    "description": "If enforceTimeValidity is set to true, the URL Filtering rule ceases to be valid on this end date and time.\n"
                },
                "validityStartTime": {
                    "type": "string",
                    "description": "If enforceTimeValidity is set to true, the URL Filtering rule is valid starting on this date and time.\n"
                },
                "validityTimeZoneId": {
                    "type": "string",
                    "description": "If enforceTimeValidity is set to true, the URL Filtering rule date and time is valid based on this time zone ID. Use\nIANA Format TimeZone.\n"
                },
                "workloadGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/URLFilteringRulesWorkloadGroup:URLFilteringRulesWorkloadGroup"
                    },
                    "description": "The list of preconfigured workload groups to which the policy must be applied\n"
                }
            },
            "required": [
                "name",
                "order",
                "protocols",
                "ruleId",
                "workloadGroups"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Action taken when traffic matches rule criteria\n"
                },
                "blockOverride": {
                    "type": "boolean"
                },
                "cbiProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/URLFilteringRulesCbiProfile:URLFilteringRulesCbiProfile"
                    }
                },
                "ciparule": {
                    "type": "boolean",
                    "description": "If set to true, the CIPA Compliance rule is enabled\n"
                },
                "departments": {
                    "$ref": "#/types/zia:index/URLFilteringRulesDepartments:URLFilteringRulesDepartments",
                    "description": "Name-ID pairs of departments for which rule must be applied\n"
                },
                "description": {
                    "type": "string",
                    "description": "Additional information about the URL Filtering rule\n"
                },
                "deviceGroups": {
                    "$ref": "#/types/zia:index/URLFilteringRulesDeviceGroups:URLFilteringRulesDeviceGroups",
                    "description": "This field is applicable for devices that are managed using Zscaler Client Connector.\n"
                },
                "deviceTrustLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed\nusing Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the\nZscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation.\n"
                },
                "devices": {
                    "$ref": "#/types/zia:index/URLFilteringRulesDevices:URLFilteringRulesDevices",
                    "description": "Name-ID pairs of devices for which rule must be applied.\n"
                },
                "endUserNotificationUrl": {
                    "type": "string",
                    "description": "URL of end user notification page to be displayed when the rule is matched. Not applicable if either 'overrideUsers' or\n'overrideGroups' is specified.\n"
                },
                "enforceTimeValidity": {
                    "type": "boolean",
                    "description": "Enforce a set a validity time period for the URL Filtering rule.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/URLFilteringRulesGroups:URLFilteringRulesGroups",
                    "description": "Name-ID pairs of groups for which rule must be applied\n"
                },
                "labels": {
                    "$ref": "#/types/zia:index/URLFilteringRulesLabels:URLFilteringRulesLabels",
                    "description": "The URL Filtering rule's label.\n"
                },
                "locationGroups": {
                    "$ref": "#/types/zia:index/URLFilteringRulesLocationGroups:URLFilteringRulesLocationGroups",
                    "description": "Name-ID pairs of the location groups to which the rule must be applied.\n"
                },
                "locations": {
                    "$ref": "#/types/zia:index/URLFilteringRulesLocations:URLFilteringRulesLocations",
                    "description": "Name-ID pairs of locations for which rule must be applied\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firewall Filtering policy rule\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Order of execution of rule with respect to other URL Filtering rules\n"
                },
                "overrideGroups": {
                    "$ref": "#/types/zia:index/URLFilteringRulesOverrideGroups:URLFilteringRulesOverrideGroups",
                    "description": "Name-ID pairs of groups for which this rule can be overridden.\n"
                },
                "overrideUsers": {
                    "$ref": "#/types/zia:index/URLFilteringRulesOverrideUsers:URLFilteringRulesOverrideUsers",
                    "description": "Name-ID pairs of users for which this rule can be overridden.\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Protocol criteria. Supported values: `SMRULEF_ZPA_BROKERS_RULE`, `ANY_RULE`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`, `TUNNELSSL_RULE`, `HTTP_PROXY`, `FOHTTP_RULE`, `FTP_RULE`, `HTTPS_RULE`, `HTTP_RULE`, `SSL_RULE`, `TUNNEL_RULE`, `WEBSOCKETSSL_RULE`, `WEBSOCKET_RULE`,\n"
                },
                "rank": {
                    "type": "integer",
                    "description": "Admin rank of the Firewall Filtering policy rule\n"
                },
                "requestMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Request method for which the rule must be applied. If not set, rule will be applied to all methods\n"
                },
                "sizeQuota": {
                    "type": "integer",
                    "description": "Size quota in KB beyond which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule\naction is set to 'BLOCK', this field is not applicable.\n"
                },
                "sourceIpGroups": {
                    "$ref": "#/types/zia:index/URLFilteringRulesSourceIpGroups:URLFilteringRulesSourceIpGroups",
                    "description": "list of source ip groups\n"
                },
                "state": {
                    "type": "string"
                },
                "timeQuota": {
                    "type": "integer",
                    "description": "Time quota in minutes, after which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule\naction is set to 'BLOCK', this field is not applicable.\n"
                },
                "timeWindows": {
                    "$ref": "#/types/zia:index/URLFilteringRulesTimeWindows:URLFilteringRulesTimeWindows",
                    "description": "Name-ID pairs of time interval during which rule must be enforced.\n"
                },
                "urlCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URL categories for which rule must be applied\n"
                },
                "userAgentTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported User Agent Types\n"
                },
                "userRiskScoreLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "$ref": "#/types/zia:index/URLFilteringRulesUsers:URLFilteringRulesUsers",
                    "description": "Name-ID pairs of users for which rule must be applied\n"
                },
                "validityEndTime": {
                    "type": "string",
                    "description": "If enforceTimeValidity is set to true, the URL Filtering rule ceases to be valid on this end date and time.\n"
                },
                "validityStartTime": {
                    "type": "string",
                    "description": "If enforceTimeValidity is set to true, the URL Filtering rule is valid starting on this date and time.\n"
                },
                "validityTimeZoneId": {
                    "type": "string",
                    "description": "If enforceTimeValidity is set to true, the URL Filtering rule date and time is valid based on this time zone ID. Use\nIANA Format TimeZone.\n"
                },
                "workloadGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/zia:index/URLFilteringRulesWorkloadGroup:URLFilteringRulesWorkloadGroup"
                    },
                    "description": "The list of preconfigured workload groups to which the policy must be applied\n"
                }
            },
            "requiredInputs": [
                "order",
                "protocols"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering URLFilteringRules resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Action taken when traffic matches rule criteria\n"
                    },
                    "blockOverride": {
                        "type": "boolean"
                    },
                    "cbiProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/URLFilteringRulesCbiProfile:URLFilteringRulesCbiProfile"
                        }
                    },
                    "ciparule": {
                        "type": "boolean",
                        "description": "If set to true, the CIPA Compliance rule is enabled\n"
                    },
                    "departments": {
                        "$ref": "#/types/zia:index/URLFilteringRulesDepartments:URLFilteringRulesDepartments",
                        "description": "Name-ID pairs of departments for which rule must be applied\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Additional information about the URL Filtering rule\n"
                    },
                    "deviceGroups": {
                        "$ref": "#/types/zia:index/URLFilteringRulesDeviceGroups:URLFilteringRulesDeviceGroups",
                        "description": "This field is applicable for devices that are managed using Zscaler Client Connector.\n"
                    },
                    "deviceTrustLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed\nusing Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the\nZscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "devices": {
                        "$ref": "#/types/zia:index/URLFilteringRulesDevices:URLFilteringRulesDevices",
                        "description": "Name-ID pairs of devices for which rule must be applied.\n"
                    },
                    "endUserNotificationUrl": {
                        "type": "string",
                        "description": "URL of end user notification page to be displayed when the rule is matched. Not applicable if either 'overrideUsers' or\n'overrideGroups' is specified.\n"
                    },
                    "enforceTimeValidity": {
                        "type": "boolean",
                        "description": "Enforce a set a validity time period for the URL Filtering rule.\n"
                    },
                    "groups": {
                        "$ref": "#/types/zia:index/URLFilteringRulesGroups:URLFilteringRulesGroups",
                        "description": "Name-ID pairs of groups for which rule must be applied\n"
                    },
                    "labels": {
                        "$ref": "#/types/zia:index/URLFilteringRulesLabels:URLFilteringRulesLabels",
                        "description": "The URL Filtering rule's label.\n"
                    },
                    "locationGroups": {
                        "$ref": "#/types/zia:index/URLFilteringRulesLocationGroups:URLFilteringRulesLocationGroups",
                        "description": "Name-ID pairs of the location groups to which the rule must be applied.\n"
                    },
                    "locations": {
                        "$ref": "#/types/zia:index/URLFilteringRulesLocations:URLFilteringRulesLocations",
                        "description": "Name-ID pairs of locations for which rule must be applied\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Firewall Filtering policy rule\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Order of execution of rule with respect to other URL Filtering rules\n"
                    },
                    "overrideGroups": {
                        "$ref": "#/types/zia:index/URLFilteringRulesOverrideGroups:URLFilteringRulesOverrideGroups",
                        "description": "Name-ID pairs of groups for which this rule can be overridden.\n"
                    },
                    "overrideUsers": {
                        "$ref": "#/types/zia:index/URLFilteringRulesOverrideUsers:URLFilteringRulesOverrideUsers",
                        "description": "Name-ID pairs of users for which this rule can be overridden.\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Protocol criteria. Supported values: `SMRULEF_ZPA_BROKERS_RULE`, `ANY_RULE`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`, `TUNNELSSL_RULE`, `HTTP_PROXY`, `FOHTTP_RULE`, `FTP_RULE`, `HTTPS_RULE`, `HTTP_RULE`, `SSL_RULE`, `TUNNEL_RULE`, `WEBSOCKETSSL_RULE`, `WEBSOCKET_RULE`,\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "Admin rank of the Firewall Filtering policy rule\n"
                    },
                    "requestMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Request method for which the rule must be applied. If not set, rule will be applied to all methods\n"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": "URL Filtering Rule ID\n"
                    },
                    "sizeQuota": {
                        "type": "integer",
                        "description": "Size quota in KB beyond which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule\naction is set to 'BLOCK', this field is not applicable.\n"
                    },
                    "sourceIpGroups": {
                        "$ref": "#/types/zia:index/URLFilteringRulesSourceIpGroups:URLFilteringRulesSourceIpGroups",
                        "description": "list of source ip groups\n"
                    },
                    "state": {
                        "type": "string"
                    },
                    "timeQuota": {
                        "type": "integer",
                        "description": "Time quota in minutes, after which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule\naction is set to 'BLOCK', this field is not applicable.\n"
                    },
                    "timeWindows": {
                        "$ref": "#/types/zia:index/URLFilteringRulesTimeWindows:URLFilteringRulesTimeWindows",
                        "description": "Name-ID pairs of time interval during which rule must be enforced.\n"
                    },
                    "urlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URL categories for which rule must be applied\n"
                    },
                    "userAgentTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Supported User Agent Types\n"
                    },
                    "userRiskScoreLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "$ref": "#/types/zia:index/URLFilteringRulesUsers:URLFilteringRulesUsers",
                        "description": "Name-ID pairs of users for which rule must be applied\n"
                    },
                    "validityEndTime": {
                        "type": "string",
                        "description": "If enforceTimeValidity is set to true, the URL Filtering rule ceases to be valid on this end date and time.\n"
                    },
                    "validityStartTime": {
                        "type": "string",
                        "description": "If enforceTimeValidity is set to true, the URL Filtering rule is valid starting on this date and time.\n"
                    },
                    "validityTimeZoneId": {
                        "type": "string",
                        "description": "If enforceTimeValidity is set to true, the URL Filtering rule date and time is valid based on this time zone ID. Use\nIANA Format TimeZone.\n"
                    },
                    "workloadGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/URLFilteringRulesWorkloadGroup:URLFilteringRulesWorkloadGroup"
                        },
                        "description": "The list of preconfigured workload groups to which the policy must be applied\n"
                    }
                },
                "type": "object"
            }
        },
        "zia:index/userManagement:UserManagement": {
            "description": "The **zia_user_management** resource allows the creation and management of local user account in the Zscaler Internet Access cloud. The user account resource can then be associated with several different types of resource within the ZIA tenant.\n\n## Example Usage\n\n```hcl\n\ndata \"zia_group_management\" \"normal_internet\" {\n name = \"Normal_Internet\"\n}\n\ndata \"zia_department_management\" \"engineering\" {\n name = \"Engineering\"\n}\n\n# ZIA Local User Account\n######### PASSWORDS IN THIS FILE ARE FAKE AND NOT USED IN PRODUCTION SYSTEMS #########\nresource \"zia_user_management\" \"john_ashcroft\" {\n name         = \"John Ashcroft\"\n email        = \"john.ashcroft@acme.com\"\n password     = \"*********************\"\n auth_methods = [\"BASIC\"]\n groups {\n  id = data.zia_group_management.normal_internet.id\n  }\n department {\n  id = data.zia_department_management.engineering.id\n  }\n}\n```\n\n## Optional\n\nThe following attributes are supported:\n\n* `comments` - (Optional) Additional information about this user.\n* `temp_auth_email` - (Optional) Temporary Authentication Email. If you enabled one-time tokens or links, enter the email address to which the Zscaler service sends the tokens or links. If this is empty, the service will send the email to the User email.\n* `auth_methods` - (Optional) Type of authentication method to be enabled. Supported values is: ``BASIC``\n\n## Import\n\nZscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.\n\nVisit\n\n**zia_user_management** can be imported by using `\u003cUSER_ID\u003e` or `\u003cUSERNAME\u003e` as the import ID.\n\nFor example:\n\n```sh\n$ pulumi import zia:index/userManagement:UserManagement example \u003cuser_id\u003e\n```\n\nor\n\n```sh\n$ pulumi import zia:index/userManagement:UserManagement example \u003cname\u003e\n```\n\n⚠️ **NOTE :**:  This provider do not import the password attribute value during the importing process.\n\n",
            "properties": {
                "authMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepted Authentication Methods\n"
                },
                "comments": {
                    "type": "string",
                    "description": "Additional information about this user.\n"
                },
                "department": {
                    "$ref": "#/types/zia:index/UserManagementDepartment:UserManagementDepartment",
                    "description": "Department a user belongs to\n"
                },
                "email": {
                    "type": "string",
                    "description": "User email consists of a user name and domain name. It does not have to be a valid email address, but it must be unique and its domain must belong to the organization.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/UserManagementGroups:UserManagementGroups",
                    "description": "List of Groups a user belongs to. Groups are used in policies.\n"
                },
                "name": {
                    "type": "string",
                    "description": "User name. This appears when choosing users for policies.\n"
                },
                "password": {
                    "type": "string",
                    "description": "User's password. Applicable only when authentication type is Hosted DB. Password strength must follow what is defined in the auth settings.\n",
                    "secret": true
                },
                "tempAuthEmail": {
                    "type": "string",
                    "description": "Temporary Authentication Email. If you enabled one-time tokens or links, enter the email address to which the Zscaler\nservice sends the tokens or links. If this is empty, the service will send the email to the User email.\n"
                },
                "userId": {
                    "type": "integer"
                }
            },
            "required": [
                "department",
                "email",
                "name",
                "password",
                "userId"
            ],
            "inputProperties": {
                "authMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepted Authentication Methods\n"
                },
                "comments": {
                    "type": "string",
                    "description": "Additional information about this user.\n"
                },
                "department": {
                    "$ref": "#/types/zia:index/UserManagementDepartment:UserManagementDepartment",
                    "description": "Department a user belongs to\n"
                },
                "email": {
                    "type": "string",
                    "description": "User email consists of a user name and domain name. It does not have to be a valid email address, but it must be unique and its domain must belong to the organization.\n"
                },
                "groups": {
                    "$ref": "#/types/zia:index/UserManagementGroups:UserManagementGroups",
                    "description": "List of Groups a user belongs to. Groups are used in policies.\n"
                },
                "name": {
                    "type": "string",
                    "description": "User name. This appears when choosing users for policies.\n"
                },
                "password": {
                    "type": "string",
                    "description": "User's password. Applicable only when authentication type is Hosted DB. Password strength must follow what is defined in the auth settings.\n",
                    "secret": true
                },
                "tempAuthEmail": {
                    "type": "string",
                    "description": "Temporary Authentication Email. If you enabled one-time tokens or links, enter the email address to which the Zscaler\nservice sends the tokens or links. If this is empty, the service will send the email to the User email.\n"
                }
            },
            "requiredInputs": [
                "department",
                "email",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserManagement resources.\n",
                "properties": {
                    "authMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Accepted Authentication Methods\n"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Additional information about this user.\n"
                    },
                    "department": {
                        "$ref": "#/types/zia:index/UserManagementDepartment:UserManagementDepartment",
                        "description": "Department a user belongs to\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "User email consists of a user name and domain name. It does not have to be a valid email address, but it must be unique and its domain must belong to the organization.\n"
                    },
                    "groups": {
                        "$ref": "#/types/zia:index/UserManagementGroups:UserManagementGroups",
                        "description": "List of Groups a user belongs to. Groups are used in policies.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "User name. This appears when choosing users for policies.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password. Applicable only when authentication type is Hosted DB. Password strength must follow what is defined in the auth settings.\n",
                        "secret": true
                    },
                    "tempAuthEmail": {
                        "type": "string",
                        "description": "Temporary Authentication Email. If you enabled one-time tokens or links, enter the email address to which the Zscaler\nservice sends the tokens or links. If this is empty, the service will send the email to the User email.\n"
                    },
                    "userId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "pulumi:providers:zia/terraformConfig": {
            "description": "This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.",
            "inputs": {
                "properties": {
                    "__self__": {
                        "type": "ref",
                        "$ref": "#/resources/pulumi:providers:zia"
                    }
                },
                "type": "pulumi:providers:zia/terraformConfig",
                "required": [
                    "__self__"
                ]
            },
            "outputs": {
                "properties": {
                    "result": {
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            }
        },
        "zia:index/getATPMaliciousURLs:getATPMaliciousURLs": {
            "description": "Use the **zia_atp_malicious_urls** data source to Retrieves the malicious URLs added to the denylist in the Advanced Threat Protection (ATP) policy. To learn more see [Advanced Threat Protection](https://help.zscaler.com/unified/configuring-security-exceptions-advanced-threat-protection-policy)\n\n## Example Usage\n\n```hcl\ndata \"zia_atp_malicious_urls\" \"this\" {}\n```\n",
            "outputs": {
                "description": "A collection of values returned by getATPMaliciousURLs.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maliciousUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "maliciousUrls",
                    "id"
                ]
            }
        },
        "zia:index/getATPSecurityExceptions:getATPSecurityExceptions": {
            "description": "Use the **zia_atp_security_exceptions** data source to retrieve information about the security exceptions configured for the ATP policy. To learn more see [Advanced Threat Protection](https://help.zscaler.com/unified/configuring-security-exceptions-advanced-threat-protection-policy)\n\n## Example Usage\n\n```hcl\ndata \"zia_atp_security_exceptions\" \"this\" {}\n```\n",
            "outputs": {
                "description": "A collection of values returned by getATPSecurityExceptions.\n",
                "properties": {
                    "bypassUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "bypassUrls",
                    "id"
                ]
            }
        },
        "zia:index/getActivationStatus:getActivationStatus": {
            "description": "## Example Usage\n\n```hcl\ndata \"zia_activation_status\" \"activation\" {}\n\n```\n",
            "outputs": {
                "description": "A collection of values returned by getActivationStatus.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "id"
                ]
            }
        },
        "zia:index/getAdminRoles:getAdminRoles": {
            "description": "Use the **zia_admin_roles** data source to get information about an admin role created in the Zscaler Internet Access cloud or via the API. This data source can then be associated with a ZIA administrator account.\n\n## Example Usage\n\n```hcl\n# ZIA Admin Roles Data Source\ndata \"zia_admin_roles\" \"example\" {\n  name = \"Super Admin\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAdminRoles.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of the admin role to be exported.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Admin role to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAdminRoles.\n",
                "properties": {
                    "adminAcctAccess": {
                        "type": "string",
                        "description": "(String)\n"
                    },
                    "alertingAccess": {
                        "type": "string"
                    },
                    "analysisAccess": {
                        "type": "string",
                        "description": "(String)\n"
                    },
                    "dashboardAccess": {
                        "type": "string",
                        "description": "(String) Dashboard access permission. Supported values are: `NONE`, `READ_ONLY`\n"
                    },
                    "deviceInfoAccess": {
                        "type": "string"
                    },
                    "extFeaturePermissions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "featurePermissions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "integer"
                    },
                    "isAuditor": {
                        "type": "boolean",
                        "description": "(Boolean) Indicates whether this is an auditor role.\n"
                    },
                    "isNonEditable": {
                        "type": "boolean",
                        "description": "(Boolean) Indicates whether or not this admin user is editable/deletable.\n"
                    },
                    "logsLimit": {
                        "type": "string",
                        "description": "(String) Log range limit. Returned values are: `UNRESTRICTED`, `MONTH_1`, `MONTH_2`, `MONTH_3`, `MONTH_4`, `MONTH_5`, `MONTH_6`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of String) List of functional areas to which this role has access. This attribute is subject to change.\n"
                    },
                    "policyAccess": {
                        "type": "string",
                        "description": "(String) Policy access permission. Returned values are: `NONE`, `READ_ONLY`,`READ_WRITE`\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "(Number) Admin rank of this admin role. This is applicable only when admin rank is enabled in the advanced settings. Default value is 7 (the lowest rank). The assigned admin rank determines the roles or admin users this user can manage, and which rule orders this admin can access.\n"
                    },
                    "reportAccess": {
                        "type": "string",
                        "description": "(String) Report access permission. Returned values are: `NONE`, `READ_ONLY`,`READ_WRITE`\n"
                    },
                    "reportTimeDuration": {
                        "type": "integer"
                    },
                    "roleType": {
                        "type": "string",
                        "description": "(String) The admin role type. ()This attribute is subject to change.) Supported values are:  `ORG_ADMIN`, `EXEC_INSIGHT`, `EXEC_INSIGHT_AND_ORG_ADMIN`, `SDWAN`\n"
                    },
                    "usernameAccess": {
                        "type": "string",
                        "description": "(String) Username access permission. When set to NONE, the username will be obfuscated. Supported values are: `NONE|READ_ONLY`\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminAcctAccess",
                    "alertingAccess",
                    "analysisAccess",
                    "dashboardAccess",
                    "deviceInfoAccess",
                    "extFeaturePermissions",
                    "featurePermissions",
                    "id",
                    "isAuditor",
                    "isNonEditable",
                    "logsLimit",
                    "permissions",
                    "policyAccess",
                    "rank",
                    "reportAccess",
                    "reportTimeDuration",
                    "roleType",
                    "usernameAccess"
                ]
            }
        },
        "zia:index/getAdminUsers:getAdminUsers": {
            "description": "Use the **zia_admin_users** data source to get information about an admin user account created in the Zscaler Internet Access cloud or via the API. This data source can then be associated with a ZIA administrator role.\n\n## Example Usage\n\n```hcl\n# ZIA Admin User Data Source by login_name\ndata \"zia_admin_users\" \"john_doe\" {\n  login_name = \"john.doe@example.com\"\n}\n```\n\n```hcl\n# ZIA Admin User Data Source by username\ndata \"zia_admin_users\" \"john_doe\" {\n  username = \"John Doe\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAdminUsers.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of the admin user to be exported.\n"
                    },
                    "loginName": {
                        "type": "string",
                        "description": "The email address of the admin user to be exported.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the admin user to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAdminUsers.\n",
                "properties": {
                    "adminScopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getAdminUsersAdminScope:getAdminUsersAdminScope"
                        },
                        "description": "(Set of Object) The admin's scope. Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.\n"
                    },
                    "comments": {
                        "type": "string",
                        "description": "(String) Additional information about the admin or auditor.\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "(Boolean) Indicates whether or not the admin account is disabled.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "(String) Admin or auditor's email address.\n"
                    },
                    "execMobileAppTokens": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getAdminUsersExecMobileAppToken:getAdminUsersExecMobileAppToken"
                        },
                        "description": "(List of Object)\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Number) Identifier that uniquely identifies an entity\n"
                    },
                    "isAuditor": {
                        "type": "boolean",
                        "description": "(Boolean) Indicates whether the user is an auditor. This attribute is subject to change.\n"
                    },
                    "isExecMobileAppEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) Indicates whether or not Executive Insights App access is enabled for the admin.\n"
                    },
                    "isNonEditable": {
                        "type": "boolean",
                        "description": "(Boolean) Indicates whether or not the admin can be edited or deleted.\n"
                    },
                    "isPasswordExpired": {
                        "type": "boolean",
                        "description": "(Boolean) Indicates whether or not an admin's password has expired.\n"
                    },
                    "isPasswordLoginAllowed": {
                        "type": "boolean",
                        "description": "(Boolean) The default is true when SAML Authentication is disabled. When SAML Authentication is enabled, this can be set to false in order to force the admin to login via SSO only.\n"
                    },
                    "isProductUpdateCommEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) Communication setting for Product Update.\n"
                    },
                    "isSecurityReportCommEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) Communication for Security Report is enabled.\n"
                    },
                    "isServiceUpdateCommEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) Communication setting for Service Update.\n"
                    },
                    "loginName": {
                        "type": "string"
                    },
                    "pwdLastModifiedTime": {
                        "type": "integer"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getAdminUsersRole:getAdminUsersRole"
                        },
                        "description": "(Set of Object) Role of the admin. This is not required for an auditor.\n"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adminScopes",
                    "comments",
                    "disabled",
                    "email",
                    "execMobileAppTokens",
                    "id",
                    "isAuditor",
                    "isExecMobileAppEnabled",
                    "isNonEditable",
                    "isPasswordExpired",
                    "isPasswordLoginAllowed",
                    "isProductUpdateCommEnabled",
                    "isSecurityReportCommEnabled",
                    "isServiceUpdateCommEnabled",
                    "loginName",
                    "pwdLastModifiedTime",
                    "roles",
                    "username"
                ]
            }
        },
        "zia:index/getAdvancedSettings:getAdvancedSettings": {
            "description": "The **zia_advanced_settings** Retrieves information about the advanced settings configured in the ZIA Admin Portal. To learn more see [Configuring Advanced Settings](https://help.zscaler.com/zia/configuring-advanced-settings)\n\n## Example Usage\n\n```hcl\ndata \"zia_advanced_settings\" \"this\" {}\n```\n",
            "outputs": {
                "description": "A collection of values returned by getAdvancedSettings.\n",
                "properties": {
                    "authBypassApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "authBypassUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "authBypassUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "basicBypassApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "basicBypassUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blockConnectHostSniMismatch": {
                        "type": "boolean"
                    },
                    "blockDomainFrontingApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blockDomainFrontingOnHostHeader": {
                        "type": "boolean"
                    },
                    "blockHttpTunnelOnNonHttpPorts": {
                        "type": "boolean"
                    },
                    "blockNonCompliantHttpRequestOnHttpPorts": {
                        "type": "boolean"
                    },
                    "blockNonHttpOnHttpPortEnabled": {
                        "type": "boolean"
                    },
                    "cascadeUrlFiltering": {
                        "type": "boolean"
                    },
                    "digestAuthBypassApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "digestAuthBypassUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "digestAuthBypassUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsResolutionOnTransparentProxyApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsResolutionOnTransparentProxyExemptApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsResolutionOnTransparentProxyExemptUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsResolutionOnTransparentProxyExemptUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsResolutionOnTransparentProxyIpv6Apps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsResolutionOnTransparentProxyIpv6ExemptApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsResolutionOnTransparentProxyIpv6ExemptUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsResolutionOnTransparentProxyIpv6UrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsResolutionOnTransparentProxyUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsResolutionOnTransparentProxyUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "domainFrontingBypassUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dynamicUserRiskEnabled": {
                        "type": "boolean"
                    },
                    "ecsForAllEnabled": {
                        "type": "boolean"
                    },
                    "enableAdminRankAccess": {
                        "type": "boolean"
                    },
                    "enableDnsResolutionOnTransparentProxy": {
                        "type": "boolean"
                    },
                    "enableEvaluatePolicyOnGlobalSslBypass": {
                        "type": "boolean"
                    },
                    "enableIpv6DnsOptimizationOnAllTransparentProxy": {
                        "type": "boolean"
                    },
                    "enableIpv6DnsResolutionOnTransparentProxy": {
                        "type": "boolean"
                    },
                    "enableOffice365": {
                        "type": "boolean"
                    },
                    "enablePolicyForUnauthenticatedTraffic": {
                        "type": "boolean"
                    },
                    "enforceSurrogateIpForWindowsApp": {
                        "type": "boolean"
                    },
                    "http2NonbrowserTrafficEnabled": {
                        "type": "boolean"
                    },
                    "httpRangeHeaderRemoveUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kerberosBypassApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "kerberosBypassUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "kerberosBypassUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logInternalIp": {
                        "type": "boolean"
                    },
                    "preferSniOverConnHost": {
                        "type": "boolean"
                    },
                    "preferSniOverConnHostApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sipaXffHeaderEnabled": {
                        "type": "boolean"
                    },
                    "sniDnsOptimizationBypassUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "trackHttpTunnelOnHttpPorts": {
                        "type": "boolean"
                    },
                    "uiSessionTimeout": {
                        "type": "integer"
                    },
                    "zscalerClientConnector1AndPacRoadWarriorInFirewall": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "authBypassApps",
                    "authBypassUrlCategories",
                    "authBypassUrls",
                    "basicBypassApps",
                    "basicBypassUrlCategories",
                    "blockConnectHostSniMismatch",
                    "blockDomainFrontingApps",
                    "blockDomainFrontingOnHostHeader",
                    "blockHttpTunnelOnNonHttpPorts",
                    "blockNonCompliantHttpRequestOnHttpPorts",
                    "blockNonHttpOnHttpPortEnabled",
                    "cascadeUrlFiltering",
                    "digestAuthBypassApps",
                    "digestAuthBypassUrlCategories",
                    "digestAuthBypassUrls",
                    "dnsResolutionOnTransparentProxyApps",
                    "dnsResolutionOnTransparentProxyExemptApps",
                    "dnsResolutionOnTransparentProxyExemptUrlCategories",
                    "dnsResolutionOnTransparentProxyExemptUrls",
                    "dnsResolutionOnTransparentProxyIpv6Apps",
                    "dnsResolutionOnTransparentProxyIpv6ExemptApps",
                    "dnsResolutionOnTransparentProxyIpv6ExemptUrlCategories",
                    "dnsResolutionOnTransparentProxyIpv6UrlCategories",
                    "dnsResolutionOnTransparentProxyUrlCategories",
                    "dnsResolutionOnTransparentProxyUrls",
                    "domainFrontingBypassUrlCategories",
                    "dynamicUserRiskEnabled",
                    "ecsForAllEnabled",
                    "enableAdminRankAccess",
                    "enableDnsResolutionOnTransparentProxy",
                    "enableEvaluatePolicyOnGlobalSslBypass",
                    "enableIpv6DnsOptimizationOnAllTransparentProxy",
                    "enableIpv6DnsResolutionOnTransparentProxy",
                    "enableOffice365",
                    "enablePolicyForUnauthenticatedTraffic",
                    "enforceSurrogateIpForWindowsApp",
                    "http2NonbrowserTrafficEnabled",
                    "httpRangeHeaderRemoveUrlCategories",
                    "kerberosBypassApps",
                    "kerberosBypassUrlCategories",
                    "kerberosBypassUrls",
                    "logInternalIp",
                    "preferSniOverConnHost",
                    "preferSniOverConnHostApps",
                    "sipaXffHeaderEnabled",
                    "sniDnsOptimizationBypassUrlCategories",
                    "trackHttpTunnelOnHttpPorts",
                    "uiSessionTimeout",
                    "zscalerClientConnector1AndPacRoadWarriorInFirewall",
                    "id"
                ]
            }
        },
        "zia:index/getAdvancedThreatSettings:getAdvancedThreatSettings": {
            "description": "Use the **zia_advanced_threat_settings** data source to retrieve the advanced threat configuration settings in the ZIA Admin Portal. To learn more see [Advanced Threat Protection](https://help.zscaler.com/unified/configuring-security-exceptions-advanced-threat-protection-policy)\n\n## Example Usage\n\n```hcl\ndata \"zia_advanced_threat_settings\" \"this\" {}\n```\n",
            "outputs": {
                "description": "A collection of values returned by getAdvancedThreatSettings.\n",
                "properties": {
                    "activexBlocked": {
                        "type": "boolean"
                    },
                    "activexCapture": {
                        "type": "boolean"
                    },
                    "adSpywareSitesBlocked": {
                        "type": "boolean"
                    },
                    "adSpywareSitesCapture": {
                        "type": "boolean"
                    },
                    "alertForUnknownSuspiciousC2Traffic": {
                        "type": "boolean"
                    },
                    "anonymizerBlocked": {
                        "type": "boolean"
                    },
                    "anonymizerCapture": {
                        "type": "boolean"
                    },
                    "bitTorrentBlocked": {
                        "type": "boolean"
                    },
                    "bitTorrentCapture": {
                        "type": "boolean"
                    },
                    "blockCountriesCapture": {
                        "type": "boolean"
                    },
                    "blockedCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "browserExploitsBlocked": {
                        "type": "boolean"
                    },
                    "browserExploitsCapture": {
                        "type": "boolean"
                    },
                    "cmdCtlServerBlocked": {
                        "type": "boolean"
                    },
                    "cmdCtlServerCapture": {
                        "type": "boolean"
                    },
                    "cmdCtlTrafficBlocked": {
                        "type": "boolean"
                    },
                    "cmdCtlTrafficCapture": {
                        "type": "boolean"
                    },
                    "cookieStealingBlocked": {
                        "type": "boolean"
                    },
                    "cookieStealingPcapEnabled": {
                        "type": "boolean"
                    },
                    "cryptoMiningBlocked": {
                        "type": "boolean"
                    },
                    "cryptoMiningCapture": {
                        "type": "boolean"
                    },
                    "dgaDomainsBlocked": {
                        "type": "boolean"
                    },
                    "dgaDomainsCapture": {
                        "type": "boolean"
                    },
                    "fileFormatVunerabilitesBlocked": {
                        "type": "boolean"
                    },
                    "fileFormatVunerabilitesCapture": {
                        "type": "boolean"
                    },
                    "googleTalkBlocked": {
                        "type": "boolean"
                    },
                    "googleTalkCapture": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ircTunnellingBlocked": {
                        "type": "boolean"
                    },
                    "ircTunnellingCapture": {
                        "type": "boolean"
                    },
                    "knownPhishingSitesBlocked": {
                        "type": "boolean"
                    },
                    "knownPhishingSitesCapture": {
                        "type": "boolean"
                    },
                    "maliciousUrlsCapture": {
                        "type": "boolean"
                    },
                    "malwareSitesBlocked": {
                        "type": "boolean"
                    },
                    "malwareSitesCapture": {
                        "type": "boolean"
                    },
                    "potentialMaliciousRequestsBlocked": {
                        "type": "boolean"
                    },
                    "potentialMaliciousRequestsCapture": {
                        "type": "boolean"
                    },
                    "riskTolerance": {
                        "type": "integer"
                    },
                    "riskToleranceCapture": {
                        "type": "boolean"
                    },
                    "sshTunnellingBlocked": {
                        "type": "boolean"
                    },
                    "sshTunnellingCapture": {
                        "type": "boolean"
                    },
                    "suspectAdwareSpywareSitesBlocked": {
                        "type": "boolean"
                    },
                    "suspectAdwareSpywareSitesCapture": {
                        "type": "boolean"
                    },
                    "suspectedPhishingSitesBlocked": {
                        "type": "boolean"
                    },
                    "suspectedPhishingSitesCapture": {
                        "type": "boolean"
                    },
                    "torBlocked": {
                        "type": "boolean"
                    },
                    "torCapture": {
                        "type": "boolean"
                    },
                    "webSpamBlocked": {
                        "type": "boolean"
                    },
                    "webSpamCapture": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "activexBlocked",
                    "activexCapture",
                    "adSpywareSitesBlocked",
                    "adSpywareSitesCapture",
                    "alertForUnknownSuspiciousC2Traffic",
                    "anonymizerBlocked",
                    "anonymizerCapture",
                    "bitTorrentBlocked",
                    "bitTorrentCapture",
                    "blockCountriesCapture",
                    "blockedCountries",
                    "browserExploitsBlocked",
                    "browserExploitsCapture",
                    "cmdCtlServerBlocked",
                    "cmdCtlServerCapture",
                    "cmdCtlTrafficBlocked",
                    "cmdCtlTrafficCapture",
                    "cookieStealingBlocked",
                    "cookieStealingPcapEnabled",
                    "cryptoMiningBlocked",
                    "cryptoMiningCapture",
                    "dgaDomainsBlocked",
                    "dgaDomainsCapture",
                    "fileFormatVunerabilitesBlocked",
                    "fileFormatVunerabilitesCapture",
                    "googleTalkBlocked",
                    "googleTalkCapture",
                    "ircTunnellingBlocked",
                    "ircTunnellingCapture",
                    "knownPhishingSitesBlocked",
                    "knownPhishingSitesCapture",
                    "maliciousUrlsCapture",
                    "malwareSitesBlocked",
                    "malwareSitesCapture",
                    "potentialMaliciousRequestsBlocked",
                    "potentialMaliciousRequestsCapture",
                    "riskTolerance",
                    "riskToleranceCapture",
                    "sshTunnellingBlocked",
                    "sshTunnellingCapture",
                    "suspectAdwareSpywareSitesBlocked",
                    "suspectAdwareSpywareSitesCapture",
                    "suspectedPhishingSitesBlocked",
                    "suspectedPhishingSitesCapture",
                    "torBlocked",
                    "torCapture",
                    "webSpamBlocked",
                    "webSpamCapture",
                    "id"
                ]
            }
        },
        "zia:index/getAuthSettingsURLs:getAuthSettingsURLs": {
            "description": "Use the **zia_auth_settings_urls** data source to get a list of URLs that were exempted from cookie authentiation and SSL Inspection in the Zscaler Internet Access cloud or via the API. To learn more see [URL Format Guidelines](https://help.zscaler.com/zia/url-format-guidelines)\n\n## Example Usage\n\n```hcl\n# ZIA User Auth Settings Data Source\ndata \"zia_auth_settings_urls\" \"foo\" {}\n```\n",
            "outputs": {
                "description": "A collection of values returned by getAuthSettingsURLs.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "urls",
                    "id"
                ]
            }
        },
        "zia:index/getCbiProfile:getCbiProfile": {
            "description": "Use the **zia_cloud_browser_isolation_profile** data source to get information about an isolation profile in the Zscaler Internet Access cloud. This data source is required when configuring URL filtering rule where the action is set to `ISOLATE`\n\n## Example Usage\n\n```hcl\ndata \"zia_cloud_browser_isolation_profile\" \"this\" {\n    name = \"ZS_CBI_Profile1\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCbiProfile.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "(string) The universally unique identifier (UUID) for the browser isolation profile.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "This field defines the name of the isolation profile.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCbiProfile.\n",
                "properties": {
                    "defaultProfile": {
                        "type": "boolean",
                        "description": "(Optional) Indicates whether this is a default browser isolation profile. Zscaler sets this field\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "(string) The universally unique identifier (UUID) for the browser isolation profile.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "description": "(string) The browser isolation profile URL\n"
                    }
                },
                "type": "object",
                "required": [
                    "defaultProfile",
                    "url"
                ]
            }
        },
        "zia:index/getCloudAppControlRule:getCloudAppControlRule": {
            "description": "Use the **zia_cloud_app_control_rule** data source to get information about a ZIA Cloud Application Control Policy in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\n# Retrieve a Cloud App Control Policy by name\ndata \"zia_cloud_app_control_rule\" \"this\"{\n    name = \"Example\"\n    type = \"STREAMING_MEDIA\"\n}\n```\n\n## Cloud Application Control - Rule Types vs Actions Matrix\n\n**Note**: Refer to this matrix when configuring types vs actions for each specific rules\n\n|            Types                     |                    Actions                      |\n|:------------------------------------:|:-----------------------------------------------:|\n|--------------------------------------|-------------------------------------------------|\n|           `AI_ML`                    |          `ALLOW_AI_ML_WEB_USE`                  |\n|           `AI_ML`                    |          `CAUTION_AI_ML_WEB_USE`                |\n|           `AI_ML`                    |          `DENY_AI_ML_WEB_USE`                   |\n|           `AI_ML`                    |          `ISOLATE_AI_ML_WEB_USE`                |\n|--------------------------------------|-------------------------------------------------|\n|     `BUSINESS_PRODUCTIVITY`          |     `ALLOW_BUSINESS_PRODUCTIVITY_APPS`          |\n|     `BUSINESS_PRODUCTIVITY`          |     `BLOCK_BUSINESS_PRODUCTIVITY_APPS`          |\n|     `BUSINESS_PRODUCTIVITY`          |     `CAUTION_BUSINESS_PRODUCTIVITY_APPS`        |\n|     `BUSINESS_PRODUCTIVITY`          |     `ISOLATE_BUSINESS_PRODUCTIVITY_APPS`        |\n|--------------------------------------|-------------------------------------------------|\n|     `CONSUMER`                       |          `ALLOW_CONSUMER_APPS`                  |\n|     `CONSUMER`                       |          `BLOCK_CONSUMER_APPS`                  |\n|     `CONSUMER`                       |          `CAUTION_CONSUMER_APPS`                |\n|     `CONSUMER`                       |          `ISOLATE_CONSUMER_APPS`                |\n|--------------------------------------|-------------------------------------------------|\n|     `DNS_OVER_HTTPS`                 |          `ALLOW_DNS_OVER_HTTPS_USE`             |\n|     `DNS_OVER_HTTPS`                 |          `DENY_DNS_OVER_HTTPS_USE`              |\n|--------------------------------------|-------------------------------------------------|\n|     `ENTERPRISE_COLLABORATION`       |      `ALLOW_ENTERPRISE_COLLABORATION_APPS`      |\n|     `ENTERPRISE_COLLABORATION`       |      `BLOCK_ENTERPRISE_COLLABORATION_APPS`      |\n|     `ENTERPRISE_COLLABORATION`       |      `CAUTION_ENTERPRISE_COLLABORATION_APPS`    |\n|     `ENTERPRISE_COLLABORATION`       |      `ISOLATE_ENTERPRISE_COLLABORATION_APPS`    |\n|--------------------------------------|-------------------------------------------------|\n|     `FILE_SHARE`                     |          `ALLOW_FILE_SHARE_VIEW`                |\n|     `FILE_SHARE`                     |          `ALLOW_FILE_SHARE_UPLOAD`              |\n|     `FILE_SHARE`                     |          `CAUTION_FILE_SHARE_VIEW`              |\n|     `FILE_SHARE`                     |          `DENY_FILE_SHARE_VIEW`                 |\n|     `FILE_SHARE`                     |          `DENY_FILE_SHARE_UPLOAD`               |\n|     `FILE_SHARE`                     |          `ISOLATE_FILE_SHARE_VIEW`              |\n|--------------------------------------|-------------------------------------------------|\n|     `FINANCE`                        |          `ALLOW_FINANCE_USE`                    |\n|     `FINANCE`                        |          `CAUTION_FINANCE_USE`                  |\n|     `FINANCE`                        |          `DENY_FINANCE_USE`                     |\n|     `FINANCE`                        |          `ISOLATE_FINANCE_USE`                  |\n|--------------------------------------|-------------------------------------------------|\n|     `HEALTH_CARE`                    |          `ALLOW_HEALTH_CARE_USE`                |\n|     `HEALTH_CARE`                    |          `CAUTION_HEALTH_CARE_USE`              |\n|     `HEALTH_CARE`                    |          `DENY_HEALTH_CARE_USE`                 |\n|     `HEALTH_CARE`                    |          `ISOLATE_HEALTH_CARE_USE`              |\n|--------------------------------------|-------------------------------------------------|\n|     `HOSTING_PROVIDER`               |          `ALLOW_HOSTING_PROVIDER_USE`           |\n|     `HOSTING_PROVIDER`               |          `CAUTION_HOSTING_PROVIDER_USE`         |\n|     `HOSTING_PROVIDER`               |          `DENY_HOSTING_PROVIDER_USE`            |\n|     `HOSTING_PROVIDER`               |          `ISOLATE_HOSTING_PROVIDER_USE`         |\n|--------------------------------------|-------------------------------------------------|\n|     `HUMAN_RESOURCES`                |          `ALLOW_HUMAN_RESOURCES_USE`            |\n|     `HUMAN_RESOURCES`                |          `CAUTION_HUMAN_RESOURCES_USE`          |\n|     `HUMAN_RESOURCES`                |          `DENY_HUMAN_RESOURCES_USE`             |\n|     `HUMAN_RESOURCES`                |          `ISOLATE_HUMAN_RESOURCES_USE`          |\n|--------------------------------------|-------------------------------------------------|\n|     `INSTANT_MESSAGING`              |          `ALLOW_CHAT`                           |\n|     `INSTANT_MESSAGING`              |          `ALLOW_FILE_TRANSFER_IN_CHAT`          |\n|     `INSTANT_MESSAGING`              |          `BLOCK_CHAT`                           |\n|     `INSTANT_MESSAGING`              |          `BLOCK_FILE_TRANSFER_IN_CHAT`          |\n|     `INSTANT_MESSAGING`              |          `CAUTION_CHAT`                         |\n|     `INSTANT_MESSAGING`              |          `ISOLATE_CHAT`                         |\n|--------------------------------------|-------------------------------------------------|\n|     `IT_SERVICES`                    |          `ALLOW_IT_SERVICES_USE`                |\n|     `IT_SERVICES`                    |          `CAUTION_LEGAL_USE`                    |\n|     `IT_SERVICES`                    |          `DENY_IT_SERVICES_USE`                 |\n|     `IT_SERVICES`                    |          `ISOLATE_IT_SERVICES_USE`              |\n|--------------------------------------|-------------------------------------------------|\n|     `LEGAL`                          |          `ALLOW_LEGAL_USE`                      |\n|     `LEGAL`                          |          `DENY_DNS_OVER_HTTPS_USE`              |\n|     `LEGAL`                          |          `DENY_LEGAL_USE`                       |\n|     `LEGAL`                          |          `ISOLATE_LEGAL_USE`                    |\n|--------------------------------------|-------------------------------------------------|\n|     `SALES_AND_MARKETING`            |          `ALLOW_SALES_MARKETING_APPS`           |\n|     `SALES_AND_MARKETING`            |          `BLOCK_SALES_MARKETING_APPS`           |\n|     `SALES_AND_MARKETING`            |          `CAUTION_SALES_MARKETING_APPS`         |\n|     `SALES_AND_MARKETING`            |          `ISOLATE_SALES_MARKETING_APPS`         |\n|--------------------------------------|-------------------------------------------------|\n|     `STREAMING_MEDIA`                |          `ALLOW_STREAMING_VIEW_LISTEN`          |\n|     `STREAMING_MEDIA`                |          `ALLOW_STREAMING_UPLOAD`               |\n|     `STREAMING_MEDIA`                |          `BLOCK_STREAMING_UPLOAD`               |\n|     `STREAMING_MEDIA`                |          `CAUTION_STREAMING_VIEW_LISTEN`        |\n|     `STREAMING_MEDIA`                |          `ISOLATE_STREAMING_VIEW_LISTEN`        |\n|--------------------------------------|-------------------------------------------------|\n|     `SOCIAL_NETWORKING`              |          `ALLOW_SOCIAL_NETWORKING_VIEW`         |\n|     `SOCIAL_NETWORKING`              |          `ALLOW_SOCIAL_NETWORKING_POST`         |\n|     `SOCIAL_NETWORKING`              |          `BLOCK_SOCIAL_NETWORKING_VIEW`         |\n|     `SOCIAL_NETWORKING`              |          `BLOCK_SOCIAL_NETWORKING_POST`         |\n|     `SOCIAL_NETWORKING`              |          `CAUTION_SOCIAL_NETWORKING_VIEW`       |\n|--------------------------------------|-------------------------------------------------|\n|     `SYSTEM_AND_DEVELOPMENT`         |          `ALLOW_SYSTEM_DEVELOPMENT_APPS`        |\n|     `SYSTEM_AND_DEVELOPMENT`         |          `ALLOW_SYSTEM_DEVELOPMENT_UPLOAD`      |\n|     `SYSTEM_AND_DEVELOPMENT`         |          `BLOCK_SYSTEM_DEVELOPMENT_APPS`        |\n|     `SYSTEM_AND_DEVELOPMENT`         |          `BLOCK_SYSTEM_DEVELOPMENT_UPLOAD`      |\n|     `SYSTEM_AND_DEVELOPMENT`         |          `CAUTION_SYSTEM_DEVELOPMENT_APPS`      |\n|     `SYSTEM_AND_DEVELOPMENT`         |          `ISOLATE_SALES_MARKETING_APPS`         |\n|--------------------------------------|-------------------------------------------------|\n|     `WEBMAIL`                        |          `ALLOW_WEBMAIL_VIEW`                   |\n|     `WEBMAIL`                        |          `ALLOW_WEBMAIL_ATTACHMENT_SEND`        |\n|     `WEBMAIL`                        |          `ALLOW_WEBMAIL_SEND`                   |\n|     `WEBMAIL`                        |          `CAUTION_WEBMAIL_VIEW`                 |\n|     `WEBMAIL`                        |          `BLOCK_WEBMAIL_VIEW`                   |\n|     `WEBMAIL`                        |          `BLOCK_WEBMAIL_ATTACHMENT_SEND`        |\n|     `WEBMAIL`                        |          `BLOCK_WEBMAIL_SEND`                   |\n|     `WEBMAIL`                        |          `ISOLATE_WEBMAIL_VIEW`                 |\n|--------------------------------------|-------------------------------------------------|\n\n## Cloud Application Control - Rule Types vs Tenant Profile Support\n\n**Note**: Refer to this matrix when configuring a Cloud App Control rule with Tenant Profile\n\n[Reference](https://help.zscaler.com/zia/documentation-knowledgebase/policies/cloud-apps/cloud-app-control-policies)\n\n|               Type               |         Applications          | tenancy_profile_ids |\n|:--------------------------------:|:-----------------------------:|:-------------------:|\n|----------------------------------|-------------------------------|---------------------|\n| `BUSINESS_PRODUCTIVITY`          | `\"GOOGLEANALYTICS\"`           |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `ENTERPRISE_COLLABORATION`       | `\"GOOGLECALENDAR\"`            |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"GOOGLEKEEP\"`                |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"GOOGLEMEET\"`                |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"GOOGLESITES\"`               |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"WEBEX\"`                     |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"SLACK\"`                     |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"WEBEX_TEAMS\"`               |          ✅         |\n| `ENTERPRISE_COLLABORATION`       | `\"ZOOM\"`                      |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `FILE_SHARE`                     | `\"DROPBOX\"`                   |          ✅         |\n| `FILE_SHARE`                     | `\"GDRIVE\"`                    |          ✅         |\n| `FILE_SHARE`                     | `\"GPHOTOS\"`                   |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `HOSTING_PROVIDER`               | `\"GCLOUDCOMPUTE\"`             |          ✅         |\n| `HOSTING_PROVIDER`               | `\"AWS\"`                       |          ✅         |\n| `HOSTING_PROVIDER`               | `\"IBMSMARTCLOUD\"`             |          ✅         |\n| `HOSTING_PROVIDER`               | `\"GAPPENGINE\"`                |          ✅         |\n| `HOSTING_PROVIDER`               | `\"GOOGLE_CLOUD_PLATFORM\"`     |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `IT_SERVICES`                    | `\"MSLOGINSERVICES\"`           |          ✅         |\n| `IT_SERVICES`                    | `\"GOOGLOGINSERVICE\"`          |          ✅         |\n| `IT_SERVICES`                    | `\"WEBEX_LOGIN_SERVICES\"`      |          ✅         |\n| `IT_SERVICES`                    | `\"ZOHO_LOGIN_SERVICES\"`       |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `SOCIAL_NETWORKING`              | `\"GOOGLE_GROUPS\"`             |          ✅         |\n| `SOCIAL_NETWORKING`              | `\"GOOGLE_PLUS\"`               |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `STREAMING_MEDIA`                | `\"YOUTUBE\"`                   |          ✅         |\n| `STREAMING_MEDIA`                | `\"GOOGLE_STREAMING\"`          |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `SYSTEM_AND_DEVELOPMENT`         | `\"GOOGLE_DEVELOPERS\"`         |          ✅         |\n| `SYSTEM_AND_DEVELOPMENT`         | `\"GOOGLEAPPMAKER\"`            |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n| `WEBMAIL`                        | `\"GOOGLE_WEBMAIL\"`            |          ✅         |\n|----------------------------------|-------------------------------|---------------------|\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudAppControlRule.\n",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudAppControlRule.\n",
                "properties": {
                    "accessControl": {
                        "type": "string"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "browserEunTemplateId": {
                        "type": "integer"
                    },
                    "cascadingEnabled": {
                        "type": "boolean"
                    },
                    "cbiProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getCloudAppControlRuleCbiProfile:getCloudAppControlRuleCbiProfile"
                        }
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getCloudAppControlRuleDepartment:getCloudAppControlRuleDepartment"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "deviceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getCloudAppControlRuleDeviceGroup:getCloudAppControlRuleDeviceGroup"
                        }
                    },
                    "deviceTrustLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getCloudAppControlRuleDevice:getCloudAppControlRuleDevice"
                        }
                    },
                    "enforceTimeValidity": {
                        "type": "boolean"
                    },
                    "eunEnabled": {
                        "type": "boolean"
                    },
                    "eunTemplateId": {
                        "type": "integer"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getCloudAppControlRuleGroup:getCloudAppControlRuleGroup"
                        }
                    },
                    "id": {
                        "type": "integer"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getCloudAppControlRuleLabel:getCloudAppControlRuleLabel"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer"
                    },
                    "locationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getCloudAppControlRuleLocationGroup:getCloudAppControlRuleLocationGroup"
                        }
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getCloudAppControlRuleLocation:getCloudAppControlRuleLocation"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "numberOfApplications": {
                        "type": "integer"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "predefined": {
                        "type": "boolean"
                    },
                    "rank": {
                        "type": "integer"
                    },
                    "sizeQuota": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "timeQuota": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "userAgentTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getCloudAppControlRuleUser:getCloudAppControlRuleUser"
                        }
                    },
                    "validityEndTime": {
                        "type": "integer"
                    },
                    "validityStartTime": {
                        "type": "integer"
                    },
                    "validityTimeZoneId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessControl",
                    "actions",
                    "applications",
                    "browserEunTemplateId",
                    "cascadingEnabled",
                    "cbiProfiles",
                    "departments",
                    "description",
                    "deviceGroups",
                    "deviceTrustLevels",
                    "devices",
                    "enforceTimeValidity",
                    "eunEnabled",
                    "eunTemplateId",
                    "groups",
                    "labels",
                    "lastModifiedTime",
                    "locationGroups",
                    "locations",
                    "numberOfApplications",
                    "order",
                    "predefined",
                    "rank",
                    "sizeQuota",
                    "state",
                    "timeQuota",
                    "userAgentTypes",
                    "users",
                    "validityEndTime",
                    "validityStartTime",
                    "validityTimeZoneId"
                ]
            }
        },
        "zia:index/getCloudApplications:getCloudApplications": {
            "description": "Use the **zia_cloud_applications** data source to Retrieves a list of Predefined and User Defined Cloud Applications associated with the DLP rules, Cloud App Control rules, Advanced Settings, Bandwidth Classes, File Type Control and SSL Inspection rules. The returned information can be associated with the attribute `cloud_applications` on supported rules.\n\n```hcl\ndata \"zia_cloud_applications\" \"this\" {\n  policy_type = \"cloud_application_policy\"\n}\n\noutput \"zia_cloud_applications\" {\n  value = data.zia_cloud_applications.this\n}\n\ndata \"zia_cloud_applications\" \"this\" {\n  policy_type = \"cloud_application_policy\"\n  app_class   = [\"AI_ML\"]\n}\n\noutput \"app_ids\" {\n  value = [for app in data.zia_cloud_applications.this.applications : app[\"app\"]]\n}\n\ndata \"zia_cloud_applications\" \"this\" {\n  policy_type = \"cloud_application_ssl_policy\"\n  app_class = [\"SOCIAL_NETWORKING\"]\n  app_name = \"Nebenan\"\n}\n\noutput \"zia_cloud_applications\" {\n    value = data.zia_cloud_applications.this\n}\n\n\ndata \"zia_cloud_applications\" \"this\" {\n  policy_type = \"cloud_application_ssl_policy\"\n}\n\noutput \"zia_cloud_applications\" {\n  value = data.zia_cloud_applications.this\n}\n\n#Retrieves and Filter Cloud Application associated with a SSL inspection rule by application category\ndata \"zia_cloud_applications\" \"this\" {\n  policy_type = \"cloud_application_ssl_policy\"\n  app_class   = [\"AI_ML\"]\n}\n\noutput \"app_ids\" {\n  value = [for app in data.zia_cloud_applications.this.applications : app[\"app\"]]\n}\n\ndata \"zia_cloud_applications\" \"this\" {\n  policy_type = \"cloud_application_ssl_policy\"\n  app_class = [\"SOCIAL_NETWORKING\"]\n  app_name = \"Nebenan\"\n}\n\noutput \"zia_cloud_applications\" {\n    value = data.zia_cloud_applications.this\n}\n```\n\n## Cloud Application Category App Class Matrix\n\n**Note**: Refer to this matrix when configuring types vs actions for each specific rules\n\n|             App Class                       |\n|:-------------------------------------------:|\n|---------------------------------------------|\n|               `WEBMAIL`                     |\n|           `SOCIAL_NETWORKING`               |\n|              `STREAMING`                    |\n|                 `P2P`                       |\n|            `INSTANT_MESSAGING`              |\n|               `WEB_SEARCH`                  |\n|            `GENERAL_BROWSING`               |\n|               `ADMINISTRATION`              |\n|               `ENTERPRISE_COLLABORATION`    |\n|               `BUSINESS_PRODUCTIVITY`       |\n|               `SALES_AND_MARKETING`         |\n|               `SYSTEM_AND_DEVELOPMENT`      |\n|               `CONSUMER`                    |\n|               `FILE_SHARE`                  |\n|               `HOSTING_PROVIDER`            |\n|               `IT_SERVICES`                 |\n|               `DNS_OVER_HTTPS`              |\n|               `HUMAN_RESOURCES`             |\n|               `LEGAL`                       |\n|               `HEALTH_CARE`                 |\n|               `FINANCE`                     |\n|               `CUSTOM_CAPP`                 |\n|               `AI_ML`                       |\n|---------------------------------------------|\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudApplications.\n",
                "properties": {
                    "appClasses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of Strings) Filter application by application category\n"
                    },
                    "appName": {
                        "type": "string",
                        "description": "(String) Cloud application name\n"
                    },
                    "policyType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "policyType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudApplications.\n",
                "properties": {
                    "appClasses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of Strings) Filter application by application category\n"
                    },
                    "appName": {
                        "type": "string",
                        "description": "(String) Cloud application name\n"
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getCloudApplicationsApplication:getCloudApplicationsApplication"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "policyType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "applications",
                    "policyType",
                    "id"
                ]
            }
        },
        "zia:index/getDLPDictionaries:getDLPDictionaries": {
            "description": "Use the **zia_dlp_dictionaries** data source to get information about a DLP dictionary option available in the Zscaler Internet Access.\n\n```hcl\ndata \"zia_dlp_dictionaries\" \"example\"{\n    name = \"SALESFORCE_REPORT_LEAKAGE\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDLPDictionaries.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier for the DLP dictionary\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "DLP dictionary name\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDLPDictionaries.\n",
                "properties": {
                    "binNumbers": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "(Boolean) The list of Bank Identification Number (BIN) values that are included or excluded from the Credit Cards dictionary. BIN values can be specified only for Diners Club, Mastercard, RuPay, and Visa cards. Up to 512 BIN values can be configured in a dictionary. Note: This field is applicable only to the predefined Credit Cards dictionary and its clones.\n"
                    },
                    "confidenceLevelForPredefinedDict": {
                        "type": "string",
                        "description": "(Optional) The DLP confidence threshold for predefined dictionaries. The following values are supported:\n* `CONFIDENCE_LEVEL_LOW`\n* `CONFIDENCE_LEVEL_MEDIUM`\n* `CONFIDENCE_LEVEL_HIGH`\n"
                    },
                    "confidenceThreshold": {
                        "type": "string",
                        "description": "(String) he DLP confidence threshold. [`CONFIDENCE_LEVEL_LOW`, `CONFIDENCE_LEVEL_MEDIUM` `CONFIDENCE_LEVEL_HIGH` ]\n"
                    },
                    "custom": {
                        "type": "boolean",
                        "description": "(Boolean) This value is set to true for custom DLP dictionaries.\n"
                    },
                    "customPhraseMatchType": {
                        "type": "string",
                        "description": "(String) The DLP custom phrase match type. [ `MATCH_ALL_CUSTOM_PHRASE_PATTERN_DICTIONARY`, `MATCH_ANY_CUSTOM_PHRASE_PATTERN_DICTIONARY` ]\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dictTemplateId": {
                        "type": "integer",
                        "description": "(Number) ID of the predefined dictionary (original source dictionary) that is used for cloning. This field is applicable only to cloned dictionaries. Only a limited set of identification-based predefined dictionaries (e.g., Credit Cards, Social Security Numbers, National Identification Numbers, etc.) can be cloned. Up to 4 clones can be created from a predefined dictionary.\n"
                    },
                    "dictionaryType": {
                        "type": "string",
                        "description": "(String) The DLP dictionary type. The cloud service API only supports custom DLP dictionaries that are using the `PATTERNS_AND_PHRASES` type.\n"
                    },
                    "exactDataMatchDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPDictionariesExactDataMatchDetail:getDLPDictionariesExactDataMatchDetail"
                        }
                    },
                    "id": {
                        "type": "integer"
                    },
                    "idmProfileMatchAccuracies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPDictionariesIdmProfileMatchAccuracy:getDLPDictionariesIdmProfileMatchAccuracy"
                        }
                    },
                    "ignoreExactMatchIdmDict": {
                        "type": "boolean",
                        "description": "(Boolean) Indicates whether to exclude documents that are a 100% match to already-indexed documents from triggering an Indexed Document Match (IDM) Dictionary.\n"
                    },
                    "includeBinNumbers": {
                        "type": "boolean",
                        "description": "(Boolean) A true value denotes that the specified Bank Identification Number (BIN) values are included in the Credit Cards dictionary. A false value denotes that the specified BIN values are excluded from the Credit Cards dictionary. Note: This field is applicable only to the predefined Credit Cards dictionary and its clones.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameL10nTag": {
                        "type": "boolean",
                        "description": "(Boolean) Indicates whether the name is localized or not. This is always set to True for predefined DLP dictionaries.\n"
                    },
                    "patterns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPDictionariesPattern:getDLPDictionariesPattern"
                        }
                    },
                    "phrases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPDictionariesPhrase:getDLPDictionariesPhrase"
                        }
                    },
                    "predefinedClone": {
                        "type": "boolean",
                        "description": "(Boolean) This field is set to true if the dictionary is cloned from a predefined dictionary. Otherwise, it is set to false.\n"
                    },
                    "proximity": {
                        "type": "integer"
                    },
                    "proximityLengthEnabled": {
                        "type": "boolean"
                    },
                    "thresholdType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "binNumbers",
                    "confidenceLevelForPredefinedDict",
                    "confidenceThreshold",
                    "custom",
                    "customPhraseMatchType",
                    "description",
                    "dictTemplateId",
                    "dictionaryType",
                    "exactDataMatchDetails",
                    "id",
                    "idmProfileMatchAccuracies",
                    "ignoreExactMatchIdmDict",
                    "includeBinNumbers",
                    "name",
                    "nameL10nTag",
                    "patterns",
                    "phrases",
                    "predefinedClone",
                    "proximity",
                    "proximityLengthEnabled",
                    "thresholdType"
                ]
            }
        },
        "zia:index/getDLPEDMSchema:getDLPEDMSchema": {
            "description": "Use the **zia_dlp_edm_schema** data source to get information about a the list of DLP Exact Data Match (EDM) templates in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\n# Retrieve a DLP Exact Data Match (EDM) by name\ndata \"zia_dlp_edm_schema\" \"this\"{\n    project_name = \"Example\"\n}\n```\n\n```hcl\n# Retrieve a DLP Exact Data Match (EDM) by ID\ndata \"zia_dlp_edm_schema\" \"example\"{\n    schema_id = 1234567890\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDLPEDMSchema.\n",
                "properties": {
                    "projectName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDLPEDMSchema.\n",
                "properties": {
                    "cellsUsed": {
                        "type": "integer"
                    },
                    "createdBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPEDMSchemaCreatedBy:getDLPEDMSchemaCreatedBy"
                        }
                    },
                    "edmClients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPEDMSchemaEdmClient:getDLPEDMSchemaEdmClient"
                        }
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "fileUploadStatus": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPEDMSchemaLastModifiedBy:getDLPEDMSchemaLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer"
                    },
                    "origColCount": {
                        "type": "integer"
                    },
                    "originalFileName": {
                        "type": "string"
                    },
                    "projectName": {
                        "type": "string"
                    },
                    "revision": {
                        "type": "integer"
                    },
                    "schedulePresent": {
                        "type": "boolean"
                    },
                    "schedules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPEDMSchemaSchedule:getDLPEDMSchemaSchedule"
                        }
                    },
                    "schemaActive": {
                        "type": "boolean"
                    },
                    "schemaId": {
                        "type": "integer"
                    },
                    "tokenLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPEDMSchemaTokenList:getDLPEDMSchemaTokenList"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "cellsUsed",
                    "createdBies",
                    "edmClients",
                    "fileName",
                    "fileUploadStatus",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "origColCount",
                    "originalFileName",
                    "revision",
                    "schedules",
                    "schedulePresent",
                    "schemaActive",
                    "schemaId",
                    "tokenLists",
                    "id"
                ]
            }
        },
        "zia:index/getDLPEngines:getDLPEngines": {
            "description": "Use the **zia_dlp_engines** data source to get information about a ZIA DLP Engines in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\n# Retrieve a DLP Engine by name\ndata \"zia_dlp_engines\" \"this\"{\n    name = \"Example\"\n}\n```\n\n```hcl\n# Retrieve a DLP Engine by ID\ndata \"zia_dlp_engines\" \"this\"{\n    id = 1234567890\n}\n```\n\n```hcl\n# Retrieve a Predefined DLP Engine\ndata \"zia_dlp_engines\" \"this\"{\n    predefined = \"EXTERNAL\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDLPEngines.\n",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "predefinedEngineName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDLPEngines.\n",
                "properties": {
                    "customDlpEngine": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "engineExpression": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "predefinedEngineName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "customDlpEngine",
                    "description",
                    "engineExpression"
                ]
            }
        },
        "zia:index/getDLPIDMProfileLite:getDLPIDMProfileLite": {
            "description": "Use the **zia_dlp_idm_profile_lite** data source to get summarized information about a ZIA DLP IDM Profile Lite in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\n# Retrieve a DLP IDM Profile Lite by name\ndata \"zia_dlp_idm_profile_lite\" \"example\"{\n    name = \"Example\"\n}\n```\n\n```hcl\n# Retrieve a DLP IDM Profile Lite by ID\ndata \"zia_dlp_idm_profile_lite\" \"example\"{\n    name = \"Example\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDLPIDMProfileLite.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDLPIDMProfileLite.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean"
                    },
                    "clientVms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPIDMProfileLiteClientVm:getDLPIDMProfileLiteClientVm"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPIDMProfileLiteLastModifiedBy:getDLPIDMProfileLiteLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer"
                    },
                    "numDocuments": {
                        "type": "integer"
                    },
                    "profileId": {
                        "type": "integer"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clientVms",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "numDocuments",
                    "profileId",
                    "id"
                ]
            }
        },
        "zia:index/getDLPIDMProfiles:getDLPIDMProfiles": {
            "description": "Use the **zia_dlp_idm_profile** data source to get information about a ZIA DLP IDM Profile in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\n# Retrieve a DLP IDM Profile by name\ndata \"zia_dlp_idm_profile\" \"example\"{\n    name = \"Example\"\n}\n```\n\n```hcl\n# Retrieve a DLP IDM Profile by ID\ndata \"zia_dlp_idm_profile\" \"example\"{\n    name = \"Example\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDLPIDMProfiles.\n",
                "properties": {
                    "profileName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDLPIDMProfiles.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "idmClients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPIDMProfilesIdmClient:getDLPIDMProfilesIdmClient"
                        }
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPIDMProfilesLastModifiedBy:getDLPIDMProfilesLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer"
                    },
                    "numDocuments": {
                        "type": "integer"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "profileDesc": {
                        "type": "string"
                    },
                    "profileDirPath": {
                        "type": "string"
                    },
                    "profileId": {
                        "type": "integer"
                    },
                    "profileName": {
                        "type": "string"
                    },
                    "profileType": {
                        "type": "string"
                    },
                    "scheduleDay": {
                        "type": "integer"
                    },
                    "scheduleDayOfMonths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scheduleDayOfWeeks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scheduleDisabled": {
                        "type": "boolean"
                    },
                    "scheduleTime": {
                        "type": "integer"
                    },
                    "scheduleType": {
                        "type": "string"
                    },
                    "uploadStatus": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "volumeOfDocuments": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "idmClients",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "numDocuments",
                    "port",
                    "profileDesc",
                    "profileDirPath",
                    "profileId",
                    "profileType",
                    "scheduleDay",
                    "scheduleDayOfMonths",
                    "scheduleDayOfWeeks",
                    "scheduleDisabled",
                    "scheduleTime",
                    "scheduleType",
                    "uploadStatus",
                    "username",
                    "version",
                    "volumeOfDocuments",
                    "id"
                ]
            }
        },
        "zia:index/getDLPIncidentReceiverServers:getDLPIncidentReceiverServers": {
            "description": "Use the **zia_dlp_incident_receiver_servers** data source to get information about a ZIA DLP Incident Receiver Server in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\n# Retrieve a DLP Incident Receiver Server by name\ndata \"zia_dlp_incident_receiver_servers\" \"this\" {\n  name = \"ZS_Incident_Receiver\"\n}\n```\n\n```hcl\n# Retrieve a DLP Incident Receiver Server by ID\ndata \"zia_dlp_incident_receiver_servers\" \"this\"{\n    id = 1234567890\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDLPIncidentReceiverServers.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDLPIncidentReceiverServers.\n",
                "properties": {
                    "flags": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "flags",
                    "id",
                    "status",
                    "url"
                ]
            }
        },
        "zia:index/getDLPNotificationTemplates:getDLPNotificationTemplates": {
            "description": "Use the **zia_dlp_notification_templates** data source to get information about a ZIA DLP Notification Templates in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\n# Retrieve a DLP Template by name\ndata \"zia_dlp_notification_templates\" \"example\"{\n    name = \"DLP Auditor Template Test\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDLPNotificationTemplates.\n",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDLPNotificationTemplates.\n",
                "properties": {
                    "attachContent": {
                        "type": "boolean"
                    },
                    "htmlMessage": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "plainTextMessage": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "tlsEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "attachContent",
                    "htmlMessage",
                    "id",
                    "name",
                    "plainTextMessage",
                    "subject",
                    "tlsEnabled"
                ]
            }
        },
        "zia:index/getDLPWebRules:getDLPWebRules": {
            "description": "Use the **zia_dlp_web_rules** data source to get information about a ZIA DLP Web Rules in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\n# Retrieve a DLP Web Rule by name\ndata \"zia_dlp_web_rules\" \"example\"{\n    name = \"Example\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDLPWebRules.\n",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDLPWebRules.\n",
                "properties": {
                    "accessControl": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "cloudApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesDepartment:getDLPWebRulesDepartment"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "dlpDownloadScanEnabled": {
                        "type": "boolean"
                    },
                    "dlpEngines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesDlpEngine:getDLPWebRulesDlpEngine"
                        }
                    },
                    "excludedDepartments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesExcludedDepartment:getDLPWebRulesExcludedDepartment"
                        }
                    },
                    "excludedGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesExcludedGroup:getDLPWebRulesExcludedGroup"
                        }
                    },
                    "excludedUsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesExcludedUser:getDLPWebRulesExcludedUser"
                        }
                    },
                    "externalAuditorEmail": {
                        "type": "string"
                    },
                    "fileTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesGroup:getDLPWebRulesGroup"
                        }
                    },
                    "id": {
                        "type": "integer"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesLabel:getDLPWebRulesLabel"
                        }
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesLastModifiedBy:getDLPWebRulesLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer"
                    },
                    "locationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesLocationGroup:getDLPWebRulesLocationGroup"
                        }
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesLocation:getDLPWebRulesLocation"
                        }
                    },
                    "matchOnly": {
                        "type": "boolean"
                    },
                    "minSize": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "parentRule": {
                        "type": "integer"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rank": {
                        "type": "integer"
                    },
                    "severity": {
                        "type": "string"
                    },
                    "sourceIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesSourceIpGroup:getDLPWebRulesSourceIpGroup"
                        }
                    },
                    "state": {
                        "type": "string"
                    },
                    "subRules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "timeWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesTimeWindow:getDLPWebRulesTimeWindow"
                        }
                    },
                    "urlCategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesUrlCategory:getDLPWebRulesUrlCategory"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesUser:getDLPWebRulesUser"
                        }
                    },
                    "withoutContentInspection": {
                        "type": "boolean"
                    },
                    "workloadGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getDLPWebRulesWorkloadGroup:getDLPWebRulesWorkloadGroup"
                        }
                    },
                    "zccNotificationsEnabled": {
                        "type": "boolean"
                    },
                    "zscalerIncidentReceiver": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "accessControl",
                    "action",
                    "cloudApplications",
                    "departments",
                    "description",
                    "dlpDownloadScanEnabled",
                    "dlpEngines",
                    "excludedDepartments",
                    "excludedGroups",
                    "excludedUsers",
                    "externalAuditorEmail",
                    "fileTypes",
                    "groups",
                    "labels",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "locationGroups",
                    "locations",
                    "matchOnly",
                    "minSize",
                    "order",
                    "parentRule",
                    "protocols",
                    "rank",
                    "severity",
                    "sourceIpGroups",
                    "state",
                    "subRules",
                    "timeWindows",
                    "urlCategories",
                    "users",
                    "withoutContentInspection",
                    "workloadGroups",
                    "zccNotificationsEnabled",
                    "zscalerIncidentReceiver"
                ]
            }
        },
        "zia:index/getDepartmentManagement:getDepartmentManagement": {
            "description": "Use the **zia_department_management** data source to get information about user department created in the Zscaler Internet Access cloud or via the API. This data source can then be associated with several ZIA resources such as: URL filtering rules, Cloud Firewall rules, and locations.\n\n## Example Usage\n\n```hcl\n# ZIA User Department Data Source\ndata \"zia_department_management\" \"engineering\" {\n name = \"Engineering\"\n}\n```\n\n```hcl\n# ZIA User Department Data Source\ndata \"zia_department_management\" \"finance\" {\n name = \"Finance\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDepartmentManagement.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the user department\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDepartmentManagement.\n",
                "properties": {
                    "comments": {
                        "type": "string",
                        "description": "(Optional) Additional information about this department\n"
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "(Boolean) default: false\n"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "idpId": {
                        "type": "integer",
                        "description": "(Optional) Unique identfier for the identity provider (IdP)\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "comments",
                    "deleted",
                    "id",
                    "idpId"
                ]
            }
        },
        "zia:index/getDeviceGroups:getDeviceGroups": {
            "description": "Use the **zia_device_groups** data source to get information about a device group in the Zscaler Internet Access cloud or via the API. This data source can then be associated with resources such as: URL Filtering Rules\n\n## Example Usage\n\n```hcl\n# ZIA Admin User Data Source\ndata \"zia_device_groups\" \"ios\"{\n    name = \"IOS\"\n}\n```\n\n```hcl\ndata \"zia_device_groups\" \"android\"{\n    name = \"Android\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDeviceGroups.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the device group to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDeviceGroups.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "(String) The device group's description.\n"
                    },
                    "deviceCount": {
                        "type": "integer",
                        "description": "(int) The number of devices within the group.\n"
                    },
                    "deviceNames": {
                        "type": "string",
                        "description": "(String) The names of devices that belong to the device group. The device names are comma-separated.\n"
                    },
                    "groupType": {
                        "type": "string",
                        "description": "(String) The device group type. i.e ``ZCC_OS``, ``NON_ZCC``, ``CBI``\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(String) The unique identifer for the device group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String) The device group name.\n"
                    },
                    "osType": {
                        "type": "string",
                        "description": "(String) The operating system (OS).\n"
                    },
                    "predefined": {
                        "type": "boolean",
                        "description": "(Boolean) Indicates whether this is a predefined device group. If this value is set to true, the group is predefined.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "deviceCount",
                    "deviceNames",
                    "groupType",
                    "id",
                    "osType",
                    "predefined"
                ]
            }
        },
        "zia:index/getDevices:getDevices": {
            "description": "Use the **zia_devices** data source to get information about a device in the Zscaler Internet Access cloud or via the API. This data source can then be associated with resources such as: URL Filtering Rules\n\n## Example Usage\n\n```hcl\n# ZIA Admin User Data Source\ndata \"zia_devices\" \"device\"{\n    name = \"administrator\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDevices.\n",
                "properties": {
                    "deviceGroupType": {
                        "type": "string",
                        "description": "(String) The device group type. i.e ``ZCC_OS``, ``NON_ZCC``, ``CBI``\n"
                    },
                    "deviceModel": {
                        "type": "string",
                        "description": "(String) The device model.\n"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "description": "The unique identifer for the devices.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the devices to be exported.\n"
                    },
                    "osType": {
                        "type": "string",
                        "description": "(String) The operating system (OS). ``ANY``, ``OTHER_OS``, ``IOS``, ``ANDROID_OS``, ``WINDOWS_OS``, ``MAC_OS``, ``LINUX``\n"
                    },
                    "osVersion": {
                        "type": "string",
                        "description": "(String) The operating system version.\n"
                    },
                    "ownerName": {
                        "type": "string",
                        "description": "(String) The device owner's user name.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDevices.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "(String) The device's description.\n"
                    },
                    "deviceGroupType": {
                        "type": "string",
                        "description": "(String) The device group type. i.e ``ZCC_OS``, ``NON_ZCC``, ``CBI``\n"
                    },
                    "deviceModel": {
                        "type": "string",
                        "description": "(String) The device model.\n"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(String) The unique identifer for the device group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String) The device name.\n"
                    },
                    "osType": {
                        "type": "string",
                        "description": "(String) The operating system (OS). ``ANY``, ``OTHER_OS``, ``IOS``, ``ANDROID_OS``, ``WINDOWS_OS``, ``MAC_OS``, ``LINUX``\n"
                    },
                    "osVersion": {
                        "type": "string",
                        "description": "(String) The operating system version.\n"
                    },
                    "ownerName": {
                        "type": "string",
                        "description": "(String) The device owner's user name.\n"
                    },
                    "ownerUserId": {
                        "type": "integer",
                        "description": "(int) The unique identifier of the device owner (i.e., user).\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "deviceGroupType",
                    "deviceModel",
                    "hostname",
                    "id",
                    "name",
                    "osType",
                    "osVersion",
                    "ownerName",
                    "ownerUserId"
                ]
            }
        },
        "zia:index/getDlpDictionaryPredefinedIdentifiers:getDlpDictionaryPredefinedIdentifiers": {
            "description": "Use the **zia_dlp_dictionary_predefined_identifiers** data source to get information about the list of predefined identifiers that are available for selection in the specified hierarchical DLP dictionary.\n\n## Example Usage\n\n```hcl\ndata \"zia_dlp_dictionary_predefined_identifiers\" \"this\" {\n  name = \"CRED_LEAKAGE\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDlpDictionaryPredefinedIdentifiers.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the hierarchical DLP dictionary.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDlpDictionaryPredefinedIdentifiers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "(String) The ID of the hierarchical DLP dictionary.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String) The name of the hierarchical DLP dictionary: Supported values: `ASPP_LEAKAGE`, `CRED_LEAKAGE`, `EUIBAN_LEAKAGE`, `PPEU_LEAKAGE`, `USDL_LEAKAGE`.\n"
                    },
                    "predefinedIdentifiers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List) The list of hierarchical DLP dictionary values.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "predefinedIdentifiers"
                ]
            }
        },
        "zia:index/getEndUserNotification:getEndUserNotification": {
            "description": "Use the **zia_end_user_notification** data source to get information about browser-based end user notification (EUN) configuration details.\n\n## Example Usage\n\n```hcl\ndata \"zia_end_user_notification\" \"example\"{}\n```\n",
            "outputs": {
                "description": "A collection of values returned by getEndUserNotification.\n",
                "properties": {
                    "aupCustomFrequency": {
                        "type": "integer"
                    },
                    "aupDayOffset": {
                        "type": "integer"
                    },
                    "aupFrequency": {
                        "type": "string"
                    },
                    "aupMessage": {
                        "type": "string"
                    },
                    "cautionAgainAfter": {
                        "type": "integer"
                    },
                    "cautionCustomText": {
                        "type": "string"
                    },
                    "cautionPerDomain": {
                        "type": "boolean"
                    },
                    "customText": {
                        "type": "string"
                    },
                    "displayCompanyLogo": {
                        "type": "boolean"
                    },
                    "displayCompanyName": {
                        "type": "boolean"
                    },
                    "displayReason": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "idpProxyNotificationText": {
                        "type": "string"
                    },
                    "notificationType": {
                        "type": "string"
                    },
                    "orgPolicyLink": {
                        "type": "string"
                    },
                    "quarantineCustomNotificationText": {
                        "type": "string"
                    },
                    "redirectUrl": {
                        "type": "string"
                    },
                    "securityReviewCustomLocation": {
                        "type": "string"
                    },
                    "securityReviewEnabled": {
                        "type": "boolean"
                    },
                    "securityReviewSubmitToSecurityCloud": {
                        "type": "boolean"
                    },
                    "securityReviewText": {
                        "type": "string"
                    },
                    "supportEmail": {
                        "type": "string"
                    },
                    "supportPhone": {
                        "type": "string"
                    },
                    "urlCatReviewCustomLocation": {
                        "type": "string"
                    },
                    "urlCatReviewEnabled": {
                        "type": "boolean"
                    },
                    "urlCatReviewSubmitToSecurityCloud": {
                        "type": "boolean"
                    },
                    "urlCatReviewText": {
                        "type": "string"
                    },
                    "webDlpReviewCustomLocation": {
                        "type": "string"
                    },
                    "webDlpReviewEnabled": {
                        "type": "boolean"
                    },
                    "webDlpReviewSubmitToSecurityCloud": {
                        "type": "boolean"
                    },
                    "webDlpReviewText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "aupCustomFrequency",
                    "aupDayOffset",
                    "aupFrequency",
                    "aupMessage",
                    "cautionAgainAfter",
                    "cautionCustomText",
                    "cautionPerDomain",
                    "customText",
                    "displayCompanyLogo",
                    "displayCompanyName",
                    "displayReason",
                    "idpProxyNotificationText",
                    "notificationType",
                    "orgPolicyLink",
                    "quarantineCustomNotificationText",
                    "redirectUrl",
                    "securityReviewCustomLocation",
                    "securityReviewEnabled",
                    "securityReviewSubmitToSecurityCloud",
                    "securityReviewText",
                    "supportEmail",
                    "supportPhone",
                    "urlCatReviewCustomLocation",
                    "urlCatReviewEnabled",
                    "urlCatReviewSubmitToSecurityCloud",
                    "urlCatReviewText",
                    "webDlpReviewCustomLocation",
                    "webDlpReviewEnabled",
                    "webDlpReviewSubmitToSecurityCloud",
                    "webDlpReviewText",
                    "id"
                ]
            }
        },
        "zia:index/getFileTypeControlRules:getFileTypeControlRules": {
            "description": "Use the **zia_file_type_control_rules** data source to retrieves File Type Control rules.\n\n## Example Usage\n\n```hcl\n# Retrieve a File Type Control Rule by name\ndata \"zia_file_type_control_rules\" \"this\" {\n    name = \"Example\"\n}\n```\n\n```hcl\n# Retrieve a File Type Control Rule by ID\ndata \"zia_file_type_control_rules\" \"this\" {\n    name = \"12134558\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFileTypeControlRules.\n",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFileTypeControlRules.\n",
                "properties": {
                    "accessControl": {
                        "type": "string"
                    },
                    "activeContent": {
                        "type": "boolean"
                    },
                    "capturePcap": {
                        "type": "boolean"
                    },
                    "cloudApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFileTypeControlRulesDepartment:getFileTypeControlRulesDepartment"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "deviceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFileTypeControlRulesDeviceGroup:getFileTypeControlRulesDeviceGroup"
                        }
                    },
                    "deviceTrustLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFileTypeControlRulesDevice:getFileTypeControlRulesDevice"
                        }
                    },
                    "fileTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "filteringAction": {
                        "type": "string"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFileTypeControlRulesGroup:getFileTypeControlRulesGroup"
                        }
                    },
                    "id": {
                        "type": "integer"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFileTypeControlRulesLabel:getFileTypeControlRulesLabel"
                        }
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFileTypeControlRulesLastModifiedBy:getFileTypeControlRulesLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer"
                    },
                    "locationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFileTypeControlRulesLocationGroup:getFileTypeControlRulesLocationGroup"
                        }
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFileTypeControlRulesLocation:getFileTypeControlRulesLocation"
                        }
                    },
                    "maxSize": {
                        "type": "integer"
                    },
                    "minSize": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operation": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rank": {
                        "type": "integer"
                    },
                    "sizeQuota": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "timeQuota": {
                        "type": "integer"
                    },
                    "timeWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFileTypeControlRulesTimeWindow:getFileTypeControlRulesTimeWindow"
                        }
                    },
                    "unscannable": {
                        "type": "boolean"
                    },
                    "urlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFileTypeControlRulesUser:getFileTypeControlRulesUser"
                        }
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFileTypeControlRulesZpaAppSegment:getFileTypeControlRulesZpaAppSegment"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "accessControl",
                    "activeContent",
                    "capturePcap",
                    "cloudApplications",
                    "departments",
                    "description",
                    "deviceGroups",
                    "deviceTrustLevels",
                    "devices",
                    "fileTypes",
                    "filteringAction",
                    "groups",
                    "id",
                    "labels",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "locationGroups",
                    "locations",
                    "maxSize",
                    "minSize",
                    "name",
                    "operation",
                    "order",
                    "protocols",
                    "rank",
                    "sizeQuota",
                    "state",
                    "timeQuota",
                    "timeWindows",
                    "unscannable",
                    "urlCategories",
                    "users",
                    "zpaAppSegments"
                ]
            }
        },
        "zia:index/getFirewallDNSRules:getFirewallDNSRules": {
            "description": "Use the **zia_firewall_dns_rule** data source to get information about a cloud firewall DNS rule available in the Zscaler Internet Access.\n\n## Example Usage\n\n```hcl\n# ZIA Firewall DNS Rule by name\ndata \"zia_firewall_dns_rule\" \"this\" {\n    name = \"Default Cloud IPS Rule\"\n}\n```\n\n```hcl\n# ZIA Firewall DNS Rule by ID\ndata \"zia_firewall_dns_rule\" \"this\" {\n    id = \"12365478\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallDNSRules.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier for the Firewall Filtering policy rule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Firewall Filtering policy rule\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallDNSRules.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK`, `REDIR_REQ`, `REDIR_RES`, `REDIR_ZPA`, `REDIR_REQ_DOH`, `REDIR_REQ_KEEP_SENDER`, `REDIR_REQ_TCP`, `REDIR_REQ_UDP`, `BLOCK_WITH_RESPONSE`\n"
                    },
                    "applicationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesApplicationGroup:getFirewallDNSRulesApplicationGroup"
                        },
                        "description": "(List of Objects) DNS application groups to which the rule applies\n"
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of Strings) DNS tunnels and network applications to which the rule applies. To retrieve the available list of DNS tunnels applications use the data source: `zia.getCloudApplications` with the `app_class` value `DNS_OVER_HTTPS`. See example:\n"
                    },
                    "blockResponseCode": {
                        "type": "string",
                        "description": "(String) Specifies the DNS response code to be sent to the client when the action is configured to block and send response code. Supported values are: `ANY`, `NONE`, `FORMERR`, `SERVFAIL`, `NXDOMAIN`, `NOTIMP`, `REFUSED`, `YXDOMAIN`, `YXRRSET`, `NXRRSET`, `NOTAUTH`, `NOTZONE`, `BADVERS`, `BADKEY`, `BADTIME`, `BADMODE`, `BADNAME`, `BADALG`, `BADTRUNC`, `UNSUPPORTED`, `BYPASS`, `INT_ERROR`, `SRV_TIMEOUT`, `EMPTY_RESP`,\n`REQ_BLOCKED`, `ADMIN_DROP`, `WCDN_TIMEOUT`, `IPS_BLOCK`, `FQDN_RESOLV_FAIL`\n"
                    },
                    "capturePcap": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                    },
                    "defaultRule": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether the rule is the Default Cloud DNS Rule or not\n"
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesDepartment:getFirewallDNSRulesDepartment"
                        },
                        "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                    },
                    "destAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "destCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "destIpCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                    },
                    "destIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesDestIpGroup:getFirewallDNSRulesDestIpGroup"
                        },
                        "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                    },
                    "destIpv6Groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesDestIpv6Group:getFirewallDNSRulesDestIpv6Group"
                        }
                    },
                    "deviceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesDeviceGroup:getFirewallDNSRulesDeviceGroup"
                        },
                        "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesDevice:getFirewallDNSRulesDevice"
                        },
                        "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "dnsRuleRequestTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of Strings) DNS request types to which the rule applies. Supportedn values are:\n`A`, `NS`, `MD`, `MF`, `CNAME`, `SOA`, `MB`, `MG`, `MR`, `NULL`, `WKS`, `PTR`, `HINFO`, `MINFO`, `MX`, `TXT`, `RP`, `AFSDB`,\n`X25`, `ISDN`, `RT`, `NSAP`, `NSAP_PTR`, `SIG`, `KEY`, `PX`, `GPOS`, `AAAA`, `LOC`, `NXT`, `EID`, `NIMLOC`, `SRV`, `ATMA`,\n`NAPTR`, `KX`, `CERT`, `A6`, `DNAME`, `SINK`, `OPT`, `APL`, `DS`, `SSHFP`, `PSECKEF`, `RRSIG`, `NSEC`, `DNSKEY`,\n`DHCID`, `NSEC3`, `NSEC3PARAM`, `TLSA`, `HIP`, `NINFO`, `RKEY`, `TALINK`, `CDS`, `CDNSKEY`, `OPENPGPKEY`, `CSYNC`,\n`ZONEMD`, `SVCB`, `HTTPS`,\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesGroup:getFirewallDNSRulesGroup"
                        },
                        "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Integer) Identifier that uniquely identifies an entity\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesLabel:getFirewallDNSRulesLabel"
                        },
                        "description": "(List of Objects) Labels that are applicable to the rule.\n"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesLastModifiedBy:getFirewallDNSRulesLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer"
                    },
                    "locationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesLocationGroup:getFirewallDNSRulesLocationGroup"
                        },
                        "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesLocation:getFirewallDNSRulesLocation"
                        },
                        "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(string) The configured name of the entity\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                    },
                    "predefined": {
                        "type": "boolean",
                        "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of Strings) The protocols to which the rules applies. Supported Values: `ANY_RULE`, `SMRULEF_CASCADING_ALLOWED`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                    },
                    "redirectIp": {
                        "type": "string",
                        "description": "(String) The IP address to which the traffic will be redirected to when the DNAT rule is triggered. If not set, no redirection is done to specific IP addresses. Only supported when the `action` is `REDIR_REQ`\n"
                    },
                    "resCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                    },
                    "sourceCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "srcIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesSrcIpGroup:getFirewallDNSRulesSrcIpGroup"
                        },
                        "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                    },
                    "srcIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "srcIpv6Groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesSrcIpv6Group:getFirewallDNSRulesSrcIpv6Group"
                        },
                        "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                    },
                    "timeWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesTimeWindow:getFirewallDNSRulesTimeWindow"
                        },
                        "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDNSRulesUser:getFirewallDNSRulesUser"
                        },
                        "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "applicationGroups",
                    "applications",
                    "blockResponseCode",
                    "capturePcap",
                    "defaultRule",
                    "departments",
                    "description",
                    "destAddresses",
                    "destCountries",
                    "destIpCategories",
                    "destIpGroups",
                    "destIpv6Groups",
                    "deviceGroups",
                    "devices",
                    "dnsRuleRequestTypes",
                    "groups",
                    "id",
                    "labels",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "locationGroups",
                    "locations",
                    "name",
                    "order",
                    "predefined",
                    "protocols",
                    "rank",
                    "redirectIp",
                    "resCategories",
                    "sourceCountries",
                    "srcIpGroups",
                    "srcIps",
                    "srcIpv6Groups",
                    "state",
                    "timeWindows",
                    "users"
                ]
            }
        },
        "zia:index/getFirewallDnsRule:getFirewallDnsRule": {
            "deprecationMessage": "zia.index/getfirewalldnsrule.getFirewallDnsRule has been deprecated in favor of zia.index/getfirewalldnsrules.getFirewallDNSRules",
            "description": "Use the **zia_firewall_dns_rule** data source to get information about a cloud firewall DNS rule available in the Zscaler Internet Access.\n\n## Example Usage\n\n```hcl\n# ZIA Firewall DNS Rule by name\ndata \"zia_firewall_dns_rule\" \"this\" {\n    name = \"Default Cloud IPS Rule\"\n}\n```\n\n```hcl\n# ZIA Firewall DNS Rule by ID\ndata \"zia_firewall_dns_rule\" \"this\" {\n    id = \"12365478\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallDnsRule.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier for the Firewall Filtering policy rule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Firewall Filtering policy rule\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallDnsRule.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK`, `REDIR_REQ`, `REDIR_RES`, `REDIR_ZPA`, `REDIR_REQ_DOH`, `REDIR_REQ_KEEP_SENDER`, `REDIR_REQ_TCP`, `REDIR_REQ_UDP`, `BLOCK_WITH_RESPONSE`\n"
                    },
                    "applicationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleApplicationGroup:getFirewallDnsRuleApplicationGroup"
                        },
                        "description": "(List of Objects) DNS application groups to which the rule applies\n"
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of Strings) DNS tunnels and network applications to which the rule applies. To retrieve the available list of DNS tunnels applications use the data source: `zia.getCloudApplications` with the `app_class` value `DNS_OVER_HTTPS`. See example:\n"
                    },
                    "blockResponseCode": {
                        "type": "string",
                        "description": "(String) Specifies the DNS response code to be sent to the client when the action is configured to block and send response code. Supported values are: `ANY`, `NONE`, `FORMERR`, `SERVFAIL`, `NXDOMAIN`, `NOTIMP`, `REFUSED`, `YXDOMAIN`, `YXRRSET`, `NXRRSET`, `NOTAUTH`, `NOTZONE`, `BADVERS`, `BADKEY`, `BADTIME`, `BADMODE`, `BADNAME`, `BADALG`, `BADTRUNC`, `UNSUPPORTED`, `BYPASS`, `INT_ERROR`, `SRV_TIMEOUT`, `EMPTY_RESP`,\n`REQ_BLOCKED`, `ADMIN_DROP`, `WCDN_TIMEOUT`, `IPS_BLOCK`, `FQDN_RESOLV_FAIL`\n"
                    },
                    "capturePcap": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                    },
                    "defaultRule": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether the rule is the Default Cloud DNS Rule or not\n"
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleDepartment:getFirewallDnsRuleDepartment"
                        },
                        "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                    },
                    "destAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "destCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "destIpCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                    },
                    "destIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleDestIpGroup:getFirewallDnsRuleDestIpGroup"
                        },
                        "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                    },
                    "destIpv6Groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleDestIpv6Group:getFirewallDnsRuleDestIpv6Group"
                        }
                    },
                    "deviceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleDeviceGroup:getFirewallDnsRuleDeviceGroup"
                        },
                        "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleDevice:getFirewallDnsRuleDevice"
                        },
                        "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "dnsRuleRequestTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of Strings) DNS request types to which the rule applies. Supportedn values are:\n`A`, `NS`, `MD`, `MF`, `CNAME`, `SOA`, `MB`, `MG`, `MR`, `NULL`, `WKS`, `PTR`, `HINFO`, `MINFO`, `MX`, `TXT`, `RP`, `AFSDB`,\n`X25`, `ISDN`, `RT`, `NSAP`, `NSAP_PTR`, `SIG`, `KEY`, `PX`, `GPOS`, `AAAA`, `LOC`, `NXT`, `EID`, `NIMLOC`, `SRV`, `ATMA`,\n`NAPTR`, `KX`, `CERT`, `A6`, `DNAME`, `SINK`, `OPT`, `APL`, `DS`, `SSHFP`, `PSECKEF`, `RRSIG`, `NSEC`, `DNSKEY`,\n`DHCID`, `NSEC3`, `NSEC3PARAM`, `TLSA`, `HIP`, `NINFO`, `RKEY`, `TALINK`, `CDS`, `CDNSKEY`, `OPENPGPKEY`, `CSYNC`,\n`ZONEMD`, `SVCB`, `HTTPS`,\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleGroup:getFirewallDnsRuleGroup"
                        },
                        "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Integer) Identifier that uniquely identifies an entity\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleLabel:getFirewallDnsRuleLabel"
                        },
                        "description": "(List of Objects) Labels that are applicable to the rule.\n"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleLastModifiedBy:getFirewallDnsRuleLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer"
                    },
                    "locationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleLocationGroup:getFirewallDnsRuleLocationGroup"
                        },
                        "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleLocation:getFirewallDnsRuleLocation"
                        },
                        "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(string) The configured name of the entity\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                    },
                    "predefined": {
                        "type": "boolean",
                        "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of Strings) The protocols to which the rules applies. Supported Values: `ANY_RULE`, `SMRULEF_CASCADING_ALLOWED`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                    },
                    "redirectIp": {
                        "type": "string",
                        "description": "(String) The IP address to which the traffic will be redirected to when the DNAT rule is triggered. If not set, no redirection is done to specific IP addresses. Only supported when the `action` is `REDIR_REQ`\n"
                    },
                    "resCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                    },
                    "sourceCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "srcIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleSrcIpGroup:getFirewallDnsRuleSrcIpGroup"
                        },
                        "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                    },
                    "srcIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "srcIpv6Groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleSrcIpv6Group:getFirewallDnsRuleSrcIpv6Group"
                        },
                        "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                    },
                    "timeWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleTimeWindow:getFirewallDnsRuleTimeWindow"
                        },
                        "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallDnsRuleUser:getFirewallDnsRuleUser"
                        },
                        "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "applicationGroups",
                    "applications",
                    "blockResponseCode",
                    "capturePcap",
                    "defaultRule",
                    "departments",
                    "description",
                    "destAddresses",
                    "destCountries",
                    "destIpCategories",
                    "destIpGroups",
                    "destIpv6Groups",
                    "deviceGroups",
                    "devices",
                    "dnsRuleRequestTypes",
                    "groups",
                    "id",
                    "labels",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "locationGroups",
                    "locations",
                    "name",
                    "order",
                    "predefined",
                    "protocols",
                    "rank",
                    "redirectIp",
                    "resCategories",
                    "sourceCountries",
                    "srcIpGroups",
                    "srcIps",
                    "srcIpv6Groups",
                    "state",
                    "timeWindows",
                    "users"
                ]
            }
        },
        "zia:index/getFirewallFilteringAppGroup:getFirewallFilteringAppGroup": {
            "description": "Use the **zia_firewall_filtering_application_services_group** data source to get information about a network application group available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering network application rule.\n\n## Example Usage\n\n```hcl\n# ZIA Network Application Groups\ndata \"zia_firewall_filtering_application_services_group\" \"example\" {\n    name = \"example\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallFilteringAppGroup.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the ip source group to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallFilteringAppGroup.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of this resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameL10nTag": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "nameL10nTag"
                ]
            }
        },
        "zia:index/getFirewallFilteringAppGroups:getFirewallFilteringAppGroups": {
            "deprecationMessage": "zia.index/getfirewallfilteringappgroups.getFirewallFilteringAppGroups has been deprecated in favor of zia.index/getfirewallfilteringappgroup.getFirewallFilteringAppGroup",
            "description": "Use the **zia_firewall_filtering_application_services_group** data source to get information about a network application group available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering network application rule.\n\n## Example Usage\n\n```hcl\n# ZIA Network Application Groups\ndata \"zia_firewall_filtering_application_services_group\" \"example\" {\n    name = \"example\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallFilteringAppGroups.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the ip source group to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallFilteringAppGroups.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of this resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameL10nTag": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "nameL10nTag"
                ]
            }
        },
        "zia:index/getFirewallFilteringAppServices:getFirewallFilteringAppServices": {
            "description": "The **zia_firewall_filtering_application_services** data source to get information about a network application services available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering network application services rule.\n\n## Example Usage\n\n```hcl\n# ZIA Network Application Service\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"SKYPEFORBUSINESS\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"FILE_SHAREPT_ONEDRIVE\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"EXCHANGEONLINE\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"M365COMMON\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"ZOOMMEETING\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"WEBEXMEETING\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"WEBEXCALLING\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"RINGCENTRALMEETING\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"GOTOMEETING\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"GOTOMEETING_INROOM\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"LOGMEINMEETING\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"LOGMEINRESCUE\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"AWS\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"GCP\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"ZSCALER_CLOUD_ENDPOINTS\"\n}\n\ndata \"zia_firewall_filtering_application_services\" \"example\" {\n  name = \"TALK_DESK\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallFilteringAppServices.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the application layer service that you want to control. It can include any character and spaces.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallFilteringAppServices.\n",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameL10nTag": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "nameL10nTag"
                ]
            }
        },
        "zia:index/getFirewallFilteringApplication:getFirewallFilteringApplication": {
            "description": "Use the **zia_firewall_filtering_network_application** data source to get information about a network application available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering network application rule.\n\n## Example Usage\n\n```hcl\n# ZIA Network Application Groups\ndata \"zia_firewall_filtering_network_application\" \"apns\"{\n    id = \"APNS\"\n    locale=\"en-US\"\n}\n```\n\n```hcl\ndata \"zia_firewall_filtering_network_application\" \"dict\"{\n    id = \"DICT\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallFilteringApplication.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The name of the ip source group to be exported.\n"
                    },
                    "locale": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallFilteringApplication.\n",
                "properties": {
                    "deprecated": {
                        "type": "boolean",
                        "description": "(Boolean)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String)\n"
                    },
                    "id": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "parentCategory": {
                        "type": "string",
                        "description": "(String)\n"
                    }
                },
                "type": "object",
                "required": [
                    "deprecated",
                    "description",
                    "parentCategory"
                ]
            }
        },
        "zia:index/getFirewallFilteringApplicationGroups:getFirewallFilteringApplicationGroups": {
            "description": "Use the **zia_firewall_filtering_network_application_groups** data source to get information about network application groups available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering rule.\n\n## Example Usage\n\n```hcl\n# ZIA IP Source Groups\ndata \"zia_firewall_filtering_network_application_groups\" \"example\" {\n    name = \"example\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallFilteringApplicationGroups.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of the ip source group resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the ip source group to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallFilteringApplicationGroups.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "name",
                    "networkApplications"
                ]
            }
        },
        "zia:index/getFirewallFilteringDestinationGroups:getFirewallFilteringDestinationGroups": {
            "description": "Use the **zia_firewall_filtering_destination_groups** data source to get information about IP destination groups option available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering rule.\n\n## Example Usage\n\n```hcl\n# ZIA Destination Groups\ndata \"zia_firewall_filtering_destination_groups\" \"example\" {\n    name = \"example\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallFilteringDestinationGroups.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of the destination group resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the destination group to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallFilteringDestinationGroups.\n",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of String) Destination IP addresses within the group\n"
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of String) Destination IP address counties. You can identify destinations based on the location of a server.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Additional information about the destination IP group\n"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "ipCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of String) Destination IP address URL categories. You can identify destinations based on the URL category of the domain. See list of all IP Categories [Here](https://help.zscaler.com/zia/firewall-policies#/ipDestinationGroups-get)\n* !\u003e **WARNING:** The `ip_categories` attribute only accepts custom URL categories.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "(String) Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)\n"
                    }
                },
                "type": "object",
                "required": [
                    "addresses",
                    "countries",
                    "description",
                    "id",
                    "ipCategories",
                    "name",
                    "type"
                ]
            }
        },
        "zia:index/getFirewallFilteringNetworkServiceGroups:getFirewallFilteringNetworkServiceGroups": {
            "description": "Use the **zia_firewall_filtering_network_service_groups** data source to get information about a network service groups available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering network service rule.\n\n## Example Usage\n\n```hcl\n# ZIA Network Service Groups\ndata \"zia_firewall_filtering_network_service_groups\" \"example\"{\n    name = \"Corporate Custom SSH TCP_10022\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallFilteringNetworkServiceGroups.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of the ip source group to be exported.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the ip source group to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallFilteringNetworkServiceGroups.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "(String)\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Number)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String)\n"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringNetworkServiceGroupsService:getFirewallFilteringNetworkServiceGroupsService"
                        },
                        "description": "(Number) The ID of this resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "name",
                    "services"
                ]
            }
        },
        "zia:index/getFirewallFilteringNetworkServices:getFirewallFilteringNetworkServices": {
            "description": "The **zia_firewall_filtering_network_service** data source to get information about a network service available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering network service rule.\n\n## Example Usage\n\n```hcl\n# ZIA Network Service\ndata \"zia_firewall_filtering_network_service\" \"example\" {\n  name = \"ICMP_ANY\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallFilteringNetworkServices.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of the application layer service to be exported.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the application layer service that you want to control. It can include any character and spaces.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallFilteringNetworkServices.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "(String) (Optional) Enter additional notes or information. The description cannot exceed 10240 characters.\n"
                    },
                    "destTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringNetworkServicesDestTcpPort:getFirewallFilteringNetworkServicesDestTcpPort"
                        },
                        "description": "(Required) The TCP destination port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.\n"
                    },
                    "destUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringNetworkServicesDestUdpPort:getFirewallFilteringNetworkServicesDestUdpPort"
                        },
                        "description": "The UDP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.\n"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "isNameL10nTag": {
                        "type": "boolean",
                        "description": "(Bool) - Default: false\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "srcTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringNetworkServicesSrcTcpPort:getFirewallFilteringNetworkServicesSrcTcpPort"
                        },
                        "description": "(Optional) The TCP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service\n"
                    },
                    "srcUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringNetworkServicesSrcUdpPort:getFirewallFilteringNetworkServicesSrcUdpPort"
                        },
                        "description": "The UDP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.\n"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "(String) - Supported values are: `STANDARD`, `PREDEFINED` and `CUSTOM`\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "destTcpPorts",
                    "destUdpPorts",
                    "id",
                    "isNameL10nTag",
                    "name",
                    "srcTcpPorts",
                    "srcUdpPorts",
                    "tag",
                    "type"
                ]
            }
        },
        "zia:index/getFirewallFilteringRule:getFirewallFilteringRule": {
            "description": "Use the **zia_firewall_filtering_rule** data source to get information about a cloud firewall rule available in the Zscaler Internet Access cloud firewall.\n\n## Example Usage\n\n```hcl\n# ZIA Firewall Filtering Rule\ndata \"zia_firewall_filtering_rule\" \"example\" {\n    name = \"Office 365 One Click Rule\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallFilteringRule.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier for the Firewall Filtering policy rule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Firewall Filtering policy rule\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallFilteringRule.\n",
                "properties": {
                    "accessControl": {
                        "type": "string",
                        "description": "(String)\n"
                    },
                    "action": {
                        "type": "string",
                        "description": "(Optional) Choose the action of the service when packets match the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BLOCK_ICMP`, `EVAL_NWAPP`\n"
                    },
                    "appServiceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleAppServiceGroup:getFirewallFilteringRuleAppServiceGroup"
                        },
                        "description": "Application service groups on which this rule is applied\n"
                    },
                    "appServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleAppService:getFirewallFilteringRuleAppService"
                        },
                        "description": "Application services on which this rule is applied\n"
                    },
                    "defaultRule": {
                        "type": "boolean",
                        "description": "(Boolean)\n"
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleDepartment:getFirewallFilteringRuleDepartment"
                        },
                        "description": "(Optional) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(Optional) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                    },
                    "destAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "** - (Optional) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.\n"
                    },
                    "destCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "** - (Optional) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n"
                    },
                    "destIpCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "** - (Optional) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                    },
                    "destIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleDestIpGroup:getFirewallFilteringRuleDestIpGroup"
                        },
                        "description": "** - (Optional) Any number of destination IP address groups that you want to control with this rule.\n"
                    },
                    "deviceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleDeviceGroup:getFirewallFilteringRuleDeviceGroup"
                        }
                    },
                    "deviceTrustLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleDevice:getFirewallFilteringRuleDevice"
                        }
                    },
                    "enableFullLogging": {
                        "type": "boolean",
                        "description": "(Boolean)\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleGroup:getFirewallFilteringRuleGroup"
                        },
                        "description": "(Optional) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Number) The ID of this resource.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleLabel:getFirewallFilteringRuleLabel"
                        },
                        "description": "Labels that are applicable to the rule.\n"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleLastModifiedBy:getFirewallFilteringRuleLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer",
                        "description": "(Number)\n"
                    },
                    "locationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleLocationGroup:getFirewallFilteringRuleLocationGroup"
                        },
                        "description": "(Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleLocation:getFirewallFilteringRuleLocation"
                        },
                        "description": "(Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String) The name of the workload group\n"
                    },
                    "nwApplicationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleNwApplicationGroup:getFirewallFilteringRuleNwApplicationGroup"
                        },
                        "description": "(Optional) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify\n"
                    },
                    "nwApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Optional) When not used it applies the rule to all applications. The service provides predefined applications, which you can group, but not modify.\n"
                    },
                    "nwServiceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleNwServiceGroup:getFirewallFilteringRuleNwServiceGroup"
                        },
                        "description": "(Optional) Any number of predefined or custom network service groups to which the rule applies.\n"
                    },
                    "nwServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleNwService:getFirewallFilteringRuleNwService"
                        },
                        "description": "(Optional) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(Required) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                    },
                    "predefined": {
                        "type": "boolean",
                        "description": "(Boolean)\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "(Optional) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                    },
                    "srcIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleSrcIpGroup:getFirewallFilteringRuleSrcIpGroup"
                        },
                        "description": "(Optional) Any number of source IP address groups that you want to control with this rule.\n"
                    },
                    "srcIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Optional) You can enter individual IP addresses, subnets, or address ranges.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "(Optional) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                    },
                    "timeWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleTimeWindow:getFirewallFilteringRuleTimeWindow"
                        },
                        "description": "(Optional) You can manually select up to `2` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleUser:getFirewallFilteringRuleUser"
                        },
                        "description": "(Optional) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                    },
                    "workloadGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleWorkloadGroup:getFirewallFilteringRuleWorkloadGroup"
                        },
                        "description": "(List) The list of preconfigured workload groups to which the policy must be applied\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallFilteringRuleZpaAppSegment:getFirewallFilteringRuleZpaAppSegment"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "accessControl",
                    "action",
                    "appServiceGroups",
                    "appServices",
                    "defaultRule",
                    "departments",
                    "description",
                    "destAddresses",
                    "destCountries",
                    "destIpCategories",
                    "destIpGroups",
                    "deviceGroups",
                    "deviceTrustLevels",
                    "devices",
                    "enableFullLogging",
                    "groups",
                    "labels",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "locationGroups",
                    "locations",
                    "nwApplicationGroups",
                    "nwApplications",
                    "nwServiceGroups",
                    "nwServices",
                    "order",
                    "predefined",
                    "rank",
                    "srcIpGroups",
                    "srcIps",
                    "state",
                    "timeWindows",
                    "users",
                    "workloadGroups",
                    "zpaAppSegments"
                ]
            }
        },
        "zia:index/getFirewallFilteringSourceIPGroups:getFirewallFilteringSourceIPGroups": {
            "description": "Use the **zia_firewall_filtering_ip_source_groups** data source to get information about ip source groups available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering rule.\n\n## Example Usage\n\n```hcl\n# ZIA IP Source Groups\ndata \"zia_firewall_filtering_ip_source_groups\" \"example\" {\n    name = \"example\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallFilteringSourceIPGroups.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of the ip source group resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the ip source group to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallFilteringSourceIPGroups.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "(String)\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "The ID of this resource.\n"
                    },
                    "ipAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of String)\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "ipAddresses",
                    "name"
                ]
            }
        },
        "zia:index/getFirewallIpsRule:getFirewallIpsRule": {
            "deprecationMessage": "zia.index/getfirewallipsrule.getFirewallIpsRule has been deprecated in favor of zia.index/getipsfirewallrule.getIPSFirewallRule",
            "description": "Use the **zia_firewall_ips_rule** data source to get information about a cloud firewall IPS rule available in the Zscaler Internet Access.\n\n## Example Usage\n\n```hcl\n# ZIA Firewall IPS Rule by name\ndata \"zia_firewall_ips_rule\" \"this\" {\n    name = \"Default Cloud IPS Rule\"\n}\n```\n\n```hcl\n# ZIA Firewall IPS Rule by ID\ndata \"zia_firewall_ips_rule\" \"this\" {\n    id = \"12365478\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallIpsRule.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier for the Firewall Filtering policy rule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Firewall Filtering policy rule\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallIpsRule.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`\n"
                    },
                    "capturePcap": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                    },
                    "defaultRule": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not\n"
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleDepartment:getFirewallIpsRuleDepartment"
                        },
                        "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                    },
                    "destAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "destCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "destIpCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                    },
                    "destIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleDestIpGroup:getFirewallIpsRuleDestIpGroup"
                        },
                        "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                    },
                    "destIpv6Groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleDestIpv6Group:getFirewallIpsRuleDestIpv6Group"
                        }
                    },
                    "deviceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleDeviceGroup:getFirewallIpsRuleDeviceGroup"
                        },
                        "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleDevice:getFirewallIpsRuleDevice"
                        },
                        "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "enableFullLogging": {
                        "type": "boolean",
                        "description": "(Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleGroup:getFirewallIpsRuleGroup"
                        },
                        "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Integer) Identifier that uniquely identifies an entity\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleLabel:getFirewallIpsRuleLabel"
                        },
                        "description": "(List of Objects) Labels that are applicable to the rule.\n"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleLastModifiedBy:getFirewallIpsRuleLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer"
                    },
                    "locationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleLocationGroup:getFirewallIpsRuleLocationGroup"
                        },
                        "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleLocation:getFirewallIpsRuleLocation"
                        },
                        "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String) The configured name of the entity\n"
                    },
                    "nwServiceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleNwServiceGroup:getFirewallIpsRuleNwServiceGroup"
                        },
                        "description": "(List of Objects) Any number of predefined or custom network service groups to which the rule applies.\n"
                    },
                    "nwServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleNwService:getFirewallIpsRuleNwService"
                        },
                        "description": "(List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                    },
                    "predefined": {
                        "type": "boolean",
                        "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                    },
                    "resCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                    },
                    "sourceCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "srcIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleSrcIpGroup:getFirewallIpsRuleSrcIpGroup"
                        },
                        "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                    },
                    "srcIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "srcIpv6Groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleSrcIpv6Group:getFirewallIpsRuleSrcIpv6Group"
                        },
                        "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                    },
                    "threatCategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleThreatCategory:getFirewallIpsRuleThreatCategory"
                        },
                        "description": "(List of Objects) Advanced threat categories to which the rule applies\n"
                    },
                    "timeWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleTimeWindow:getFirewallIpsRuleTimeWindow"
                        },
                        "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleUser:getFirewallIpsRuleUser"
                        },
                        "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getFirewallIpsRuleZpaAppSegment:getFirewallIpsRuleZpaAppSegment"
                        },
                        "description": "(List of Objects) The ZPA application segments to which the rule applies\n"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "capturePcap",
                    "defaultRule",
                    "departments",
                    "description",
                    "destAddresses",
                    "destCountries",
                    "destIpCategories",
                    "destIpGroups",
                    "destIpv6Groups",
                    "deviceGroups",
                    "devices",
                    "enableFullLogging",
                    "groups",
                    "id",
                    "labels",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "locationGroups",
                    "locations",
                    "name",
                    "nwServiceGroups",
                    "nwServices",
                    "order",
                    "predefined",
                    "rank",
                    "resCategories",
                    "sourceCountries",
                    "srcIpGroups",
                    "srcIps",
                    "srcIpv6Groups",
                    "state",
                    "threatCategories",
                    "timeWindows",
                    "users",
                    "zpaAppSegments"
                ]
            }
        },
        "zia:index/getForwardingControlProxyGateway:getForwardingControlProxyGateway": {
            "description": "Use the **zia_forwarding_control_proxy_gateway** data source to retrieve the proxy gateway information. This data source can then be associated with the attribute `proxy_gateway` when creating a Forwarding Control Rule via the resource: `zia.ForwardingControlRule`\n\n## Example Usage\n\n```hcl\n# ZIA Forwarding Control - Proxy Gateway\ndata \"zia_forwarding_control_proxy_gateway\" \"this\" {\n  name = \"Proxy_GW01\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getForwardingControlProxyGateway.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of the forwarding control Proxy Gateway resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the forwarding control Proxy Gateway to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getForwardingControlProxyGateway.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "(string) - Additional details about the Proxy gateway\n"
                    },
                    "failClosed": {
                        "type": "boolean",
                        "description": "(Boolean) - Indicates whether fail close is enabled to drop the traffic or disabled to allow the traffic when both primary and secondary proxies defined in this gateway are unreachable.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(string) A unique identifier for the secondary proxy gateway\n"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlProxyGatewayLastModifiedBy:getForwardingControlProxyGatewayLastModifiedBy"
                        },
                        "description": "(list) -  Information about the admin user that last modified the Proxy gateway\n"
                    },
                    "lastModifiedTime": {
                        "type": "integer",
                        "description": "(int) - Timestamp when the ZPA gateway was last modified\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(string) The configured name for the secondary proxy gateway\n"
                    },
                    "primaryProxies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlProxyGatewayPrimaryProxy:getForwardingControlProxyGatewayPrimaryProxy"
                        },
                        "description": "(Set of String) - The primary proxy for the gateway. This field is not applicable to the Lite API.\n"
                    },
                    "secondaryProxies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlProxyGatewaySecondaryProxy:getForwardingControlProxyGatewaySecondaryProxy"
                        },
                        "description": "() - The secondary proxy for the gateway. This field is not applicable to the Lite API.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "(string) - Indicates whether the type of Proxy gateway. Returned values are: `PROXYCHAIN`, `ZIA`, or `ECSELF`\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "failClosed",
                    "id",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "name",
                    "primaryProxies",
                    "secondaryProxies",
                    "type"
                ]
            }
        },
        "zia:index/getForwardingControlRule:getForwardingControlRule": {
            "description": "Use the **zia_forwarding_control_rule** data source to get information about a forwarding control rule which is used to forward selective Zscaler traffic to specific destinations based on your needs.For example, if you want to forward specific web traffic to a third-party proxy service or if you want to forward source IP anchored application traffic to a specific Zscaler Private Access (ZPA) App Connector or internal application traffic through ZIA threat and data protection engines, use forwarding control by configuring appropriate rules.\n\n## Example Usage\n\n```hcl\n# ZIA Forwarding Control - ZPA Gateway\ndata \"zia_forwarding_control_rule\" \"this\" {\n  name = \"FWD_RULE01\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getForwardingControlRule.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "A unique identifier assigned to the forwarding rule.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the forwarding rule.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "(string) -  The rule type selected from the available options\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getForwardingControlRule.\n",
                "properties": {
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleDepartment:getForwardingControlRuleDepartment"
                        },
                        "description": "(list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(string) - Additional information about the forwarding rule\n"
                    },
                    "destAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.\n"
                    },
                    "destCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "** - (list) estination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).\n"
                    },
                    "destIpCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                    },
                    "destIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleDestIpGroup:getForwardingControlRuleDestIpGroup"
                        },
                        "description": "** - (list) Any number of destination IP address groups that you want to control with this rule.\n"
                    },
                    "destIpv6Groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleDestIpv6Group:getForwardingControlRuleDestIpv6Group"
                        }
                    },
                    "deviceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleDeviceGroup:getForwardingControlRuleDeviceGroup"
                        },
                        "description": "(list) Name-ID pairs of device groups for which the rule must be applied. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleDevice:getForwardingControlRuleDevice"
                        },
                        "description": "(list) Name-ID pairs of devices for which the rule must be applied. Specifies devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "ecGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleEcGroup:getForwardingControlRuleEcGroup"
                        },
                        "description": "(list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies\n"
                    },
                    "forwardMethod": {
                        "type": "string",
                        "description": "(string) - The type of traffic forwarding method selected from the available options.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleGroup:getForwardingControlRuleGroup"
                        },
                        "description": "(list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(int) Identifier that uniquely identifies an entity\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleLabel:getForwardingControlRuleLabel"
                        },
                        "description": "(list) Labels that are applicable to the rule.\n"
                    },
                    "locationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleLocationGroup:getForwardingControlRuleLocationGroup"
                        },
                        "description": "(Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleLocation:getForwardingControlRuleLocation"
                        },
                        "description": "(Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(string) The configured name of the entity\n"
                    },
                    "nwApplicationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleNwApplicationGroup:getForwardingControlRuleNwApplicationGroup"
                        },
                        "description": "(list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify\n"
                    },
                    "nwApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Optional) When not used it applies the rule to all applications. The service provides predefined applications, which you can group, but not modify.\n"
                    },
                    "nwServiceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleNwServiceGroup:getForwardingControlRuleNwServiceGroup"
                        },
                        "description": "(list) Any number of predefined or custom network service groups to which the rule applies.\n"
                    },
                    "nwServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleNwService:getForwardingControlRuleNwService"
                        },
                        "description": "(list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(string) - The order of execution for the forwarding rule order.\n"
                    },
                    "proxyGateways": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleProxyGateway:getForwardingControlRuleProxyGateway"
                        },
                        "description": "(set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.\n"
                    },
                    "rank": {
                        "type": "integer"
                    },
                    "resCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "** - (list) List of destination domain categories to which the rule applies.\n"
                    },
                    "srcIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleSrcIpGroup:getForwardingControlRuleSrcIpGroup"
                        },
                        "description": "(list) Any number of source IP address groups that you want to control with this rule.\n"
                    },
                    "srcIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Optional) You can enter individual IP addresses, subnets, or address ranges.\n"
                    },
                    "srcIpv6Groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleSrcIpv6Group:getForwardingControlRuleSrcIpv6Group"
                        }
                    },
                    "state": {
                        "type": "string",
                        "description": "(string) - Indicates whether the forwarding rule is enabled or disabled.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "(string) -  The rule type selected from the available options\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleUser:getForwardingControlRuleUser"
                        },
                        "description": "(list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleZpaAppSegment:getForwardingControlRuleZpaAppSegment"
                        },
                        "description": "(set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.\n"
                    },
                    "zpaApplicationSegmentGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleZpaApplicationSegmentGroup:getForwardingControlRuleZpaApplicationSegmentGroup"
                        },
                        "description": "(set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).\n"
                    },
                    "zpaApplicationSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleZpaApplicationSegment:getForwardingControlRuleZpaApplicationSegment"
                        },
                        "description": "(set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).\n"
                    },
                    "zpaBrokerRule": {
                        "type": "boolean"
                    },
                    "zpaGateways": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlRuleZpaGateway:getForwardingControlRuleZpaGateway"
                        },
                        "description": "(set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.\n"
                    }
                },
                "type": "object",
                "required": [
                    "departments",
                    "description",
                    "destAddresses",
                    "destCountries",
                    "destIpCategories",
                    "destIpGroups",
                    "destIpv6Groups",
                    "deviceGroups",
                    "devices",
                    "ecGroups",
                    "forwardMethod",
                    "groups",
                    "labels",
                    "locationGroups",
                    "locations",
                    "nwApplicationGroups",
                    "nwApplications",
                    "nwServiceGroups",
                    "nwServices",
                    "order",
                    "proxyGateways",
                    "rank",
                    "resCategories",
                    "srcIpGroups",
                    "srcIps",
                    "srcIpv6Groups",
                    "state",
                    "users",
                    "zpaAppSegments",
                    "zpaApplicationSegmentGroups",
                    "zpaApplicationSegments",
                    "zpaBrokerRule",
                    "zpaGateways"
                ]
            }
        },
        "zia:index/getForwardingControlZPAGateway:getForwardingControlZPAGateway": {
            "description": "Use the **zia_forwarding_control_zpa_gateway** data source to get information about a forwarding control zpa gateway used in IP Source Anchoring integration between Zscaler Internet Access and Zscaler Private Access. This data source can then be associated with a ZIA Forwarding Control Rule.\n\n## Example Usage\n\n```hcl\n# ZIA Forwarding Control - ZPA Gateway\ndata \"zia_forwarding_control_zpa_gateway\" \"this\" {\n  name = \"ZPA_GW01\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getForwardingControlZPAGateway.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of the forwarding control ZPA Gateway resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the forwarding control ZPA Gateway to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getForwardingControlZPAGateway.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "(string) - Additional details about the ZPA gateway\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(int) - Identifier that uniquely identifies an entity\n"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlZPAGatewayLastModifiedBy:getForwardingControlZPAGatewayLastModifiedBy"
                        },
                        "description": "(list) -  Information about the admin user that last modified the ZPA gateway\n"
                    },
                    "lastModifiedTime": {
                        "type": "integer",
                        "description": "(int) - Timestamp when the ZPA gateway was last modified\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(string) The configured name of the entity\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "(string) - Indicates whether the ZPA gateway is configured for Zscaler Internet Access (using option ZPA) or Zscaler Cloud Connector (using option ECZPA)\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlZPAGatewayZpaAppSegment:getForwardingControlZPAGatewayZpaAppSegment"
                        }
                    },
                    "zpaServerGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getForwardingControlZPAGatewayZpaServerGroup:getForwardingControlZPAGatewayZpaServerGroup"
                        },
                        "description": "() - The ZPA Server Group that is configured for Source IP Anchoring\n"
                    },
                    "zpaTenantId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "name",
                    "type",
                    "zpaAppSegments",
                    "zpaServerGroups",
                    "zpaTenantId"
                ]
            }
        },
        "zia:index/getGroupManagement:getGroupManagement": {
            "description": "Use the **zia_group_management** data source to get information about a user group that may have been created in the Zscaler Internet Access portal. This data source can then be associated with a ZIA cloud firewall filtering rule, and URL filtering rules.\n\n## Example Usage\n\n```hcl\ndata \"zia_group_management\" \"devops\" {\n name = \"DevOps\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGroupManagement.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the user group\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroupManagement.\n",
                "properties": {
                    "comments": {
                        "type": "string",
                        "description": "(Optional) Additional information about the group\n"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "idpId": {
                        "type": "integer",
                        "description": "(Optional) Unique identfier for the identity provider (IdP)\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "comments",
                    "id",
                    "idpId"
                ]
            }
        },
        "zia:index/getIPSFirewallRule:getIPSFirewallRule": {
            "description": "Use the **zia_firewall_ips_rule** data source to get information about a cloud firewall IPS rule available in the Zscaler Internet Access.\n\n## Example Usage\n\n```hcl\n# ZIA Firewall IPS Rule by name\ndata \"zia_firewall_ips_rule\" \"this\" {\n    name = \"Default Cloud IPS Rule\"\n}\n```\n\n```hcl\n# ZIA Firewall IPS Rule by ID\ndata \"zia_firewall_ips_rule\" \"this\" {\n    id = \"12365478\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getIPSFirewallRule.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier for the Firewall Filtering policy rule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Firewall Filtering policy rule\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIPSFirewallRule.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "(String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`\n"
                    },
                    "capturePcap": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether packet capture (PCAP) is enabled or not\n"
                    },
                    "defaultRule": {
                        "type": "boolean",
                        "description": "(Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not\n"
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleDepartment:getIPSFirewallRuleDepartment"
                        },
                        "description": "(List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n"
                    },
                    "destAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "destCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "destIpCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.\n"
                    },
                    "destIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleDestIpGroup:getIPSFirewallRuleDestIpGroup"
                        },
                        "description": "** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.\n"
                    },
                    "destIpv6Groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleDestIpv6Group:getIPSFirewallRuleDestIpv6Group"
                        }
                    },
                    "deviceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleDeviceGroup:getIPSFirewallRuleDeviceGroup"
                        },
                        "description": "(List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleDevice:getIPSFirewallRuleDevice"
                        },
                        "description": "(List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.\n"
                    },
                    "enableFullLogging": {
                        "type": "boolean",
                        "description": "(Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleGroup:getIPSFirewallRuleGroup"
                        },
                        "description": "(List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Integer) Identifier that uniquely identifies an entity\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleLabel:getIPSFirewallRuleLabel"
                        },
                        "description": "(List of Objects) Labels that are applicable to the rule.\n"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleLastModifiedBy:getIPSFirewallRuleLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer"
                    },
                    "locationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleLocationGroup:getIPSFirewallRuleLocationGroup"
                        },
                        "description": "(List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleLocation:getIPSFirewallRuleLocation"
                        },
                        "description": "(List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String) The configured name of the entity\n"
                    },
                    "nwServiceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleNwServiceGroup:getIPSFirewallRuleNwServiceGroup"
                        },
                        "description": "(List of Objects) Any number of predefined or custom network service groups to which the rule applies.\n"
                    },
                    "nwServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleNwService:getIPSFirewallRuleNwService"
                        },
                        "description": "(List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                    },
                    "predefined": {
                        "type": "boolean",
                        "description": "(Boolean) A Boolean field that indicates that the rule is predefined by using a true value\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "(Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.\n"
                    },
                    "resCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.\n"
                    },
                    "sourceCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.\n**NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``\"US\"``, ``\"CA\"``\n"
                    },
                    "srcIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleSrcIpGroup:getIPSFirewallRuleSrcIpGroup"
                        },
                        "description": "(List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.\n"
                    },
                    "srcIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).\n"
                    },
                    "srcIpv6Groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleSrcIpv6Group:getIPSFirewallRuleSrcIpv6Group"
                        },
                        "description": "(List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "(String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.\n"
                    },
                    "threatCategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleThreatCategory:getIPSFirewallRuleThreatCategory"
                        },
                        "description": "(List of Objects) Advanced threat categories to which the rule applies\n"
                    },
                    "timeWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleTimeWindow:getIPSFirewallRuleTimeWindow"
                        },
                        "description": "(List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleUser:getIPSFirewallRuleUser"
                        },
                        "description": "(List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getIPSFirewallRuleZpaAppSegment:getIPSFirewallRuleZpaAppSegment"
                        },
                        "description": "(List of Objects) The ZPA application segments to which the rule applies\n"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "capturePcap",
                    "defaultRule",
                    "departments",
                    "description",
                    "destAddresses",
                    "destCountries",
                    "destIpCategories",
                    "destIpGroups",
                    "destIpv6Groups",
                    "deviceGroups",
                    "devices",
                    "enableFullLogging",
                    "groups",
                    "id",
                    "labels",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "locationGroups",
                    "locations",
                    "name",
                    "nwServiceGroups",
                    "nwServices",
                    "order",
                    "predefined",
                    "rank",
                    "resCategories",
                    "sourceCountries",
                    "srcIpGroups",
                    "srcIps",
                    "srcIpv6Groups",
                    "state",
                    "threatCategories",
                    "timeWindows",
                    "users",
                    "zpaAppSegments"
                ]
            }
        },
        "zia:index/getIcapServers:getIcapServers": {
            "description": "Use the **zia_dlp_engines** data source to get information about a the list of DLP servers using ICAP in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\n# Retrieve a DLP ICAP Server by name\ndata \"zia_dlp_icap_servers\" \"example\"{\n    name = \"Example\"\n}\n```\n\n```hcl\n# Retrieve a DLP ICAP Server by ID\ndata \"zia_dlp_icap_servers\" \"example\"{\n    id = 1234567890\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getIcapServers.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIcapServers.\n",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "status",
                    "url"
                ]
            }
        },
        "zia:index/getLocationGroups:getLocationGroups": {
            "description": "Use the **zia_location_groups** data source to get information about a location group option available in the Zscaler Internet Access.\n\n```hcl\ndata \"zia_location_groups\" \"example\"{\n    name = \"Corporate User Traffic Group\"\n}\n```\n\n```hcl\ndata \"zia_location_groups\" \"example\"{\n    name = \"Guest Wifi Group\"\n}\n```\n\n```hcl\ndata \"zia_location_groups\" \"example\"{\n    name = \"IoT Traffic Group\"\n}\n```\n\n```hcl\ndata \"zia_location_groups\" \"example\"{\n    name = \"Server Traffic Group\"\n}\n```\n\n```hcl\ndata \"zia_location_groups\" \"example\"{\n    name = \"Server Traffic Group\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLocationGroups.\n",
                "properties": {
                    "dynamicLocationGroupCriterias": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getLocationGroupsDynamicLocationGroupCriteria:getLocationGroupsDynamicLocationGroupCriteria"
                        },
                        "description": "(Block Set) Dynamic location group information.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Location group name\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLocationGroups.\n",
                "properties": {
                    "comments": {
                        "type": "string",
                        "description": "(List of Object)\n"
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "(Boolean) Indicates the location group was deleted\n"
                    },
                    "dynamicLocationGroupCriterias": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getLocationGroupsDynamicLocationGroupCriteria:getLocationGroupsDynamicLocationGroupCriteria"
                        },
                        "description": "(Block Set) Dynamic location group information.\n"
                    },
                    "groupType": {
                        "type": "string",
                        "description": "(String) The location group's type (i.e., Static or Dynamic)\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Number) Identifier that uniquely identifies an entity\n"
                    },
                    "lastModTime": {
                        "type": "integer",
                        "description": "(List of Object) Automatically populated with the current time, after a successful POST or PUT request.\n"
                    },
                    "lastModUsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getLocationGroupsLastModUser:getLocationGroupsLastModUser"
                        },
                        "description": "(List of Object)\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getLocationGroupsLocation:getLocationGroupsLocation"
                        },
                        "description": "(List of Object) The Name-ID pairs of the locations that are assigned to the static location group. This is ignored if the groupType is Dynamic.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String) The configured name of the entity\n"
                    },
                    "predefined": {
                        "type": "boolean",
                        "description": "(Boolean)\n"
                    }
                },
                "type": "object",
                "required": [
                    "comments",
                    "deleted",
                    "groupType",
                    "id",
                    "lastModTime",
                    "lastModUsers",
                    "locations",
                    "predefined"
                ]
            }
        },
        "zia:index/getLocationLite:getLocationLite": {
            "description": "Use the **zia_location_lite** data source to get information about a location in lite mode option available in the Zscaler Internet Access. This data source can be used to retrieve the Road Warrior location to then associated with one of the following resources: ``zia.URLFilteringRules``, ``zia.FirewallFilteringRule`` and ``zia.DLPWebRules`\n\n```hcl\ndata \"zia_location_lite\" \"this\" {\n name = \"Road Warrior\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLocationLite.\n",
                "properties": {
                    "digestAuthEnabled": {
                        "type": "boolean",
                        "description": "(Boolean)\n"
                    },
                    "kerberosAuth": {
                        "type": "boolean",
                        "description": "(Boolean)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Location group name\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLocationLite.\n",
                "properties": {
                    "aupBlockInternetUntilAccepted": {
                        "type": "boolean",
                        "description": "(Boolean) For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is disabled until the user accepts the AUP.\n"
                    },
                    "aupEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) Enable AUP. When set to true, AUP is enabled for the location.\n"
                    },
                    "aupForceSslInspection": {
                        "type": "boolean",
                        "description": "(Boolean) For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP for HTTPS traffic.\n"
                    },
                    "cautionEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.\n"
                    },
                    "digestAuthEnabled": {
                        "type": "boolean",
                        "description": "(Boolean)\n"
                    },
                    "ecLocation": {
                        "type": "boolean",
                        "description": "(Boolean)\n"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "ipsControl": {
                        "type": "boolean",
                        "description": "(Boolean) Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.\n"
                    },
                    "ipv6Enabled": {
                        "type": "boolean",
                        "description": "(Number) If set to true, IPv6 is enabled for the location and IPv6 traffic from the location can be forwarded to the Zscaler service to enforce security policies.\n"
                    },
                    "kerberosAuth": {
                        "type": "boolean",
                        "description": "(Boolean)\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ofwEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.\n"
                    },
                    "other6SubLocation": {
                        "type": "boolean",
                        "description": "(Boolean) If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv6 addresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other6 and it can be renamed, if required. This field is applicable only if ipv6Enabled is set is true\n"
                    },
                    "otherSubLocation": {
                        "type": "boolean",
                        "description": "(Boolean) If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv4 addresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other and it can be renamed, if required.\n"
                    },
                    "parentId": {
                        "type": "integer",
                        "description": "(Number) - Parent Location ID. If this ID does not exist or is `0`, it is implied that it is a parent location. Otherwise, it is a sub-location whose parent has this ID. x-applicableTo: `SUB`\n"
                    },
                    "surrogateIp": {
                        "type": "boolean",
                        "description": "(Boolean) Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.\n"
                    },
                    "surrogateIpEnforcedForKnownBrowsers": {
                        "type": "boolean",
                        "description": "(Boolean) Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.\n"
                    },
                    "tz": {
                        "type": "string",
                        "description": "(String) Timezone of the location. If not specified, it defaults to GMT.\n"
                    },
                    "xffForwardEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.\n"
                    },
                    "zappSslScanEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.\n"
                    }
                },
                "type": "object",
                "required": [
                    "aupBlockInternetUntilAccepted",
                    "aupEnabled",
                    "aupForceSslInspection",
                    "cautionEnabled",
                    "ecLocation",
                    "id",
                    "ipsControl",
                    "ipv6Enabled",
                    "ofwEnabled",
                    "other6SubLocation",
                    "otherSubLocation",
                    "parentId",
                    "surrogateIp",
                    "surrogateIpEnforcedForKnownBrowsers",
                    "tz",
                    "xffForwardEnabled",
                    "zappSslScanEnabled"
                ]
            }
        },
        "zia:index/getLocationManagement:getLocationManagement": {
            "description": "Use the **zia_location_management** data source to get information about a location resource available in the Zscaler Internet Access Location Management. This resource can then be referenced in multiple other resources, such as URL Filtering Rules, Firewall rules etc.\n\n## Example Usage\n\n```hcl\n# ZIA Location Managemeent\ndata \"zia_location_management\" \"example\"{\n    name = \"San Jose\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLocationManagement.\n",
                "properties": {
                    "basicAuthEnabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "description": "The ID of the location to be exported.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the location to be exported.\n"
                    },
                    "parentName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLocationManagement.\n",
                "properties": {
                    "aupBlockInternetUntilAccepted": {
                        "type": "boolean",
                        "description": "(Boolean) For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is disabled until the user accepts the AUP.\n"
                    },
                    "aupEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) Enable AUP. When set to true, AUP is enabled for the location.\n"
                    },
                    "aupForceSslInspection": {
                        "type": "boolean",
                        "description": "(Boolean) For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP for HTTPS traffic.\n"
                    },
                    "aupTimeoutInDays": {
                        "type": "integer",
                        "description": "(Number) Custom AUP Frequency. Refresh time (in days) to re-validate the AUP.\n"
                    },
                    "authRequired": {
                        "type": "boolean",
                        "description": "(Boolean) Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.\n"
                    },
                    "basicAuthEnabled": {
                        "type": "boolean"
                    },
                    "cautionEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "(String) Country\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Additional notes or information regarding the location or sub-location. The description cannot exceed 1024 characters.\n"
                    },
                    "digestAuthEnabled": {
                        "type": "boolean"
                    },
                    "displayTimeUnit": {
                        "type": "string",
                        "description": "(String) Display Time Unit. The time unit to display for IP Surrogate idle time to disassociation.\n"
                    },
                    "dnBandwidth": {
                        "type": "integer",
                        "description": "(Number) Download bandwidth in bytes. The value `0` implies no Bandwidth Control enforcement.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Number) Identifier that uniquely identifies an entity\n"
                    },
                    "idleTimeInMinutes": {
                        "type": "integer",
                        "description": "(Number) Idle Time to Disassociation. The user mapping idle time (in minutes) is required if a Surrogate IP is enabled.\n"
                    },
                    "iotDiscoveryEnabled": {
                        "type": "boolean"
                    },
                    "ipAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of String) For locations: IP addresses of the egress points that are provisioned in the Zscaler Cloud. Each entry is a single IP address (e.g., `238.10.33.9`). For sub-locations: Egress, internal, or GRE tunnel IP addresses. Each entry is either a single IP address, CIDR (e.g., `10.10.33.0/24`), or range (e.g., `10.10.33.1-10.10.33.10`)).\n"
                    },
                    "ipsControl": {
                        "type": "boolean",
                        "description": "(Boolean) Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.\n"
                    },
                    "kerberosAuthEnabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String) The configured name of the entity\n"
                    },
                    "ofwEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.\n"
                    },
                    "parentId": {
                        "type": "integer",
                        "description": "(Number) - Parent Location ID. If this ID does not exist or is `0`, it is implied that it is a parent location. Otherwise, it is a sub-location whose parent has this ID. x-applicableTo: `SUB`\n"
                    },
                    "parentName": {
                        "type": "string"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of String) IP ports that are associated with the location.\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "(String) Profile tag that specifies the location traffic type. If not specified, this tag defaults to `Unassigned`.\n"
                    },
                    "sslScanEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.\n"
                    },
                    "surrogateIp": {
                        "type": "boolean",
                        "description": "(Boolean) Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.\n"
                    },
                    "surrogateIpEnforcedForKnownBrowsers": {
                        "type": "boolean",
                        "description": "(Boolean) Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.\n"
                    },
                    "surrogateRefreshTimeInMinutes": {
                        "type": "integer",
                        "description": "(Number) Refresh Time for re-validation of Surrogacy. The surrogate refresh time (in minutes) to re-validate the IP surrogates.\n"
                    },
                    "surrogateRefreshTimeUnit": {
                        "type": "string",
                        "description": "(String) Display Refresh Time Unit. The time unit to display for refresh time for re-validation of surrogacy.\n"
                    },
                    "tz": {
                        "type": "string",
                        "description": "(String) Timezone of the location. If not specified, it defaults to GMT.\n"
                    },
                    "upBandwidth": {
                        "type": "integer",
                        "description": "(Number) Upload bandwidth in bytes. The value `0` implies no Bandwidth Control enforcement.\n"
                    },
                    "vpnCredentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getLocationManagementVpnCredential:getLocationManagementVpnCredential"
                        }
                    },
                    "xffForwardEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.\n"
                    },
                    "zappSslScanEnabled": {
                        "type": "boolean",
                        "description": "(Boolean) This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.\n"
                    }
                },
                "type": "object",
                "required": [
                    "aupBlockInternetUntilAccepted",
                    "aupEnabled",
                    "aupForceSslInspection",
                    "aupTimeoutInDays",
                    "authRequired",
                    "basicAuthEnabled",
                    "cautionEnabled",
                    "country",
                    "description",
                    "digestAuthEnabled",
                    "displayTimeUnit",
                    "dnBandwidth",
                    "idleTimeInMinutes",
                    "iotDiscoveryEnabled",
                    "ipAddresses",
                    "ipsControl",
                    "kerberosAuthEnabled",
                    "ofwEnabled",
                    "parentId",
                    "ports",
                    "profile",
                    "sslScanEnabled",
                    "surrogateIp",
                    "surrogateIpEnforcedForKnownBrowsers",
                    "surrogateRefreshTimeInMinutes",
                    "surrogateRefreshTimeUnit",
                    "tz",
                    "upBandwidth",
                    "vpnCredentials",
                    "xffForwardEnabled",
                    "zappSslScanEnabled"
                ]
            }
        },
        "zia:index/getMalwareInspection:getMalwareInspection": {
            "description": "Use the **zia_atp_malware_inspection** data source to retrieves the traffic inspection configurations of Malware Protection policy. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)\n\n## Example Usage\n\n```hcl\ndata \"zia_atp_malware_inspection\" \"this\" {}\n```\n",
            "outputs": {
                "description": "A collection of values returned by getMalwareInspection.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "inspectInbound": {
                        "type": "boolean"
                    },
                    "inspectOutbound": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "inspectInbound",
                    "inspectOutbound",
                    "id"
                ]
            }
        },
        "zia:index/getMalwarePolicy:getMalwarePolicy": {
            "description": "Use the **zia_atp_malware_policy** data source to retrieves information about the security exceptions configured for the Malware Protection policy. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)\n\n## Example Usage\n\n```hcl\ndata \"zia_atp_malware_policy\" \"this\" {}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMalwarePolicy.\n",
                "properties": {
                    "blockPasswordProtectedArchiveFiles": {
                        "type": "boolean"
                    },
                    "blockUnscannableFiles": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMalwarePolicy.\n",
                "properties": {
                    "blockPasswordProtectedArchiveFiles": {
                        "type": "boolean"
                    },
                    "blockUnscannableFiles": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "blockPasswordProtectedArchiveFiles",
                    "blockUnscannableFiles",
                    "id"
                ]
            }
        },
        "zia:index/getMalwareProtocols:getMalwareProtocols": {
            "description": "Use the **zia_atp_malware_protocols** data source to retrieves the protocol inspection configurations for Malware Protection policy. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)\n\n## Example Usage\n\n```hcl\ndata \"zia_atp_malware_protocols\" \"this\" {}\n```\n",
            "outputs": {
                "description": "A collection of values returned by getMalwareProtocols.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "inspectFtp": {
                        "type": "boolean"
                    },
                    "inspectFtpOverHttp": {
                        "type": "boolean"
                    },
                    "inspectHttp": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "inspectFtp",
                    "inspectFtpOverHttp",
                    "inspectHttp",
                    "id"
                ]
            }
        },
        "zia:index/getMalwareSettings:getMalwareSettings": {
            "description": "Use the **zia_atp_malware_settings** data source to retrieves the malware protection policy configuration setting details. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)\n\n## Example Usage\n\n```hcl\ndata \"zia_atp_malware_settings\" \"this\" {}\n```\n",
            "outputs": {
                "description": "A collection of values returned by getMalwareSettings.\n",
                "properties": {
                    "adwareBlocked": {
                        "type": "boolean"
                    },
                    "adwareCapture": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ransomwareBlocked": {
                        "type": "boolean"
                    },
                    "ransomwareCapture": {
                        "type": "boolean"
                    },
                    "remoteAccessToolBlocked": {
                        "type": "boolean"
                    },
                    "remoteAccessToolCapture": {
                        "type": "boolean"
                    },
                    "spywareBlocked": {
                        "type": "boolean"
                    },
                    "spywareCapture": {
                        "type": "boolean"
                    },
                    "trojanBlocked": {
                        "type": "boolean"
                    },
                    "trojanCapture": {
                        "type": "boolean"
                    },
                    "unwantedApplicationsBlocked": {
                        "type": "boolean"
                    },
                    "unwantedApplicationsCapture": {
                        "type": "boolean"
                    },
                    "virusBlocked": {
                        "type": "boolean"
                    },
                    "virusCapture": {
                        "type": "boolean"
                    },
                    "wormBlocked": {
                        "type": "boolean"
                    },
                    "wormCapture": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "adwareBlocked",
                    "adwareCapture",
                    "ransomwareBlocked",
                    "ransomwareCapture",
                    "remoteAccessToolBlocked",
                    "remoteAccessToolCapture",
                    "spywareBlocked",
                    "spywareCapture",
                    "trojanBlocked",
                    "trojanCapture",
                    "unwantedApplicationsBlocked",
                    "unwantedApplicationsCapture",
                    "virusBlocked",
                    "virusCapture",
                    "wormBlocked",
                    "wormCapture",
                    "id"
                ]
            }
        },
        "zia:index/getRuleLabels:getRuleLabels": {
            "description": "Use the **zia_rule_labels** data source to get information about a rule label resource in the Zscaler Internet Access cloud or via the API. This data source can then be associated with resources such as: Firewall Rules and URL filtering rules\n\n## Example Usage\n\n```hcl\n# ZIA Rule Labels Data Source\ndata \"zia_rule_labels\" \"example\" {\n    name = \"Example\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRuleLabels.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The unique identifer for the device group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule label to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRuleLabels.\n",
                "properties": {
                    "createdBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getRuleLabelsCreatedBy:getRuleLabelsCreatedBy"
                        },
                        "description": "(String) The admin that created the rule label. This is a read-only field. Ignored by PUT requests.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) The rule label description.\n"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getRuleLabelsLastModifiedBy:getRuleLabelsLastModifiedBy"
                        },
                        "description": "(String) The admin that modified the rule label last. This is a read-only field. Ignored by PUT requests.\n"
                    },
                    "lastModifiedTime": {
                        "type": "integer",
                        "description": "(String) Timestamp when the rule lable was last modified. This is a read-only field. Ignored by PUT and DELETE requests.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "referencedRuleCount": {
                        "type": "integer",
                        "description": "(int) The number of rules that reference the label.\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdBies",
                    "description",
                    "id",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "name",
                    "referencedRuleCount"
                ]
            }
        },
        "zia:index/getSSLInspectionRules:getSSLInspectionRules": {
            "description": "Use the **zia_ssl_inspection_rules** data source to get information about a ssl inspection rule in the Zscaler Internet Access.\n\n## Example Usage\n\n```hcl\n# ZIA SSL Inspection by name\ndata \"zia_ssl_inspection_rules\" \"this\" {\n    name = \"SSL_Inspection_Rule01\"\n}\n```\n\n```hcl\n# ZIA SSL Inspection by ID\ndata \"zia_ssl_inspection_rules\" \"this\" {\n    id = \"12365478\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSSLInspectionRules.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier for the SSL Inspection\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the SSL Inspection\n"
                    },
                    "urlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of URL categories to which the DLP policy rule must be applied.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSSLInspectionRules.\n",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesAction:getSSLInspectionRulesAction"
                        },
                        "description": "Action taken when the traffic matches policy\n"
                    },
                    "cloudApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of URL categories to which the DLP policy rule must be applied.\n"
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesDepartment:getSSLInspectionRulesDepartment"
                        },
                        "description": "ID pairs of departments for which the rule is applied.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workload group\n"
                    },
                    "destIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesDestIpGroup:getSSLInspectionRulesDestIpGroup"
                        },
                        "description": "ID pairs of destination IP address groups for which the rule is applied.\n"
                    },
                    "deviceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesDeviceGroup:getSSLInspectionRulesDeviceGroup"
                        },
                        "description": "ID pairs of device groups for which the rule is applied.\n"
                    },
                    "deviceTrustLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Lists device trust levels for which the rule must be applied (for devices managed using Zscaler Client Connector).\n"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesDevice:getSSLInspectionRulesDevice"
                        },
                        "description": "ID pairs of devices for which the rule is applied\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesGroup:getSSLInspectionRulesGroup"
                        },
                        "description": "ID pairs of groups for which the rule is applied. If not set, rule is applied for all groups.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "A unique identifier assigned to the workload group\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesLabel:getSSLInspectionRulesLabel"
                        },
                        "description": "ID pairs of labels associated with the rule.\n"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesLastModifiedBy:getSSLInspectionRulesLastModifiedBy"
                        },
                        "description": "A nested block with details about who last modified the workload group.\n"
                    },
                    "lastModifiedTime": {
                        "type": "integer",
                        "description": "Timestamp when the workload group was last modified.\n"
                    },
                    "locationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesLocationGroup:getSSLInspectionRulesLocationGroup"
                        },
                        "description": "ID pairs of location groups to which the rule is applied. When empty, it implies applying to all location groups.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesLocation:getSSLInspectionRulesLocation"
                        },
                        "description": "ID pairs of locations to which the rule is applied. When empty, it implies applying to all locations.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workload group\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n"
                    },
                    "platforms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Zscaler Client Connector device platforms for which this rule is applied. Supported Values: `SCAN_IOS`, `SCAN_ANDROID`, `SCAN_MACOS`, `SCAN_WINDOWS`, `NO_CLIENT_CONNECTOR`, `SCAN_LINUX`\n"
                    },
                    "proxyGateways": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesProxyGateway:getSSLInspectionRulesProxyGateway"
                        },
                        "description": "When using ZPA Gateway forwarding, name-ID pairs of ZPA Application Segments for which the rule is applicable.\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.\n"
                    },
                    "roadWarriorForKerberos": {
                        "type": "boolean",
                        "description": "Indicates whether this rule is applied to remote users that use PAC with Kerberos authentication.\n"
                    },
                    "sourceIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesSourceIpGroup:getSSLInspectionRulesSourceIpGroup"
                        },
                        "description": "ID pairs of source IP address groups for which the rule is applied.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`\n"
                    },
                    "timeWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesTimeWindow:getSSLInspectionRulesTimeWindow"
                        },
                        "description": "The time intervals during which the rule applies\n"
                    },
                    "urlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of URL categories to which the DLP policy rule must be applied.\n"
                    },
                    "userAgentTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of user agent types the rule applies to.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesUser:getSSLInspectionRulesUser"
                        },
                        "description": "The list of preconfigured workload groups to which the policy must be applied.\n"
                    },
                    "workloadGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesWorkloadGroup:getSSLInspectionRulesWorkloadGroup"
                        },
                        "description": "The list of preconfigured workload groups to which the policy must be applied.\n"
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSSLInspectionRulesZpaAppSegment:getSSLInspectionRulesZpaAppSegment"
                        },
                        "description": "The list of ZPA Application Segments for which this rule is applicable (applicable only for ZPA Gateway forwarding).\n"
                    }
                },
                "type": "object",
                "required": [
                    "actions",
                    "cloudApplications",
                    "departments",
                    "description",
                    "destIpGroups",
                    "deviceGroups",
                    "deviceTrustLevels",
                    "devices",
                    "groups",
                    "id",
                    "labels",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "locationGroups",
                    "locations",
                    "name",
                    "order",
                    "platforms",
                    "proxyGateways",
                    "rank",
                    "roadWarriorForKerberos",
                    "sourceIpGroups",
                    "state",
                    "timeWindows",
                    "userAgentTypes",
                    "users",
                    "workloadGroups",
                    "zpaAppSegments"
                ]
            }
        },
        "zia:index/getSandboxBehavioralAnalysis:getSandboxBehavioralAnalysis": {
            "description": "Use the **zia_sandbox_behavioral_analysis** data source to get get the custom list of MD5 file hashes that are blocked by Sandbox\n\n## Example Usage\n\n```hcl\n# ZIA Security Policy Settings Data Source\ndata \"zia_sandbox_behavioral_analysis\" list_all {}\n```\n",
            "outputs": {
                "description": "A collection of values returned by getSandboxBehavioralAnalysis.\n",
                "properties": {
                    "fileHashesToBeBlockeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "fileHashesToBeBlockeds",
                    "id"
                ]
            }
        },
        "zia:index/getSandboxReport:getSandboxReport": {
            "description": "Use the **zia_sandbox_report** data source gets a full (i.e., complete) or summary detail report for an MD5 hash of a file that was analyzed by Sandbox.\n\n## Example Usage\n\n### Obtain Full Sandbox Report\n\n```hcl\ndata \"zia_sandbox_report\" \"this\" {\n  md5_hash = \"F69CA01D65E6C8F9E3540029E5F6AB92\"\n  details = \"full\"\n}\n```\n\n### Obtain Summarized Sandbox Report\n\n```hcl\ndata \"zia_sandbox_report\" \"this\" {\n  md5_hash = \"F69CA01D65E6C8F9E3540029E5F6AB92\"\n  details = \"summary\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSandboxReport.\n",
                "properties": {
                    "details": {
                        "type": "string",
                        "description": "(Required) Type of report, full or summary.\n"
                    },
                    "exploits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportExploit:getSandboxReportExploit"
                        }
                    },
                    "md5Hash": {
                        "type": "string",
                        "description": "(Required) MD5 hash of the file that was analyzed by Sandbox.\n"
                    },
                    "networkings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportNetworking:getSandboxReportNetworking"
                        }
                    },
                    "persistences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportPersistence:getSandboxReportPersistence"
                        }
                    },
                    "securityBypasses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportSecurityBypass:getSandboxReportSecurityBypass"
                        }
                    },
                    "spywares": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportSpyware:getSandboxReportSpyware"
                        }
                    },
                    "stealths": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportStealth:getSandboxReportStealth"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "md5Hash"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSandboxReport.\n",
                "properties": {
                    "classifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportClassification:getSandboxReportClassification"
                        }
                    },
                    "details": {
                        "type": "string",
                        "description": "(Required) Type of report, full or summary.\n"
                    },
                    "exploits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportExploit:getSandboxReportExploit"
                        }
                    },
                    "fileProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportFileProperty:getSandboxReportFileProperty"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "md5Hash": {
                        "type": "string",
                        "description": "(Required) MD5 hash of the file that was analyzed by Sandbox.\n"
                    },
                    "networkings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportNetworking:getSandboxReportNetworking"
                        }
                    },
                    "origins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportOrigin:getSandboxReportOrigin"
                        }
                    },
                    "persistences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportPersistence:getSandboxReportPersistence"
                        }
                    },
                    "securityBypasses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportSecurityBypass:getSandboxReportSecurityBypass"
                        }
                    },
                    "spywares": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportSpyware:getSandboxReportSpyware"
                        }
                    },
                    "stealths": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportStealth:getSandboxReportStealth"
                        }
                    },
                    "summaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportSummary:getSandboxReportSummary"
                        },
                        "description": "Summary detail report for an MD5 hash of a file that was analyzed by Sandbox\n"
                    },
                    "systemSummaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxReportSystemSummary:getSandboxReportSystemSummary"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "classifications",
                    "exploits",
                    "fileProperties",
                    "md5Hash",
                    "networkings",
                    "origins",
                    "persistences",
                    "securityBypasses",
                    "spywares",
                    "stealths",
                    "summaries",
                    "systemSummaries",
                    "id"
                ]
            }
        },
        "zia:index/getSandboxRules:getSandboxRules": {
            "description": "Use the **zia_sandbox_rules** data source to get information about a sandbox rule in the Zscaler Internet Access.\n\n## Example Usage\n\n```hcl\n# ZIA Sandbox Rule by name\ndata \"zia_sandbox_rules\" \"this\" {\n    name = \"Default BA Rule\"\n}\n```\n\n```hcl\n# ZIA Sandbox Rule by ID\ndata \"zia_sandbox_rules\" \"this\" {\n    id = \"12365478\"\n}\n```\n\n## Read-Only\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `description` - (String) Enter additional notes or information. The description cannot exceed 10,240 characters.\n* `order` - (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.\n* `state` - (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`\n* `rank` - (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.\n* `ba_rule_action` - (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`\n* `first_time_enable` - (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.\n* `first_time_operation` - (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`\n* `ml_action_enabled` - (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.\n* `by_threat_score` - (Integer)\n* `default_rule` - (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not\n\n* `url_categories` - (List of Strings) The list of URL categories to which the DLP policy rule must be applied.\n* `file_types` - (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.\n\n`Who, Where and When` supports the following attributes:\n\n* `locations` - (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.\n      - `id` - (Integer) Identifier that uniquely identifies an entity\n* `location_groups` - (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.\n      - `id` - (Integer) Identifier that uniquely identifies an entity\n* `users` - (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.\n      - `id` - (Integer) Identifier that uniquely identifies an entity\n* `groups` - (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.\n      - `id` - (Integer) Identifier that uniquely identifies an entity\n* `departments` - (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.\n      - `id` - (Integer) Identifier that uniquely identifies an entity\n\n* `labels` (List of Objects) Labels that are applicable to the rule.\n      - `id` - (Integer) Identifier that uniquely identifies an entity\n\n* `zpa_app_segments` (List of Objects) The ZPA application segments to which the rule applies\n      - `id` - (Integer) Identifier that uniquely identifies an entity\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSandboxRules.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier for the Sandbox rule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Sandbox rule\n"
                    },
                    "urlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSandboxRules.\n",
                "properties": {
                    "baPolicyCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "baRuleAction": {
                        "type": "string"
                    },
                    "byThreatScore": {
                        "type": "integer"
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxRulesDepartment:getSandboxRulesDepartment"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "fileTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "firstTimeEnable": {
                        "type": "boolean"
                    },
                    "firstTimeOperation": {
                        "type": "string"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxRulesGroup:getSandboxRulesGroup"
                        }
                    },
                    "id": {
                        "type": "integer"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxRulesLabel:getSandboxRulesLabel"
                        }
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxRulesLastModifiedBy:getSandboxRulesLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer"
                    },
                    "locationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxRulesLocationGroup:getSandboxRulesLocationGroup"
                        }
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxRulesLocation:getSandboxRulesLocation"
                        }
                    },
                    "mlActionEnabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rank": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "urlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxRulesUser:getSandboxRulesUser"
                        }
                    },
                    "zpaAppSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getSandboxRulesZpaAppSegment:getSandboxRulesZpaAppSegment"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "baPolicyCategories",
                    "baRuleAction",
                    "byThreatScore",
                    "departments",
                    "description",
                    "fileTypes",
                    "firstTimeEnable",
                    "firstTimeOperation",
                    "groups",
                    "id",
                    "labels",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "locationGroups",
                    "locations",
                    "mlActionEnabled",
                    "name",
                    "order",
                    "protocols",
                    "rank",
                    "state",
                    "users",
                    "zpaAppSegments"
                ]
            }
        },
        "zia:index/getSecuritySettings:getSecuritySettings": {
            "description": "Use the **zia_security_settings** data source to get a list of URLs that were added to the allow and denylist under the Advanced Threat Protection policy in the Zscaler Internet Access cloud or via the API.\n\n## Example Usage\n\n```hcl\n# ZIA Security Policy Settings Data Source\ndata \"zia_security_settings\" \"example\"{}\n```\n",
            "outputs": {
                "description": "A collection of values returned by getSecuritySettings.\n",
                "properties": {
                    "blacklistUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "whitelistUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "blacklistUrls",
                    "whitelistUrls",
                    "id"
                ]
            }
        },
        "zia:index/getTimeWindow:getTimeWindow": {
            "description": "Use the **zia_firewall_filtering_time_window** data source to get information about a time window option available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering rule.\n\n## Example Usage\n\n```hcl\n# ZIA Time Window - Work Hours\ndata \"zia_firewall_filtering_time_window\" \"work_hours\"{\n    name = \"Work hours\"\n}\n```\n\n```hcl\n# ZIA Time Window - Weekends\ndata \"zia_firewall_filtering_time_window\" \"weekends\"{\n    name = \"Weekends\"\n}\n```\n\n```hcl\n# ZIA Time Window - Off Hours\ndata \"zia_firewall_filtering_time_window\" \"off_hours\"{\n    name = \"Off hours\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTimeWindow.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the time window to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTimeWindow.\n",
                "properties": {
                    "dayOfWeeks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(String). The supported values are:\n* `ANY` - (String)\n* `NONE` - (String)\n* `EVERYDAY` - (String)\n* `SUN` - (String)\n* `MON` - (String)\n* `TUE` - (String)\n* `WED` - (String)\n* `THU` - (String)\n* `FRI` - (String)\n* `SAT` - (String)\n"
                    },
                    "endTime": {
                        "type": "integer",
                        "description": "(String)\n"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "integer",
                        "description": "(String)\n"
                    }
                },
                "type": "object",
                "required": [
                    "dayOfWeeks",
                    "endTime",
                    "id",
                    "startTime"
                ]
            }
        },
        "zia:index/getTrafficForwardingGREInternalIPRange:getTrafficForwardingGREInternalIPRange": {
            "description": "Use the **zia_gre_internal_ip_range_list** data source to get information about the next available GRE tunnel internal ip ranges for the purposes of GRE tunnel creation in the Zscaler Internet Access when the `ip_unnumbered` parameter is set to `false`\n\n## Example Usage\n\n```hcl\n# Retrieve GRE available Internal IP Ranges\n# By default it will return the first 10 available internal ip ranges\ndata \"zia_gre_internal_ip_range_list\" \"example\"{\n}\n```\n\n```hcl\n# Retrieve GRE available Internal IP Ranges\n# By using the `required_count` parameter it will return the indicated number of IP ranges.\ndata \"zia_gre_internal_ip_range_list\" \"example\"{\n  required_count = 20\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTrafficForwardingGREInternalIPRange.\n",
                "properties": {
                    "requiredCount": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTrafficForwardingGREInternalIPRange.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getTrafficForwardingGREInternalIPRangeList:getTrafficForwardingGREInternalIPRangeList"
                        }
                    },
                    "requiredCount": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "lists",
                    "id"
                ]
            }
        },
        "zia:index/getTrafficForwardingGRETunnel:getTrafficForwardingGRETunnel": {
            "description": "The **zia_traffic_forwarding_gre_tunnel** data source to get information about provisioned GRE tunnel information created in the Zscaler Internet Access portal.\n\n## Example Usage\n\n### Retrieve GRE Tunnel By Source IP\n\n```hcl\ndata \"zia_traffic_forwarding_gre_tunnel\" \"example\" {\n  source_ip = \"1.1.1.1\"\n}\n```\n\n### Retrieve GRE Tunnel By ID\n\n```hcl\ndata \"zia_traffic_forwarding_gre_tunnel\" \"example\" {\n  id = 1419395\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTrafficForwardingGRETunnel.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier of the static IP address that is associated to a GRE tunnel\n"
                    },
                    "sourceIp": {
                        "type": "string",
                        "description": "The source IP address of the GRE tunnel. This is typically a static IP address in the organization or SD-WAN.\n\n\u003e **NOTE** `source_ip` is the public IP address (Static IP) associated with the GRE Tunnel\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTrafficForwardingGRETunnel.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "(String) Additional information about this GRE tunnel\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Number) Unique identifer of the GRE virtual IP address (VIP)\n"
                    },
                    "internalIpRange": {
                        "type": "string",
                        "description": "(String) The start of the internal IP address in /29 CIDR range. Automatically set by the provider if `ip_unnumbered` is set to `false`.\n"
                    },
                    "ipUnnumbered": {
                        "type": "boolean",
                        "description": "(Boolean) This is required to support the automated SD-WAN provisioning of GRE tunnels, when set to true gre_tun_ip and gre_tun_id are set to null\n"
                    },
                    "lastModificationTime": {
                        "type": "integer"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getTrafficForwardingGRETunnelLastModifiedBy:getTrafficForwardingGRETunnelLastModifiedBy"
                        }
                    },
                    "managedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getTrafficForwardingGRETunnelManagedBy:getTrafficForwardingGRETunnelManagedBy"
                        }
                    },
                    "primaryDestVips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getTrafficForwardingGRETunnelPrimaryDestVip:getTrafficForwardingGRETunnelPrimaryDestVip"
                        },
                        "description": "**` (List) The primary destination data center and virtual IP address (VIP) of the GRE tunnel.\n"
                    },
                    "secondaryDestVips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getTrafficForwardingGRETunnelSecondaryDestVip:getTrafficForwardingGRETunnelSecondaryDestVip"
                        },
                        "description": "(List) The secondary destination data center and virtual IP address (VIP) of the GRE tunnel.\n"
                    },
                    "sourceIp": {
                        "type": "string"
                    },
                    "withinCountry": {
                        "type": "boolean",
                        "description": "(Boolean) Restrict the data center virtual IP addresses (VIPs) only to those within the same country as the source IP address\n"
                    }
                },
                "type": "object",
                "required": [
                    "comment",
                    "internalIpRange",
                    "ipUnnumbered",
                    "lastModificationTime",
                    "lastModifiedBies",
                    "managedBies",
                    "primaryDestVips",
                    "secondaryDestVips",
                    "withinCountry"
                ]
            }
        },
        "zia:index/getTrafficForwardingGRETunnelInfo:getTrafficForwardingGRETunnelInfo": {
            "description": "The **zia_traffic_forwarding_gre_tunnel_info** data source to get information about provisioned GRE tunnel information created in the Zscaler Internet Access portal.\n\n## Example Usage\n\n```hcl\n# ZIA Traffic Forwarding - GRE tunnel\ndata \"zia_traffic_forwarding_gre_tunnel_info\" \"example\" {\n  ip_address = \"1.1.1.1\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTrafficForwardingGRETunnelInfo.\n",
                "properties": {
                    "greEnabled": {
                        "type": "boolean",
                        "description": "Displays only ip addresses with GRE tunnel enabled\n\n\u003e **NOTE** `ip_address` is the public IP address (Static IP) associated with the GRE Tunnel\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "Filter based on an IP address range.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTrafficForwardingGRETunnelInfo.\n",
                "properties": {
                    "greEnabled": {
                        "type": "boolean"
                    },
                    "greRangePrimary": {
                        "type": "string",
                        "description": "(String)\n"
                    },
                    "greRangeSecondary": {
                        "type": "string",
                        "description": "(String)\n"
                    },
                    "greTunnelIp": {
                        "type": "string",
                        "description": "(String) The start of the internal IP address in /29 CIDR range\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "primaryGw": {
                        "type": "string",
                        "description": "(String)\n"
                    },
                    "secondaryGw": {
                        "type": "string",
                        "description": "(String)\n"
                    },
                    "tunId": {
                        "type": "integer",
                        "description": "(Number)\n"
                    }
                },
                "type": "object",
                "required": [
                    "greRangePrimary",
                    "greRangeSecondary",
                    "greTunnelIp",
                    "primaryGw",
                    "secondaryGw",
                    "tunId",
                    "id"
                ]
            }
        },
        "zia:index/getTrafficForwardingNodeVIPs:getTrafficForwardingNodeVIPs": {
            "description": "Use the **zia_traffic_forwarding_public_node_vips** data source to retrieve a paginated list of virtual IP addresses (VIPs) available in the Zscaler cloud.\n\n## Example Usage\n\n```hcl\n# ZIA Traffic Forwarding - Virtual IP Addresses (VIPs)\ndata \"zia_traffic_forwarding_public_node_vips\" \"yvr1\"{\n    datacenter = \"YVR1\"\n}\n\noutput \"zia_traffic_forwarding_public_node_vips_yvr1\"{\n    value = data.zia_traffic_forwarding_public_node_vips.yvr1\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTrafficForwardingNodeVIPs.\n",
                "properties": {
                    "datacenter": {
                        "type": "string",
                        "description": "Data-center Name\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTrafficForwardingNodeVIPs.\n",
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "cloudName": {
                        "type": "string"
                    },
                    "datacenter": {
                        "type": "string"
                    },
                    "greDomainName": {
                        "type": "string"
                    },
                    "greIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "location": {
                        "type": "string"
                    },
                    "pacDomainName": {
                        "type": "string"
                    },
                    "pacIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string"
                    },
                    "vpnDomainName": {
                        "type": "string"
                    },
                    "vpnIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "city",
                    "cloudName",
                    "greDomainName",
                    "greIps",
                    "location",
                    "pacDomainName",
                    "pacIps",
                    "region",
                    "vpnDomainName",
                    "vpnIps",
                    "id"
                ]
            }
        },
        "zia:index/getTrafficForwardingStaticIP:getTrafficForwardingStaticIP": {
            "description": "Use the **zia_traffic_forwarding_static_ip** data source to get information about all provisioned static IP addresses. This resource can then be utilized when creating a GRE Tunnel or VPN Credential resource of Type `IP`\n\n## Example Usage\n\n```hcl\n# ZIA Traffic Forwarding - Static IPs\ndata \"zia_traffic_forwarding_static_ip\" \"example\"{\n    ip_address =  \"1.1.1.1\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTrafficForwardingStaticIP.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The unique identifier for the static IP address\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The static IP address\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTrafficForwardingStaticIP.\n",
                "properties": {
                    "cities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getTrafficForwardingStaticIPCity:getTrafficForwardingStaticIPCity"
                        }
                    },
                    "comment": {
                        "type": "string",
                        "description": "(String) Additional information about this static IP address\n"
                    },
                    "geoOverride": {
                        "type": "boolean",
                        "description": "(Boolean) If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(String) Identifier that uniquely identifies an entity\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "(String) The static IP address\n"
                    },
                    "lastModificationTime": {
                        "type": "integer",
                        "description": "(Number) When the static IP address was last modified\n"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getTrafficForwardingStaticIPLastModifiedBy:getTrafficForwardingStaticIPLastModifiedBy"
                        },
                        "description": "(Set of Object)\n"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "(Number) Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between `-90` and `90` degrees.\n"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "(Number) Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between `-180` and `180` degrees.\n"
                    },
                    "managedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getTrafficForwardingStaticIPManagedBy:getTrafficForwardingStaticIPManagedBy"
                        },
                        "description": "(Set of Object)\n"
                    },
                    "routableIp": {
                        "type": "boolean",
                        "description": "(Boolean) Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cities",
                    "comment",
                    "geoOverride",
                    "id",
                    "ipAddress",
                    "lastModificationTime",
                    "lastModifiedBies",
                    "latitude",
                    "longitude",
                    "managedBies",
                    "routableIp"
                ]
            }
        },
        "zia:index/getTrafficForwardingVIPRecommendedList:getTrafficForwardingVIPRecommendedList": {
            "description": "Use the **zia_traffic_forwarding_gre_vip_recommended_list** data source to get information about a list of recommended GRE tunnel virtual IP addresses (VIPs), based on source IP address or latitude/longitude coordinates.\n\n## Example Usage\n\n```hcl\n# ZIA Traffic Forwarding - GRE VIP Recommended List\ndata \"zia_traffic_forwarding_gre_vip_recommended_list\" \"this\"{\n    source_ip = \"1.1.1.1\"\n    required_count = 2\n}\n```\n\n### With Overridden Geo Coordinates\n\n```hcl\n# ZIA Traffic Forwarding - GRE VIP Recommended List\ndata \"zia_traffic_forwarding_gre_vip_recommended_list\" \"this\"{\n    source_ip = \"1.1.1.1\"\n    required_count = 2\n    latitude     = 22.2914\n    longitude    = 114.1445\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTrafficForwardingVIPRecommendedList.\n",
                "properties": {
                    "includeCurrentVips": {
                        "type": "boolean",
                        "description": "(Boolean) Include currently assigned VIPs.\n"
                    },
                    "includePrivateServiceEdge": {
                        "type": "boolean",
                        "description": "(Boolean) Include ZIA Private Service Edge VIPs.\n"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "(Number) The latitude coordinate of the GRE tunnel source.\n"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "(Number) The longitude coordinate of the GRE tunnel source.\n"
                    },
                    "requiredCount": {
                        "type": "integer",
                        "description": "Number of IP address to be exported.\n"
                    },
                    "routableIp": {
                        "type": "boolean",
                        "description": "(Boolean) The routable IP address.\n"
                    },
                    "sourceIp": {
                        "type": "string",
                        "description": "Filter based on an IP address range.\n"
                    },
                    "subcloud": {
                        "type": "string",
                        "description": "(String) The longitude coordinate of the GRE tunnel source.\n"
                    },
                    "withinCountryOnly": {
                        "type": "boolean",
                        "description": "(Boolean) Search within country only.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTrafficForwardingVIPRecommendedList.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "includeCurrentVips": {
                        "type": "boolean",
                        "description": "(Boolean) Include currently assigned VIPs.\n"
                    },
                    "includePrivateServiceEdge": {
                        "type": "boolean",
                        "description": "(Boolean) Include ZIA Private Service Edge VIPs.\n"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "(Number) The latitude coordinate of the GRE tunnel source.\n"
                    },
                    "lists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getTrafficForwardingVIPRecommendedListList:getTrafficForwardingVIPRecommendedListList"
                        },
                        "description": "The list of all recommended returned Virtual IP Addresses (VIPs)\n"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "(Number) The longitude coordinate of the GRE tunnel source.\n"
                    },
                    "requiredCount": {
                        "type": "integer"
                    },
                    "routableIp": {
                        "type": "boolean",
                        "description": "(Boolean) The routable IP address.\n"
                    },
                    "sourceIp": {
                        "type": "string",
                        "description": "(String) The public source IP address.\n"
                    },
                    "subcloud": {
                        "type": "string",
                        "description": "(String) The longitude coordinate of the GRE tunnel source.\n"
                    },
                    "withinCountryOnly": {
                        "type": "boolean",
                        "description": "(Boolean) Search within country only.\n"
                    }
                },
                "type": "object",
                "required": [
                    "lists",
                    "id"
                ]
            }
        },
        "zia:index/getTrafficForwardingVPNCredentials:getTrafficForwardingVPNCredentials": {
            "description": "Use the **zia_traffic_forwarding_vpn_credentials** data source to get information about VPN credentials that can be associated to locations. VPN is one way to route traffic from customer locations to the cloud. Site-to-Site IPSec VPN credentials can be identified by the cloud through one of the following methods:\n\n* Common Name (CN) of IPSec Certificate\n* VPN User FQDN - requires VPN_SITE_TO_SITE subscription\n* VPN IP Address - requires VPN_SITE_TO_SITE subscription\n* Extended Authentication (XAUTH) or hosted mobile UserID - requires VPN_MOBILE subscription\n\n## Example Usage\n\n```hcl\n# ZIA Traffic Forwarding - VPN Credentials of Type FQDN\ndata \"zia_traffic_forwarding_vpn_credentials\" \"example\"{\n    fqdn = \"sjc-1-37@acme.com\"\n}\n```\n\n```hcl\n# ZIA Traffic Forwarding - VPN Credentials of Type IP\ndata \"zia_traffic_forwarding_vpn_credentials\" \"example\"{\n    ip_address = \"1.1.1.1\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTrafficForwardingVPNCredentials.\n",
                "properties": {
                    "fqdn": {
                        "type": "string",
                        "description": "(String) Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique identifer of the GRE virtual IP address (VIP)\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "Filter based on an IP address range.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "(String) VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTrafficForwardingVPNCredentials.\n",
                "properties": {
                    "comments": {
                        "type": "string",
                        "description": "(String) Additional information about this VPN credential.\n"
                    },
                    "fqdn": {
                        "type": "string",
                        "description": "(String) Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Number) Identifier that uniquely identifies an entity\n"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getTrafficForwardingVPNCredentialsLocation:getTrafficForwardingVPNCredentialsLocation"
                        },
                        "description": "(Set of Object) Location that is associated to this VPN credential. Non-existence means not associated to any location.\n"
                    },
                    "managedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getTrafficForwardingVPNCredentialsManagedBy:getTrafficForwardingVPNCredentialsManagedBy"
                        },
                        "description": "(Set of Object) SD-WAN Partner that manages the location. If a partner does not manage the locaton, this is set to Self.\n"
                    },
                    "preSharedKey": {
                        "type": "string",
                        "description": "(String) Pre-shared key. This is a required field for `UFQDN` and `IP` auth type.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "(String) VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created.\n"
                    }
                },
                "type": "object",
                "required": [
                    "comments",
                    "id",
                    "locations",
                    "managedBies",
                    "preSharedKey",
                    "type"
                ]
            }
        },
        "zia:index/getURLCategories:getURLCategories": {
            "description": "Use the **zia_url_categories** data source to get information about all or custom URL categories. By default, the response includes keywords.\n\n```hcl\n// Query a URL Category by Name\ndata \"zia_url_categories\" \"this\"{\n    configured_name = \"Example\"\n}\n```\n\n```hcl\n// Query a URL Category by its Custom ID\ndata \"zia_url_categories\" \"this\"{\n    id = \"CUSTOM_08\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getURLCategories.\n",
                "properties": {
                    "configuredName": {
                        "type": "string",
                        "description": "(String) Name of the URL category. This is only required for custom URL categories.\n"
                    },
                    "customCategory": {
                        "type": "boolean",
                        "description": "(Boolean) Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.\n"
                    },
                    "customIpRangesCount": {
                        "type": "integer",
                        "description": "(Number) The number of custom IP address ranges associated to the URL category.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "URL category\n"
                    },
                    "superCategory": {
                        "type": "string",
                        "description": "(String)\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getURLCategories.\n",
                "properties": {
                    "configuredName": {
                        "type": "string",
                        "description": "(String) Name of the URL category. This is only required for custom URL categories.\n"
                    },
                    "customCategory": {
                        "type": "boolean",
                        "description": "(Boolean) Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.\n"
                    },
                    "customIpRangesCount": {
                        "type": "integer",
                        "description": "(Number) The number of custom IP address ranges associated to the URL category.\n"
                    },
                    "customUrlsCount": {
                        "type": "integer",
                        "description": "(Number) The number of custom URLs associated to the URL category.\n"
                    },
                    "dbCategorizedUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of String) URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Description of the category.\n"
                    },
                    "editable": {
                        "type": "boolean",
                        "description": "(Boolean) Value is set to false for custom URL category when due to scope user does not have edit permission\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "(String) Identifier that uniquely identifies an entity\n"
                    },
                    "ipRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipRangesRetainingParentCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipRangesRetainingParentCategoryCount": {
                        "type": "integer",
                        "description": "(Number) The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.\n"
                    },
                    "keywords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of String) Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).\n"
                    },
                    "keywordsRetainingParentCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLCategoriesScope:getURLCategoriesScope"
                        },
                        "description": "(List of Object) Scope of the custom categories.\n"
                    },
                    "superCategory": {
                        "type": "string",
                        "description": "(String)\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "(String) The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`\n"
                    },
                    "urlKeywordCounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLCategoriesUrlKeywordCount:getURLCategoriesUrlKeywordCount"
                        },
                        "description": "(List of Object) URL and keyword counts for the category.\n"
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of String) Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).\n"
                    },
                    "urlsRetainingParentCategoryCount": {
                        "type": "integer",
                        "description": "(Number) The number of custom URLs associated to the URL category, that also need to be retained under the original parent category.\n"
                    },
                    "val": {
                        "type": "integer",
                        "description": "(Number) The unique ID for the URL category.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configuredName",
                    "customCategory",
                    "customUrlsCount",
                    "dbCategorizedUrls",
                    "description",
                    "editable",
                    "id",
                    "ipRanges",
                    "ipRangesRetainingParentCategories",
                    "ipRangesRetainingParentCategoryCount",
                    "keywords",
                    "keywordsRetainingParentCategories",
                    "scopes",
                    "type",
                    "urlKeywordCounts",
                    "urls",
                    "urlsRetainingParentCategoryCount",
                    "val"
                ]
            }
        },
        "zia:index/getURLFilteringCloudAppSettings:getURLFilteringCloudAppSettings": {
            "description": "Use the **zia_url_filtering_and_cloud_app_settings** data source to get information about URL and Cloud App Control advanced policy settings.\n\n```hcl\n```\n",
            "outputs": {
                "description": "A collection of values returned by getURLFilteringCloudAppSettings.\n",
                "properties": {
                    "blockSkype": {
                        "type": "boolean"
                    },
                    "considerEmbeddedSites": {
                        "type": "boolean"
                    },
                    "enableBlockOverrideForNonAuthUser": {
                        "type": "boolean"
                    },
                    "enableChatgptPrompt": {
                        "type": "boolean"
                    },
                    "enableCipaCompliance": {
                        "type": "boolean"
                    },
                    "enableDynamicContentCat": {
                        "type": "boolean"
                    },
                    "enableGeminiPrompt": {
                        "type": "boolean"
                    },
                    "enableMetaPrompt": {
                        "type": "boolean"
                    },
                    "enableMicrosoftCopilotPrompt": {
                        "type": "boolean"
                    },
                    "enableMsftO365": {
                        "type": "boolean"
                    },
                    "enableNewlyRegisteredDomains": {
                        "type": "boolean"
                    },
                    "enableOffice365": {
                        "type": "boolean"
                    },
                    "enablePerPlexityPrompt": {
                        "type": "boolean"
                    },
                    "enablePoepPrompt": {
                        "type": "boolean"
                    },
                    "enableUcaasLogmein": {
                        "type": "boolean"
                    },
                    "enableUcaasRingCentral": {
                        "type": "boolean"
                    },
                    "enableUcaasTalkdesk": {
                        "type": "boolean"
                    },
                    "enableUcaasWebex": {
                        "type": "boolean"
                    },
                    "enableUcaasZoom": {
                        "type": "boolean"
                    },
                    "enforceSafeSearch": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "blockSkype",
                    "considerEmbeddedSites",
                    "enableBlockOverrideForNonAuthUser",
                    "enableChatgptPrompt",
                    "enableCipaCompliance",
                    "enableDynamicContentCat",
                    "enableGeminiPrompt",
                    "enableMetaPrompt",
                    "enableMicrosoftCopilotPrompt",
                    "enableMsftO365",
                    "enableNewlyRegisteredDomains",
                    "enableOffice365",
                    "enablePerPlexityPrompt",
                    "enablePoepPrompt",
                    "enableUcaasLogmein",
                    "enableUcaasRingCentral",
                    "enableUcaasTalkdesk",
                    "enableUcaasWebex",
                    "enableUcaasZoom",
                    "enforceSafeSearch",
                    "id"
                ]
            }
        },
        "zia:index/getURLFilteringRules:getURLFilteringRules": {
            "description": "Use the **zia_url_filtering_rules** data source to get information about a URL filtering rule information for the specified `Name`.\n\n```hcl\ndata \"zia_url_filtering_rules\" \"example\"{\n    name = \"Example\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getURLFilteringRules.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "URL Filtering Rule ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the URL Filtering policy rule\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getURLFilteringRules.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "(String) Action taken when traffic matches rule criteria. Supported values: `ANY`, `NONE`, `BLOCK`, `CAUTION`, `ALLOW`, `ICAP_RESPONSE`\n"
                    },
                    "blockOverride": {
                        "type": "boolean",
                        "description": "(String) When set to true, a `BLOCK` action triggered by the rule could be overridden. If true and both overrideGroup and overrideUsers are not set, the `BLOCK` triggered by this rule could be overridden for any users. If block_override is not set, `BLOCK` action cannot be overridden.\n"
                    },
                    "cbiProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesCbiProfile:getURLFilteringRulesCbiProfile"
                        },
                        "description": "(List) The cloud browser isolation profile to which the ISOLATE action is applied in the URL Filtering Policy rules. This block is required when the attribute `action` is set to `ISOLATE`\n"
                    },
                    "ciparule": {
                        "type": "boolean"
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesDepartment:getURLFilteringRulesDepartment"
                        },
                        "description": "(List of Object) The departments to which the Firewall Filtering policy rule applies\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Additional information about the rule\n"
                    },
                    "deviceGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesDeviceGroup:getURLFilteringRulesDeviceGroup"
                        }
                    },
                    "deviceTrustLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List) List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed using Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the Zscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation. Supported values: `ANY`, `UNKNOWN_DEVICETRUSTLEVEL`, `LOW_TRUST`, `MEDIUM_TRUST`, `HIGH_TRUST`\n"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesDevice:getURLFilteringRulesDevice"
                        }
                    },
                    "endUserNotificationUrl": {
                        "type": "string",
                        "description": "(String) URL of end user notification page to be displayed when the rule is matched. Not applicable if either 'overrideUsers' or 'overrideGroups' is specified.\n"
                    },
                    "enforceTimeValidity": {
                        "type": "boolean",
                        "description": "(String) Enforce a set a validity time period for the URL Filtering rule.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesGroup:getURLFilteringRulesGroup"
                        },
                        "description": "(List of Object) The groups to which the Firewall Filtering policy rule applies\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Number) A unique identifier assigned to the workload group\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesLabel:getURLFilteringRulesLabel"
                        }
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesLastModifiedBy:getURLFilteringRulesLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer",
                        "description": "(Number) When the rule was last modified\n"
                    },
                    "locationGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesLocationGroup:getURLFilteringRulesLocationGroup"
                        },
                        "description": "(List of Object) The location groups to which the Firewall Filtering policy rule applies\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesLocation:getURLFilteringRulesLocation"
                        },
                        "description": "(List of Object) The locations to which the Firewall Filtering policy rule applies\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String) The name of the workload group\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "(Number) Order of execution of rule with respect to other URL Filtering rules\n"
                    },
                    "overrideGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesOverrideGroup:getURLFilteringRulesOverrideGroup"
                        },
                        "description": "(List of Object) Name-ID pairs of users for which this rule can be overridden. Applicable only if blockOverride is set to `true`, action is `BLOCK` and overrideGroups is not set.If this overrideUsers is not set, `BLOCK` action can be overridden for any group.\n"
                    },
                    "overrideUsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesOverrideUser:getURLFilteringRulesOverrideUser"
                        },
                        "description": "(List of Object) Name-ID pairs of users for which this rule can be overridden. Applicable only if blockOverride is set to `true`, action is `BLOCK` and overrideGroups is not set.If this overrideUsers is not set, `BLOCK` action can be overridden for any user.\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of Object) Protocol criteria. Supported values: `SMRULEF_ZPA_BROKERS_RULE`, `ANY_RULE`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`, `TUNNELSSL_RULE`, `HTTP_PROXY`, `FOHTTP_RULE`, `FTP_RULE`, `HTTPS_RULE`, `HTTP_RULE`, `SSL_RULE`, `TUNNEL_RULE`, `WEBSOCKETSSL_RULE`, `WEBSOCKET_RULE`\n"
                    },
                    "rank": {
                        "type": "integer",
                        "description": "(String) Admin rank of the admin who creates this rule\n"
                    },
                    "requestMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(String) Request method for which the rule must be applied. If not set, rule will be applied to all methods\n"
                    },
                    "sizeQuota": {
                        "type": "integer",
                        "description": "(String) Size quota in KB beyond which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule action is set to `BLOCK`, this field is not applicable.\n"
                    },
                    "sourceIpGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesSourceIpGroup:getURLFilteringRulesSourceIpGroup"
                        }
                    },
                    "state": {
                        "type": "string",
                        "description": "(String) Rule State\n"
                    },
                    "timeQuota": {
                        "type": "integer",
                        "description": "(String) Time quota in minutes, after which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule action is set to `BLOCK`, this field is not applicable.\n"
                    },
                    "timeWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesTimeWindow:getURLFilteringRulesTimeWindow"
                        },
                        "description": "(List of Object) The time interval in which the Firewall Filtering policy rule applies\n"
                    },
                    "urlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(String) List of URL categories for which rule must be applied\n"
                    },
                    "userAgentTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List) - User Agent types on which this rule will be applied: Returned values are: `CHROME`, `FIREFOX`, `MSIE`, `MSEDGE`,   `MSCHREDGE`, `OPERA`, `OTHER`, `SAFARI`\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesUser:getURLFilteringRulesUser"
                        },
                        "description": "(List of Object) The users to which the Firewall Filtering policy rule applies\n"
                    },
                    "validityEndTime": {
                        "type": "integer",
                        "description": "(Number) If enforceTimeValidity is set to true, the URL Filtering rule will cease to be valid on this end date and time.\n"
                    },
                    "validityStartTime": {
                        "type": "integer",
                        "description": "(Number) If enforceTimeValidity is set to true, the URL Filtering rule will be valid starting on this date and time.\n"
                    },
                    "validityTimeZoneId": {
                        "type": "string",
                        "description": "(Number) If enforceTimeValidity is set to true, the URL Filtering rule date and time will be valid based on this time zone ID.\n"
                    },
                    "workloadGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getURLFilteringRulesWorkloadGroup:getURLFilteringRulesWorkloadGroup"
                        },
                        "description": "(List) The list of preconfigured workload groups to which the policy must be applied\n"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "blockOverride",
                    "cbiProfiles",
                    "ciparule",
                    "departments",
                    "description",
                    "deviceGroups",
                    "deviceTrustLevels",
                    "devices",
                    "endUserNotificationUrl",
                    "enforceTimeValidity",
                    "groups",
                    "labels",
                    "lastModifiedBies",
                    "lastModifiedTime",
                    "locationGroups",
                    "locations",
                    "order",
                    "overrideGroups",
                    "overrideUsers",
                    "protocols",
                    "rank",
                    "requestMethods",
                    "sizeQuota",
                    "sourceIpGroups",
                    "state",
                    "timeQuota",
                    "timeWindows",
                    "urlCategories",
                    "userAgentTypes",
                    "users",
                    "validityEndTime",
                    "validityStartTime",
                    "validityTimeZoneId",
                    "workloadGroups"
                ]
            }
        },
        "zia:index/getUserManagement:getUserManagement": {
            "description": "Use the **zia_user_management** data source to get information about a user account that may have been created in the Zscaler Internet Access portal or via API. This data source can then be associated with a ZIA cloud firewall filtering rule, and URL filtering rules.\n\n## Example Usage\n\n```hcl\n# ZIA Local User Account\ndata \"zia_user_management\" \"adam_ashcroft\" {\n name = \"Adam Ashcroft\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUserManagement.\n",
                "properties": {
                    "authMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(String) Type of authentication method to be enabled. Supported values are: ``BASIC`` and ``DIGEST``\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "The ID of the time window resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "User name. This appears when choosing users for policies.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUserManagement.\n",
                "properties": {
                    "adminUser": {
                        "type": "boolean",
                        "description": "(String) True if this user is an Admin user. readOnly: `true` default: `false`\n"
                    },
                    "authMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(String) Type of authentication method to be enabled. Supported values are: ``BASIC`` and ``DIGEST``\n"
                    },
                    "comments": {
                        "type": "string",
                        "description": "(String) Additional information about the group\n"
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getUserManagementDepartment:getUserManagementDepartment"
                        },
                        "description": "(String) Department a user belongs to\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "(Required) User email consists of a user name and domain name. It does not have to be a valid email address, but it must be unique and its domain must belong to the organization\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getUserManagementGroup:getUserManagementGroup"
                        },
                        "description": "(String) List of Groups a user belongs to. Groups are used in policies.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Number) Unique identfier for the group\n"
                    },
                    "isAuditor": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String) Group name\n"
                    },
                    "tempAuthEmail": {
                        "type": "string",
                        "description": "(String) Temporary Authentication Email. If you enabled one-time tokens or links, enter the email address to which the Zscaler service sends the tokens or links. If this is empty, the service will send the email to the User email.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "(String) User type. Provided only if this user is not an end user. The supported types are:\n* `SUPERADMIN`\n* `ADMIN`\n* `AUDITOR`\n* `GUEST`\n* `REPORT_USER`\n* `UNAUTH_TRAFFIC_DEFAULT`\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminUser",
                    "comments",
                    "departments",
                    "email",
                    "groups",
                    "isAuditor",
                    "tempAuthEmail",
                    "type"
                ]
            }
        },
        "zia:index/getWorkloadGroups:getWorkloadGroups": {
            "description": "Use the **zia_workload_groups** data source to get information about Workload Groups in the Zscaler Internet Access cloud or via the API. This data source can then be used as a criterion in ZIA policies such as, Firewall Filtering, URL Filtering, and Data Loss Prevention (DLP) to apply security policies to the workload traffic.\n\n## Example Usage\n\n```hcl\n# ZIA Admin User Data Source\ndata \"zia_workload_groups\" \"ios\"{\n    name = \"Example\"\n}\n```\n",
            "inputs": {
                "description": "A collection of arguments for invoking getWorkloadGroups.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the workload group to be exported.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getWorkloadGroups.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "(String) The description of the workload group.\n"
                    },
                    "expression": {
                        "type": "string",
                        "description": "(String) The workload group expression containing tag types, tags, and their relationships.\n"
                    },
                    "expressionJsons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getWorkloadGroupsExpressionJson:getWorkloadGroupsExpressionJson"
                        },
                        "description": "(List) The workload group expression containing tag types, tags, and their relationships represented in a JSON format.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "(Number) Identifier that uniquely identifies an entity\n"
                    },
                    "lastModifiedBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/zia:index/getWorkloadGroupsLastModifiedBy:getWorkloadGroupsLastModifiedBy"
                        }
                    },
                    "lastModifiedTime": {
                        "type": "integer",
                        "description": "(Number) When the rule was last modified\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String) The configured name of the entity\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "expression",
                    "expressionJsons",
                    "id",
                    "lastModifiedBies",
                    "lastModifiedTime"
                ]
            }
        }
    }
}