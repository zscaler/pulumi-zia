// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the **zia_advanced_threat_settings** data source to retrieve the advanced threat configuration settings in the ZIA Admin Portal. To learn more see [Advanced Threat Protection](https://help.zscaler.com/unified/configuring-security-exceptions-advanced-threat-protection-policy)
 *
 * ## Example Usage
 */
export function getAdvancedThreatSettings(opts?: pulumi.InvokeOptions): Promise<GetAdvancedThreatSettingsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getAdvancedThreatSettings:getAdvancedThreatSettings", {
    }, opts);
}

/**
 * A collection of values returned by getAdvancedThreatSettings.
 */
export interface GetAdvancedThreatSettingsResult {
    readonly activexBlocked: boolean;
    readonly activexCapture: boolean;
    readonly adSpywareSitesBlocked: boolean;
    readonly adSpywareSitesCapture: boolean;
    readonly alertForUnknownSuspiciousC2Traffic: boolean;
    readonly anonymizerBlocked: boolean;
    readonly anonymizerCapture: boolean;
    readonly bitTorrentBlocked: boolean;
    readonly bitTorrentCapture: boolean;
    readonly blockCountriesCapture: boolean;
    readonly blockedCountries: string[];
    readonly browserExploitsBlocked: boolean;
    readonly browserExploitsCapture: boolean;
    readonly cmdCtlServerBlocked: boolean;
    readonly cmdCtlServerCapture: boolean;
    readonly cmdCtlTrafficBlocked: boolean;
    readonly cmdCtlTrafficCapture: boolean;
    readonly cookieStealingBlocked: boolean;
    readonly cookieStealingPcapEnabled: boolean;
    readonly cryptoMiningBlocked: boolean;
    readonly cryptoMiningCapture: boolean;
    readonly dgaDomainsBlocked: boolean;
    readonly dgaDomainsCapture: boolean;
    readonly fileFormatVunerabilitesBlocked: boolean;
    readonly fileFormatVunerabilitesCapture: boolean;
    readonly googleTalkBlocked: boolean;
    readonly googleTalkCapture: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ircTunnellingBlocked: boolean;
    readonly ircTunnellingCapture: boolean;
    readonly knownPhishingSitesBlocked: boolean;
    readonly knownPhishingSitesCapture: boolean;
    readonly maliciousUrlsCapture: boolean;
    readonly malwareSitesBlocked: boolean;
    readonly malwareSitesCapture: boolean;
    readonly potentialMaliciousRequestsBlocked: boolean;
    readonly potentialMaliciousRequestsCapture: boolean;
    readonly riskTolerance: number;
    readonly riskToleranceCapture: boolean;
    readonly sshTunnellingBlocked: boolean;
    readonly sshTunnellingCapture: boolean;
    readonly suspectAdwareSpywareSitesBlocked: boolean;
    readonly suspectAdwareSpywareSitesCapture: boolean;
    readonly suspectedPhishingSitesBlocked: boolean;
    readonly suspectedPhishingSitesCapture: boolean;
    readonly torBlocked: boolean;
    readonly torCapture: boolean;
    readonly webSpamBlocked: boolean;
    readonly webSpamCapture: boolean;
}
/**
 * Use the **zia_advanced_threat_settings** data source to retrieve the advanced threat configuration settings in the ZIA Admin Portal. To learn more see [Advanced Threat Protection](https://help.zscaler.com/unified/configuring-security-exceptions-advanced-threat-protection-policy)
 *
 * ## Example Usage
 */
export function getAdvancedThreatSettingsOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAdvancedThreatSettingsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zia:index/getAdvancedThreatSettings:getAdvancedThreatSettings", {
    }, opts);
}
