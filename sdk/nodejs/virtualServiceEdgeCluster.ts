// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zia/about-virtual-service-edge-clusters)
 * * [API documentation](https://help.zscaler.com/zia/service-edges#/virtualZenClusters-get)
 *
 * Use the **zia_virtual_service_edge_cluster** resource allows the creation and management of Service Edge Cluster objects in the Zscaler Internet Access.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
 *
 * Visit
 *
 * **zia_virtual_service_edge_cluster** can be imported by using `<CLUSTER_ID>` or `<CLUSTER_NAME>` as the import ID.
 *
 * For example:
 *
 * ```sh
 * $ pulumi import zia:index/virtualServiceEdgeCluster:VirtualServiceEdgeCluster example <cluster_id>
 * ```
 *
 * or
 *
 * ```sh
 * $ pulumi import zia:index/virtualServiceEdgeCluster:VirtualServiceEdgeCluster example <cluster_name>
 * ```
 */
export class VirtualServiceEdgeCluster extends pulumi.CustomResource {
    /**
     * Get an existing VirtualServiceEdgeCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VirtualServiceEdgeClusterState, opts?: pulumi.CustomResourceOptions): VirtualServiceEdgeCluster {
        return new VirtualServiceEdgeCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:index/virtualServiceEdgeCluster:VirtualServiceEdgeCluster';

    /**
     * Returns true if the given object is an instance of VirtualServiceEdgeCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualServiceEdgeCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualServiceEdgeCluster.__pulumiType;
    }

    public /*out*/ readonly clusterId!: pulumi.Output<number>;
    /**
     * (String) The IP address of the default gateway to the internet
     */
    public readonly defaultGateway!: pulumi.Output<string | undefined>;
    /**
     * (String) The Virtual Service Edge cluster IP address. In a Virtual Service Edge cluster, the cluster IP address provides fault tolerance and is used to listen for user traffic. This interface doesn't explicitly get an IP address. The cluster IP address must be in the same VLAN as the proxy and load balancer IP addresses.
     */
    public readonly ipAddress!: pulumi.Output<string | undefined>;
    /**
     * (String) A Boolean value that specifies whether to terminate IPSec traffic from the client at selected Virtual Service Edge instances for the Virtual Service Edge cluster
     */
    public readonly ipSecEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the Virtual Service Edge cluster
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (Number) Specifies the status of the Virtual Service Edge cluster. The status is set to `ENABLED` by default.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * (String) The Virtual Service Edge cluster subnet mask
     */
    public readonly subnetMask!: pulumi.Output<string | undefined>;
    /**
     * (String) The Virtual Service Edge cluster type
     * `ANY`, `NONE`, `SME`, `SMSM`, `SMCA`, `SMUI`, `SMCDS`, `SMDNSD`, `SMAA`, `SMTP`,`SMQTN`,`VIP`,
     * `UIZ`, `UIAE`, `SITEREVIEW`, `PAC`, `S_RELAY`, `M_RELAY`, `H_MON`, `SMIKE`, `NSS`, `SMEZA`, `SMLB`,
     * `SMFCCLT`, `SMBA`, `SMBAC`, `SMESXI`, `SMBAUI`, `VZEN`, `ZSCMCLT`, `SMDLP`, `ZSQUERY`, `ADP`, `SMCDSDLP`,
     * `SMSCIM`, `ZSAPI`, `ZSCMCDSSCLT`, `LOCAL_MTS`, `SVPN`, `SMCASB`, `SMFALCONUI`, `MOBILEAPP_REG`, `SMRESTSVR`, `FALCONCA`, `MOBILEAPP_NF`, `ZIRSVR`, `SMEDGEUI`, `ALERTEVAL`, `ALERTNOTIF`, `SMPARTNERUI`, `CQM`, `DATAKEEPER`,`SMBAM`, `ZWACLT`
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * (List of Object) The Virtual Service Edge instances you want to include in the cluster. A Virtual Service Edge cluster must contain at least two Virtual Service Edge instances.
     */
    public readonly virtualZenNodes!: pulumi.Output<outputs.VirtualServiceEdgeClusterVirtualZenNodes | undefined>;

    /**
     * Create a VirtualServiceEdgeCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VirtualServiceEdgeClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VirtualServiceEdgeClusterArgs | VirtualServiceEdgeClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VirtualServiceEdgeClusterState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["defaultGateway"] = state ? state.defaultGateway : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["ipSecEnabled"] = state ? state.ipSecEnabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetMask"] = state ? state.subnetMask : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["virtualZenNodes"] = state ? state.virtualZenNodes : undefined;
        } else {
            const args = argsOrState as VirtualServiceEdgeClusterArgs | undefined;
            resourceInputs["defaultGateway"] = args ? args.defaultGateway : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["ipSecEnabled"] = args ? args.ipSecEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["subnetMask"] = args ? args.subnetMask : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["virtualZenNodes"] = args ? args.virtualZenNodes : undefined;
            resourceInputs["clusterId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VirtualServiceEdgeCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VirtualServiceEdgeCluster resources.
 */
export interface VirtualServiceEdgeClusterState {
    clusterId?: pulumi.Input<number>;
    /**
     * (String) The IP address of the default gateway to the internet
     */
    defaultGateway?: pulumi.Input<string>;
    /**
     * (String) The Virtual Service Edge cluster IP address. In a Virtual Service Edge cluster, the cluster IP address provides fault tolerance and is used to listen for user traffic. This interface doesn't explicitly get an IP address. The cluster IP address must be in the same VLAN as the proxy and load balancer IP addresses.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * (String) A Boolean value that specifies whether to terminate IPSec traffic from the client at selected Virtual Service Edge instances for the Virtual Service Edge cluster
     */
    ipSecEnabled?: pulumi.Input<boolean>;
    /**
     * Name of the Virtual Service Edge cluster
     */
    name?: pulumi.Input<string>;
    /**
     * (Number) Specifies the status of the Virtual Service Edge cluster. The status is set to `ENABLED` by default.
     */
    status?: pulumi.Input<string>;
    /**
     * (String) The Virtual Service Edge cluster subnet mask
     */
    subnetMask?: pulumi.Input<string>;
    /**
     * (String) The Virtual Service Edge cluster type
     * `ANY`, `NONE`, `SME`, `SMSM`, `SMCA`, `SMUI`, `SMCDS`, `SMDNSD`, `SMAA`, `SMTP`,`SMQTN`,`VIP`,
     * `UIZ`, `UIAE`, `SITEREVIEW`, `PAC`, `S_RELAY`, `M_RELAY`, `H_MON`, `SMIKE`, `NSS`, `SMEZA`, `SMLB`,
     * `SMFCCLT`, `SMBA`, `SMBAC`, `SMESXI`, `SMBAUI`, `VZEN`, `ZSCMCLT`, `SMDLP`, `ZSQUERY`, `ADP`, `SMCDSDLP`,
     * `SMSCIM`, `ZSAPI`, `ZSCMCDSSCLT`, `LOCAL_MTS`, `SVPN`, `SMCASB`, `SMFALCONUI`, `MOBILEAPP_REG`, `SMRESTSVR`, `FALCONCA`, `MOBILEAPP_NF`, `ZIRSVR`, `SMEDGEUI`, `ALERTEVAL`, `ALERTNOTIF`, `SMPARTNERUI`, `CQM`, `DATAKEEPER`,`SMBAM`, `ZWACLT`
     */
    type?: pulumi.Input<string>;
    /**
     * (List of Object) The Virtual Service Edge instances you want to include in the cluster. A Virtual Service Edge cluster must contain at least two Virtual Service Edge instances.
     */
    virtualZenNodes?: pulumi.Input<inputs.VirtualServiceEdgeClusterVirtualZenNodes>;
}

/**
 * The set of arguments for constructing a VirtualServiceEdgeCluster resource.
 */
export interface VirtualServiceEdgeClusterArgs {
    /**
     * (String) The IP address of the default gateway to the internet
     */
    defaultGateway?: pulumi.Input<string>;
    /**
     * (String) The Virtual Service Edge cluster IP address. In a Virtual Service Edge cluster, the cluster IP address provides fault tolerance and is used to listen for user traffic. This interface doesn't explicitly get an IP address. The cluster IP address must be in the same VLAN as the proxy and load balancer IP addresses.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * (String) A Boolean value that specifies whether to terminate IPSec traffic from the client at selected Virtual Service Edge instances for the Virtual Service Edge cluster
     */
    ipSecEnabled?: pulumi.Input<boolean>;
    /**
     * Name of the Virtual Service Edge cluster
     */
    name?: pulumi.Input<string>;
    /**
     * (Number) Specifies the status of the Virtual Service Edge cluster. The status is set to `ENABLED` by default.
     */
    status?: pulumi.Input<string>;
    /**
     * (String) The Virtual Service Edge cluster subnet mask
     */
    subnetMask?: pulumi.Input<string>;
    /**
     * (String) The Virtual Service Edge cluster type
     * `ANY`, `NONE`, `SME`, `SMSM`, `SMCA`, `SMUI`, `SMCDS`, `SMDNSD`, `SMAA`, `SMTP`,`SMQTN`,`VIP`,
     * `UIZ`, `UIAE`, `SITEREVIEW`, `PAC`, `S_RELAY`, `M_RELAY`, `H_MON`, `SMIKE`, `NSS`, `SMEZA`, `SMLB`,
     * `SMFCCLT`, `SMBA`, `SMBAC`, `SMESXI`, `SMBAUI`, `VZEN`, `ZSCMCLT`, `SMDLP`, `ZSQUERY`, `ADP`, `SMCDSDLP`,
     * `SMSCIM`, `ZSAPI`, `ZSCMCDSSCLT`, `LOCAL_MTS`, `SVPN`, `SMCASB`, `SMFALCONUI`, `MOBILEAPP_REG`, `SMRESTSVR`, `FALCONCA`, `MOBILEAPP_NF`, `ZIRSVR`, `SMEDGEUI`, `ALERTEVAL`, `ALERTNOTIF`, `SMPARTNERUI`, `CQM`, `DATAKEEPER`,`SMBAM`, `ZWACLT`
     */
    type?: pulumi.Input<string>;
    /**
     * (List of Object) The Virtual Service Edge instances you want to include in the cluster. A Virtual Service Edge cluster must contain at least two Virtual Service Edge instances.
     */
    virtualZenNodes?: pulumi.Input<inputs.VirtualServiceEdgeClusterVirtualZenNodes>;
}
