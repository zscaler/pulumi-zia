// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use the **zia_traffic_forwarding_static_ip** data source to get information about all provisioned static IP addresses. This resource can then be utilized when creating a GRE Tunnel or VPN Credential resource of Type `IP`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@pulumi/zia";
 *
 * const example = zia.getTrafficForwardingStaticIP({
 *     ipAddress: "1.1.1.1",
 * });
 * ```
 */
export function getTrafficForwardingStaticIP(args?: GetTrafficForwardingStaticIPArgs, opts?: pulumi.InvokeOptions): Promise<GetTrafficForwardingStaticIPResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getTrafficForwardingStaticIP:getTrafficForwardingStaticIP", {
        "id": args.id,
        "ipAddress": args.ipAddress,
    }, opts);
}

/**
 * A collection of arguments for invoking getTrafficForwardingStaticIP.
 */
export interface GetTrafficForwardingStaticIPArgs {
    /**
     * The unique identifier for the static IP address
     */
    id?: number;
    /**
     * The static IP address
     */
    ipAddress?: string;
}

/**
 * A collection of values returned by getTrafficForwardingStaticIP.
 */
export interface GetTrafficForwardingStaticIPResult {
    readonly cities: outputs.GetTrafficForwardingStaticIPCity[];
    /**
     * (String) Additional information about this static IP address
     */
    readonly comment: string;
    /**
     * (Boolean) If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
     */
    readonly geoOverride: boolean;
    /**
     * (String) Identifier that uniquely identifies an entity
     */
    readonly id: number;
    /**
     * (String) The static IP address
     */
    readonly ipAddress: string;
    /**
     * (Number) When the static IP address was last modified
     */
    readonly lastModificationTime: number;
    /**
     * (Set of Object)
     */
    readonly lastModifiedBies: outputs.GetTrafficForwardingStaticIPLastModifiedBy[];
    /**
     * (Number) Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between `-90` and `90` degrees.
     */
    readonly latitude: number;
    /**
     * (Number) Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between `-180` and `180` degrees.
     */
    readonly longitude: number;
    /**
     * (Set of Object)
     */
    readonly managedBies: outputs.GetTrafficForwardingStaticIPManagedBy[];
    /**
     * (Boolean) Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
     */
    readonly routableIp: boolean;
}
/**
 * Use the **zia_traffic_forwarding_static_ip** data source to get information about all provisioned static IP addresses. This resource can then be utilized when creating a GRE Tunnel or VPN Credential resource of Type `IP`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@pulumi/zia";
 *
 * const example = zia.getTrafficForwardingStaticIP({
 *     ipAddress: "1.1.1.1",
 * });
 * ```
 */
export function getTrafficForwardingStaticIPOutput(args?: GetTrafficForwardingStaticIPOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTrafficForwardingStaticIPResult> {
    return pulumi.output(args).apply((a: any) => getTrafficForwardingStaticIP(a, opts))
}

/**
 * A collection of arguments for invoking getTrafficForwardingStaticIP.
 */
export interface GetTrafficForwardingStaticIPOutputArgs {
    /**
     * The unique identifier for the static IP address
     */
    id?: pulumi.Input<number>;
    /**
     * The static IP address
     */
    ipAddress?: pulumi.Input<string>;
}
