// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zia/cloud-applications#/cloudApplications/sslPolicy-get)
 * * [API documentation](https://help.zscaler.com/zia/cloud-applications#/cloudApplications/sslPolicy-get)
 *
 * Use the **zia_cloud_applications** data source to Retrieves a list of Predefined and User Defined Cloud Applications associated with the DLP rules, Cloud App Control rules, Advanced Settings, Bandwidth Classes, File Type Control and SSL Inspection rules. The returned information can be associated with the attribute `cloudApplications` on supported rules.
 *
 * ## Cloud Application Category App Class Matrix
 *
 * **Note**: Refer to this matrix when configuring types vs actions for each specific rules
 *
 * |             App Class                       |
 * |:-------------------------------------------:|
 * |---------------------------------------------|
 * |               `WEBMAIL`                     |
 * |           `SOCIAL_NETWORKING`               |
 * |              `STREAMING`                    |
 * |                 `P2P`                       |
 * |            `INSTANT_MESSAGING`              |
 * |               `WEB_SEARCH`                  |
 * |            `GENERAL_BROWSING`               |
 * |               `ADMINISTRATION`              |
 * |               `ENTERPRISE_COLLABORATION`    |
 * |               `BUSINESS_PRODUCTIVITY`       |
 * |               `SALES_AND_MARKETING`         |
 * |               `SYSTEM_AND_DEVELOPMENT`      |
 * |               `CONSUMER`                    |
 * |               `FILE_SHARE`                  |
 * |               `HOSTING_PROVIDER`            |
 * |               `IT_SERVICES`                 |
 * |               `DNS_OVER_HTTPS`              |
 * |               `HUMAN_RESOURCES`             |
 * |               `LEGAL`                       |
 * |               `HEALTH_CARE`                 |
 * |               `FINANCE`                     |
 * |               `CUSTOM_CAPP`                 |
 * |               `AI_ML`                       |
 * |---------------------------------------------|
 */
export function getCloudApplications(args: GetCloudApplicationsArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudApplicationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getCloudApplications:getCloudApplications", {
        "appClasses": args.appClasses,
        "appName": args.appName,
        "policyType": args.policyType,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudApplications.
 */
export interface GetCloudApplicationsArgs {
    /**
     * (Set of Strings) Filter application by application category
     */
    appClasses?: string[];
    /**
     * (String) Cloud application name
     */
    appName?: string;
    policyType: string;
}

/**
 * A collection of values returned by getCloudApplications.
 */
export interface GetCloudApplicationsResult {
    /**
     * (Set of Strings) Filter application by application category
     */
    readonly appClasses?: string[];
    /**
     * (String) Cloud application name
     */
    readonly appName?: string;
    readonly applications: outputs.GetCloudApplicationsApplication[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly policyType: string;
}
/**
 * * [Official documentation](https://help.zscaler.com/zia/cloud-applications#/cloudApplications/sslPolicy-get)
 * * [API documentation](https://help.zscaler.com/zia/cloud-applications#/cloudApplications/sslPolicy-get)
 *
 * Use the **zia_cloud_applications** data source to Retrieves a list of Predefined and User Defined Cloud Applications associated with the DLP rules, Cloud App Control rules, Advanced Settings, Bandwidth Classes, File Type Control and SSL Inspection rules. The returned information can be associated with the attribute `cloudApplications` on supported rules.
 *
 * ## Cloud Application Category App Class Matrix
 *
 * **Note**: Refer to this matrix when configuring types vs actions for each specific rules
 *
 * |             App Class                       |
 * |:-------------------------------------------:|
 * |---------------------------------------------|
 * |               `WEBMAIL`                     |
 * |           `SOCIAL_NETWORKING`               |
 * |              `STREAMING`                    |
 * |                 `P2P`                       |
 * |            `INSTANT_MESSAGING`              |
 * |               `WEB_SEARCH`                  |
 * |            `GENERAL_BROWSING`               |
 * |               `ADMINISTRATION`              |
 * |               `ENTERPRISE_COLLABORATION`    |
 * |               `BUSINESS_PRODUCTIVITY`       |
 * |               `SALES_AND_MARKETING`         |
 * |               `SYSTEM_AND_DEVELOPMENT`      |
 * |               `CONSUMER`                    |
 * |               `FILE_SHARE`                  |
 * |               `HOSTING_PROVIDER`            |
 * |               `IT_SERVICES`                 |
 * |               `DNS_OVER_HTTPS`              |
 * |               `HUMAN_RESOURCES`             |
 * |               `LEGAL`                       |
 * |               `HEALTH_CARE`                 |
 * |               `FINANCE`                     |
 * |               `CUSTOM_CAPP`                 |
 * |               `AI_ML`                       |
 * |---------------------------------------------|
 */
export function getCloudApplicationsOutput(args: GetCloudApplicationsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudApplicationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zia:index/getCloudApplications:getCloudApplications", {
        "appClasses": args.appClasses,
        "appName": args.appName,
        "policyType": args.policyType,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudApplications.
 */
export interface GetCloudApplicationsOutputArgs {
    /**
     * (Set of Strings) Filter application by application category
     */
    appClasses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (String) Cloud application name
     */
    appName?: pulumi.Input<string>;
    policyType: pulumi.Input<string>;
}
