// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zia/about-locations)
 * * [API documentation](https://help.zscaler.com/zia/location-management#/locations-get)
 *
 * The **zia_location_management** resource allows the creation and management of ZIA locations in the Zscaler Internet Access. This resource can then be associated with a:
 *
 * * Static IP resource
 * * GRE Tunnel resource
 * * VPN credentials resource
 * * URL filtering and firewall filtering rules
 *
 * ## Example Usage
 *
 * ### Location Management With UFQDN VPN Credential
 *
 * ### Location Management With IP VPN Credential
 *
 * ### Location Management With Manual And Dynamic Location Groups
 *
 * ### Location Management With Excluded Manual And Dynamic Location Groups
 *
 * ## Import
 *
 * Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
 *
 * Visit
 *
 * **zia_location_management** can be imported by using `<LOCATION_ID>` or `<LOCATION_NAME>` as the import ID.
 *
 * For example:
 *
 * ```sh
 * $ pulumi import zia:index/locationManagement:LocationManagement example <location_id>
 * ```
 *
 * or
 *
 * ```sh
 * $ pulumi import zia:index/locationManagement:LocationManagement example <location_name>
 * ```
 */
export class LocationManagement extends pulumi.CustomResource {
    /**
     * Get an existing LocationManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LocationManagementState, opts?: pulumi.CustomResourceOptions): LocationManagement {
        return new LocationManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:index/locationManagement:LocationManagement';

    /**
     * Returns true if the given object is an instance of LocationManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocationManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocationManagement.__pulumiType;
    }

    /**
     * For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is
     * disabled until the user accepts the AUP.
     */
    public readonly aupBlockInternetUntilAccepted!: pulumi.Output<boolean>;
    /**
     * Enable AUP. When set to true, AUP is enabled for the location.
     */
    public readonly aupEnabled!: pulumi.Output<boolean>;
    /**
     * For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP
     * for HTTPS traffic.
     */
    public readonly aupForceSslInspection!: pulumi.Output<boolean>;
    /**
     * Custom AUP Frequency. Refresh time (in days) to re-validate the AUP.
     */
    public readonly aupTimeoutInDays!: pulumi.Output<number | undefined>;
    /**
     * Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
     */
    public readonly authRequired!: pulumi.Output<boolean>;
    /**
     * Enable Basic Authentication at the location
     */
    public readonly basicAuthEnabled!: pulumi.Output<boolean>;
    /**
     * Enable Caution. When set to true, a caution notifcation is enabled for the location.
     */
    public readonly cautionEnabled!: pulumi.Output<boolean>;
    public readonly cookiesAndProxy!: pulumi.Output<boolean>;
    /**
     * Supported Countries
     */
    public readonly country!: pulumi.Output<string>;
    /**
     * Indicates that the DNS server configuration used in the extranet is the designated default DNS server
     */
    public readonly defaultExtranetDns!: pulumi.Output<boolean>;
    /**
     * Indicates that the traffic selector specified in the extranet is the designated default traffic selector
     */
    public readonly defaultExtranetTsPool!: pulumi.Output<boolean>;
    /**
     * Additional notes or information regarding the location or sub-location. The description cannot exceed 1024 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Enable Digest Authentication at the location
     */
    public readonly digestAuthEnabled!: pulumi.Output<boolean>;
    /**
     * Display Time Unit. The time unit to display for IP Surrogate idle time to disassociation.
     */
    public readonly displayTimeUnit!: pulumi.Output<string | undefined>;
    /**
     * Download bandwidth in bytes. The value 0 implies no Bandwidth Control enforcement.
     */
    public readonly dnBandwidth!: pulumi.Output<number | undefined>;
    /**
     * Name-ID pairs of locations for which rule must be applied
     */
    public readonly dynamicLocationGroups!: pulumi.Output<outputs.LocationManagementDynamicLocationGroups>;
    public readonly excludeFromDynamicGroups!: pulumi.Output<boolean | undefined>;
    public readonly excludeFromManualGroups!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the DNS server configuration used in the extranet
     */
    public readonly extranetDns!: pulumi.Output<outputs.LocationManagementExtranetDn[] | undefined>;
    /**
     * The ID of the traffic selector specified in the extranet
     */
    public readonly extranetIpPools!: pulumi.Output<outputs.LocationManagementExtranetIpPool[] | undefined>;
    /**
     * The ID of the extranet resource that must be assigned to the location
     */
    public readonly extranets!: pulumi.Output<outputs.LocationManagementExtranet[] | undefined>;
    /**
     * Idle Time to Disassociation. The user mapping idle time (in minutes) is required if a Surrogate IP is enabled.
     */
    public readonly idleTimeInMinutes!: pulumi.Output<number | undefined>;
    /**
     * Enable IOT Discovery at the location
     */
    public readonly iotDiscoveryEnabled!: pulumi.Output<boolean>;
    public readonly iotEnforcePolicySet!: pulumi.Output<boolean>;
    /**
     * For locations: IP addresses of the egress points that are provisioned in the Zscaler Cloud. Each entry is a single IP
     * address (e.g., 238.10.33.9).
     */
    public readonly ipAddresses!: pulumi.Output<string[] | undefined>;
    /**
     * Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.
     */
    public readonly ipsControl!: pulumi.Output<boolean>;
    /**
     * (Optional) Name-ID pair of the NAT64 prefix configured as the DNS64 prefix for the location. If specified, the DNS64
     * prefix is used for the IP addresses that reside in this location. If not specified, a prefix is selected from the set of
     * supported prefixes.
     */
    public readonly ipv6Dns64prefix!: pulumi.Output<boolean | undefined>;
    /**
     * If set to true, IPv6 is enabled for the location and IPv6 traffic from the location can be forwarded to the Zscaler
     * service to enforce security policies.
     */
    public readonly ipv6Enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Kerberos Authentication at the location
     */
    public readonly kerberosAuthEnabled!: pulumi.Output<boolean>;
    public /*out*/ readonly locationId!: pulumi.Output<number>;
    /**
     * Location Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable Firewall. When set to true, Firewall is enabled for the location.
     */
    public readonly ofwEnabled!: pulumi.Output<boolean>;
    /**
     * If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv6
     * addresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other6
     * and it can be renamed, if required. This field is applicable only if ipv6Enabled is set is true.
     */
    public readonly other6Sublocation!: pulumi.Output<boolean>;
    /**
     * If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv4
     * addresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other
     * and it can be renamed, if required.
     */
    public readonly otherSublocation!: pulumi.Output<boolean>;
    /**
     * Parent Location ID. If this ID does not exist or is 0, it is implied that it is a parent location. Otherwise, it is a
     * sub-location whose parent has this ID. x-applicableTo: SUB
     */
    public readonly parentId!: pulumi.Output<number | undefined>;
    /**
     * IP ports that are associated with the location.
     */
    public readonly ports!: pulumi.Output<number[] | undefined>;
    /**
     * Profile tag that specifies the location traffic type. If not specified, this tag defaults to `Unassigned`.
     */
    public readonly profile!: pulumi.Output<string>;
    /**
     * Enable SSL Inspection. Set to true in order to apply your SSL Inspection policy to HTTPS traffic in the location and
     * inspect HTTPS transactions for data leakage, malicious content, and viruses.
     */
    public readonly sslScanEnabled!: pulumi.Output<boolean>;
    /**
     * IP ports that are associated with the location.
     */
    public readonly state!: pulumi.Output<string | undefined>;
    /**
     * Name-ID pairs of locations for which rule must be applied
     */
    public readonly staticLocationGroups!: pulumi.Output<outputs.LocationManagementStaticLocationGroups>;
    /**
     * Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.
     */
    public readonly surrogateIp!: pulumi.Output<boolean>;
    /**
     * Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.
     */
    public readonly surrogateIpEnforcedForKnownBrowsers!: pulumi.Output<boolean>;
    /**
     * Refresh Time for re-validation of Surrogacy. The surrogate refresh time (in minutes) to re-validate the IP surrogates.
     */
    public readonly surrogateRefreshTimeInMinutes!: pulumi.Output<number | undefined>;
    /**
     * Display Refresh Time Unit. The time unit to display for refresh time for re-validation of surrogacy.
     */
    public readonly surrogateRefreshTimeUnit!: pulumi.Output<string | undefined>;
    /**
     * Timezone of the location. If not specified, it defaults to GMT.
     */
    public readonly tz!: pulumi.Output<string>;
    /**
     * Upload bandwidth in bytes. The value 0 implies no Bandwidth Control enforcement.
     */
    public readonly upBandwidth!: pulumi.Output<number | undefined>;
    public readonly vpnCredentials!: pulumi.Output<outputs.LocationManagementVpnCredential[] | undefined>;
    /**
     * Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
     */
    public readonly xffForwardEnabled!: pulumi.Output<boolean>;
    /**
     * Enable Zscaler App SSL Setting. When set to true, the Zscaler App SSL Scan Setting will take effect, irrespective of the
     * SSL policy that is configured for the location.
     */
    public readonly zappSslScanEnabled!: pulumi.Output<boolean>;

    /**
     * Create a LocationManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LocationManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LocationManagementArgs | LocationManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LocationManagementState | undefined;
            resourceInputs["aupBlockInternetUntilAccepted"] = state ? state.aupBlockInternetUntilAccepted : undefined;
            resourceInputs["aupEnabled"] = state ? state.aupEnabled : undefined;
            resourceInputs["aupForceSslInspection"] = state ? state.aupForceSslInspection : undefined;
            resourceInputs["aupTimeoutInDays"] = state ? state.aupTimeoutInDays : undefined;
            resourceInputs["authRequired"] = state ? state.authRequired : undefined;
            resourceInputs["basicAuthEnabled"] = state ? state.basicAuthEnabled : undefined;
            resourceInputs["cautionEnabled"] = state ? state.cautionEnabled : undefined;
            resourceInputs["cookiesAndProxy"] = state ? state.cookiesAndProxy : undefined;
            resourceInputs["country"] = state ? state.country : undefined;
            resourceInputs["defaultExtranetDns"] = state ? state.defaultExtranetDns : undefined;
            resourceInputs["defaultExtranetTsPool"] = state ? state.defaultExtranetTsPool : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["digestAuthEnabled"] = state ? state.digestAuthEnabled : undefined;
            resourceInputs["displayTimeUnit"] = state ? state.displayTimeUnit : undefined;
            resourceInputs["dnBandwidth"] = state ? state.dnBandwidth : undefined;
            resourceInputs["dynamicLocationGroups"] = state ? state.dynamicLocationGroups : undefined;
            resourceInputs["excludeFromDynamicGroups"] = state ? state.excludeFromDynamicGroups : undefined;
            resourceInputs["excludeFromManualGroups"] = state ? state.excludeFromManualGroups : undefined;
            resourceInputs["extranetDns"] = state ? state.extranetDns : undefined;
            resourceInputs["extranetIpPools"] = state ? state.extranetIpPools : undefined;
            resourceInputs["extranets"] = state ? state.extranets : undefined;
            resourceInputs["idleTimeInMinutes"] = state ? state.idleTimeInMinutes : undefined;
            resourceInputs["iotDiscoveryEnabled"] = state ? state.iotDiscoveryEnabled : undefined;
            resourceInputs["iotEnforcePolicySet"] = state ? state.iotEnforcePolicySet : undefined;
            resourceInputs["ipAddresses"] = state ? state.ipAddresses : undefined;
            resourceInputs["ipsControl"] = state ? state.ipsControl : undefined;
            resourceInputs["ipv6Dns64prefix"] = state ? state.ipv6Dns64prefix : undefined;
            resourceInputs["ipv6Enabled"] = state ? state.ipv6Enabled : undefined;
            resourceInputs["kerberosAuthEnabled"] = state ? state.kerberosAuthEnabled : undefined;
            resourceInputs["locationId"] = state ? state.locationId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ofwEnabled"] = state ? state.ofwEnabled : undefined;
            resourceInputs["other6Sublocation"] = state ? state.other6Sublocation : undefined;
            resourceInputs["otherSublocation"] = state ? state.otherSublocation : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["ports"] = state ? state.ports : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
            resourceInputs["sslScanEnabled"] = state ? state.sslScanEnabled : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["staticLocationGroups"] = state ? state.staticLocationGroups : undefined;
            resourceInputs["surrogateIp"] = state ? state.surrogateIp : undefined;
            resourceInputs["surrogateIpEnforcedForKnownBrowsers"] = state ? state.surrogateIpEnforcedForKnownBrowsers : undefined;
            resourceInputs["surrogateRefreshTimeInMinutes"] = state ? state.surrogateRefreshTimeInMinutes : undefined;
            resourceInputs["surrogateRefreshTimeUnit"] = state ? state.surrogateRefreshTimeUnit : undefined;
            resourceInputs["tz"] = state ? state.tz : undefined;
            resourceInputs["upBandwidth"] = state ? state.upBandwidth : undefined;
            resourceInputs["vpnCredentials"] = state ? state.vpnCredentials : undefined;
            resourceInputs["xffForwardEnabled"] = state ? state.xffForwardEnabled : undefined;
            resourceInputs["zappSslScanEnabled"] = state ? state.zappSslScanEnabled : undefined;
        } else {
            const args = argsOrState as LocationManagementArgs | undefined;
            resourceInputs["aupBlockInternetUntilAccepted"] = args ? args.aupBlockInternetUntilAccepted : undefined;
            resourceInputs["aupEnabled"] = args ? args.aupEnabled : undefined;
            resourceInputs["aupForceSslInspection"] = args ? args.aupForceSslInspection : undefined;
            resourceInputs["aupTimeoutInDays"] = args ? args.aupTimeoutInDays : undefined;
            resourceInputs["authRequired"] = args ? args.authRequired : undefined;
            resourceInputs["basicAuthEnabled"] = args ? args.basicAuthEnabled : undefined;
            resourceInputs["cautionEnabled"] = args ? args.cautionEnabled : undefined;
            resourceInputs["cookiesAndProxy"] = args ? args.cookiesAndProxy : undefined;
            resourceInputs["country"] = args ? args.country : undefined;
            resourceInputs["defaultExtranetDns"] = args ? args.defaultExtranetDns : undefined;
            resourceInputs["defaultExtranetTsPool"] = args ? args.defaultExtranetTsPool : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["digestAuthEnabled"] = args ? args.digestAuthEnabled : undefined;
            resourceInputs["displayTimeUnit"] = args ? args.displayTimeUnit : undefined;
            resourceInputs["dnBandwidth"] = args ? args.dnBandwidth : undefined;
            resourceInputs["dynamicLocationGroups"] = args ? args.dynamicLocationGroups : undefined;
            resourceInputs["excludeFromDynamicGroups"] = args ? args.excludeFromDynamicGroups : undefined;
            resourceInputs["excludeFromManualGroups"] = args ? args.excludeFromManualGroups : undefined;
            resourceInputs["extranetDns"] = args ? args.extranetDns : undefined;
            resourceInputs["extranetIpPools"] = args ? args.extranetIpPools : undefined;
            resourceInputs["extranets"] = args ? args.extranets : undefined;
            resourceInputs["idleTimeInMinutes"] = args ? args.idleTimeInMinutes : undefined;
            resourceInputs["iotDiscoveryEnabled"] = args ? args.iotDiscoveryEnabled : undefined;
            resourceInputs["iotEnforcePolicySet"] = args ? args.iotEnforcePolicySet : undefined;
            resourceInputs["ipAddresses"] = args ? args.ipAddresses : undefined;
            resourceInputs["ipsControl"] = args ? args.ipsControl : undefined;
            resourceInputs["ipv6Dns64prefix"] = args ? args.ipv6Dns64prefix : undefined;
            resourceInputs["ipv6Enabled"] = args ? args.ipv6Enabled : undefined;
            resourceInputs["kerberosAuthEnabled"] = args ? args.kerberosAuthEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ofwEnabled"] = args ? args.ofwEnabled : undefined;
            resourceInputs["other6Sublocation"] = args ? args.other6Sublocation : undefined;
            resourceInputs["otherSublocation"] = args ? args.otherSublocation : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["ports"] = args ? args.ports : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["sslScanEnabled"] = args ? args.sslScanEnabled : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["staticLocationGroups"] = args ? args.staticLocationGroups : undefined;
            resourceInputs["surrogateIp"] = args ? args.surrogateIp : undefined;
            resourceInputs["surrogateIpEnforcedForKnownBrowsers"] = args ? args.surrogateIpEnforcedForKnownBrowsers : undefined;
            resourceInputs["surrogateRefreshTimeInMinutes"] = args ? args.surrogateRefreshTimeInMinutes : undefined;
            resourceInputs["surrogateRefreshTimeUnit"] = args ? args.surrogateRefreshTimeUnit : undefined;
            resourceInputs["tz"] = args ? args.tz : undefined;
            resourceInputs["upBandwidth"] = args ? args.upBandwidth : undefined;
            resourceInputs["vpnCredentials"] = args ? args.vpnCredentials : undefined;
            resourceInputs["xffForwardEnabled"] = args ? args.xffForwardEnabled : undefined;
            resourceInputs["zappSslScanEnabled"] = args ? args.zappSslScanEnabled : undefined;
            resourceInputs["locationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LocationManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LocationManagement resources.
 */
export interface LocationManagementState {
    /**
     * For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is
     * disabled until the user accepts the AUP.
     */
    aupBlockInternetUntilAccepted?: pulumi.Input<boolean>;
    /**
     * Enable AUP. When set to true, AUP is enabled for the location.
     */
    aupEnabled?: pulumi.Input<boolean>;
    /**
     * For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP
     * for HTTPS traffic.
     */
    aupForceSslInspection?: pulumi.Input<boolean>;
    /**
     * Custom AUP Frequency. Refresh time (in days) to re-validate the AUP.
     */
    aupTimeoutInDays?: pulumi.Input<number>;
    /**
     * Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
     */
    authRequired?: pulumi.Input<boolean>;
    /**
     * Enable Basic Authentication at the location
     */
    basicAuthEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Caution. When set to true, a caution notifcation is enabled for the location.
     */
    cautionEnabled?: pulumi.Input<boolean>;
    cookiesAndProxy?: pulumi.Input<boolean>;
    /**
     * Supported Countries
     */
    country?: pulumi.Input<string>;
    /**
     * Indicates that the DNS server configuration used in the extranet is the designated default DNS server
     */
    defaultExtranetDns?: pulumi.Input<boolean>;
    /**
     * Indicates that the traffic selector specified in the extranet is the designated default traffic selector
     */
    defaultExtranetTsPool?: pulumi.Input<boolean>;
    /**
     * Additional notes or information regarding the location or sub-location. The description cannot exceed 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Enable Digest Authentication at the location
     */
    digestAuthEnabled?: pulumi.Input<boolean>;
    /**
     * Display Time Unit. The time unit to display for IP Surrogate idle time to disassociation.
     */
    displayTimeUnit?: pulumi.Input<string>;
    /**
     * Download bandwidth in bytes. The value 0 implies no Bandwidth Control enforcement.
     */
    dnBandwidth?: pulumi.Input<number>;
    /**
     * Name-ID pairs of locations for which rule must be applied
     */
    dynamicLocationGroups?: pulumi.Input<inputs.LocationManagementDynamicLocationGroups>;
    excludeFromDynamicGroups?: pulumi.Input<boolean>;
    excludeFromManualGroups?: pulumi.Input<boolean>;
    /**
     * The ID of the DNS server configuration used in the extranet
     */
    extranetDns?: pulumi.Input<pulumi.Input<inputs.LocationManagementExtranetDn>[]>;
    /**
     * The ID of the traffic selector specified in the extranet
     */
    extranetIpPools?: pulumi.Input<pulumi.Input<inputs.LocationManagementExtranetIpPool>[]>;
    /**
     * The ID of the extranet resource that must be assigned to the location
     */
    extranets?: pulumi.Input<pulumi.Input<inputs.LocationManagementExtranet>[]>;
    /**
     * Idle Time to Disassociation. The user mapping idle time (in minutes) is required if a Surrogate IP is enabled.
     */
    idleTimeInMinutes?: pulumi.Input<number>;
    /**
     * Enable IOT Discovery at the location
     */
    iotDiscoveryEnabled?: pulumi.Input<boolean>;
    iotEnforcePolicySet?: pulumi.Input<boolean>;
    /**
     * For locations: IP addresses of the egress points that are provisioned in the Zscaler Cloud. Each entry is a single IP
     * address (e.g., 238.10.33.9).
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.
     */
    ipsControl?: pulumi.Input<boolean>;
    /**
     * (Optional) Name-ID pair of the NAT64 prefix configured as the DNS64 prefix for the location. If specified, the DNS64
     * prefix is used for the IP addresses that reside in this location. If not specified, a prefix is selected from the set of
     * supported prefixes.
     */
    ipv6Dns64prefix?: pulumi.Input<boolean>;
    /**
     * If set to true, IPv6 is enabled for the location and IPv6 traffic from the location can be forwarded to the Zscaler
     * service to enforce security policies.
     */
    ipv6Enabled?: pulumi.Input<boolean>;
    /**
     * Enable Kerberos Authentication at the location
     */
    kerberosAuthEnabled?: pulumi.Input<boolean>;
    locationId?: pulumi.Input<number>;
    /**
     * Location Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable Firewall. When set to true, Firewall is enabled for the location.
     */
    ofwEnabled?: pulumi.Input<boolean>;
    /**
     * If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv6
     * addresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other6
     * and it can be renamed, if required. This field is applicable only if ipv6Enabled is set is true.
     */
    other6Sublocation?: pulumi.Input<boolean>;
    /**
     * If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv4
     * addresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other
     * and it can be renamed, if required.
     */
    otherSublocation?: pulumi.Input<boolean>;
    /**
     * Parent Location ID. If this ID does not exist or is 0, it is implied that it is a parent location. Otherwise, it is a
     * sub-location whose parent has this ID. x-applicableTo: SUB
     */
    parentId?: pulumi.Input<number>;
    /**
     * IP ports that are associated with the location.
     */
    ports?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Profile tag that specifies the location traffic type. If not specified, this tag defaults to `Unassigned`.
     */
    profile?: pulumi.Input<string>;
    /**
     * Enable SSL Inspection. Set to true in order to apply your SSL Inspection policy to HTTPS traffic in the location and
     * inspect HTTPS transactions for data leakage, malicious content, and viruses.
     */
    sslScanEnabled?: pulumi.Input<boolean>;
    /**
     * IP ports that are associated with the location.
     */
    state?: pulumi.Input<string>;
    /**
     * Name-ID pairs of locations for which rule must be applied
     */
    staticLocationGroups?: pulumi.Input<inputs.LocationManagementStaticLocationGroups>;
    /**
     * Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.
     */
    surrogateIp?: pulumi.Input<boolean>;
    /**
     * Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.
     */
    surrogateIpEnforcedForKnownBrowsers?: pulumi.Input<boolean>;
    /**
     * Refresh Time for re-validation of Surrogacy. The surrogate refresh time (in minutes) to re-validate the IP surrogates.
     */
    surrogateRefreshTimeInMinutes?: pulumi.Input<number>;
    /**
     * Display Refresh Time Unit. The time unit to display for refresh time for re-validation of surrogacy.
     */
    surrogateRefreshTimeUnit?: pulumi.Input<string>;
    /**
     * Timezone of the location. If not specified, it defaults to GMT.
     */
    tz?: pulumi.Input<string>;
    /**
     * Upload bandwidth in bytes. The value 0 implies no Bandwidth Control enforcement.
     */
    upBandwidth?: pulumi.Input<number>;
    vpnCredentials?: pulumi.Input<pulumi.Input<inputs.LocationManagementVpnCredential>[]>;
    /**
     * Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
     */
    xffForwardEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Zscaler App SSL Setting. When set to true, the Zscaler App SSL Scan Setting will take effect, irrespective of the
     * SSL policy that is configured for the location.
     */
    zappSslScanEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a LocationManagement resource.
 */
export interface LocationManagementArgs {
    /**
     * For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is
     * disabled until the user accepts the AUP.
     */
    aupBlockInternetUntilAccepted?: pulumi.Input<boolean>;
    /**
     * Enable AUP. When set to true, AUP is enabled for the location.
     */
    aupEnabled?: pulumi.Input<boolean>;
    /**
     * For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP
     * for HTTPS traffic.
     */
    aupForceSslInspection?: pulumi.Input<boolean>;
    /**
     * Custom AUP Frequency. Refresh time (in days) to re-validate the AUP.
     */
    aupTimeoutInDays?: pulumi.Input<number>;
    /**
     * Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
     */
    authRequired?: pulumi.Input<boolean>;
    /**
     * Enable Basic Authentication at the location
     */
    basicAuthEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Caution. When set to true, a caution notifcation is enabled for the location.
     */
    cautionEnabled?: pulumi.Input<boolean>;
    cookiesAndProxy?: pulumi.Input<boolean>;
    /**
     * Supported Countries
     */
    country?: pulumi.Input<string>;
    /**
     * Indicates that the DNS server configuration used in the extranet is the designated default DNS server
     */
    defaultExtranetDns?: pulumi.Input<boolean>;
    /**
     * Indicates that the traffic selector specified in the extranet is the designated default traffic selector
     */
    defaultExtranetTsPool?: pulumi.Input<boolean>;
    /**
     * Additional notes or information regarding the location or sub-location. The description cannot exceed 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Enable Digest Authentication at the location
     */
    digestAuthEnabled?: pulumi.Input<boolean>;
    /**
     * Display Time Unit. The time unit to display for IP Surrogate idle time to disassociation.
     */
    displayTimeUnit?: pulumi.Input<string>;
    /**
     * Download bandwidth in bytes. The value 0 implies no Bandwidth Control enforcement.
     */
    dnBandwidth?: pulumi.Input<number>;
    /**
     * Name-ID pairs of locations for which rule must be applied
     */
    dynamicLocationGroups?: pulumi.Input<inputs.LocationManagementDynamicLocationGroups>;
    excludeFromDynamicGroups?: pulumi.Input<boolean>;
    excludeFromManualGroups?: pulumi.Input<boolean>;
    /**
     * The ID of the DNS server configuration used in the extranet
     */
    extranetDns?: pulumi.Input<pulumi.Input<inputs.LocationManagementExtranetDn>[]>;
    /**
     * The ID of the traffic selector specified in the extranet
     */
    extranetIpPools?: pulumi.Input<pulumi.Input<inputs.LocationManagementExtranetIpPool>[]>;
    /**
     * The ID of the extranet resource that must be assigned to the location
     */
    extranets?: pulumi.Input<pulumi.Input<inputs.LocationManagementExtranet>[]>;
    /**
     * Idle Time to Disassociation. The user mapping idle time (in minutes) is required if a Surrogate IP is enabled.
     */
    idleTimeInMinutes?: pulumi.Input<number>;
    /**
     * Enable IOT Discovery at the location
     */
    iotDiscoveryEnabled?: pulumi.Input<boolean>;
    iotEnforcePolicySet?: pulumi.Input<boolean>;
    /**
     * For locations: IP addresses of the egress points that are provisioned in the Zscaler Cloud. Each entry is a single IP
     * address (e.g., 238.10.33.9).
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.
     */
    ipsControl?: pulumi.Input<boolean>;
    /**
     * (Optional) Name-ID pair of the NAT64 prefix configured as the DNS64 prefix for the location. If specified, the DNS64
     * prefix is used for the IP addresses that reside in this location. If not specified, a prefix is selected from the set of
     * supported prefixes.
     */
    ipv6Dns64prefix?: pulumi.Input<boolean>;
    /**
     * If set to true, IPv6 is enabled for the location and IPv6 traffic from the location can be forwarded to the Zscaler
     * service to enforce security policies.
     */
    ipv6Enabled?: pulumi.Input<boolean>;
    /**
     * Enable Kerberos Authentication at the location
     */
    kerberosAuthEnabled?: pulumi.Input<boolean>;
    /**
     * Location Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable Firewall. When set to true, Firewall is enabled for the location.
     */
    ofwEnabled?: pulumi.Input<boolean>;
    /**
     * If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv6
     * addresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other6
     * and it can be renamed, if required. This field is applicable only if ipv6Enabled is set is true.
     */
    other6Sublocation?: pulumi.Input<boolean>;
    /**
     * If set to true, indicates that this is a default sub-location created by the Zscaler service to accommodate IPv4
     * addresses that are not part of any user-defined sub-locations. The default sub-location is created with the name Other
     * and it can be renamed, if required.
     */
    otherSublocation?: pulumi.Input<boolean>;
    /**
     * Parent Location ID. If this ID does not exist or is 0, it is implied that it is a parent location. Otherwise, it is a
     * sub-location whose parent has this ID. x-applicableTo: SUB
     */
    parentId?: pulumi.Input<number>;
    /**
     * IP ports that are associated with the location.
     */
    ports?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Profile tag that specifies the location traffic type. If not specified, this tag defaults to `Unassigned`.
     */
    profile?: pulumi.Input<string>;
    /**
     * Enable SSL Inspection. Set to true in order to apply your SSL Inspection policy to HTTPS traffic in the location and
     * inspect HTTPS transactions for data leakage, malicious content, and viruses.
     */
    sslScanEnabled?: pulumi.Input<boolean>;
    /**
     * IP ports that are associated with the location.
     */
    state?: pulumi.Input<string>;
    /**
     * Name-ID pairs of locations for which rule must be applied
     */
    staticLocationGroups?: pulumi.Input<inputs.LocationManagementStaticLocationGroups>;
    /**
     * Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.
     */
    surrogateIp?: pulumi.Input<boolean>;
    /**
     * Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.
     */
    surrogateIpEnforcedForKnownBrowsers?: pulumi.Input<boolean>;
    /**
     * Refresh Time for re-validation of Surrogacy. The surrogate refresh time (in minutes) to re-validate the IP surrogates.
     */
    surrogateRefreshTimeInMinutes?: pulumi.Input<number>;
    /**
     * Display Refresh Time Unit. The time unit to display for refresh time for re-validation of surrogacy.
     */
    surrogateRefreshTimeUnit?: pulumi.Input<string>;
    /**
     * Timezone of the location. If not specified, it defaults to GMT.
     */
    tz?: pulumi.Input<string>;
    /**
     * Upload bandwidth in bytes. The value 0 implies no Bandwidth Control enforcement.
     */
    upBandwidth?: pulumi.Input<number>;
    vpnCredentials?: pulumi.Input<pulumi.Input<inputs.LocationManagementVpnCredential>[]>;
    /**
     * Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
     */
    xffForwardEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Zscaler App SSL Setting. When set to true, the Zscaler App SSL Scan Setting will take effect, irrespective of the
     * SSL policy that is configured for the location.
     */
    zappSslScanEnabled?: pulumi.Input<boolean>;
}
