// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTrafficForwardingGRETunnel(args?: GetTrafficForwardingGRETunnelArgs, opts?: pulumi.InvokeOptions): Promise<GetTrafficForwardingGRETunnelResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getTrafficForwardingGRETunnel:getTrafficForwardingGRETunnel", {
        "id": args.id,
        "sourceIp": args.sourceIp,
    }, opts);
}

/**
 * A collection of arguments for invoking getTrafficForwardingGRETunnel.
 */
export interface GetTrafficForwardingGRETunnelArgs {
    id?: number;
    sourceIp?: string;
}

/**
 * A collection of values returned by getTrafficForwardingGRETunnel.
 */
export interface GetTrafficForwardingGRETunnelResult {
    readonly comment: string;
    readonly id?: number;
    readonly internalIpRange: string;
    readonly ipUnnumbered: boolean;
    readonly lastModificationTime: number;
    readonly lastModifiedBies: outputs.GetTrafficForwardingGRETunnelLastModifiedBy[];
    readonly managedBies: outputs.GetTrafficForwardingGRETunnelManagedBy[];
    readonly primaryDestVips: outputs.GetTrafficForwardingGRETunnelPrimaryDestVip[];
    readonly secondaryDestVips: outputs.GetTrafficForwardingGRETunnelSecondaryDestVip[];
    readonly sourceIp?: string;
    readonly withinCountry: boolean;
}
export function getTrafficForwardingGRETunnelOutput(args?: GetTrafficForwardingGRETunnelOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTrafficForwardingGRETunnelResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zia:index/getTrafficForwardingGRETunnel:getTrafficForwardingGRETunnel", {
        "id": args.id,
        "sourceIp": args.sourceIp,
    }, opts);
}

/**
 * A collection of arguments for invoking getTrafficForwardingGRETunnel.
 */
export interface GetTrafficForwardingGRETunnelOutputArgs {
    id?: pulumi.Input<number>;
    sourceIp?: pulumi.Input<string>;
}
