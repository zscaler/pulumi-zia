// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use the **zia_sandbox_report** data source gets a full (i.e., complete) or summary detail report for an MD5 hash of a file that was analyzed by Sandbox.
 *
 * ## Example Usage
 *
 * ### Obtain Full Sandbox Report
 *
 * ### Obtain Summarized Sandbox Report
 */
export function getSandboxReport(args: GetSandboxReportArgs, opts?: pulumi.InvokeOptions): Promise<GetSandboxReportResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getSandboxReport:getSandboxReport", {
        "details": args.details,
        "exploits": args.exploits,
        "md5Hash": args.md5Hash,
        "networkings": args.networkings,
        "persistences": args.persistences,
        "securityBypasses": args.securityBypasses,
        "spywares": args.spywares,
        "stealths": args.stealths,
    }, opts);
}

/**
 * A collection of arguments for invoking getSandboxReport.
 */
export interface GetSandboxReportArgs {
    /**
     * (Required) Type of report, full or summary.
     */
    details?: string;
    exploits?: inputs.GetSandboxReportExploit[];
    /**
     * (Required) MD5 hash of the file that was analyzed by Sandbox.
     */
    md5Hash: string;
    networkings?: inputs.GetSandboxReportNetworking[];
    persistences?: inputs.GetSandboxReportPersistence[];
    securityBypasses?: inputs.GetSandboxReportSecurityBypass[];
    spywares?: inputs.GetSandboxReportSpyware[];
    stealths?: inputs.GetSandboxReportStealth[];
}

/**
 * A collection of values returned by getSandboxReport.
 */
export interface GetSandboxReportResult {
    readonly classifications: outputs.GetSandboxReportClassification[];
    /**
     * (Required) Type of report, full or summary.
     */
    readonly details?: string;
    readonly exploits: outputs.GetSandboxReportExploit[];
    readonly fileProperties: outputs.GetSandboxReportFileProperty[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Required) MD5 hash of the file that was analyzed by Sandbox.
     */
    readonly md5Hash: string;
    readonly networkings: outputs.GetSandboxReportNetworking[];
    readonly origins: outputs.GetSandboxReportOrigin[];
    readonly persistences: outputs.GetSandboxReportPersistence[];
    readonly securityBypasses: outputs.GetSandboxReportSecurityBypass[];
    readonly spywares: outputs.GetSandboxReportSpyware[];
    readonly stealths: outputs.GetSandboxReportStealth[];
    /**
     * Summary detail report for an MD5 hash of a file that was analyzed by Sandbox
     */
    readonly summaries: outputs.GetSandboxReportSummary[];
    readonly systemSummaries: outputs.GetSandboxReportSystemSummary[];
}
/**
 * Use the **zia_sandbox_report** data source gets a full (i.e., complete) or summary detail report for an MD5 hash of a file that was analyzed by Sandbox.
 *
 * ## Example Usage
 *
 * ### Obtain Full Sandbox Report
 *
 * ### Obtain Summarized Sandbox Report
 */
export function getSandboxReportOutput(args: GetSandboxReportOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSandboxReportResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zia:index/getSandboxReport:getSandboxReport", {
        "details": args.details,
        "exploits": args.exploits,
        "md5Hash": args.md5Hash,
        "networkings": args.networkings,
        "persistences": args.persistences,
        "securityBypasses": args.securityBypasses,
        "spywares": args.spywares,
        "stealths": args.stealths,
    }, opts);
}

/**
 * A collection of arguments for invoking getSandboxReport.
 */
export interface GetSandboxReportOutputArgs {
    /**
     * (Required) Type of report, full or summary.
     */
    details?: pulumi.Input<string>;
    exploits?: pulumi.Input<pulumi.Input<inputs.GetSandboxReportExploitArgs>[]>;
    /**
     * (Required) MD5 hash of the file that was analyzed by Sandbox.
     */
    md5Hash: pulumi.Input<string>;
    networkings?: pulumi.Input<pulumi.Input<inputs.GetSandboxReportNetworkingArgs>[]>;
    persistences?: pulumi.Input<pulumi.Input<inputs.GetSandboxReportPersistenceArgs>[]>;
    securityBypasses?: pulumi.Input<pulumi.Input<inputs.GetSandboxReportSecurityBypassArgs>[]>;
    spywares?: pulumi.Input<pulumi.Input<inputs.GetSandboxReportSpywareArgs>[]>;
    stealths?: pulumi.Input<pulumi.Input<inputs.GetSandboxReportStealthArgs>[]>;
}
