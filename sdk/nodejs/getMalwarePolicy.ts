// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the **zia_atp_malware_policy** data source to retrieves information about the security exceptions configured for the Malware Protection policy. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)
 *
 * ## Example Usage
 */
export function getMalwarePolicy(args?: GetMalwarePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetMalwarePolicyResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getMalwarePolicy:getMalwarePolicy", {
        "blockPasswordProtectedArchiveFiles": args.blockPasswordProtectedArchiveFiles,
        "blockUnscannableFiles": args.blockUnscannableFiles,
    }, opts);
}

/**
 * A collection of arguments for invoking getMalwarePolicy.
 */
export interface GetMalwarePolicyArgs {
    blockPasswordProtectedArchiveFiles?: boolean;
    blockUnscannableFiles?: boolean;
}

/**
 * A collection of values returned by getMalwarePolicy.
 */
export interface GetMalwarePolicyResult {
    readonly blockPasswordProtectedArchiveFiles: boolean;
    readonly blockUnscannableFiles: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * Use the **zia_atp_malware_policy** data source to retrieves information about the security exceptions configured for the Malware Protection policy. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)
 *
 * ## Example Usage
 */
export function getMalwarePolicyOutput(args?: GetMalwarePolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMalwarePolicyResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zia:index/getMalwarePolicy:getMalwarePolicy", {
        "blockPasswordProtectedArchiveFiles": args.blockPasswordProtectedArchiveFiles,
        "blockUnscannableFiles": args.blockUnscannableFiles,
    }, opts);
}

/**
 * A collection of arguments for invoking getMalwarePolicy.
 */
export interface GetMalwarePolicyOutputArgs {
    blockPasswordProtectedArchiveFiles?: pulumi.Input<boolean>;
    blockUnscannableFiles?: pulumi.Input<boolean>;
}
