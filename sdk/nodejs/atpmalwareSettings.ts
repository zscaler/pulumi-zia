// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **zia_atp_malware_settings** resource allows you to update the malware protection policy configuration details. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
 *
 * Visit
 *
 * **zia_advanced_threat_settings** can be imported by using `advanced_threat_settings` as the import ID.
 *
 * For example:
 *
 * ```sh
 * $ pulumi import zia:index/aTPMalwareSettings:ATPMalwareSettings this "advanced_threat_settings"
 * ```
 */
export class ATPMalwareSettings extends pulumi.CustomResource {
    /**
     * Get an existing ATPMalwareSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ATPMalwareSettingsState, opts?: pulumi.CustomResourceOptions): ATPMalwareSettings {
        return new ATPMalwareSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:index/aTPMalwareSettings:ATPMalwareSettings';

    /**
     * Returns true if the given object is an instance of ATPMalwareSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ATPMalwareSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ATPMalwareSettings.__pulumiType;
    }

    /**
     * A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
     * allowed or blocked
     */
    public readonly adwareBlocked!: pulumi.Output<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
     */
    public readonly adwareCapture!: pulumi.Output<boolean>;
    /**
     * A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
     * accessing their devices, files, or data until a ransom payment is made.
     */
    public readonly ransomwareBlocked!: pulumi.Output<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
     */
    public readonly ransomwareCapture!: pulumi.Output<boolean>;
    /**
     * A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
     */
    public readonly remoteAccessToolBlocked!: pulumi.Output<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
     */
    public readonly remoteAccessToolCapture!: pulumi.Output<boolean>;
    /**
     * A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
     * allowed or blocked
     */
    public readonly spywareBlocked!: pulumi.Output<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
     */
    public readonly spywareCapture!: pulumi.Output<boolean>;
    /**
     * A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
     * useful
     */
    public readonly trojanBlocked!: pulumi.Output<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
     */
    public readonly trojanCapture!: pulumi.Output<boolean>;
    /**
     * A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
     * users
     */
    public readonly unwantedApplicationsBlocked!: pulumi.Output<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
     */
    public readonly unwantedApplicationsCapture!: pulumi.Output<boolean>;
    /**
     * A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
     */
    public readonly virusBlocked!: pulumi.Output<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
     */
    public readonly virusCapture!: pulumi.Output<boolean>;
    /**
     * A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
     * devices are allowed or blocked
     */
    public readonly wormBlocked!: pulumi.Output<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
     */
    public readonly wormCapture!: pulumi.Output<boolean>;

    /**
     * Create a ATPMalwareSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ATPMalwareSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ATPMalwareSettingsArgs | ATPMalwareSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ATPMalwareSettingsState | undefined;
            resourceInputs["adwareBlocked"] = state ? state.adwareBlocked : undefined;
            resourceInputs["adwareCapture"] = state ? state.adwareCapture : undefined;
            resourceInputs["ransomwareBlocked"] = state ? state.ransomwareBlocked : undefined;
            resourceInputs["ransomwareCapture"] = state ? state.ransomwareCapture : undefined;
            resourceInputs["remoteAccessToolBlocked"] = state ? state.remoteAccessToolBlocked : undefined;
            resourceInputs["remoteAccessToolCapture"] = state ? state.remoteAccessToolCapture : undefined;
            resourceInputs["spywareBlocked"] = state ? state.spywareBlocked : undefined;
            resourceInputs["spywareCapture"] = state ? state.spywareCapture : undefined;
            resourceInputs["trojanBlocked"] = state ? state.trojanBlocked : undefined;
            resourceInputs["trojanCapture"] = state ? state.trojanCapture : undefined;
            resourceInputs["unwantedApplicationsBlocked"] = state ? state.unwantedApplicationsBlocked : undefined;
            resourceInputs["unwantedApplicationsCapture"] = state ? state.unwantedApplicationsCapture : undefined;
            resourceInputs["virusBlocked"] = state ? state.virusBlocked : undefined;
            resourceInputs["virusCapture"] = state ? state.virusCapture : undefined;
            resourceInputs["wormBlocked"] = state ? state.wormBlocked : undefined;
            resourceInputs["wormCapture"] = state ? state.wormCapture : undefined;
        } else {
            const args = argsOrState as ATPMalwareSettingsArgs | undefined;
            resourceInputs["adwareBlocked"] = args ? args.adwareBlocked : undefined;
            resourceInputs["adwareCapture"] = args ? args.adwareCapture : undefined;
            resourceInputs["ransomwareBlocked"] = args ? args.ransomwareBlocked : undefined;
            resourceInputs["ransomwareCapture"] = args ? args.ransomwareCapture : undefined;
            resourceInputs["remoteAccessToolBlocked"] = args ? args.remoteAccessToolBlocked : undefined;
            resourceInputs["remoteAccessToolCapture"] = args ? args.remoteAccessToolCapture : undefined;
            resourceInputs["spywareBlocked"] = args ? args.spywareBlocked : undefined;
            resourceInputs["spywareCapture"] = args ? args.spywareCapture : undefined;
            resourceInputs["trojanBlocked"] = args ? args.trojanBlocked : undefined;
            resourceInputs["trojanCapture"] = args ? args.trojanCapture : undefined;
            resourceInputs["unwantedApplicationsBlocked"] = args ? args.unwantedApplicationsBlocked : undefined;
            resourceInputs["unwantedApplicationsCapture"] = args ? args.unwantedApplicationsCapture : undefined;
            resourceInputs["virusBlocked"] = args ? args.virusBlocked : undefined;
            resourceInputs["virusCapture"] = args ? args.virusCapture : undefined;
            resourceInputs["wormBlocked"] = args ? args.wormBlocked : undefined;
            resourceInputs["wormCapture"] = args ? args.wormCapture : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ATPMalwareSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ATPMalwareSettings resources.
 */
export interface ATPMalwareSettingsState {
    /**
     * A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
     * allowed or blocked
     */
    adwareBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
     */
    adwareCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
     * accessing their devices, files, or data until a ransom payment is made.
     */
    ransomwareBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
     */
    ransomwareCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
     */
    remoteAccessToolBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
     */
    remoteAccessToolCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
     * allowed or blocked
     */
    spywareBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
     */
    spywareCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
     * useful
     */
    trojanBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
     */
    trojanCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
     * users
     */
    unwantedApplicationsBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
     */
    unwantedApplicationsCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
     */
    virusBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
     */
    virusCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
     * devices are allowed or blocked
     */
    wormBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
     */
    wormCapture?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ATPMalwareSettings resource.
 */
export interface ATPMalwareSettingsArgs {
    /**
     * A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
     * allowed or blocked
     */
    adwareBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
     */
    adwareCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
     * accessing their devices, files, or data until a ransom payment is made.
     */
    ransomwareBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
     */
    ransomwareCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
     */
    remoteAccessToolBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
     */
    remoteAccessToolCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
     * allowed or blocked
     */
    spywareBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
     */
    spywareCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
     * useful
     */
    trojanBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
     */
    trojanCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
     * users
     */
    unwantedApplicationsBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
     */
    unwantedApplicationsCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
     */
    virusBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
     */
    virusCapture?: pulumi.Input<boolean>;
    /**
     * A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
     * devices are allowed or blocked
     */
    wormBlocked?: pulumi.Input<boolean>;
    /**
     * A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
     */
    wormCapture?: pulumi.Input<boolean>;
}
