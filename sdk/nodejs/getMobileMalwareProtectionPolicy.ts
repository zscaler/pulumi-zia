// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)
 * * [API documentation](https://help.zscaler.com/zia/mobile-malware-protection-policy#/mobileAdvanceThreatSettings-put)
 *
 * Use the **zia_mobile_malware_protection_policy** data source to retrieves all the rules in the Mobile Malware Protection policy configuration. To learn more see [Configuring the Mobile Malware Protection Policy](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)
 *
 * ## Example Usage
 */
export function getMobileMalwareProtectionPolicy(opts?: pulumi.InvokeOptions): Promise<GetMobileMalwareProtectionPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getMobileMalwareProtectionPolicy:getMobileMalwareProtectionPolicy", {
    }, opts);
}

/**
 * A collection of values returned by getMobileMalwareProtectionPolicy.
 */
export interface GetMobileMalwareProtectionPolicyResult {
    /**
     * (Boolean) Blocks an application from communicating with known advertisement websites
     */
    readonly blockAppsCommunicatingWithAdWebsites: boolean;
    /**
     * (Boolean) Blocks an application from communicating with unknown servers (i.e., servers not normally or historically associated with the application)
     */
    readonly blockAppsCommunicatingWithRemoteUnknownServers: boolean;
    /**
     * (Boolean) Blocks an application from leaking device identifiers via communication in an unencrypted format or for an unknown purpose
     */
    readonly blockAppsSendingDeviceIdentifier: boolean;
    /**
     * (Boolean) Blocks an application from leaking device location details via communication in an unencrypted format or for an unknown purpose
     */
    readonly blockAppsSendingLocationInfo: boolean;
    /**
     * (Boolean) Blocks an application from leaking a user's personally identifiable information (PII) via communication in an unencrypted format or for an unknown purpose
     */
    readonly blockAppsSendingPersonallyIdentifiableInfo: boolean;
    /**
     * (Boolean) Blocks an application from leaking a user's credentials in an unencrypted format
     */
    readonly blockAppsSendingUnencryptedUserCredentials: boolean;
    /**
     * (Boolean) Blocks applications that contain vulnerabilities or that use insecure features, modules, or protocols
     */
    readonly blockAppsWithKnownVulnerabilities: boolean;
    /**
     * (Boolean) Blocks applications that are known to be malicious, compromised, or perform activities unknown to or hidden from the user
     */
    readonly blockAppsWithMaliciousActivity: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * * [Official documentation](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)
 * * [API documentation](https://help.zscaler.com/zia/mobile-malware-protection-policy#/mobileAdvanceThreatSettings-put)
 *
 * Use the **zia_mobile_malware_protection_policy** data source to retrieves all the rules in the Mobile Malware Protection policy configuration. To learn more see [Configuring the Mobile Malware Protection Policy](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)
 *
 * ## Example Usage
 */
export function getMobileMalwareProtectionPolicyOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMobileMalwareProtectionPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zia:index/getMobileMalwareProtectionPolicy:getMobileMalwareProtectionPolicy", {
    }, opts);
}
