// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirewallDnsRule(args?: GetFirewallDnsRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallDnsRuleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getFirewallDnsRule:getFirewallDnsRule", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getFirewallDnsRule.
 */
export interface GetFirewallDnsRuleArgs {
    id?: number;
    name?: string;
}

/**
 * A collection of values returned by getFirewallDnsRule.
 */
export interface GetFirewallDnsRuleResult {
    readonly action: string;
    readonly applicationGroups: outputs.GetFirewallDnsRuleApplicationGroup[];
    readonly applications: string[];
    readonly blockResponseCode: string;
    readonly capturePcap: boolean;
    readonly defaultRule: boolean;
    readonly departments: outputs.GetFirewallDnsRuleDepartment[];
    readonly description: string;
    readonly destAddresses: string[];
    readonly destCountries: string[];
    readonly destIpCategories: string[];
    readonly destIpGroups: outputs.GetFirewallDnsRuleDestIpGroup[];
    readonly destIpv6Groups: outputs.GetFirewallDnsRuleDestIpv6Group[];
    readonly deviceGroups: outputs.GetFirewallDnsRuleDeviceGroup[];
    readonly devices: outputs.GetFirewallDnsRuleDevice[];
    readonly dnsRuleRequestTypes: string[];
    readonly groups: outputs.GetFirewallDnsRuleGroup[];
    readonly id: number;
    readonly labels: outputs.GetFirewallDnsRuleLabel[];
    readonly lastModifiedBies: outputs.GetFirewallDnsRuleLastModifiedBy[];
    readonly lastModifiedTime: number;
    readonly locationGroups: outputs.GetFirewallDnsRuleLocationGroup[];
    readonly locations: outputs.GetFirewallDnsRuleLocation[];
    readonly name: string;
    readonly order: number;
    readonly predefined: boolean;
    readonly protocols: string[];
    readonly rank: number;
    readonly redirectIp: string;
    readonly resCategories: string[];
    readonly sourceCountries: string[];
    readonly srcIpGroups: outputs.GetFirewallDnsRuleSrcIpGroup[];
    readonly srcIps: string[];
    readonly srcIpv6Groups: outputs.GetFirewallDnsRuleSrcIpv6Group[];
    readonly state: string;
    readonly timeWindows: outputs.GetFirewallDnsRuleTimeWindow[];
    readonly users: outputs.GetFirewallDnsRuleUser[];
}
export function getFirewallDnsRuleOutput(args?: GetFirewallDnsRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFirewallDnsRuleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zia:index/getFirewallDnsRule:getFirewallDnsRule", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getFirewallDnsRule.
 */
export interface GetFirewallDnsRuleOutputArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
