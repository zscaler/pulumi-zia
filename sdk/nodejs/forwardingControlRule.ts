// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
 *
 * Visit
 *
 * **zia_forwarding_control_rule** can be imported by using `<RULE ID>` or `<RULE NAME>` as the import ID.
 *
 * For example:
 *
 * ```sh
 * $ pulumi import zia:index/forwardingControlRule:ForwardingControlRule example <rule_id>
 * ```
 *
 * or
 *
 * ```sh
 * $ pulumi import zia:index/forwardingControlRule:ForwardingControlRule example <rule_name>
 * ```
 */
export class ForwardingControlRule extends pulumi.CustomResource {
    /**
     * Get an existing ForwardingControlRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ForwardingControlRuleState, opts?: pulumi.CustomResourceOptions): ForwardingControlRule {
        return new ForwardingControlRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:index/forwardingControlRule:ForwardingControlRule';

    /**
     * Returns true if the given object is an instance of ForwardingControlRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ForwardingControlRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ForwardingControlRule.__pulumiType;
    }

    /**
     * (list) - Application service groups on which this rule is applied
     */
    public readonly appServiceGroups!: pulumi.Output<outputs.ForwardingControlRuleAppServiceGroups | undefined>;
    /**
     * (list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
     */
    public readonly departments!: pulumi.Output<outputs.ForwardingControlRuleDepartments | undefined>;
    /**
     * (string) - Additional information about the forwarding rule
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * ** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.
     */
    public readonly destAddresses!: pulumi.Output<string[] | undefined>;
    /**
     * ** - (list) destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
     */
    public readonly destCountries!: pulumi.Output<string[]>;
    /**
     * ** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
     */
    public readonly destIpCategories!: pulumi.Output<string[] | undefined>;
    /**
     * ** - (list) Any number of destination IP address groups that you want to control with this rule.
     */
    public readonly destIpGroups!: pulumi.Output<outputs.ForwardingControlRuleDestIpGroups | undefined>;
    /**
     * ** - (list) Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
     */
    public readonly destIpv6Groups!: pulumi.Output<outputs.ForwardingControlRuleDestIpv6Groups | undefined>;
    /**
     * (list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
     */
    public readonly ecGroups!: pulumi.Output<outputs.ForwardingControlRuleEcGroups | undefined>;
    /**
     * The type of traffic forwarding method selected from the available options
     */
    public readonly forwardMethod!: pulumi.Output<string>;
    /**
     * (list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
     */
    public readonly groups!: pulumi.Output<outputs.ForwardingControlRuleGroups | undefined>;
    /**
     * (list) Labels that are applicable to the rule.
     */
    public readonly labels!: pulumi.Output<outputs.ForwardingControlRuleLabels | undefined>;
    /**
     * (Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
     */
    public readonly locationGroups!: pulumi.Output<outputs.ForwardingControlRuleLocationGroups | undefined>;
    /**
     * (Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
     */
    public readonly locations!: pulumi.Output<outputs.ForwardingControlRuleLocations | undefined>;
    /**
     * (string) The configured name of the entity
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify
     */
    public readonly nwApplicationGroups!: pulumi.Output<outputs.ForwardingControlRuleNwApplicationGroups | undefined>;
    /**
     * (list) Any number of predefined or custom network service groups to which the rule applies.
     */
    public readonly nwServiceGroups!: pulumi.Output<outputs.ForwardingControlRuleNwServiceGroups | undefined>;
    /**
     * (list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
     */
    public readonly nwServices!: pulumi.Output<outputs.ForwardingControlRuleNwServices | undefined>;
    /**
     * (int) - The order of execution for the forwarding rule order.
     */
    public readonly order!: pulumi.Output<number>;
    /**
     * (set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.
     */
    public readonly proxyGateway!: pulumi.Output<outputs.ForwardingControlRuleProxyGateway>;
    /**
     * Admin rank assigned to the forwarding rule
     */
    public readonly rank!: pulumi.Output<number | undefined>;
    /**
     * ** - (list) List of destination domain categories to which the rule applies.
     */
    public readonly resCategories!: pulumi.Output<string[] | undefined>;
    /**
     * A unique identifier assigned to the forwarding rule
     */
    public /*out*/ readonly ruleId!: pulumi.Output<number>;
    /**
     * (list) Any number of source IP address groups that you want to control with this rule.
     */
    public readonly srcIpGroups!: pulumi.Output<outputs.ForwardingControlRuleSrcIpGroups | undefined>;
    /**
     * (Optional) You can enter individual IP addresses, subnets, or address ranges.
     */
    public readonly srcIps!: pulumi.Output<string[] | undefined>;
    /**
     * (list) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
     */
    public readonly srcIpv6Groups!: pulumi.Output<outputs.ForwardingControlRuleSrcIpv6Groups | undefined>;
    /**
     * (string) - Indicates whether the forwarding rule is enabled or disabled. Supported values are: `ENABLED` and `DISABLED`.
     */
    public readonly state!: pulumi.Output<string | undefined>;
    /**
     * The rule type selected from the available options
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * (list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
     */
    public readonly users!: pulumi.Output<outputs.ForwardingControlRuleUsers | undefined>;
    /**
     * (set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.
     */
    public readonly zpaAppSegments!: pulumi.Output<outputs.ForwardingControlRuleZpaAppSegment[]>;
    /**
     * (set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
     */
    public readonly zpaApplicationSegmentGroups!: pulumi.Output<outputs.ForwardingControlRuleZpaApplicationSegmentGroups | undefined>;
    /**
     * (set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
     */
    public readonly zpaApplicationSegments!: pulumi.Output<outputs.ForwardingControlRuleZpaApplicationSegments | undefined>;
    /**
     * (set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.
     */
    public readonly zpaGateway!: pulumi.Output<outputs.ForwardingControlRuleZpaGateway>;

    /**
     * Create a ForwardingControlRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ForwardingControlRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ForwardingControlRuleArgs | ForwardingControlRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ForwardingControlRuleState | undefined;
            resourceInputs["appServiceGroups"] = state ? state.appServiceGroups : undefined;
            resourceInputs["departments"] = state ? state.departments : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destAddresses"] = state ? state.destAddresses : undefined;
            resourceInputs["destCountries"] = state ? state.destCountries : undefined;
            resourceInputs["destIpCategories"] = state ? state.destIpCategories : undefined;
            resourceInputs["destIpGroups"] = state ? state.destIpGroups : undefined;
            resourceInputs["destIpv6Groups"] = state ? state.destIpv6Groups : undefined;
            resourceInputs["ecGroups"] = state ? state.ecGroups : undefined;
            resourceInputs["forwardMethod"] = state ? state.forwardMethod : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["locationGroups"] = state ? state.locationGroups : undefined;
            resourceInputs["locations"] = state ? state.locations : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nwApplicationGroups"] = state ? state.nwApplicationGroups : undefined;
            resourceInputs["nwServiceGroups"] = state ? state.nwServiceGroups : undefined;
            resourceInputs["nwServices"] = state ? state.nwServices : undefined;
            resourceInputs["order"] = state ? state.order : undefined;
            resourceInputs["proxyGateway"] = state ? state.proxyGateway : undefined;
            resourceInputs["rank"] = state ? state.rank : undefined;
            resourceInputs["resCategories"] = state ? state.resCategories : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["srcIpGroups"] = state ? state.srcIpGroups : undefined;
            resourceInputs["srcIps"] = state ? state.srcIps : undefined;
            resourceInputs["srcIpv6Groups"] = state ? state.srcIpv6Groups : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
            resourceInputs["zpaAppSegments"] = state ? state.zpaAppSegments : undefined;
            resourceInputs["zpaApplicationSegmentGroups"] = state ? state.zpaApplicationSegmentGroups : undefined;
            resourceInputs["zpaApplicationSegments"] = state ? state.zpaApplicationSegments : undefined;
            resourceInputs["zpaGateway"] = state ? state.zpaGateway : undefined;
        } else {
            const args = argsOrState as ForwardingControlRuleArgs | undefined;
            if ((!args || args.forwardMethod === undefined) && !opts.urn) {
                throw new Error("Missing required property 'forwardMethod'");
            }
            if ((!args || args.order === undefined) && !opts.urn) {
                throw new Error("Missing required property 'order'");
            }
            resourceInputs["appServiceGroups"] = args ? args.appServiceGroups : undefined;
            resourceInputs["departments"] = args ? args.departments : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destAddresses"] = args ? args.destAddresses : undefined;
            resourceInputs["destCountries"] = args ? args.destCountries : undefined;
            resourceInputs["destIpCategories"] = args ? args.destIpCategories : undefined;
            resourceInputs["destIpGroups"] = args ? args.destIpGroups : undefined;
            resourceInputs["destIpv6Groups"] = args ? args.destIpv6Groups : undefined;
            resourceInputs["ecGroups"] = args ? args.ecGroups : undefined;
            resourceInputs["forwardMethod"] = args ? args.forwardMethod : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["locationGroups"] = args ? args.locationGroups : undefined;
            resourceInputs["locations"] = args ? args.locations : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nwApplicationGroups"] = args ? args.nwApplicationGroups : undefined;
            resourceInputs["nwServiceGroups"] = args ? args.nwServiceGroups : undefined;
            resourceInputs["nwServices"] = args ? args.nwServices : undefined;
            resourceInputs["order"] = args ? args.order : undefined;
            resourceInputs["proxyGateway"] = args ? args.proxyGateway : undefined;
            resourceInputs["rank"] = args ? args.rank : undefined;
            resourceInputs["resCategories"] = args ? args.resCategories : undefined;
            resourceInputs["srcIpGroups"] = args ? args.srcIpGroups : undefined;
            resourceInputs["srcIps"] = args ? args.srcIps : undefined;
            resourceInputs["srcIpv6Groups"] = args ? args.srcIpv6Groups : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["zpaAppSegments"] = args ? args.zpaAppSegments : undefined;
            resourceInputs["zpaApplicationSegmentGroups"] = args ? args.zpaApplicationSegmentGroups : undefined;
            resourceInputs["zpaApplicationSegments"] = args ? args.zpaApplicationSegments : undefined;
            resourceInputs["zpaGateway"] = args ? args.zpaGateway : undefined;
            resourceInputs["ruleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ForwardingControlRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ForwardingControlRule resources.
 */
export interface ForwardingControlRuleState {
    /**
     * (list) - Application service groups on which this rule is applied
     */
    appServiceGroups?: pulumi.Input<inputs.ForwardingControlRuleAppServiceGroups>;
    /**
     * (list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
     */
    departments?: pulumi.Input<inputs.ForwardingControlRuleDepartments>;
    /**
     * (string) - Additional information about the forwarding rule
     */
    description?: pulumi.Input<string>;
    /**
     * ** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.
     */
    destAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ** - (list) destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
     */
    destCountries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
     */
    destIpCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ** - (list) Any number of destination IP address groups that you want to control with this rule.
     */
    destIpGroups?: pulumi.Input<inputs.ForwardingControlRuleDestIpGroups>;
    /**
     * ** - (list) Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
     */
    destIpv6Groups?: pulumi.Input<inputs.ForwardingControlRuleDestIpv6Groups>;
    /**
     * (list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
     */
    ecGroups?: pulumi.Input<inputs.ForwardingControlRuleEcGroups>;
    /**
     * The type of traffic forwarding method selected from the available options
     */
    forwardMethod?: pulumi.Input<string>;
    /**
     * (list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
     */
    groups?: pulumi.Input<inputs.ForwardingControlRuleGroups>;
    /**
     * (list) Labels that are applicable to the rule.
     */
    labels?: pulumi.Input<inputs.ForwardingControlRuleLabels>;
    /**
     * (Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
     */
    locationGroups?: pulumi.Input<inputs.ForwardingControlRuleLocationGroups>;
    /**
     * (Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
     */
    locations?: pulumi.Input<inputs.ForwardingControlRuleLocations>;
    /**
     * (string) The configured name of the entity
     */
    name?: pulumi.Input<string>;
    /**
     * (list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify
     */
    nwApplicationGroups?: pulumi.Input<inputs.ForwardingControlRuleNwApplicationGroups>;
    /**
     * (list) Any number of predefined or custom network service groups to which the rule applies.
     */
    nwServiceGroups?: pulumi.Input<inputs.ForwardingControlRuleNwServiceGroups>;
    /**
     * (list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
     */
    nwServices?: pulumi.Input<inputs.ForwardingControlRuleNwServices>;
    /**
     * (int) - The order of execution for the forwarding rule order.
     */
    order?: pulumi.Input<number>;
    /**
     * (set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.
     */
    proxyGateway?: pulumi.Input<inputs.ForwardingControlRuleProxyGateway>;
    /**
     * Admin rank assigned to the forwarding rule
     */
    rank?: pulumi.Input<number>;
    /**
     * ** - (list) List of destination domain categories to which the rule applies.
     */
    resCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A unique identifier assigned to the forwarding rule
     */
    ruleId?: pulumi.Input<number>;
    /**
     * (list) Any number of source IP address groups that you want to control with this rule.
     */
    srcIpGroups?: pulumi.Input<inputs.ForwardingControlRuleSrcIpGroups>;
    /**
     * (Optional) You can enter individual IP addresses, subnets, or address ranges.
     */
    srcIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (list) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
     */
    srcIpv6Groups?: pulumi.Input<inputs.ForwardingControlRuleSrcIpv6Groups>;
    /**
     * (string) - Indicates whether the forwarding rule is enabled or disabled. Supported values are: `ENABLED` and `DISABLED`.
     */
    state?: pulumi.Input<string>;
    /**
     * The rule type selected from the available options
     */
    type?: pulumi.Input<string>;
    /**
     * (list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
     */
    users?: pulumi.Input<inputs.ForwardingControlRuleUsers>;
    /**
     * (set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.
     */
    zpaAppSegments?: pulumi.Input<pulumi.Input<inputs.ForwardingControlRuleZpaAppSegment>[]>;
    /**
     * (set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
     */
    zpaApplicationSegmentGroups?: pulumi.Input<inputs.ForwardingControlRuleZpaApplicationSegmentGroups>;
    /**
     * (set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
     */
    zpaApplicationSegments?: pulumi.Input<inputs.ForwardingControlRuleZpaApplicationSegments>;
    /**
     * (set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.
     */
    zpaGateway?: pulumi.Input<inputs.ForwardingControlRuleZpaGateway>;
}

/**
 * The set of arguments for constructing a ForwardingControlRule resource.
 */
export interface ForwardingControlRuleArgs {
    /**
     * (list) - Application service groups on which this rule is applied
     */
    appServiceGroups?: pulumi.Input<inputs.ForwardingControlRuleAppServiceGroups>;
    /**
     * (list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
     */
    departments?: pulumi.Input<inputs.ForwardingControlRuleDepartments>;
    /**
     * (string) - Additional information about the forwarding rule
     */
    description?: pulumi.Input<string>;
    /**
     * ** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.
     */
    destAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ** - (list) destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
     */
    destCountries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
     */
    destIpCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ** - (list) Any number of destination IP address groups that you want to control with this rule.
     */
    destIpGroups?: pulumi.Input<inputs.ForwardingControlRuleDestIpGroups>;
    /**
     * ** - (list) Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
     */
    destIpv6Groups?: pulumi.Input<inputs.ForwardingControlRuleDestIpv6Groups>;
    /**
     * (list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
     */
    ecGroups?: pulumi.Input<inputs.ForwardingControlRuleEcGroups>;
    /**
     * The type of traffic forwarding method selected from the available options
     */
    forwardMethod: pulumi.Input<string>;
    /**
     * (list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
     */
    groups?: pulumi.Input<inputs.ForwardingControlRuleGroups>;
    /**
     * (list) Labels that are applicable to the rule.
     */
    labels?: pulumi.Input<inputs.ForwardingControlRuleLabels>;
    /**
     * (Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
     */
    locationGroups?: pulumi.Input<inputs.ForwardingControlRuleLocationGroups>;
    /**
     * (Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
     */
    locations?: pulumi.Input<inputs.ForwardingControlRuleLocations>;
    /**
     * (string) The configured name of the entity
     */
    name?: pulumi.Input<string>;
    /**
     * (list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify
     */
    nwApplicationGroups?: pulumi.Input<inputs.ForwardingControlRuleNwApplicationGroups>;
    /**
     * (list) Any number of predefined or custom network service groups to which the rule applies.
     */
    nwServiceGroups?: pulumi.Input<inputs.ForwardingControlRuleNwServiceGroups>;
    /**
     * (list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
     */
    nwServices?: pulumi.Input<inputs.ForwardingControlRuleNwServices>;
    /**
     * (int) - The order of execution for the forwarding rule order.
     */
    order: pulumi.Input<number>;
    /**
     * (set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.
     */
    proxyGateway?: pulumi.Input<inputs.ForwardingControlRuleProxyGateway>;
    /**
     * Admin rank assigned to the forwarding rule
     */
    rank?: pulumi.Input<number>;
    /**
     * ** - (list) List of destination domain categories to which the rule applies.
     */
    resCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (list) Any number of source IP address groups that you want to control with this rule.
     */
    srcIpGroups?: pulumi.Input<inputs.ForwardingControlRuleSrcIpGroups>;
    /**
     * (Optional) You can enter individual IP addresses, subnets, or address ranges.
     */
    srcIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (list) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
     */
    srcIpv6Groups?: pulumi.Input<inputs.ForwardingControlRuleSrcIpv6Groups>;
    /**
     * (string) - Indicates whether the forwarding rule is enabled or disabled. Supported values are: `ENABLED` and `DISABLED`.
     */
    state?: pulumi.Input<string>;
    /**
     * The rule type selected from the available options
     */
    type?: pulumi.Input<string>;
    /**
     * (list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
     */
    users?: pulumi.Input<inputs.ForwardingControlRuleUsers>;
    /**
     * (set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.
     */
    zpaAppSegments?: pulumi.Input<pulumi.Input<inputs.ForwardingControlRuleZpaAppSegment>[]>;
    /**
     * (set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
     */
    zpaApplicationSegmentGroups?: pulumi.Input<inputs.ForwardingControlRuleZpaApplicationSegmentGroups>;
    /**
     * (set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
     */
    zpaApplicationSegments?: pulumi.Input<inputs.ForwardingControlRuleZpaApplicationSegments>;
    /**
     * (set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.
     */
    zpaGateway?: pulumi.Input<inputs.ForwardingControlRuleZpaGateway>;
}
