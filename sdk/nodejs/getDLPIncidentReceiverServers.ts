// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the **zia_dlp_incident_receiver_servers** data source to get information about a ZIA DLP Incident Receiver Server in the Zscaler Internet Access cloud or via the API.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@pulumi/zia";
 *
 * const this = zia.getDLPIncidentReceiverServers({
 *     name: "ZS_Incident_Receiver",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getDLPIncidentReceiverServers(args?: GetDLPIncidentReceiverServersArgs, opts?: pulumi.InvokeOptions): Promise<GetDLPIncidentReceiverServersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getDLPIncidentReceiverServers:getDLPIncidentReceiverServers", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getDLPIncidentReceiverServers.
 */
export interface GetDLPIncidentReceiverServersArgs {
    /**
     * The DLP Incident Receiver Server name as configured by the admin.
     */
    name?: string;
}

/**
 * A collection of values returned by getDLPIncidentReceiverServers.
 */
export interface GetDLPIncidentReceiverServersResult {
    readonly flags: number;
    readonly id: number;
    readonly name?: string;
    readonly status: string;
    readonly url: string;
}
/**
 * Use the **zia_dlp_incident_receiver_servers** data source to get information about a ZIA DLP Incident Receiver Server in the Zscaler Internet Access cloud or via the API.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@pulumi/zia";
 *
 * const this = zia.getDLPIncidentReceiverServers({
 *     name: "ZS_Incident_Receiver",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getDLPIncidentReceiverServersOutput(args?: GetDLPIncidentReceiverServersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDLPIncidentReceiverServersResult> {
    return pulumi.output(args).apply((a: any) => getDLPIncidentReceiverServers(a, opts))
}

/**
 * A collection of arguments for invoking getDLPIncidentReceiverServers.
 */
export interface GetDLPIncidentReceiverServersOutputArgs {
    /**
     * The DLP Incident Receiver Server name as configured by the admin.
     */
    name?: pulumi.Input<string>;
}
