// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AdminUsersAdminScopeEntities {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface AdminUsersRole {
    id?: pulumi.Input<number>;
}

export interface DLPDictionariesExactDataMatchDetail {
    /**
     * The unique identifier for the EDM mapping
     */
    dictionaryEdmMappingId?: pulumi.Input<number>;
    /**
     * The EDM template's primary field.
     */
    primaryField?: pulumi.Input<number>;
    /**
     * The unique identifier for the EDM template (or schema).
     */
    schemaId?: pulumi.Input<number>;
    /**
     * The EDM secondary field to match on.
     */
    secondaryFieldMatchOn?: pulumi.Input<string>;
    /**
     * The EDM template's secondary fields.
     */
    secondaryFields?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPDictionariesIdmProfileMatchAccuracy {
    /**
     * The action applied to a DLP dictionary using patterns
     */
    adpIdmProfiles?: pulumi.Input<pulumi.Input<inputs.DLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile>[]>;
    /**
     * The IDM template match accuracy.
     */
    matchAccuracy?: pulumi.Input<string>;
}

export interface DLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile {
    extensions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<number>;
}

export interface DLPDictionariesPattern {
    /**
     * The action applied to a DLP dictionary using patterns
     */
    action?: pulumi.Input<string>;
    /**
     * DLP dictionary pattern
     */
    pattern?: pulumi.Input<string>;
}

export interface DLPDictionariesPhrase {
    action?: pulumi.Input<string>;
    /**
     * DLP dictionary phrase
     */
    phrase?: pulumi.Input<string>;
}

export interface DLPWebRulesAuditor {
    id: pulumi.Input<number>;
}

export interface DLPWebRulesDepartments {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesDlpEngines {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesExcludedDepartments {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesExcludedDomainProfiles {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesExcludedGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesExcludedUsers {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesIcapServer {
    id: pulumi.Input<number>;
}

export interface DLPWebRulesIncludedDomainProfiles {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesLabels {
    id?: pulumi.Input<number>;
}

export interface DLPWebRulesLocationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesLocations {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesNotificationTemplate {
    id: pulumi.Input<number>;
}

export interface DLPWebRulesSourceIpGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesTimeWindows {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesUrlCategories {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesUsers {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DLPWebRulesWorkloadGroup {
    /**
     * The unique identifier for the resource.
     */
    id: pulumi.Input<number>;
    /**
     * The name of the resource.
     */
    name: pulumi.Input<string>;
}

export interface FirewallFilteringNetworkServicesDestTcpPort {
    end?: pulumi.Input<number>;
    start?: pulumi.Input<number>;
}

export interface FirewallFilteringNetworkServicesDestUdpPort {
    end?: pulumi.Input<number>;
    start?: pulumi.Input<number>;
}

export interface FirewallFilteringNetworkServicesSrcTcpPort {
    end?: pulumi.Input<number>;
    start?: pulumi.Input<number>;
}

export interface FirewallFilteringNetworkServicesSrcUdpPort {
    end?: pulumi.Input<number>;
    start?: pulumi.Input<number>;
}

export interface FirewallFilteringRuleAppServiceGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleAppServices {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleDepartments {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleDestIpGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleDeviceGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleDevices {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleLabels {
    id?: pulumi.Input<number>;
}

export interface FirewallFilteringRuleLocationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleLocations {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleNwApplicationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleNwServiceGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleNwServices {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleSrcIpGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleTimeWindows {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleUsers {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleWorkloadGroup {
    /**
     * The unique identifier for the resource.
     */
    id: pulumi.Input<number>;
    /**
     * The name of the resource.
     */
    name: pulumi.Input<string>;
}

export interface FirewallFilteringRuleZpaAppSegment {
    /**
     * External ID of the application segment.
     */
    externalId: pulumi.Input<string>;
    /**
     * Name of the application segment.
     */
    name: pulumi.Input<string>;
}

export interface FirewallFilteringServiceGroupsService {
    ids: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleAppServiceGroups {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleDepartments {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleDestIpGroups {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleDestIpv6Groups {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleEcGroups {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleGroups {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleLabels {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    id?: pulumi.Input<number>;
}

export interface ForwardingControlRuleLocationGroups {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleLocations {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleNwApplicationGroups {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleNwServiceGroups {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleNwServices {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleProxyGateway {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    id: pulumi.Input<number>;
    /**
     * (string) The configured name of the entity
     */
    name: pulumi.Input<string>;
}

export interface ForwardingControlRuleSrcIpGroups {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleSrcIpv6Groups {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleUsers {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleZpaAppSegment {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    externalId: pulumi.Input<string>;
    /**
     * (string) The configured name of the entity
     */
    name: pulumi.Input<string>;
}

export interface ForwardingControlRuleZpaApplicationSegmentGroups {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleZpaApplicationSegments {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleZpaGateway {
    /**
     * (int) Identifier that uniquely identifies an entity
     */
    id: pulumi.Input<number>;
    /**
     * (string) The configured name of the entity
     */
    name: pulumi.Input<string>;
}

export interface ForwardingControlZPAGatewayZpaAppSegment {
    /**
     * An external identifier used for an entity that is managed outside of ZIA. Examples include zpaServerGroup and zpaAppSegments. This field is not applicable to ZIA-managed entities.
     */
    externalId: pulumi.Input<string>;
    /**
     * The configured name of the entity
     */
    name: pulumi.Input<string>;
}

export interface ForwardingControlZPAGatewayZpaServerGroup {
    /**
     * An external identifier used for an entity that is managed outside of ZIA. Examples include zpaServerGroup and zpaAppSegments. This field is not applicable to ZIA-managed entities.
     */
    externalId: pulumi.Input<string>;
    /**
     * The configured name of the entity
     */
    name: pulumi.Input<string>;
}

export interface GetLocationGroupsDynamicLocationGroupCriteria {
    /**
     * (Block List)
     */
    cities?: inputs.GetLocationGroupsDynamicLocationGroupCriteriaCity[];
    /**
     * (List of String) One or more countries from a predefined set
     */
    countries?: string[];
    /**
     * (Boolean) Enable Bandwidth Control. When set to true, Bandwidth Control is enabled for the location.
     */
    enableBandwidthControl?: boolean;
    /**
     * (Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.
     */
    enableCaution?: boolean;
    /**
     * (Boolean) Enable `XFF` Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
     */
    enableXffForwarding?: boolean;
    /**
     * (Boolean) Enable AUP. When set to true, AUP is enabled for the location.
     */
    enforceAup?: boolean;
    /**
     * (Boolean) Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
     */
    enforceAuthentication?: boolean;
    /**
     * (Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.
     */
    enforceFirewallControl?: boolean;
    /**
     * (Block List)
     */
    managedBies?: inputs.GetLocationGroupsDynamicLocationGroupCriteriaManagedBy[];
    /**
     * Location group name
     */
    names?: inputs.GetLocationGroupsDynamicLocationGroupCriteriaName[];
    /**
     * (List of String) One or more location profiles from a predefined set
     */
    profiles?: string[];
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaArgs {
    /**
     * (Block List)
     */
    cities?: pulumi.Input<pulumi.Input<inputs.GetLocationGroupsDynamicLocationGroupCriteriaCityArgs>[]>;
    /**
     * (List of String) One or more countries from a predefined set
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Boolean) Enable Bandwidth Control. When set to true, Bandwidth Control is enabled for the location.
     */
    enableBandwidthControl?: pulumi.Input<boolean>;
    /**
     * (Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.
     */
    enableCaution?: pulumi.Input<boolean>;
    /**
     * (Boolean) Enable `XFF` Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
     */
    enableXffForwarding?: pulumi.Input<boolean>;
    /**
     * (Boolean) Enable AUP. When set to true, AUP is enabled for the location.
     */
    enforceAup?: pulumi.Input<boolean>;
    /**
     * (Boolean) Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
     */
    enforceAuthentication?: pulumi.Input<boolean>;
    /**
     * (Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.
     */
    enforceFirewallControl?: pulumi.Input<boolean>;
    /**
     * (Block List)
     */
    managedBies?: pulumi.Input<pulumi.Input<inputs.GetLocationGroupsDynamicLocationGroupCriteriaManagedByArgs>[]>;
    /**
     * Location group name
     */
    names?: pulumi.Input<pulumi.Input<inputs.GetLocationGroupsDynamicLocationGroupCriteriaNameArgs>[]>;
    /**
     * (List of String) One or more location profiles from a predefined set
     */
    profiles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaCity {
    /**
     * (String) String value to be matched or partially matched
     */
    matchString?: string;
    /**
     * (String) Operator that performs match action
     */
    matchType?: string;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaCityArgs {
    /**
     * (String) String value to be matched or partially matched
     */
    matchString?: pulumi.Input<string>;
    /**
     * (String) Operator that performs match action
     */
    matchType?: pulumi.Input<string>;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaManagedBy {
    /**
     * (Map of String)
     */
    extensions?: {[key: string]: string};
    /**
     * Unique identifier for the location group
     */
    id?: number;
    /**
     * Location group name
     */
    name?: string;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaManagedByArgs {
    /**
     * (Map of String)
     */
    extensions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Unique identifier for the location group
     */
    id?: pulumi.Input<number>;
    /**
     * Location group name
     */
    name?: pulumi.Input<string>;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaName {
    /**
     * (String) String value to be matched or partially matched
     */
    matchString?: string;
    /**
     * (String) Operator that performs match action
     */
    matchType?: string;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaNameArgs {
    /**
     * (String) String value to be matched or partially matched
     */
    matchString?: pulumi.Input<string>;
    /**
     * (String) Operator that performs match action
     */
    matchType?: pulumi.Input<string>;
}

export interface GetSandboxReportExploit {
    risk?: string;
    signature?: string;
    signatureSources?: string[];
}

export interface GetSandboxReportExploitArgs {
    risk?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    signatureSources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSandboxReportNetworking {
    risk?: string;
    signature?: string;
    signatureSources?: string[];
}

export interface GetSandboxReportNetworkingArgs {
    risk?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    signatureSources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSandboxReportPersistence {
    risk?: string;
    signature?: string;
    signatureSources?: string[];
}

export interface GetSandboxReportPersistenceArgs {
    risk?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    signatureSources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSandboxReportSecurityBypass {
    risk?: string;
    signature?: string;
    signatureSources?: string[];
}

export interface GetSandboxReportSecurityBypassArgs {
    risk?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    signatureSources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSandboxReportSpyware {
    risk?: string;
    signature?: string;
    signatureSources?: string[];
}

export interface GetSandboxReportSpywareArgs {
    risk?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    signatureSources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSandboxReportStealth {
    risk?: string;
    signature?: string;
    signatureSources?: string[];
}

export interface GetSandboxReportStealthArgs {
    risk?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    signatureSources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LocationManagementDynamicLocationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface LocationManagementStaticLocationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface LocationManagementVpnCredential {
    comments?: pulumi.Input<string>;
    fqdn?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    ipAddress?: pulumi.Input<string>;
    preSharedKey?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface TrafficForwardingGRETunnelPrimaryDestVip {
    /**
     * Data center information
     */
    datacenter?: pulumi.Input<string>;
    /**
     * GRE cluster virtual IP ID
     */
    id?: pulumi.Input<number>;
    /**
     * GRE cluster virtual IP address (VIP)
     */
    virtualIp?: pulumi.Input<string>;
}

export interface TrafficForwardingGRETunnelSecondaryDestVip {
    /**
     * Data center information
     */
    datacenter?: pulumi.Input<string>;
    /**
     * GRE cluster virtual IP ID
     */
    id?: pulumi.Input<number>;
    /**
     * GRE cluster virtual IP address (VIP)
     */
    virtualIp?: pulumi.Input<string>;
}

export interface URLCategoriesScope {
    /**
     * list of scope IDs
     */
    scopeEntities?: pulumi.Input<inputs.URLCategoriesScopeScopeEntities>;
    /**
     * list of scope group member IDs
     */
    scopeGroupMemberEntities?: pulumi.Input<inputs.URLCategoriesScopeScopeGroupMemberEntities>;
    type?: pulumi.Input<string>;
}

export interface URLCategoriesScopeScopeEntities {
    ids: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLCategoriesScopeScopeGroupMemberEntities {
    ids: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLCategoriesUrlKeywordCounts {
    /**
     * Count of total keywords with retain parent category.
     */
    retainParentKeywordCount?: pulumi.Input<number>;
    /**
     * Count of URLs with retain parent category.
     */
    retainParentUrlCount?: pulumi.Input<number>;
    /**
     * Total keyword count for the category.
     */
    totalKeywordCount?: pulumi.Input<number>;
    /**
     * Custom URL count for the category.
     */
    totalUrlCount?: pulumi.Input<number>;
}

export interface URLFilteringRulesCbiProfile {
    id?: pulumi.Input<string>;
    /**
     * Name of the Firewall Filtering policy rule
     */
    name?: pulumi.Input<string>;
    /**
     * The browser isolation profile URL
     */
    url?: pulumi.Input<string>;
}

export interface URLFilteringRulesDepartments {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLFilteringRulesDeviceGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLFilteringRulesDevices {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLFilteringRulesGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLFilteringRulesLabels {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLFilteringRulesLocationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLFilteringRulesLocations {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLFilteringRulesOverrideGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLFilteringRulesOverrideUsers {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLFilteringRulesSourceIpGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLFilteringRulesTimeWindows {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLFilteringRulesUsers {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface URLFilteringRulesWorkloadGroup {
    /**
     * The unique identifier for the resource.
     */
    id: pulumi.Input<number>;
    /**
     * Name of the Firewall Filtering policy rule
     */
    name: pulumi.Input<string>;
}

export interface UserManagementDepartment {
    /**
     * Additional information about this department
     */
    comments?: pulumi.Input<string>;
    deleted?: pulumi.Input<boolean>;
    id?: pulumi.Input<number>;
    /**
     * Identity provider (IdP) ID
     */
    idpId?: pulumi.Input<number>;
    /**
     * User name. This appears when choosing users for policies.
     */
    name?: pulumi.Input<string>;
}

export interface UserManagementGroups {
    /**
     * Unique identfier for the group
     */
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}
