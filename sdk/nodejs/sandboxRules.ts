// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The **zia_sandbox_rules** resource allows the creation and management of SAndbox rules in the Zscaler Internet Access.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
 *
 * Visit
 *
 * **zia_sandbox_rules** can be imported by using `<RULE ID>` or `<RULE NAME>` as the import ID.
 *
 * For example:
 *
 * ```sh
 * $ pulumi import zia:index/sandboxRules:SandboxRules example <rule_id>
 * ```
 *
 * or
 *
 * ```sh
 * $ pulumi import zia:index/sandboxRules:SandboxRules example <rule_name>
 * ```
 */
export class SandboxRules extends pulumi.CustomResource {
    /**
     * Get an existing SandboxRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SandboxRulesState, opts?: pulumi.CustomResourceOptions): SandboxRules {
        return new SandboxRules(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:index/sandboxRules:SandboxRules';

    /**
     * Returns true if the given object is an instance of SandboxRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SandboxRules {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SandboxRules.__pulumiType;
    }

    /**
     * The threat categories to which the rule applies
     */
    public readonly baPolicyCategories!: pulumi.Output<string[] | undefined>;
    /**
     * (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`
     */
    public readonly baRuleAction!: pulumi.Output<string>;
    /**
     * (Integer)
     */
    public readonly byThreatScore!: pulumi.Output<number>;
    /**
     * (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
     */
    public readonly departments!: pulumi.Output<outputs.SandboxRulesDepartments | undefined>;
    /**
     * (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.
     */
    public readonly fileTypes!: pulumi.Output<string[]>;
    /**
     * (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.
     */
    public readonly firstTimeEnable!: pulumi.Output<boolean>;
    /**
     * (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`
     */
    public readonly firstTimeOperation!: pulumi.Output<string>;
    /**
     * (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
     */
    public readonly groups!: pulumi.Output<outputs.SandboxRulesGroups | undefined>;
    /**
     * (List of Objects) Labels that are applicable to the rule.
     */
    public readonly labels!: pulumi.Output<outputs.SandboxRulesLabels | undefined>;
    /**
     * (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
     */
    public readonly locationGroups!: pulumi.Output<outputs.SandboxRulesLocationGroups | undefined>;
    /**
     * (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
     */
    public readonly locations!: pulumi.Output<outputs.SandboxRulesLocations | undefined>;
    /**
     * (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.
     */
    public readonly mlActionEnabled!: pulumi.Output<boolean>;
    /**
     * The File Type Control policy rule name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
     */
    public readonly order!: pulumi.Output<number>;
    /**
     * Protocol for the given rule. This field is not applicable to the Lite API.
     */
    public readonly protocols!: pulumi.Output<string[]>;
    /**
     * (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.
     */
    public readonly rank!: pulumi.Output<number>;
    public /*out*/ readonly ruleId!: pulumi.Output<number>;
    /**
     * (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * (List of Strings) The list of URL categories to which the DLP policy rule must be applied.
     */
    public readonly urlCategories!: pulumi.Output<string[] | undefined>;
    /**
     * (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
     */
    public readonly users!: pulumi.Output<outputs.SandboxRulesUsers | undefined>;
    /**
     * (List of Objects) The ZPA application segments to which the rule applies
     */
    public readonly zpaAppSegments!: pulumi.Output<outputs.SandboxRulesZpaAppSegment[]>;

    /**
     * Create a SandboxRules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SandboxRulesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SandboxRulesArgs | SandboxRulesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SandboxRulesState | undefined;
            resourceInputs["baPolicyCategories"] = state ? state.baPolicyCategories : undefined;
            resourceInputs["baRuleAction"] = state ? state.baRuleAction : undefined;
            resourceInputs["byThreatScore"] = state ? state.byThreatScore : undefined;
            resourceInputs["departments"] = state ? state.departments : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fileTypes"] = state ? state.fileTypes : undefined;
            resourceInputs["firstTimeEnable"] = state ? state.firstTimeEnable : undefined;
            resourceInputs["firstTimeOperation"] = state ? state.firstTimeOperation : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["locationGroups"] = state ? state.locationGroups : undefined;
            resourceInputs["locations"] = state ? state.locations : undefined;
            resourceInputs["mlActionEnabled"] = state ? state.mlActionEnabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["order"] = state ? state.order : undefined;
            resourceInputs["protocols"] = state ? state.protocols : undefined;
            resourceInputs["rank"] = state ? state.rank : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["urlCategories"] = state ? state.urlCategories : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
            resourceInputs["zpaAppSegments"] = state ? state.zpaAppSegments : undefined;
        } else {
            const args = argsOrState as SandboxRulesArgs | undefined;
            if ((!args || args.fileTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileTypes'");
            }
            if ((!args || args.order === undefined) && !opts.urn) {
                throw new Error("Missing required property 'order'");
            }
            if ((!args || args.protocols === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocols'");
            }
            resourceInputs["baPolicyCategories"] = args ? args.baPolicyCategories : undefined;
            resourceInputs["baRuleAction"] = args ? args.baRuleAction : undefined;
            resourceInputs["byThreatScore"] = args ? args.byThreatScore : undefined;
            resourceInputs["departments"] = args ? args.departments : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["fileTypes"] = args ? args.fileTypes : undefined;
            resourceInputs["firstTimeEnable"] = args ? args.firstTimeEnable : undefined;
            resourceInputs["firstTimeOperation"] = args ? args.firstTimeOperation : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["locationGroups"] = args ? args.locationGroups : undefined;
            resourceInputs["locations"] = args ? args.locations : undefined;
            resourceInputs["mlActionEnabled"] = args ? args.mlActionEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["order"] = args ? args.order : undefined;
            resourceInputs["protocols"] = args ? args.protocols : undefined;
            resourceInputs["rank"] = args ? args.rank : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["urlCategories"] = args ? args.urlCategories : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["zpaAppSegments"] = args ? args.zpaAppSegments : undefined;
            resourceInputs["ruleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SandboxRules.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SandboxRules resources.
 */
export interface SandboxRulesState {
    /**
     * The threat categories to which the rule applies
     */
    baPolicyCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`
     */
    baRuleAction?: pulumi.Input<string>;
    /**
     * (Integer)
     */
    byThreatScore?: pulumi.Input<number>;
    /**
     * (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
     */
    departments?: pulumi.Input<inputs.SandboxRulesDepartments>;
    /**
     * (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.
     */
    fileTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.
     */
    firstTimeEnable?: pulumi.Input<boolean>;
    /**
     * (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`
     */
    firstTimeOperation?: pulumi.Input<string>;
    /**
     * (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
     */
    groups?: pulumi.Input<inputs.SandboxRulesGroups>;
    /**
     * (List of Objects) Labels that are applicable to the rule.
     */
    labels?: pulumi.Input<inputs.SandboxRulesLabels>;
    /**
     * (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
     */
    locationGroups?: pulumi.Input<inputs.SandboxRulesLocationGroups>;
    /**
     * (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
     */
    locations?: pulumi.Input<inputs.SandboxRulesLocations>;
    /**
     * (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.
     */
    mlActionEnabled?: pulumi.Input<boolean>;
    /**
     * The File Type Control policy rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
     */
    order?: pulumi.Input<number>;
    /**
     * Protocol for the given rule. This field is not applicable to the Lite API.
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.
     */
    rank?: pulumi.Input<number>;
    ruleId?: pulumi.Input<number>;
    /**
     * (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`
     */
    state?: pulumi.Input<string>;
    /**
     * (List of Strings) The list of URL categories to which the DLP policy rule must be applied.
     */
    urlCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
     */
    users?: pulumi.Input<inputs.SandboxRulesUsers>;
    /**
     * (List of Objects) The ZPA application segments to which the rule applies
     */
    zpaAppSegments?: pulumi.Input<pulumi.Input<inputs.SandboxRulesZpaAppSegment>[]>;
}

/**
 * The set of arguments for constructing a SandboxRules resource.
 */
export interface SandboxRulesArgs {
    /**
     * The threat categories to which the rule applies
     */
    baPolicyCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`
     */
    baRuleAction?: pulumi.Input<string>;
    /**
     * (Integer)
     */
    byThreatScore?: pulumi.Input<number>;
    /**
     * (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
     */
    departments?: pulumi.Input<inputs.SandboxRulesDepartments>;
    /**
     * (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.
     */
    fileTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.
     */
    firstTimeEnable?: pulumi.Input<boolean>;
    /**
     * (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`
     */
    firstTimeOperation?: pulumi.Input<string>;
    /**
     * (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
     */
    groups?: pulumi.Input<inputs.SandboxRulesGroups>;
    /**
     * (List of Objects) Labels that are applicable to the rule.
     */
    labels?: pulumi.Input<inputs.SandboxRulesLabels>;
    /**
     * (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
     */
    locationGroups?: pulumi.Input<inputs.SandboxRulesLocationGroups>;
    /**
     * (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
     */
    locations?: pulumi.Input<inputs.SandboxRulesLocations>;
    /**
     * (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.
     */
    mlActionEnabled?: pulumi.Input<boolean>;
    /**
     * The File Type Control policy rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
     */
    order: pulumi.Input<number>;
    /**
     * Protocol for the given rule. This field is not applicable to the Lite API.
     */
    protocols: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.
     */
    rank?: pulumi.Input<number>;
    /**
     * (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`
     */
    state?: pulumi.Input<string>;
    /**
     * (List of Strings) The list of URL categories to which the DLP policy rule must be applied.
     */
    urlCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
     */
    users?: pulumi.Input<inputs.SandboxRulesUsers>;
    /**
     * (List of Objects) The ZPA application segments to which the rule applies
     */
    zpaAppSegments?: pulumi.Input<pulumi.Input<inputs.SandboxRulesZpaAppSegment>[]>;
}
