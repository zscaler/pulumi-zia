// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zia/traffic-forwarding-0#/orgProvisioning/ipGreTunnelInfo-get)
 * * [API documentation](https://help.zscaler.com/zia/traffic-forwarding-0#/orgProvisioning/ipGreTunnelInfo-get)
 *
 * The **zia_traffic_forwarding_gre_tunnel_info** data source to get information about provisioned GRE tunnel information created in the Zscaler Internet Access portal.
 *
 * ## Example Usage
 */
export function getTrafficForwardingGRETunnelInfo(args?: GetTrafficForwardingGRETunnelInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetTrafficForwardingGRETunnelInfoResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getTrafficForwardingGRETunnelInfo:getTrafficForwardingGRETunnelInfo", {
        "greEnabled": args.greEnabled,
        "ipAddress": args.ipAddress,
    }, opts);
}

/**
 * A collection of arguments for invoking getTrafficForwardingGRETunnelInfo.
 */
export interface GetTrafficForwardingGRETunnelInfoArgs {
    /**
     * Displays only ip addresses with GRE tunnel enabled
     *
     * > **NOTE** `ipAddress` is the public IP address (Static IP) associated with the GRE Tunnel
     */
    greEnabled?: boolean;
    /**
     * Filter based on an IP address range.
     */
    ipAddress?: string;
}

/**
 * A collection of values returned by getTrafficForwardingGRETunnelInfo.
 */
export interface GetTrafficForwardingGRETunnelInfoResult {
    readonly greEnabled?: boolean;
    /**
     * (String)
     */
    readonly greRangePrimary: string;
    /**
     * (String)
     */
    readonly greRangeSecondary: string;
    /**
     * (String) The start of the internal IP address in /29 CIDR range
     */
    readonly greTunnelIp: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipAddress?: string;
    /**
     * (String)
     */
    readonly primaryGw: string;
    /**
     * (String)
     */
    readonly secondaryGw: string;
    /**
     * (Number)
     */
    readonly tunId: number;
}
/**
 * * [Official documentation](https://help.zscaler.com/zia/traffic-forwarding-0#/orgProvisioning/ipGreTunnelInfo-get)
 * * [API documentation](https://help.zscaler.com/zia/traffic-forwarding-0#/orgProvisioning/ipGreTunnelInfo-get)
 *
 * The **zia_traffic_forwarding_gre_tunnel_info** data source to get information about provisioned GRE tunnel information created in the Zscaler Internet Access portal.
 *
 * ## Example Usage
 */
export function getTrafficForwardingGRETunnelInfoOutput(args?: GetTrafficForwardingGRETunnelInfoOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTrafficForwardingGRETunnelInfoResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zia:index/getTrafficForwardingGRETunnelInfo:getTrafficForwardingGRETunnelInfo", {
        "greEnabled": args.greEnabled,
        "ipAddress": args.ipAddress,
    }, opts);
}

/**
 * A collection of arguments for invoking getTrafficForwardingGRETunnelInfo.
 */
export interface GetTrafficForwardingGRETunnelInfoOutputArgs {
    /**
     * Displays only ip addresses with GRE tunnel enabled
     *
     * > **NOTE** `ipAddress` is the public IP address (Static IP) associated with the GRE Tunnel
     */
    greEnabled?: pulumi.Input<boolean>;
    /**
     * Filter based on an IP address range.
     */
    ipAddress?: pulumi.Input<string>;
}
