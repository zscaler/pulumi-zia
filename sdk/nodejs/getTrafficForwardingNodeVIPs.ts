// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the **zia_traffic_forwarding_public_node_vips** data source to retrieve a paginated list of virtual IP addresses (VIPs) available in the Zscaler cloud.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@pulumi/zia";
 *
 * const yvr1 = zia.getTrafficForwardingNodeVIPs({
 *     datacenter: "YVR1",
 * });
 * export const ziaTrafficForwardingPublicNodeVipsYvr1 = yvr1;
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getTrafficForwardingNodeVIPs(args?: GetTrafficForwardingNodeVIPsArgs, opts?: pulumi.InvokeOptions): Promise<GetTrafficForwardingNodeVIPsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getTrafficForwardingNodeVIPs:getTrafficForwardingNodeVIPs", {
        "datacenter": args.datacenter,
    }, opts);
}

/**
 * A collection of arguments for invoking getTrafficForwardingNodeVIPs.
 */
export interface GetTrafficForwardingNodeVIPsArgs {
    /**
     * Data-center Name
     */
    datacenter?: string;
}

/**
 * A collection of values returned by getTrafficForwardingNodeVIPs.
 */
export interface GetTrafficForwardingNodeVIPsResult {
    readonly city: string;
    readonly cloudName: string;
    readonly datacenter?: string;
    readonly greDomainName: string;
    readonly greIps: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    readonly pacDomainName: string;
    readonly pacIps: string[];
    readonly region: string;
    readonly vpnDomainName: string;
    readonly vpnIps: string[];
}
/**
 * Use the **zia_traffic_forwarding_public_node_vips** data source to retrieve a paginated list of virtual IP addresses (VIPs) available in the Zscaler cloud.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@pulumi/zia";
 *
 * const yvr1 = zia.getTrafficForwardingNodeVIPs({
 *     datacenter: "YVR1",
 * });
 * export const ziaTrafficForwardingPublicNodeVipsYvr1 = yvr1;
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getTrafficForwardingNodeVIPsOutput(args?: GetTrafficForwardingNodeVIPsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTrafficForwardingNodeVIPsResult> {
    return pulumi.output(args).apply((a: any) => getTrafficForwardingNodeVIPs(a, opts))
}

/**
 * A collection of arguments for invoking getTrafficForwardingNodeVIPs.
 */
export interface GetTrafficForwardingNodeVIPsOutputArgs {
    /**
     * Data-center Name
     */
    datacenter?: pulumi.Input<string>;
}
