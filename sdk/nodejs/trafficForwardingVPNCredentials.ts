// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **zia_traffic_forwarding_vpn_credentials** creates and manages VPN credentials that can be associated to locations. VPN is one way to route traffic from customer locations to the cloud. Site-to-site IPSec VPN credentials can be identified by the cloud through one of the following methods:
 *
 * * Common Name (CN) of IPSec Certificate
 * * VPN User FQDN - requires VPN_SITE_TO_SITE subscription
 * * VPN IP Address - requires VPN_SITE_TO_SITE subscription
 * * Extended Authentication (XAUTH) or hosted mobile UserID - requires VPN_MOBILE subscription
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@bdzscaler/pulumi-zia";
 *
 * //######## PASSWORDS IN THIS FILE ARE FAKE AND NOT USED IN PRODUCTION SYSTEMS #########
 * // ZIA Traffic Forwarding - VPN Credentials (UFQDN)
 * const example = new zia.TrafficForwardingVPNCredentials("example", {
 *     comments: "Example",
 *     fqdn: "sjc-1-37@acme.com",
 *     preSharedKey: "*********************",
 *     type: "UFQDN",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@bdzscaler/pulumi-zia";
 *
 * const exampleTrafficForwardingStaticIP = new zia.TrafficForwardingStaticIP("exampleTrafficForwardingStaticIP", {
 *     ipAddress: "1.1.1.1",
 *     routableIp: true,
 *     comment: "Example",
 *     geoOverride: true,
 *     latitude: -36.848461,
 *     longitude: 174.763336,
 * });
 * // ZIA Traffic Forwarding - VPN Credentials (IP)
 * //######## PASSWORDS IN THIS FILE ARE FAKE AND NOT USED IN PRODUCTION SYSTEMS #########
 * const exampleTrafficForwardingVPNCredentials = new zia.TrafficForwardingVPNCredentials("exampleTrafficForwardingVPNCredentials", {
 *     type: "IP",
 *     ipAddress: exampleTrafficForwardingStaticIP.ipAddress,
 *     comments: "Example",
 *     preSharedKey: "*********************",
 * }, {
 *     dependsOn: [exampleTrafficForwardingStaticIP],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * > **NOTE** For VPN Credentials of Type `IP` a static IP resource must be created first.
 *
 * ## Import
 *
 * Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
 *
 * Visit
 *
 * **zia_traffic_forwarding_vpn_credentials** can be imported by using one of the following prefixes as the import ID:
 *
 * * `'IP'` - Imports all VPN Credentials of type IP
 *
 * ```sh
 * $ pulumi import zia:index/trafficForwardingVPNCredentials:TrafficForwardingVPNCredentials example 'IP'
 * ```
 *
 * * `'UFQDN'` - Imports all VPN Credentials of type UFQDN
 *
 * ```sh
 * $ pulumi import zia:index/trafficForwardingVPNCredentials:TrafficForwardingVPNCredentials this 'UFQDN'
 * ```
 *
 * * `UFQDN'` - Imports a VPN Credentials of type UFQDN containing a specific UFQDN address
 *
 * ```sh
 * $ pulumi import zia:index/trafficForwardingVPNCredentials:TrafficForwardingVPNCredentials example 'testvpn@example.com'
 * ```
 *
 * * `IP Address'` - Imports a VPN Credentials of type IP containing a specific IP address
 *
 * ```sh
 * $ pulumi import zia:index/trafficForwardingVPNCredentials:TrafficForwardingVPNCredentials example '1.1.1.1'
 * ```
 */
export class TrafficForwardingVPNCredentials extends pulumi.CustomResource {
    /**
     * Get an existing TrafficForwardingVPNCredentials resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrafficForwardingVPNCredentialsState, opts?: pulumi.CustomResourceOptions): TrafficForwardingVPNCredentials {
        return new TrafficForwardingVPNCredentials(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:index/trafficForwardingVPNCredentials:TrafficForwardingVPNCredentials';

    /**
     * Returns true if the given object is an instance of TrafficForwardingVPNCredentials.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrafficForwardingVPNCredentials {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrafficForwardingVPNCredentials.__pulumiType;
    }

    /**
     * Additional information about this VPN credential.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.
     */
    public readonly fqdn!: pulumi.Output<string | undefined>;
    /**
     * IP Address for the VON credentials. The parameter becomes required if `type = IP`
     *
     * !> **WARNING:** The `preSharedKey` parameter is ommitted from the output for security reasons.
     */
    public readonly ipAddress!: pulumi.Output<string | undefined>;
    /**
     * Pre-shared key. This is a required field for UFQDN and IP auth type.
     */
    public readonly preSharedKey!: pulumi.Output<string | undefined>;
    /**
     * VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created. The supported values are: `UFQDN` and `IP`
     */
    public readonly type!: pulumi.Output<string | undefined>;
    public /*out*/ readonly vpnId!: pulumi.Output<number>;

    /**
     * Create a TrafficForwardingVPNCredentials resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TrafficForwardingVPNCredentialsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrafficForwardingVPNCredentialsArgs | TrafficForwardingVPNCredentialsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TrafficForwardingVPNCredentialsState | undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["fqdn"] = state ? state.fqdn : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["preSharedKey"] = state ? state.preSharedKey : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vpnId"] = state ? state.vpnId : undefined;
        } else {
            const args = argsOrState as TrafficForwardingVPNCredentialsArgs | undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["fqdn"] = args ? args.fqdn : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["preSharedKey"] = args?.preSharedKey ? pulumi.secret(args.preSharedKey) : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vpnId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["preSharedKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(TrafficForwardingVPNCredentials.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TrafficForwardingVPNCredentials resources.
 */
export interface TrafficForwardingVPNCredentialsState {
    /**
     * Additional information about this VPN credential.
     */
    comments?: pulumi.Input<string>;
    /**
     * Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * IP Address for the VON credentials. The parameter becomes required if `type = IP`
     *
     * !> **WARNING:** The `preSharedKey` parameter is ommitted from the output for security reasons.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Pre-shared key. This is a required field for UFQDN and IP auth type.
     */
    preSharedKey?: pulumi.Input<string>;
    /**
     * VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created. The supported values are: `UFQDN` and `IP`
     */
    type?: pulumi.Input<string>;
    vpnId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TrafficForwardingVPNCredentials resource.
 */
export interface TrafficForwardingVPNCredentialsArgs {
    /**
     * Additional information about this VPN credential.
     */
    comments?: pulumi.Input<string>;
    /**
     * Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * IP Address for the VON credentials. The parameter becomes required if `type = IP`
     *
     * !> **WARNING:** The `preSharedKey` parameter is ommitted from the output for security reasons.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Pre-shared key. This is a required field for UFQDN and IP auth type.
     */
    preSharedKey?: pulumi.Input<string>;
    /**
     * VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created. The supported values are: `UFQDN` and `IP`
     */
    type?: pulumi.Input<string>;
}
