// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zia/about-file-type-control)
 * * [API documentation](https://help.zscaler.com/zia/file-type-control-policy#/fileTypeRules-post)
 *
 * Use the **zia_file_type_control_rules** data source to retrieves File Type Control rules.
 *
 * ## Example Usage
 */
export function getFileTypeControlRules(args?: GetFileTypeControlRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetFileTypeControlRulesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getFileTypeControlRules:getFileTypeControlRules", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getFileTypeControlRules.
 */
export interface GetFileTypeControlRulesArgs {
    id?: number;
    name?: string;
}

/**
 * A collection of values returned by getFileTypeControlRules.
 */
export interface GetFileTypeControlRulesResult {
    readonly accessControl: string;
    readonly activeContent: boolean;
    readonly capturePcap: boolean;
    readonly cloudApplications: string[];
    readonly departments: outputs.GetFileTypeControlRulesDepartment[];
    readonly description: string;
    readonly deviceGroups: outputs.GetFileTypeControlRulesDeviceGroup[];
    readonly deviceTrustLevels: string[];
    readonly devices: outputs.GetFileTypeControlRulesDevice[];
    readonly fileTypes: string[];
    readonly filteringAction: string;
    readonly groups: outputs.GetFileTypeControlRulesGroup[];
    readonly id: number;
    readonly labels: outputs.GetFileTypeControlRulesLabel[];
    readonly lastModifiedBies: outputs.GetFileTypeControlRulesLastModifiedBy[];
    readonly lastModifiedTime: number;
    readonly locationGroups: outputs.GetFileTypeControlRulesLocationGroup[];
    readonly locations: outputs.GetFileTypeControlRulesLocation[];
    readonly maxSize: number;
    readonly minSize: number;
    readonly name: string;
    readonly operation: string;
    readonly order: number;
    readonly protocols: string[];
    readonly rank: number;
    readonly sizeQuota: number;
    readonly state: string;
    readonly timeQuota: number;
    readonly timeWindows: outputs.GetFileTypeControlRulesTimeWindow[];
    readonly unscannable: boolean;
    readonly urlCategories: string[];
    readonly users: outputs.GetFileTypeControlRulesUser[];
    readonly zpaAppSegments: outputs.GetFileTypeControlRulesZpaAppSegment[];
}
/**
 * * [Official documentation](https://help.zscaler.com/zia/about-file-type-control)
 * * [API documentation](https://help.zscaler.com/zia/file-type-control-policy#/fileTypeRules-post)
 *
 * Use the **zia_file_type_control_rules** data source to retrieves File Type Control rules.
 *
 * ## Example Usage
 */
export function getFileTypeControlRulesOutput(args?: GetFileTypeControlRulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFileTypeControlRulesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zia:index/getFileTypeControlRules:getFileTypeControlRules", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getFileTypeControlRules.
 */
export interface GetFileTypeControlRulesOutputArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
