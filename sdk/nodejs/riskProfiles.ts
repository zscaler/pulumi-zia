// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zia/about-cloud-application-risk-profile)
 * * [API documentation](https://help.zscaler.com/zia/cloud-applications#/riskProfiles-get)
 *
 * Use the **zia_risk_profiles** resource allows the creation and management of cloud application risk profile in the Zscaler Internet Access cloud or via the API.
 * See [About Cloud Application Risk Profile](https://help.zscaler.com/zia/about-cloud-application-risk-profile) for more details.
 *
 * ## Example Usage
 *
 * ### Create A Risk Profile
 *
 * ## Import
 *
 * Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
 *
 * Visit
 *
 * **zia_risk_profiles** can be imported by using `<PROFILE_ID>` or `<PROFILE_NAME>` as the import ID.
 *
 * For example:
 *
 * ```sh
 * $ pulumi import zia:index/riskProfiles:RiskProfiles example <profile_id>
 * ```
 *
 * or
 *
 * ```sh
 * $ pulumi import zia:index/riskProfiles:RiskProfiles example <profile_name>
 * ```
 */
export class RiskProfiles extends pulumi.CustomResource {
    /**
     * Get an existing RiskProfiles resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RiskProfilesState, opts?: pulumi.CustomResourceOptions): RiskProfiles {
        return new RiskProfiles(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:index/riskProfiles:RiskProfiles';

    /**
     * Returns true if the given object is an instance of RiskProfiles.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RiskProfiles {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RiskProfiles.__pulumiType;
    }

    /**
     * (String) Filters based on support for administrative logging. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly adminAuditLogs!: pulumi.Output<string | undefined>;
    /**
     * (Optional) Filters based on supported certifications.
     */
    public readonly certifications!: pulumi.Output<string[] | undefined>;
    /**
     * (Set) List of custom tags to be included or excluded for the profile.
     */
    public readonly customTags!: pulumi.Output<outputs.RiskProfilesCustomTags | undefined>;
    /**
     * (String) Filters based on history of data breaches. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly dataBreach!: pulumi.Output<string | undefined>;
    /**
     * (Optional) Filters based on encryption of data in transit.
     */
    public readonly dataEncryptionInTransits!: pulumi.Output<string[] | undefined>;
    /**
     * (String) Filters based on DNS CAA policy implementation.
     */
    public readonly dnsCaaPolicy!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on DMARC support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly domainBasedMessageAuth!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on DKIM authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly domainKeysIdentifiedMail!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on anonymous access support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly evasive!: pulumi.Output<string | undefined>;
    /**
     * (Int) Indicates if the certificates are included or not.
     */
    public readonly excludeCertificates!: pulumi.Output<number | undefined>;
    /**
     * (String) Filters based on file sharing capability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly fileSharing!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on HTTP security headers support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly httpSecurityHeaders!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on content malware scanning. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly malwareScanningForContent!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on multi-factor authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly mfaSupport!: pulumi.Output<string | undefined>;
    /**
     * Cloud application risk profile name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (String) Filters based on password strength policy. Supported values: `ANY`, `GOOD`, `POOR`, `UN_KNOWN`.
     */
    public readonly passwordStrength!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters applications based on questionable legal terms. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly poorItemsOfService!: pulumi.Output<string | undefined>;
    /**
     * Unique identifier for the risk profile.
     */
    public /*out*/ readonly profileId!: pulumi.Output<number>;
    /**
     * (String) Risk profile type. Supported value: `CLOUD_APPLICATIONS`. Default is `CLOUD_APPLICATIONS`.
     */
    public readonly profileType!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on remote screen sharing support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly remoteScreenSharing!: pulumi.Output<string | undefined>;
    /**
     * (Optional) Filters based on risk index thresholds.
     */
    public readonly riskIndices!: pulumi.Output<number[] | undefined>;
    /**
     * (String) Filters based on SPF authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly senderPolicyFramework!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on IP restriction support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly sourceIpRestrictions!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on SSL certificate key size. Supported values: `ANY`, `UN_KNOWN`, `BITS_1024`, `BITS_2048`, `BITS_256`, `BITS_3072`, `BITS_384`, `BITS_4096`, `BITS_8192`.
     */
    public readonly sslCertKeySize!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on SSL certificate validity period. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly sslCertValidity!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on use of pinned SSL certificates. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly sslPinned!: pulumi.Output<string | undefined>;
    /**
     * (String) Status of the applications. Supported values: `UN_SANCTIONED`, `SANCTIONED`, `ANY`.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on Web Application Firewall (WAF) support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly supportForWaf!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on published CVE vulnerabilities. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly vulnerability!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on vulnerability disclosure policy. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly vulnerabilityDisclosure!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on Heartbleed vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly vulnerableToHeartBleed!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on Logjam vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly vulnerableToLogJam!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on POODLE vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly vulnerableToPoodle!: pulumi.Output<string | undefined>;
    /**
     * (String) Filters based on weak cipher usage. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    public readonly weakCipherSupport!: pulumi.Output<string | undefined>;

    /**
     * Create a RiskProfiles resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RiskProfilesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RiskProfilesArgs | RiskProfilesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RiskProfilesState | undefined;
            resourceInputs["adminAuditLogs"] = state ? state.adminAuditLogs : undefined;
            resourceInputs["certifications"] = state ? state.certifications : undefined;
            resourceInputs["customTags"] = state ? state.customTags : undefined;
            resourceInputs["dataBreach"] = state ? state.dataBreach : undefined;
            resourceInputs["dataEncryptionInTransits"] = state ? state.dataEncryptionInTransits : undefined;
            resourceInputs["dnsCaaPolicy"] = state ? state.dnsCaaPolicy : undefined;
            resourceInputs["domainBasedMessageAuth"] = state ? state.domainBasedMessageAuth : undefined;
            resourceInputs["domainKeysIdentifiedMail"] = state ? state.domainKeysIdentifiedMail : undefined;
            resourceInputs["evasive"] = state ? state.evasive : undefined;
            resourceInputs["excludeCertificates"] = state ? state.excludeCertificates : undefined;
            resourceInputs["fileSharing"] = state ? state.fileSharing : undefined;
            resourceInputs["httpSecurityHeaders"] = state ? state.httpSecurityHeaders : undefined;
            resourceInputs["malwareScanningForContent"] = state ? state.malwareScanningForContent : undefined;
            resourceInputs["mfaSupport"] = state ? state.mfaSupport : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passwordStrength"] = state ? state.passwordStrength : undefined;
            resourceInputs["poorItemsOfService"] = state ? state.poorItemsOfService : undefined;
            resourceInputs["profileId"] = state ? state.profileId : undefined;
            resourceInputs["profileType"] = state ? state.profileType : undefined;
            resourceInputs["remoteScreenSharing"] = state ? state.remoteScreenSharing : undefined;
            resourceInputs["riskIndices"] = state ? state.riskIndices : undefined;
            resourceInputs["senderPolicyFramework"] = state ? state.senderPolicyFramework : undefined;
            resourceInputs["sourceIpRestrictions"] = state ? state.sourceIpRestrictions : undefined;
            resourceInputs["sslCertKeySize"] = state ? state.sslCertKeySize : undefined;
            resourceInputs["sslCertValidity"] = state ? state.sslCertValidity : undefined;
            resourceInputs["sslPinned"] = state ? state.sslPinned : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["supportForWaf"] = state ? state.supportForWaf : undefined;
            resourceInputs["vulnerability"] = state ? state.vulnerability : undefined;
            resourceInputs["vulnerabilityDisclosure"] = state ? state.vulnerabilityDisclosure : undefined;
            resourceInputs["vulnerableToHeartBleed"] = state ? state.vulnerableToHeartBleed : undefined;
            resourceInputs["vulnerableToLogJam"] = state ? state.vulnerableToLogJam : undefined;
            resourceInputs["vulnerableToPoodle"] = state ? state.vulnerableToPoodle : undefined;
            resourceInputs["weakCipherSupport"] = state ? state.weakCipherSupport : undefined;
        } else {
            const args = argsOrState as RiskProfilesArgs | undefined;
            resourceInputs["adminAuditLogs"] = args ? args.adminAuditLogs : undefined;
            resourceInputs["certifications"] = args ? args.certifications : undefined;
            resourceInputs["customTags"] = args ? args.customTags : undefined;
            resourceInputs["dataBreach"] = args ? args.dataBreach : undefined;
            resourceInputs["dataEncryptionInTransits"] = args ? args.dataEncryptionInTransits : undefined;
            resourceInputs["dnsCaaPolicy"] = args ? args.dnsCaaPolicy : undefined;
            resourceInputs["domainBasedMessageAuth"] = args ? args.domainBasedMessageAuth : undefined;
            resourceInputs["domainKeysIdentifiedMail"] = args ? args.domainKeysIdentifiedMail : undefined;
            resourceInputs["evasive"] = args ? args.evasive : undefined;
            resourceInputs["excludeCertificates"] = args ? args.excludeCertificates : undefined;
            resourceInputs["fileSharing"] = args ? args.fileSharing : undefined;
            resourceInputs["httpSecurityHeaders"] = args ? args.httpSecurityHeaders : undefined;
            resourceInputs["malwareScanningForContent"] = args ? args.malwareScanningForContent : undefined;
            resourceInputs["mfaSupport"] = args ? args.mfaSupport : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passwordStrength"] = args ? args.passwordStrength : undefined;
            resourceInputs["poorItemsOfService"] = args ? args.poorItemsOfService : undefined;
            resourceInputs["profileType"] = args ? args.profileType : undefined;
            resourceInputs["remoteScreenSharing"] = args ? args.remoteScreenSharing : undefined;
            resourceInputs["riskIndices"] = args ? args.riskIndices : undefined;
            resourceInputs["senderPolicyFramework"] = args ? args.senderPolicyFramework : undefined;
            resourceInputs["sourceIpRestrictions"] = args ? args.sourceIpRestrictions : undefined;
            resourceInputs["sslCertKeySize"] = args ? args.sslCertKeySize : undefined;
            resourceInputs["sslCertValidity"] = args ? args.sslCertValidity : undefined;
            resourceInputs["sslPinned"] = args ? args.sslPinned : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["supportForWaf"] = args ? args.supportForWaf : undefined;
            resourceInputs["vulnerability"] = args ? args.vulnerability : undefined;
            resourceInputs["vulnerabilityDisclosure"] = args ? args.vulnerabilityDisclosure : undefined;
            resourceInputs["vulnerableToHeartBleed"] = args ? args.vulnerableToHeartBleed : undefined;
            resourceInputs["vulnerableToLogJam"] = args ? args.vulnerableToLogJam : undefined;
            resourceInputs["vulnerableToPoodle"] = args ? args.vulnerableToPoodle : undefined;
            resourceInputs["weakCipherSupport"] = args ? args.weakCipherSupport : undefined;
            resourceInputs["profileId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RiskProfiles.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RiskProfiles resources.
 */
export interface RiskProfilesState {
    /**
     * (String) Filters based on support for administrative logging. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    adminAuditLogs?: pulumi.Input<string>;
    /**
     * (Optional) Filters based on supported certifications.
     */
    certifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Set) List of custom tags to be included or excluded for the profile.
     */
    customTags?: pulumi.Input<inputs.RiskProfilesCustomTags>;
    /**
     * (String) Filters based on history of data breaches. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    dataBreach?: pulumi.Input<string>;
    /**
     * (Optional) Filters based on encryption of data in transit.
     */
    dataEncryptionInTransits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (String) Filters based on DNS CAA policy implementation.
     */
    dnsCaaPolicy?: pulumi.Input<string>;
    /**
     * (String) Filters based on DMARC support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    domainBasedMessageAuth?: pulumi.Input<string>;
    /**
     * (String) Filters based on DKIM authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    domainKeysIdentifiedMail?: pulumi.Input<string>;
    /**
     * (String) Filters based on anonymous access support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    evasive?: pulumi.Input<string>;
    /**
     * (Int) Indicates if the certificates are included or not.
     */
    excludeCertificates?: pulumi.Input<number>;
    /**
     * (String) Filters based on file sharing capability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    fileSharing?: pulumi.Input<string>;
    /**
     * (String) Filters based on HTTP security headers support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    httpSecurityHeaders?: pulumi.Input<string>;
    /**
     * (String) Filters based on content malware scanning. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    malwareScanningForContent?: pulumi.Input<string>;
    /**
     * (String) Filters based on multi-factor authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    mfaSupport?: pulumi.Input<string>;
    /**
     * Cloud application risk profile name.
     */
    name?: pulumi.Input<string>;
    /**
     * (String) Filters based on password strength policy. Supported values: `ANY`, `GOOD`, `POOR`, `UN_KNOWN`.
     */
    passwordStrength?: pulumi.Input<string>;
    /**
     * (String) Filters applications based on questionable legal terms. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    poorItemsOfService?: pulumi.Input<string>;
    /**
     * Unique identifier for the risk profile.
     */
    profileId?: pulumi.Input<number>;
    /**
     * (String) Risk profile type. Supported value: `CLOUD_APPLICATIONS`. Default is `CLOUD_APPLICATIONS`.
     */
    profileType?: pulumi.Input<string>;
    /**
     * (String) Filters based on remote screen sharing support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    remoteScreenSharing?: pulumi.Input<string>;
    /**
     * (Optional) Filters based on risk index thresholds.
     */
    riskIndices?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * (String) Filters based on SPF authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    senderPolicyFramework?: pulumi.Input<string>;
    /**
     * (String) Filters based on IP restriction support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    sourceIpRestrictions?: pulumi.Input<string>;
    /**
     * (String) Filters based on SSL certificate key size. Supported values: `ANY`, `UN_KNOWN`, `BITS_1024`, `BITS_2048`, `BITS_256`, `BITS_3072`, `BITS_384`, `BITS_4096`, `BITS_8192`.
     */
    sslCertKeySize?: pulumi.Input<string>;
    /**
     * (String) Filters based on SSL certificate validity period. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    sslCertValidity?: pulumi.Input<string>;
    /**
     * (String) Filters based on use of pinned SSL certificates. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    sslPinned?: pulumi.Input<string>;
    /**
     * (String) Status of the applications. Supported values: `UN_SANCTIONED`, `SANCTIONED`, `ANY`.
     */
    status?: pulumi.Input<string>;
    /**
     * (String) Filters based on Web Application Firewall (WAF) support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    supportForWaf?: pulumi.Input<string>;
    /**
     * (String) Filters based on published CVE vulnerabilities. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    vulnerability?: pulumi.Input<string>;
    /**
     * (String) Filters based on vulnerability disclosure policy. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    vulnerabilityDisclosure?: pulumi.Input<string>;
    /**
     * (String) Filters based on Heartbleed vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    vulnerableToHeartBleed?: pulumi.Input<string>;
    /**
     * (String) Filters based on Logjam vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    vulnerableToLogJam?: pulumi.Input<string>;
    /**
     * (String) Filters based on POODLE vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    vulnerableToPoodle?: pulumi.Input<string>;
    /**
     * (String) Filters based on weak cipher usage. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    weakCipherSupport?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RiskProfiles resource.
 */
export interface RiskProfilesArgs {
    /**
     * (String) Filters based on support for administrative logging. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    adminAuditLogs?: pulumi.Input<string>;
    /**
     * (Optional) Filters based on supported certifications.
     */
    certifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Set) List of custom tags to be included or excluded for the profile.
     */
    customTags?: pulumi.Input<inputs.RiskProfilesCustomTags>;
    /**
     * (String) Filters based on history of data breaches. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    dataBreach?: pulumi.Input<string>;
    /**
     * (Optional) Filters based on encryption of data in transit.
     */
    dataEncryptionInTransits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (String) Filters based on DNS CAA policy implementation.
     */
    dnsCaaPolicy?: pulumi.Input<string>;
    /**
     * (String) Filters based on DMARC support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    domainBasedMessageAuth?: pulumi.Input<string>;
    /**
     * (String) Filters based on DKIM authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    domainKeysIdentifiedMail?: pulumi.Input<string>;
    /**
     * (String) Filters based on anonymous access support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    evasive?: pulumi.Input<string>;
    /**
     * (Int) Indicates if the certificates are included or not.
     */
    excludeCertificates?: pulumi.Input<number>;
    /**
     * (String) Filters based on file sharing capability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    fileSharing?: pulumi.Input<string>;
    /**
     * (String) Filters based on HTTP security headers support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    httpSecurityHeaders?: pulumi.Input<string>;
    /**
     * (String) Filters based on content malware scanning. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    malwareScanningForContent?: pulumi.Input<string>;
    /**
     * (String) Filters based on multi-factor authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    mfaSupport?: pulumi.Input<string>;
    /**
     * Cloud application risk profile name.
     */
    name?: pulumi.Input<string>;
    /**
     * (String) Filters based on password strength policy. Supported values: `ANY`, `GOOD`, `POOR`, `UN_KNOWN`.
     */
    passwordStrength?: pulumi.Input<string>;
    /**
     * (String) Filters applications based on questionable legal terms. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    poorItemsOfService?: pulumi.Input<string>;
    /**
     * (String) Risk profile type. Supported value: `CLOUD_APPLICATIONS`. Default is `CLOUD_APPLICATIONS`.
     */
    profileType?: pulumi.Input<string>;
    /**
     * (String) Filters based on remote screen sharing support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    remoteScreenSharing?: pulumi.Input<string>;
    /**
     * (Optional) Filters based on risk index thresholds.
     */
    riskIndices?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * (String) Filters based on SPF authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    senderPolicyFramework?: pulumi.Input<string>;
    /**
     * (String) Filters based on IP restriction support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    sourceIpRestrictions?: pulumi.Input<string>;
    /**
     * (String) Filters based on SSL certificate key size. Supported values: `ANY`, `UN_KNOWN`, `BITS_1024`, `BITS_2048`, `BITS_256`, `BITS_3072`, `BITS_384`, `BITS_4096`, `BITS_8192`.
     */
    sslCertKeySize?: pulumi.Input<string>;
    /**
     * (String) Filters based on SSL certificate validity period. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    sslCertValidity?: pulumi.Input<string>;
    /**
     * (String) Filters based on use of pinned SSL certificates. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    sslPinned?: pulumi.Input<string>;
    /**
     * (String) Status of the applications. Supported values: `UN_SANCTIONED`, `SANCTIONED`, `ANY`.
     */
    status?: pulumi.Input<string>;
    /**
     * (String) Filters based on Web Application Firewall (WAF) support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    supportForWaf?: pulumi.Input<string>;
    /**
     * (String) Filters based on published CVE vulnerabilities. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    vulnerability?: pulumi.Input<string>;
    /**
     * (String) Filters based on vulnerability disclosure policy. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    vulnerabilityDisclosure?: pulumi.Input<string>;
    /**
     * (String) Filters based on Heartbleed vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    vulnerableToHeartBleed?: pulumi.Input<string>;
    /**
     * (String) Filters based on Logjam vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    vulnerableToLogJam?: pulumi.Input<string>;
    /**
     * (String) Filters based on POODLE vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    vulnerableToPoodle?: pulumi.Input<string>;
    /**
     * (String) Filters based on weak cipher usage. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
     */
    weakCipherSupport?: pulumi.Input<string>;
}
