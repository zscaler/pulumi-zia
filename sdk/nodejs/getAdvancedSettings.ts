// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **zia_advanced_settings** Retrieves information about the advanced settings configured in the ZIA Admin Portal. To learn more see [Configuring Advanced Settings](https://help.zscaler.com/zia/configuring-advanced-settings)
 *
 * ## Example Usage
 */
export function getAdvancedSettings(opts?: pulumi.InvokeOptions): Promise<GetAdvancedSettingsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getAdvancedSettings:getAdvancedSettings", {
    }, opts);
}

/**
 * A collection of values returned by getAdvancedSettings.
 */
export interface GetAdvancedSettingsResult {
    readonly authBypassApps: string[];
    readonly authBypassUrlCategories: string[];
    readonly authBypassUrls: string[];
    readonly basicBypassApps: string[];
    readonly basicBypassUrlCategories: string[];
    readonly blockConnectHostSniMismatch: boolean;
    readonly blockDomainFrontingApps: string[];
    readonly blockDomainFrontingOnHostHeader: boolean;
    readonly blockHttpTunnelOnNonHttpPorts: boolean;
    readonly blockNonCompliantHttpRequestOnHttpPorts: boolean;
    readonly blockNonHttpOnHttpPortEnabled: boolean;
    readonly cascadeUrlFiltering: boolean;
    readonly digestAuthBypassApps: string[];
    readonly digestAuthBypassUrlCategories: string[];
    readonly digestAuthBypassUrls: string[];
    readonly dnsResolutionOnTransparentProxyApps: string[];
    readonly dnsResolutionOnTransparentProxyExemptApps: string[];
    readonly dnsResolutionOnTransparentProxyExemptUrlCategories: string[];
    readonly dnsResolutionOnTransparentProxyExemptUrls: string[];
    readonly dnsResolutionOnTransparentProxyIpv6Apps: string[];
    readonly dnsResolutionOnTransparentProxyIpv6ExemptApps: string[];
    readonly dnsResolutionOnTransparentProxyIpv6ExemptUrlCategories: string[];
    readonly dnsResolutionOnTransparentProxyIpv6UrlCategories: string[];
    readonly dnsResolutionOnTransparentProxyUrlCategories: string[];
    readonly dnsResolutionOnTransparentProxyUrls: string[];
    readonly domainFrontingBypassUrlCategories: string[];
    readonly dynamicUserRiskEnabled: boolean;
    readonly ecsForAllEnabled: boolean;
    readonly enableAdminRankAccess: boolean;
    readonly enableDnsResolutionOnTransparentProxy: boolean;
    readonly enableEvaluatePolicyOnGlobalSslBypass: boolean;
    readonly enableIpv6DnsOptimizationOnAllTransparentProxy: boolean;
    readonly enableIpv6DnsResolutionOnTransparentProxy: boolean;
    readonly enableOffice365: boolean;
    readonly enablePolicyForUnauthenticatedTraffic: boolean;
    readonly enforceSurrogateIpForWindowsApp: boolean;
    readonly http2NonbrowserTrafficEnabled: boolean;
    readonly httpRangeHeaderRemoveUrlCategories: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kerberosBypassApps: string[];
    readonly kerberosBypassUrlCategories: string[];
    readonly kerberosBypassUrls: string[];
    readonly logInternalIp: boolean;
    readonly preferSniOverConnHost: boolean;
    readonly preferSniOverConnHostApps: string[];
    readonly sipaXffHeaderEnabled: boolean;
    readonly sniDnsOptimizationBypassUrlCategories: string[];
    readonly trackHttpTunnelOnHttpPorts: boolean;
    readonly uiSessionTimeout: number;
    readonly zscalerClientConnector1AndPacRoadWarriorInFirewall: boolean;
}
/**
 * The **zia_advanced_settings** Retrieves information about the advanced settings configured in the ZIA Admin Portal. To learn more see [Configuring Advanced Settings](https://help.zscaler.com/zia/configuring-advanced-settings)
 *
 * ## Example Usage
 */
export function getAdvancedSettingsOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAdvancedSettingsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zia:index/getAdvancedSettings:getAdvancedSettings", {
    }, opts);
}
