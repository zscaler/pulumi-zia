// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use the **zia_dlp_web_rules** data source to get information about a ZIA DLP Web Rules in the Zscaler Internet Access cloud or via the API.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@pulumi/zia";
 *
 * const example = zia.getDLPWebRules({
 *     name: "Example",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getDLPWebRules(args?: GetDLPWebRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetDLPWebRulesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getDLPWebRules:getDLPWebRules", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getDLPWebRules.
 */
export interface GetDLPWebRulesArgs {
    /**
     * A unique identifier assigned to the workload group
     */
    id?: number;
    /**
     * The name of the workload group
     */
    name?: string;
}

/**
 * A collection of values returned by getDLPWebRules.
 */
export interface GetDLPWebRulesResult {
    readonly accessControl: string;
    readonly action: string;
    readonly auditors: outputs.GetDLPWebRulesAuditor[];
    readonly cloudApplications: string[];
    readonly departments: outputs.GetDLPWebRulesDepartment[];
    readonly description: string;
    readonly dlpDownloadScanEnabled: boolean;
    readonly dlpEngines: outputs.GetDLPWebRulesDlpEngine[];
    readonly excludedDepartments: outputs.GetDLPWebRulesExcludedDepartment[];
    readonly excludedGroups: outputs.GetDLPWebRulesExcludedGroup[];
    readonly excludedUsers: outputs.GetDLPWebRulesExcludedUser[];
    readonly externalAuditorEmail: string;
    readonly fileTypes: string[];
    readonly groups: outputs.GetDLPWebRulesGroup[];
    readonly icapServers: outputs.GetDLPWebRulesIcapServer[];
    readonly id?: number;
    readonly labels: outputs.GetDLPWebRulesLabel[];
    readonly lastModifiedBies: outputs.GetDLPWebRulesLastModifiedBy[];
    readonly lastModifiedTime: number;
    readonly locationGroups: outputs.GetDLPWebRulesLocationGroup[];
    readonly locations: outputs.GetDLPWebRulesLocation[];
    readonly matchOnly: boolean;
    readonly minSize: number;
    readonly name?: string;
    readonly notificationTemplates: outputs.GetDLPWebRulesNotificationTemplate[];
    readonly ocrEnabled: boolean;
    readonly order: number;
    readonly parentRule: number;
    readonly protocols: string[];
    readonly rank: number;
    readonly severity: string;
    readonly state: string;
    readonly subRules: string[];
    readonly timeWindows: outputs.GetDLPWebRulesTimeWindow[];
    readonly urlCategories: outputs.GetDLPWebRulesUrlCategory[];
    readonly users: outputs.GetDLPWebRulesUser[];
    readonly withoutContentInspection: boolean;
    readonly workloadGroups: outputs.GetDLPWebRulesWorkloadGroup[];
    readonly zccNotificationsEnabled: boolean;
    readonly zscalerIncidentReceiver: boolean;
}
/**
 * Use the **zia_dlp_web_rules** data source to get information about a ZIA DLP Web Rules in the Zscaler Internet Access cloud or via the API.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@pulumi/zia";
 *
 * const example = zia.getDLPWebRules({
 *     name: "Example",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getDLPWebRulesOutput(args?: GetDLPWebRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDLPWebRulesResult> {
    return pulumi.output(args).apply((a: any) => getDLPWebRules(a, opts))
}

/**
 * A collection of arguments for invoking getDLPWebRules.
 */
export interface GetDLPWebRulesOutputArgs {
    /**
     * A unique identifier assigned to the workload group
     */
    id?: pulumi.Input<number>;
    /**
     * The name of the workload group
     */
    name?: pulumi.Input<string>;
}
