// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetTrafficForwardingGRETunnel
    {
        /// <summary>
        /// The **zia_traffic_forwarding_gre_tunnel** data source to get information about provisioned GRE tunnel information created in the Zscaler Internet Access portal.
        /// 
        /// ## Example Usage
        /// 
        /// ### Retrieve GRE Tunnel By Source IP
        /// 
        /// ```hcl
        /// data "zia_traffic_forwarding_gre_tunnel" "example" {
        ///   source_ip = "1.1.1.1"
        /// }
        /// ```
        /// 
        /// ### Retrieve GRE Tunnel By ID
        /// 
        /// ```hcl
        /// data "zia_traffic_forwarding_gre_tunnel" "example" {
        ///   id = 1419395
        /// }
        /// ```
        /// </summary>
        public static Task<GetTrafficForwardingGRETunnelResult> InvokeAsync(GetTrafficForwardingGRETunnelArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTrafficForwardingGRETunnelResult>("zia:index/getTrafficForwardingGRETunnel:getTrafficForwardingGRETunnel", args ?? new GetTrafficForwardingGRETunnelArgs(), options.WithDefaults());

        /// <summary>
        /// The **zia_traffic_forwarding_gre_tunnel** data source to get information about provisioned GRE tunnel information created in the Zscaler Internet Access portal.
        /// 
        /// ## Example Usage
        /// 
        /// ### Retrieve GRE Tunnel By Source IP
        /// 
        /// ```hcl
        /// data "zia_traffic_forwarding_gre_tunnel" "example" {
        ///   source_ip = "1.1.1.1"
        /// }
        /// ```
        /// 
        /// ### Retrieve GRE Tunnel By ID
        /// 
        /// ```hcl
        /// data "zia_traffic_forwarding_gre_tunnel" "example" {
        ///   id = 1419395
        /// }
        /// ```
        /// </summary>
        public static Output<GetTrafficForwardingGRETunnelResult> Invoke(GetTrafficForwardingGRETunnelInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTrafficForwardingGRETunnelResult>("zia:index/getTrafficForwardingGRETunnel:getTrafficForwardingGRETunnel", args ?? new GetTrafficForwardingGRETunnelInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The **zia_traffic_forwarding_gre_tunnel** data source to get information about provisioned GRE tunnel information created in the Zscaler Internet Access portal.
        /// 
        /// ## Example Usage
        /// 
        /// ### Retrieve GRE Tunnel By Source IP
        /// 
        /// ```hcl
        /// data "zia_traffic_forwarding_gre_tunnel" "example" {
        ///   source_ip = "1.1.1.1"
        /// }
        /// ```
        /// 
        /// ### Retrieve GRE Tunnel By ID
        /// 
        /// ```hcl
        /// data "zia_traffic_forwarding_gre_tunnel" "example" {
        ///   id = 1419395
        /// }
        /// ```
        /// </summary>
        public static Output<GetTrafficForwardingGRETunnelResult> Invoke(GetTrafficForwardingGRETunnelInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTrafficForwardingGRETunnelResult>("zia:index/getTrafficForwardingGRETunnel:getTrafficForwardingGRETunnel", args ?? new GetTrafficForwardingGRETunnelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrafficForwardingGRETunnelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier of the static IP address that is associated to a GRE tunnel
        /// </summary>
        [Input("id")]
        public int? Id { get; set; }

        /// <summary>
        /// The source IP address of the GRE tunnel. This is typically a static IP address in the organization or SD-WAN.
        /// 
        /// &gt; **NOTE** `source_ip` is the public IP address (Static IP) associated with the GRE Tunnel
        /// </summary>
        [Input("sourceIp")]
        public string? SourceIp { get; set; }

        public GetTrafficForwardingGRETunnelArgs()
        {
        }
        public static new GetTrafficForwardingGRETunnelArgs Empty => new GetTrafficForwardingGRETunnelArgs();
    }

    public sealed class GetTrafficForwardingGRETunnelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier of the static IP address that is associated to a GRE tunnel
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        /// <summary>
        /// The source IP address of the GRE tunnel. This is typically a static IP address in the organization or SD-WAN.
        /// 
        /// &gt; **NOTE** `source_ip` is the public IP address (Static IP) associated with the GRE Tunnel
        /// </summary>
        [Input("sourceIp")]
        public Input<string>? SourceIp { get; set; }

        public GetTrafficForwardingGRETunnelInvokeArgs()
        {
        }
        public static new GetTrafficForwardingGRETunnelInvokeArgs Empty => new GetTrafficForwardingGRETunnelInvokeArgs();
    }


    [OutputType]
    public sealed class GetTrafficForwardingGRETunnelResult
    {
        /// <summary>
        /// (String) Additional information about this GRE tunnel
        /// </summary>
        public readonly string Comment;
        /// <summary>
        /// (Number) Unique identifer of the GRE virtual IP address (VIP)
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// (String) The start of the internal IP address in /29 CIDR range. Automatically set by the provider if `ip_unnumbered` is set to `false`.
        /// </summary>
        public readonly string InternalIpRange;
        /// <summary>
        /// (Boolean) This is required to support the automated SD-WAN provisioning of GRE tunnels, when set to true gre_tun_ip and gre_tun_id are set to null
        /// </summary>
        public readonly bool IpUnnumbered;
        public readonly int LastModificationTime;
        public readonly ImmutableArray<Outputs.GetTrafficForwardingGRETunnelLastModifiedByResult> LastModifiedBies;
        public readonly ImmutableArray<Outputs.GetTrafficForwardingGRETunnelManagedByResult> ManagedBies;
        /// <summary>
        /// **` (List) The primary destination data center and virtual IP address (VIP) of the GRE tunnel.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTrafficForwardingGRETunnelPrimaryDestVipResult> PrimaryDestVips;
        /// <summary>
        /// (List) The secondary destination data center and virtual IP address (VIP) of the GRE tunnel.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTrafficForwardingGRETunnelSecondaryDestVipResult> SecondaryDestVips;
        public readonly string? SourceIp;
        /// <summary>
        /// (Boolean) Restrict the data center virtual IP addresses (VIPs) only to those within the same country as the source IP address
        /// </summary>
        public readonly bool WithinCountry;

        [OutputConstructor]
        private GetTrafficForwardingGRETunnelResult(
            string comment,

            int? id,

            string internalIpRange,

            bool ipUnnumbered,

            int lastModificationTime,

            ImmutableArray<Outputs.GetTrafficForwardingGRETunnelLastModifiedByResult> lastModifiedBies,

            ImmutableArray<Outputs.GetTrafficForwardingGRETunnelManagedByResult> managedBies,

            ImmutableArray<Outputs.GetTrafficForwardingGRETunnelPrimaryDestVipResult> primaryDestVips,

            ImmutableArray<Outputs.GetTrafficForwardingGRETunnelSecondaryDestVipResult> secondaryDestVips,

            string? sourceIp,

            bool withinCountry)
        {
            Comment = comment;
            Id = id;
            InternalIpRange = internalIpRange;
            IpUnnumbered = ipUnnumbered;
            LastModificationTime = lastModificationTime;
            LastModifiedBies = lastModifiedBies;
            ManagedBies = managedBies;
            PrimaryDestVips = primaryDestVips;
            SecondaryDestVips = secondaryDestVips;
            SourceIp = sourceIp;
            WithinCountry = withinCountry;
        }
    }
}
