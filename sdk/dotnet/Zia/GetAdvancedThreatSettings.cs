// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetAdvancedThreatSettings
    {
        /// <summary>
        /// Use the **zia_advanced_threat_settings** data source to retrieve the advanced threat configuration settings in the ZIA Admin Portal. To learn more see [Advanced Threat Protection](https://help.zscaler.com/unified/configuring-security-exceptions-advanced-threat-protection-policy)
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// data "zia_advanced_threat_settings" "this" {}
        /// ```
        /// </summary>
        public static Task<GetAdvancedThreatSettingsResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAdvancedThreatSettingsResult>("zia:index/getAdvancedThreatSettings:getAdvancedThreatSettings", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Use the **zia_advanced_threat_settings** data source to retrieve the advanced threat configuration settings in the ZIA Admin Portal. To learn more see [Advanced Threat Protection](https://help.zscaler.com/unified/configuring-security-exceptions-advanced-threat-protection-policy)
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// data "zia_advanced_threat_settings" "this" {}
        /// ```
        /// </summary>
        public static Output<GetAdvancedThreatSettingsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAdvancedThreatSettingsResult>("zia:index/getAdvancedThreatSettings:getAdvancedThreatSettings", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Use the **zia_advanced_threat_settings** data source to retrieve the advanced threat configuration settings in the ZIA Admin Portal. To learn more see [Advanced Threat Protection](https://help.zscaler.com/unified/configuring-security-exceptions-advanced-threat-protection-policy)
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// data "zia_advanced_threat_settings" "this" {}
        /// ```
        /// </summary>
        public static Output<GetAdvancedThreatSettingsResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAdvancedThreatSettingsResult>("zia:index/getAdvancedThreatSettings:getAdvancedThreatSettings", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetAdvancedThreatSettingsResult
    {
        public readonly bool ActivexBlocked;
        public readonly bool ActivexCapture;
        public readonly bool AdSpywareSitesBlocked;
        public readonly bool AdSpywareSitesCapture;
        public readonly bool AlertForUnknownSuspiciousC2Traffic;
        public readonly bool AnonymizerBlocked;
        public readonly bool AnonymizerCapture;
        public readonly bool BitTorrentBlocked;
        public readonly bool BitTorrentCapture;
        public readonly bool BlockCountriesCapture;
        public readonly ImmutableArray<string> BlockedCountries;
        public readonly bool BrowserExploitsBlocked;
        public readonly bool BrowserExploitsCapture;
        public readonly bool CmdCtlServerBlocked;
        public readonly bool CmdCtlServerCapture;
        public readonly bool CmdCtlTrafficBlocked;
        public readonly bool CmdCtlTrafficCapture;
        public readonly bool CookieStealingBlocked;
        public readonly bool CookieStealingPcapEnabled;
        public readonly bool CryptoMiningBlocked;
        public readonly bool CryptoMiningCapture;
        public readonly bool DgaDomainsBlocked;
        public readonly bool DgaDomainsCapture;
        public readonly bool FileFormatVunerabilitesBlocked;
        public readonly bool FileFormatVunerabilitesCapture;
        public readonly bool GoogleTalkBlocked;
        public readonly bool GoogleTalkCapture;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool IrcTunnellingBlocked;
        public readonly bool IrcTunnellingCapture;
        public readonly bool KnownPhishingSitesBlocked;
        public readonly bool KnownPhishingSitesCapture;
        public readonly bool MaliciousUrlsCapture;
        public readonly bool MalwareSitesBlocked;
        public readonly bool MalwareSitesCapture;
        public readonly bool PotentialMaliciousRequestsBlocked;
        public readonly bool PotentialMaliciousRequestsCapture;
        public readonly int RiskTolerance;
        public readonly bool RiskToleranceCapture;
        public readonly bool SshTunnellingBlocked;
        public readonly bool SshTunnellingCapture;
        public readonly bool SuspectAdwareSpywareSitesBlocked;
        public readonly bool SuspectAdwareSpywareSitesCapture;
        public readonly bool SuspectedPhishingSitesBlocked;
        public readonly bool SuspectedPhishingSitesCapture;
        public readonly bool TorBlocked;
        public readonly bool TorCapture;
        public readonly bool WebSpamBlocked;
        public readonly bool WebSpamCapture;

        [OutputConstructor]
        private GetAdvancedThreatSettingsResult(
            bool activexBlocked,

            bool activexCapture,

            bool adSpywareSitesBlocked,

            bool adSpywareSitesCapture,

            bool alertForUnknownSuspiciousC2Traffic,

            bool anonymizerBlocked,

            bool anonymizerCapture,

            bool bitTorrentBlocked,

            bool bitTorrentCapture,

            bool blockCountriesCapture,

            ImmutableArray<string> blockedCountries,

            bool browserExploitsBlocked,

            bool browserExploitsCapture,

            bool cmdCtlServerBlocked,

            bool cmdCtlServerCapture,

            bool cmdCtlTrafficBlocked,

            bool cmdCtlTrafficCapture,

            bool cookieStealingBlocked,

            bool cookieStealingPcapEnabled,

            bool cryptoMiningBlocked,

            bool cryptoMiningCapture,

            bool dgaDomainsBlocked,

            bool dgaDomainsCapture,

            bool fileFormatVunerabilitesBlocked,

            bool fileFormatVunerabilitesCapture,

            bool googleTalkBlocked,

            bool googleTalkCapture,

            string id,

            bool ircTunnellingBlocked,

            bool ircTunnellingCapture,

            bool knownPhishingSitesBlocked,

            bool knownPhishingSitesCapture,

            bool maliciousUrlsCapture,

            bool malwareSitesBlocked,

            bool malwareSitesCapture,

            bool potentialMaliciousRequestsBlocked,

            bool potentialMaliciousRequestsCapture,

            int riskTolerance,

            bool riskToleranceCapture,

            bool sshTunnellingBlocked,

            bool sshTunnellingCapture,

            bool suspectAdwareSpywareSitesBlocked,

            bool suspectAdwareSpywareSitesCapture,

            bool suspectedPhishingSitesBlocked,

            bool suspectedPhishingSitesCapture,

            bool torBlocked,

            bool torCapture,

            bool webSpamBlocked,

            bool webSpamCapture)
        {
            ActivexBlocked = activexBlocked;
            ActivexCapture = activexCapture;
            AdSpywareSitesBlocked = adSpywareSitesBlocked;
            AdSpywareSitesCapture = adSpywareSitesCapture;
            AlertForUnknownSuspiciousC2Traffic = alertForUnknownSuspiciousC2Traffic;
            AnonymizerBlocked = anonymizerBlocked;
            AnonymizerCapture = anonymizerCapture;
            BitTorrentBlocked = bitTorrentBlocked;
            BitTorrentCapture = bitTorrentCapture;
            BlockCountriesCapture = blockCountriesCapture;
            BlockedCountries = blockedCountries;
            BrowserExploitsBlocked = browserExploitsBlocked;
            BrowserExploitsCapture = browserExploitsCapture;
            CmdCtlServerBlocked = cmdCtlServerBlocked;
            CmdCtlServerCapture = cmdCtlServerCapture;
            CmdCtlTrafficBlocked = cmdCtlTrafficBlocked;
            CmdCtlTrafficCapture = cmdCtlTrafficCapture;
            CookieStealingBlocked = cookieStealingBlocked;
            CookieStealingPcapEnabled = cookieStealingPcapEnabled;
            CryptoMiningBlocked = cryptoMiningBlocked;
            CryptoMiningCapture = cryptoMiningCapture;
            DgaDomainsBlocked = dgaDomainsBlocked;
            DgaDomainsCapture = dgaDomainsCapture;
            FileFormatVunerabilitesBlocked = fileFormatVunerabilitesBlocked;
            FileFormatVunerabilitesCapture = fileFormatVunerabilitesCapture;
            GoogleTalkBlocked = googleTalkBlocked;
            GoogleTalkCapture = googleTalkCapture;
            Id = id;
            IrcTunnellingBlocked = ircTunnellingBlocked;
            IrcTunnellingCapture = ircTunnellingCapture;
            KnownPhishingSitesBlocked = knownPhishingSitesBlocked;
            KnownPhishingSitesCapture = knownPhishingSitesCapture;
            MaliciousUrlsCapture = maliciousUrlsCapture;
            MalwareSitesBlocked = malwareSitesBlocked;
            MalwareSitesCapture = malwareSitesCapture;
            PotentialMaliciousRequestsBlocked = potentialMaliciousRequestsBlocked;
            PotentialMaliciousRequestsCapture = potentialMaliciousRequestsCapture;
            RiskTolerance = riskTolerance;
            RiskToleranceCapture = riskToleranceCapture;
            SshTunnellingBlocked = sshTunnellingBlocked;
            SshTunnellingCapture = sshTunnellingCapture;
            SuspectAdwareSpywareSitesBlocked = suspectAdwareSpywareSitesBlocked;
            SuspectAdwareSpywareSitesCapture = suspectAdwareSpywareSitesCapture;
            SuspectedPhishingSitesBlocked = suspectedPhishingSitesBlocked;
            SuspectedPhishingSitesCapture = suspectedPhishingSitesCapture;
            TorBlocked = torBlocked;
            TorCapture = torCapture;
            WebSpamBlocked = webSpamBlocked;
            WebSpamCapture = webSpamCapture;
        }
    }
}
