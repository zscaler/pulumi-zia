// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    /// <summary>
    /// The **zia_firewall_ips_rule** resource allows the creation and management of ZIA Cloud Firewall IPS rules in the Zscaler Internet Access.
    /// 
    /// ## Example Usage
    /// </summary>
    [ZiaResourceType("zia:index/iPSFirewallRule:IPSFirewallRule")]
    public partial class IPSFirewallRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
        /// </summary>
        [Output("action")]
        public Output<string?> Action { get; private set; } = null!;

        /// <summary>
        /// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
        /// </summary>
        [Output("capturePcap")]
        public Output<bool> CapturePcap { get; private set; } = null!;

        /// <summary>
        /// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
        /// </summary>
        [Output("defaultRule")]
        public Output<bool?> DefaultRule { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
        /// </summary>
        [Output("departments")]
        public Output<Outputs.IPSFirewallRuleDepartments?> Departments { get; private set; } = null!;

        /// <summary>
        /// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
        /// </summary>
        [Output("destAddresses")]
        public Output<ImmutableArray<string>> DestAddresses { get; private set; } = null!;

        /// <summary>
        /// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
        /// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
        /// </summary>
        [Output("destCountries")]
        public Output<ImmutableArray<string>> DestCountries { get; private set; } = null!;

        /// <summary>
        /// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
        /// </summary>
        [Output("destIpCategories")]
        public Output<ImmutableArray<string>> DestIpCategories { get; private set; } = null!;

        /// <summary>
        /// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
        /// </summary>
        [Output("destIpGroups")]
        public Output<Outputs.IPSFirewallRuleDestIpGroups?> DestIpGroups { get; private set; } = null!;

        /// <summary>
        /// list of destination ip groups
        /// </summary>
        [Output("destIpv6Groups")]
        public Output<Outputs.IPSFirewallRuleDestIpv6Groups?> DestIpv6Groups { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
        /// </summary>
        [Output("deviceGroups")]
        public Output<Outputs.IPSFirewallRuleDeviceGroups?> DeviceGroups { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
        /// </summary>
        [Output("devices")]
        public Output<Outputs.IPSFirewallRuleDevices?> Devices { get; private set; } = null!;

        /// <summary>
        /// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
        /// </summary>
        [Output("enableFullLogging")]
        public Output<bool?> EnableFullLogging { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
        /// </summary>
        [Output("groups")]
        public Output<Outputs.IPSFirewallRuleGroups?> Groups { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) Labels that are applicable to the rule.
        /// </summary>
        [Output("labels")]
        public Output<Outputs.IPSFirewallRuleLabels?> Labels { get; private set; } = null!;

        /// <summary>
        /// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
        /// </summary>
        [Output("locationGroups")]
        public Output<Outputs.IPSFirewallRuleLocationGroups?> LocationGroups { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
        /// </summary>
        [Output("locations")]
        public Output<Outputs.IPSFirewallRuleLocations?> Locations { get; private set; } = null!;

        /// <summary>
        /// The name of the IPS Control rule
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
        /// </summary>
        [Output("nwServiceGroups")]
        public Output<Outputs.IPSFirewallRuleNwServiceGroups?> NwServiceGroups { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
        /// </summary>
        [Output("nwServices")]
        public Output<Outputs.IPSFirewallRuleNwServices?> NwServices { get; private set; } = null!;

        /// <summary>
        /// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
        /// </summary>
        [Output("order")]
        public Output<int> Order { get; private set; } = null!;

        /// <summary>
        /// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
        /// </summary>
        [Output("predefined")]
        public Output<bool?> Predefined { get; private set; } = null!;

        /// <summary>
        /// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
        /// </summary>
        [Output("rank")]
        public Output<int?> Rank { get; private set; } = null!;

        /// <summary>
        /// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
        /// </summary>
        [Output("resCategories")]
        public Output<ImmutableArray<string>> ResCategories { get; private set; } = null!;

        [Output("ruleId")]
        public Output<int> RuleId { get; private set; } = null!;

        /// <summary>
        /// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
        /// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
        /// </summary>
        [Output("sourceCountries")]
        public Output<ImmutableArray<string>> SourceCountries { get; private set; } = null!;

        /// <summary>
        /// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
        /// </summary>
        [Output("srcIpGroups")]
        public Output<Outputs.IPSFirewallRuleSrcIpGroups?> SrcIpGroups { get; private set; } = null!;

        /// <summary>
        /// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
        /// </summary>
        [Output("srcIps")]
        public Output<ImmutableArray<string>> SrcIps { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
        /// </summary>
        [Output("srcIpv6Groups")]
        public Output<Outputs.IPSFirewallRuleSrcIpv6Groups?> SrcIpv6Groups { get; private set; } = null!;

        /// <summary>
        /// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) Advanced threat categories to which the rule applies
        /// </summary>
        [Output("threatCategories")]
        public Output<Outputs.IPSFirewallRuleThreatCategories?> ThreatCategories { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
        /// </summary>
        [Output("timeWindows")]
        public Output<Outputs.IPSFirewallRuleTimeWindows?> TimeWindows { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
        /// </summary>
        [Output("users")]
        public Output<Outputs.IPSFirewallRuleUsers?> Users { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) The ZPA application segments to which the rule applies
        /// </summary>
        [Output("zpaAppSegments")]
        public Output<ImmutableArray<Outputs.IPSFirewallRuleZpaAppSegment>> ZpaAppSegments { get; private set; } = null!;


        /// <summary>
        /// Create a IPSFirewallRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IPSFirewallRule(string name, IPSFirewallRuleArgs args, CustomResourceOptions? options = null)
            : base("zia:index/iPSFirewallRule:IPSFirewallRule", name, args ?? new IPSFirewallRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IPSFirewallRule(string name, Input<string> id, IPSFirewallRuleState? state = null, CustomResourceOptions? options = null)
            : base("zia:index/iPSFirewallRule:IPSFirewallRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "zia:index/firewallIPSRule:FirewallIPSRule" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IPSFirewallRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IPSFirewallRule Get(string name, Input<string> id, IPSFirewallRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new IPSFirewallRule(name, id, state, options);
        }
    }

    public sealed class IPSFirewallRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
        /// </summary>
        [Input("capturePcap")]
        public Input<bool>? CapturePcap { get; set; }

        /// <summary>
        /// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
        /// </summary>
        [Input("defaultRule")]
        public Input<bool>? DefaultRule { get; set; }

        /// <summary>
        /// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
        /// </summary>
        [Input("departments")]
        public Input<Inputs.IPSFirewallRuleDepartmentsArgs>? Departments { get; set; }

        /// <summary>
        /// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destAddresses")]
        private InputList<string>? _destAddresses;

        /// <summary>
        /// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
        /// </summary>
        public InputList<string> DestAddresses
        {
            get => _destAddresses ?? (_destAddresses = new InputList<string>());
            set => _destAddresses = value;
        }

        [Input("destCountries")]
        private InputList<string>? _destCountries;

        /// <summary>
        /// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
        /// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
        /// </summary>
        public InputList<string> DestCountries
        {
            get => _destCountries ?? (_destCountries = new InputList<string>());
            set => _destCountries = value;
        }

        [Input("destIpCategories")]
        private InputList<string>? _destIpCategories;

        /// <summary>
        /// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
        /// </summary>
        public InputList<string> DestIpCategories
        {
            get => _destIpCategories ?? (_destIpCategories = new InputList<string>());
            set => _destIpCategories = value;
        }

        /// <summary>
        /// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
        /// </summary>
        [Input("destIpGroups")]
        public Input<Inputs.IPSFirewallRuleDestIpGroupsArgs>? DestIpGroups { get; set; }

        /// <summary>
        /// list of destination ip groups
        /// </summary>
        [Input("destIpv6Groups")]
        public Input<Inputs.IPSFirewallRuleDestIpv6GroupsArgs>? DestIpv6Groups { get; set; }

        /// <summary>
        /// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
        /// </summary>
        [Input("deviceGroups")]
        public Input<Inputs.IPSFirewallRuleDeviceGroupsArgs>? DeviceGroups { get; set; }

        /// <summary>
        /// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
        /// </summary>
        [Input("devices")]
        public Input<Inputs.IPSFirewallRuleDevicesArgs>? Devices { get; set; }

        /// <summary>
        /// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
        /// </summary>
        [Input("enableFullLogging")]
        public Input<bool>? EnableFullLogging { get; set; }

        /// <summary>
        /// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
        /// </summary>
        [Input("groups")]
        public Input<Inputs.IPSFirewallRuleGroupsArgs>? Groups { get; set; }

        /// <summary>
        /// (List of Objects) Labels that are applicable to the rule.
        /// </summary>
        [Input("labels")]
        public Input<Inputs.IPSFirewallRuleLabelsArgs>? Labels { get; set; }

        /// <summary>
        /// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
        /// </summary>
        [Input("locationGroups")]
        public Input<Inputs.IPSFirewallRuleLocationGroupsArgs>? LocationGroups { get; set; }

        /// <summary>
        /// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
        /// </summary>
        [Input("locations")]
        public Input<Inputs.IPSFirewallRuleLocationsArgs>? Locations { get; set; }

        /// <summary>
        /// The name of the IPS Control rule
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
        /// </summary>
        [Input("nwServiceGroups")]
        public Input<Inputs.IPSFirewallRuleNwServiceGroupsArgs>? NwServiceGroups { get; set; }

        /// <summary>
        /// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
        /// </summary>
        [Input("nwServices")]
        public Input<Inputs.IPSFirewallRuleNwServicesArgs>? NwServices { get; set; }

        /// <summary>
        /// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
        /// </summary>
        [Input("order", required: true)]
        public Input<int> Order { get; set; } = null!;

        /// <summary>
        /// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
        /// </summary>
        [Input("predefined")]
        public Input<bool>? Predefined { get; set; }

        /// <summary>
        /// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
        /// </summary>
        [Input("rank")]
        public Input<int>? Rank { get; set; }

        [Input("resCategories")]
        private InputList<string>? _resCategories;

        /// <summary>
        /// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
        /// </summary>
        public InputList<string> ResCategories
        {
            get => _resCategories ?? (_resCategories = new InputList<string>());
            set => _resCategories = value;
        }

        [Input("sourceCountries")]
        private InputList<string>? _sourceCountries;

        /// <summary>
        /// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
        /// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
        /// </summary>
        public InputList<string> SourceCountries
        {
            get => _sourceCountries ?? (_sourceCountries = new InputList<string>());
            set => _sourceCountries = value;
        }

        /// <summary>
        /// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
        /// </summary>
        [Input("srcIpGroups")]
        public Input<Inputs.IPSFirewallRuleSrcIpGroupsArgs>? SrcIpGroups { get; set; }

        [Input("srcIps")]
        private InputList<string>? _srcIps;

        /// <summary>
        /// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
        /// </summary>
        public InputList<string> SrcIps
        {
            get => _srcIps ?? (_srcIps = new InputList<string>());
            set => _srcIps = value;
        }

        /// <summary>
        /// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
        /// </summary>
        [Input("srcIpv6Groups")]
        public Input<Inputs.IPSFirewallRuleSrcIpv6GroupsArgs>? SrcIpv6Groups { get; set; }

        /// <summary>
        /// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (List of Objects) Advanced threat categories to which the rule applies
        /// </summary>
        [Input("threatCategories")]
        public Input<Inputs.IPSFirewallRuleThreatCategoriesArgs>? ThreatCategories { get; set; }

        /// <summary>
        /// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
        /// </summary>
        [Input("timeWindows")]
        public Input<Inputs.IPSFirewallRuleTimeWindowsArgs>? TimeWindows { get; set; }

        /// <summary>
        /// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
        /// </summary>
        [Input("users")]
        public Input<Inputs.IPSFirewallRuleUsersArgs>? Users { get; set; }

        [Input("zpaAppSegments")]
        private InputList<Inputs.IPSFirewallRuleZpaAppSegmentArgs>? _zpaAppSegments;

        /// <summary>
        /// (List of Objects) The ZPA application segments to which the rule applies
        /// </summary>
        public InputList<Inputs.IPSFirewallRuleZpaAppSegmentArgs> ZpaAppSegments
        {
            get => _zpaAppSegments ?? (_zpaAppSegments = new InputList<Inputs.IPSFirewallRuleZpaAppSegmentArgs>());
            set => _zpaAppSegments = value;
        }

        public IPSFirewallRuleArgs()
        {
        }
        public static new IPSFirewallRuleArgs Empty => new IPSFirewallRuleArgs();
    }

    public sealed class IPSFirewallRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
        /// </summary>
        [Input("capturePcap")]
        public Input<bool>? CapturePcap { get; set; }

        /// <summary>
        /// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
        /// </summary>
        [Input("defaultRule")]
        public Input<bool>? DefaultRule { get; set; }

        /// <summary>
        /// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
        /// </summary>
        [Input("departments")]
        public Input<Inputs.IPSFirewallRuleDepartmentsGetArgs>? Departments { get; set; }

        /// <summary>
        /// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destAddresses")]
        private InputList<string>? _destAddresses;

        /// <summary>
        /// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
        /// </summary>
        public InputList<string> DestAddresses
        {
            get => _destAddresses ?? (_destAddresses = new InputList<string>());
            set => _destAddresses = value;
        }

        [Input("destCountries")]
        private InputList<string>? _destCountries;

        /// <summary>
        /// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
        /// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
        /// </summary>
        public InputList<string> DestCountries
        {
            get => _destCountries ?? (_destCountries = new InputList<string>());
            set => _destCountries = value;
        }

        [Input("destIpCategories")]
        private InputList<string>? _destIpCategories;

        /// <summary>
        /// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
        /// </summary>
        public InputList<string> DestIpCategories
        {
            get => _destIpCategories ?? (_destIpCategories = new InputList<string>());
            set => _destIpCategories = value;
        }

        /// <summary>
        /// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
        /// </summary>
        [Input("destIpGroups")]
        public Input<Inputs.IPSFirewallRuleDestIpGroupsGetArgs>? DestIpGroups { get; set; }

        /// <summary>
        /// list of destination ip groups
        /// </summary>
        [Input("destIpv6Groups")]
        public Input<Inputs.IPSFirewallRuleDestIpv6GroupsGetArgs>? DestIpv6Groups { get; set; }

        /// <summary>
        /// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
        /// </summary>
        [Input("deviceGroups")]
        public Input<Inputs.IPSFirewallRuleDeviceGroupsGetArgs>? DeviceGroups { get; set; }

        /// <summary>
        /// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
        /// </summary>
        [Input("devices")]
        public Input<Inputs.IPSFirewallRuleDevicesGetArgs>? Devices { get; set; }

        /// <summary>
        /// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
        /// </summary>
        [Input("enableFullLogging")]
        public Input<bool>? EnableFullLogging { get; set; }

        /// <summary>
        /// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
        /// </summary>
        [Input("groups")]
        public Input<Inputs.IPSFirewallRuleGroupsGetArgs>? Groups { get; set; }

        /// <summary>
        /// (List of Objects) Labels that are applicable to the rule.
        /// </summary>
        [Input("labels")]
        public Input<Inputs.IPSFirewallRuleLabelsGetArgs>? Labels { get; set; }

        /// <summary>
        /// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
        /// </summary>
        [Input("locationGroups")]
        public Input<Inputs.IPSFirewallRuleLocationGroupsGetArgs>? LocationGroups { get; set; }

        /// <summary>
        /// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
        /// </summary>
        [Input("locations")]
        public Input<Inputs.IPSFirewallRuleLocationsGetArgs>? Locations { get; set; }

        /// <summary>
        /// The name of the IPS Control rule
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
        /// </summary>
        [Input("nwServiceGroups")]
        public Input<Inputs.IPSFirewallRuleNwServiceGroupsGetArgs>? NwServiceGroups { get; set; }

        /// <summary>
        /// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
        /// </summary>
        [Input("nwServices")]
        public Input<Inputs.IPSFirewallRuleNwServicesGetArgs>? NwServices { get; set; }

        /// <summary>
        /// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
        /// </summary>
        [Input("order")]
        public Input<int>? Order { get; set; }

        /// <summary>
        /// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
        /// </summary>
        [Input("predefined")]
        public Input<bool>? Predefined { get; set; }

        /// <summary>
        /// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
        /// </summary>
        [Input("rank")]
        public Input<int>? Rank { get; set; }

        [Input("resCategories")]
        private InputList<string>? _resCategories;

        /// <summary>
        /// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
        /// </summary>
        public InputList<string> ResCategories
        {
            get => _resCategories ?? (_resCategories = new InputList<string>());
            set => _resCategories = value;
        }

        [Input("ruleId")]
        public Input<int>? RuleId { get; set; }

        [Input("sourceCountries")]
        private InputList<string>? _sourceCountries;

        /// <summary>
        /// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
        /// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
        /// </summary>
        public InputList<string> SourceCountries
        {
            get => _sourceCountries ?? (_sourceCountries = new InputList<string>());
            set => _sourceCountries = value;
        }

        /// <summary>
        /// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
        /// </summary>
        [Input("srcIpGroups")]
        public Input<Inputs.IPSFirewallRuleSrcIpGroupsGetArgs>? SrcIpGroups { get; set; }

        [Input("srcIps")]
        private InputList<string>? _srcIps;

        /// <summary>
        /// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
        /// </summary>
        public InputList<string> SrcIps
        {
            get => _srcIps ?? (_srcIps = new InputList<string>());
            set => _srcIps = value;
        }

        /// <summary>
        /// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
        /// </summary>
        [Input("srcIpv6Groups")]
        public Input<Inputs.IPSFirewallRuleSrcIpv6GroupsGetArgs>? SrcIpv6Groups { get; set; }

        /// <summary>
        /// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (List of Objects) Advanced threat categories to which the rule applies
        /// </summary>
        [Input("threatCategories")]
        public Input<Inputs.IPSFirewallRuleThreatCategoriesGetArgs>? ThreatCategories { get; set; }

        /// <summary>
        /// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
        /// </summary>
        [Input("timeWindows")]
        public Input<Inputs.IPSFirewallRuleTimeWindowsGetArgs>? TimeWindows { get; set; }

        /// <summary>
        /// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
        /// </summary>
        [Input("users")]
        public Input<Inputs.IPSFirewallRuleUsersGetArgs>? Users { get; set; }

        [Input("zpaAppSegments")]
        private InputList<Inputs.IPSFirewallRuleZpaAppSegmentGetArgs>? _zpaAppSegments;

        /// <summary>
        /// (List of Objects) The ZPA application segments to which the rule applies
        /// </summary>
        public InputList<Inputs.IPSFirewallRuleZpaAppSegmentGetArgs> ZpaAppSegments
        {
            get => _zpaAppSegments ?? (_zpaAppSegments = new InputList<Inputs.IPSFirewallRuleZpaAppSegmentGetArgs>());
            set => _zpaAppSegments = value;
        }

        public IPSFirewallRuleState()
        {
        }
        public static new IPSFirewallRuleState Empty => new IPSFirewallRuleState();
    }
}
