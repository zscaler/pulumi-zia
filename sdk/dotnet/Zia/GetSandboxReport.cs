// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetSandboxReport
    {
        /// <summary>
        /// Use the **zia_sandbox_report** data source gets a full (i.e., complete) or summary detail report for an MD5 hash of a file that was analyzed by Sandbox.
        /// 
        /// ## Example Usage
        /// 
        /// ### Obtain Full Sandbox Report
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zia = Pulumi.Zia;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zia.GetSandboxReport.Invoke(new()
        ///     {
        ///         Details = "full",
        ///         Md5Hash = "F69CA01D65E6C8F9E3540029E5F6AB92",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ### Obtain Summarized Sandbox Report
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zia = Pulumi.Zia;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zia.GetSandboxReport.Invoke(new()
        ///     {
        ///         Details = "summary",
        ///         Md5Hash = "F69CA01D65E6C8F9E3540029E5F6AB92",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetSandboxReportResult> InvokeAsync(GetSandboxReportArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSandboxReportResult>("zia:index/getSandboxReport:getSandboxReport", args ?? new GetSandboxReportArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zia_sandbox_report** data source gets a full (i.e., complete) or summary detail report for an MD5 hash of a file that was analyzed by Sandbox.
        /// 
        /// ## Example Usage
        /// 
        /// ### Obtain Full Sandbox Report
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zia = Pulumi.Zia;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zia.GetSandboxReport.Invoke(new()
        ///     {
        ///         Details = "full",
        ///         Md5Hash = "F69CA01D65E6C8F9E3540029E5F6AB92",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ### Obtain Summarized Sandbox Report
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zia = Pulumi.Zia;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zia.GetSandboxReport.Invoke(new()
        ///     {
        ///         Details = "summary",
        ///         Md5Hash = "F69CA01D65E6C8F9E3540029E5F6AB92",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetSandboxReportResult> Invoke(GetSandboxReportInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSandboxReportResult>("zia:index/getSandboxReport:getSandboxReport", args ?? new GetSandboxReportInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSandboxReportArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Required) Type of report, full or summary.
        /// </summary>
        [Input("details")]
        public string? Details { get; set; }

        [Input("exploits")]
        private List<Inputs.GetSandboxReportExploitArgs>? _exploits;
        public List<Inputs.GetSandboxReportExploitArgs> Exploits
        {
            get => _exploits ?? (_exploits = new List<Inputs.GetSandboxReportExploitArgs>());
            set => _exploits = value;
        }

        /// <summary>
        /// (Required) MD5 hash of the file that was analyzed by Sandbox.
        /// </summary>
        [Input("md5Hash", required: true)]
        public string Md5Hash { get; set; } = null!;

        [Input("networkings")]
        private List<Inputs.GetSandboxReportNetworkingArgs>? _networkings;
        public List<Inputs.GetSandboxReportNetworkingArgs> Networkings
        {
            get => _networkings ?? (_networkings = new List<Inputs.GetSandboxReportNetworkingArgs>());
            set => _networkings = value;
        }

        [Input("persistences")]
        private List<Inputs.GetSandboxReportPersistenceArgs>? _persistences;
        public List<Inputs.GetSandboxReportPersistenceArgs> Persistences
        {
            get => _persistences ?? (_persistences = new List<Inputs.GetSandboxReportPersistenceArgs>());
            set => _persistences = value;
        }

        [Input("securityBypasses")]
        private List<Inputs.GetSandboxReportSecurityBypassArgs>? _securityBypasses;
        public List<Inputs.GetSandboxReportSecurityBypassArgs> SecurityBypasses
        {
            get => _securityBypasses ?? (_securityBypasses = new List<Inputs.GetSandboxReportSecurityBypassArgs>());
            set => _securityBypasses = value;
        }

        [Input("spywares")]
        private List<Inputs.GetSandboxReportSpywareArgs>? _spywares;
        public List<Inputs.GetSandboxReportSpywareArgs> Spywares
        {
            get => _spywares ?? (_spywares = new List<Inputs.GetSandboxReportSpywareArgs>());
            set => _spywares = value;
        }

        [Input("stealths")]
        private List<Inputs.GetSandboxReportStealthArgs>? _stealths;
        public List<Inputs.GetSandboxReportStealthArgs> Stealths
        {
            get => _stealths ?? (_stealths = new List<Inputs.GetSandboxReportStealthArgs>());
            set => _stealths = value;
        }

        public GetSandboxReportArgs()
        {
        }
        public static new GetSandboxReportArgs Empty => new GetSandboxReportArgs();
    }

    public sealed class GetSandboxReportInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Required) Type of report, full or summary.
        /// </summary>
        [Input("details")]
        public Input<string>? Details { get; set; }

        [Input("exploits")]
        private InputList<Inputs.GetSandboxReportExploitInputArgs>? _exploits;
        public InputList<Inputs.GetSandboxReportExploitInputArgs> Exploits
        {
            get => _exploits ?? (_exploits = new InputList<Inputs.GetSandboxReportExploitInputArgs>());
            set => _exploits = value;
        }

        /// <summary>
        /// (Required) MD5 hash of the file that was analyzed by Sandbox.
        /// </summary>
        [Input("md5Hash", required: true)]
        public Input<string> Md5Hash { get; set; } = null!;

        [Input("networkings")]
        private InputList<Inputs.GetSandboxReportNetworkingInputArgs>? _networkings;
        public InputList<Inputs.GetSandboxReportNetworkingInputArgs> Networkings
        {
            get => _networkings ?? (_networkings = new InputList<Inputs.GetSandboxReportNetworkingInputArgs>());
            set => _networkings = value;
        }

        [Input("persistences")]
        private InputList<Inputs.GetSandboxReportPersistenceInputArgs>? _persistences;
        public InputList<Inputs.GetSandboxReportPersistenceInputArgs> Persistences
        {
            get => _persistences ?? (_persistences = new InputList<Inputs.GetSandboxReportPersistenceInputArgs>());
            set => _persistences = value;
        }

        [Input("securityBypasses")]
        private InputList<Inputs.GetSandboxReportSecurityBypassInputArgs>? _securityBypasses;
        public InputList<Inputs.GetSandboxReportSecurityBypassInputArgs> SecurityBypasses
        {
            get => _securityBypasses ?? (_securityBypasses = new InputList<Inputs.GetSandboxReportSecurityBypassInputArgs>());
            set => _securityBypasses = value;
        }

        [Input("spywares")]
        private InputList<Inputs.GetSandboxReportSpywareInputArgs>? _spywares;
        public InputList<Inputs.GetSandboxReportSpywareInputArgs> Spywares
        {
            get => _spywares ?? (_spywares = new InputList<Inputs.GetSandboxReportSpywareInputArgs>());
            set => _spywares = value;
        }

        [Input("stealths")]
        private InputList<Inputs.GetSandboxReportStealthInputArgs>? _stealths;
        public InputList<Inputs.GetSandboxReportStealthInputArgs> Stealths
        {
            get => _stealths ?? (_stealths = new InputList<Inputs.GetSandboxReportStealthInputArgs>());
            set => _stealths = value;
        }

        public GetSandboxReportInvokeArgs()
        {
        }
        public static new GetSandboxReportInvokeArgs Empty => new GetSandboxReportInvokeArgs();
    }


    [OutputType]
    public sealed class GetSandboxReportResult
    {
        public readonly ImmutableArray<Outputs.GetSandboxReportClassificationResult> Classifications;
        /// <summary>
        /// (Required) Type of report, full or summary.
        /// </summary>
        public readonly string? Details;
        public readonly ImmutableArray<Outputs.GetSandboxReportExploitResult> Exploits;
        public readonly ImmutableArray<Outputs.GetSandboxReportFilePropertyResult> FileProperties;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required) MD5 hash of the file that was analyzed by Sandbox.
        /// </summary>
        public readonly string Md5Hash;
        public readonly ImmutableArray<Outputs.GetSandboxReportNetworkingResult> Networkings;
        public readonly ImmutableArray<Outputs.GetSandboxReportOriginResult> Origins;
        public readonly ImmutableArray<Outputs.GetSandboxReportPersistenceResult> Persistences;
        public readonly ImmutableArray<Outputs.GetSandboxReportSecurityBypassResult> SecurityBypasses;
        public readonly ImmutableArray<Outputs.GetSandboxReportSpywareResult> Spywares;
        public readonly ImmutableArray<Outputs.GetSandboxReportStealthResult> Stealths;
        /// <summary>
        /// Summary detail report for an MD5 hash of a file that was analyzed by Sandbox
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSandboxReportSummaryResult> Summaries;
        public readonly ImmutableArray<Outputs.GetSandboxReportSystemSummaryResult> SystemSummaries;

        [OutputConstructor]
        private GetSandboxReportResult(
            ImmutableArray<Outputs.GetSandboxReportClassificationResult> classifications,

            string? details,

            ImmutableArray<Outputs.GetSandboxReportExploitResult> exploits,

            ImmutableArray<Outputs.GetSandboxReportFilePropertyResult> fileProperties,

            string id,

            string md5Hash,

            ImmutableArray<Outputs.GetSandboxReportNetworkingResult> networkings,

            ImmutableArray<Outputs.GetSandboxReportOriginResult> origins,

            ImmutableArray<Outputs.GetSandboxReportPersistenceResult> persistences,

            ImmutableArray<Outputs.GetSandboxReportSecurityBypassResult> securityBypasses,

            ImmutableArray<Outputs.GetSandboxReportSpywareResult> spywares,

            ImmutableArray<Outputs.GetSandboxReportStealthResult> stealths,

            ImmutableArray<Outputs.GetSandboxReportSummaryResult> summaries,

            ImmutableArray<Outputs.GetSandboxReportSystemSummaryResult> systemSummaries)
        {
            Classifications = classifications;
            Details = details;
            Exploits = exploits;
            FileProperties = fileProperties;
            Id = id;
            Md5Hash = md5Hash;
            Networkings = networkings;
            Origins = origins;
            Persistences = persistences;
            SecurityBypasses = securityBypasses;
            Spywares = spywares;
            Stealths = stealths;
            Summaries = summaries;
            SystemSummaries = systemSummaries;
        }
    }
}
