// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetIcapServers
    {
        /// <summary>
        /// Use the **zia_dlp_engines** data source to get information about a the list of DLP servers using ICAP in the Zscaler Internet Access cloud or via the API.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zia = Pulumi.Zia;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Zia.GetIcapServers.Invoke(new()
        ///     {
        ///         Name = "Example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetIcapServersResult> InvokeAsync(GetIcapServersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIcapServersResult>("zia:index/getIcapServers:getIcapServers", args ?? new GetIcapServersArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zia_dlp_engines** data source to get information about a the list of DLP servers using ICAP in the Zscaler Internet Access cloud or via the API.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zia = Pulumi.Zia;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Zia.GetIcapServers.Invoke(new()
        ///     {
        ///         Name = "Example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIcapServersResult> Invoke(GetIcapServersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIcapServersResult>("zia:index/getIcapServers:getIcapServers", args ?? new GetIcapServersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIcapServersArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public string? Name { get; set; }

        public GetIcapServersArgs()
        {
        }
        public static new GetIcapServersArgs Empty => new GetIcapServersArgs();
    }

    public sealed class GetIcapServersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetIcapServersInvokeArgs()
        {
        }
        public static new GetIcapServersInvokeArgs Empty => new GetIcapServersInvokeArgs();
    }


    [OutputType]
    public sealed class GetIcapServersResult
    {
        public readonly int Id;
        public readonly string? Name;
        public readonly string Status;
        public readonly string Url;

        [OutputConstructor]
        private GetIcapServersResult(
            int id,

            string? name,

            string status,

            string url)
        {
            Id = id;
            Name = name;
            Status = status;
            Url = url;
        }
    }
}
