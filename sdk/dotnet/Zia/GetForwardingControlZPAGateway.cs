// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetForwardingControlZPAGateway
    {
        /// <summary>
        /// Use the **forwarding_control_zpa_gateway** data source to get information about a forwarding control zpa gateway used in IP Source Anchoring integration between Zscaler Internet Access and Zscaler Private Access. This data source can then be associated with a ZIA Forwarding Control Rule.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zia = Pulumi.Zia;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zia.GetForwardingControlZPAGateway.Invoke(new()
        ///     {
        ///         Name = "ZPA_GW01",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetForwardingControlZPAGatewayResult> InvokeAsync(GetForwardingControlZPAGatewayArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetForwardingControlZPAGatewayResult>("zia:index/getForwardingControlZPAGateway:getForwardingControlZPAGateway", args ?? new GetForwardingControlZPAGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **forwarding_control_zpa_gateway** data source to get information about a forwarding control zpa gateway used in IP Source Anchoring integration between Zscaler Internet Access and Zscaler Private Access. This data source can then be associated with a ZIA Forwarding Control Rule.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zia = Pulumi.Zia;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zia.GetForwardingControlZPAGateway.Invoke(new()
        ///     {
        ///         Name = "ZPA_GW01",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetForwardingControlZPAGatewayResult> Invoke(GetForwardingControlZPAGatewayInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetForwardingControlZPAGatewayResult>("zia:index/getForwardingControlZPAGateway:getForwardingControlZPAGateway", args ?? new GetForwardingControlZPAGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetForwardingControlZPAGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the forwarding control ZPA Gateway resource.
        /// </summary>
        [Input("id")]
        public int? Id { get; set; }

        /// <summary>
        /// The name of the forwarding control ZPA Gateway to be exported.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetForwardingControlZPAGatewayArgs()
        {
        }
        public static new GetForwardingControlZPAGatewayArgs Empty => new GetForwardingControlZPAGatewayArgs();
    }

    public sealed class GetForwardingControlZPAGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the forwarding control ZPA Gateway resource.
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        /// <summary>
        /// The name of the forwarding control ZPA Gateway to be exported.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetForwardingControlZPAGatewayInvokeArgs()
        {
        }
        public static new GetForwardingControlZPAGatewayInvokeArgs Empty => new GetForwardingControlZPAGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetForwardingControlZPAGatewayResult
    {
        /// <summary>
        /// (string) - Additional details about the ZPA gateway
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// (int) - Identifier that uniquely identifies an entity
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// (list) -  Information about the admin user that last modified the ZPA gateway
        /// </summary>
        public readonly ImmutableArray<Outputs.GetForwardingControlZPAGatewayLastModifiedByResult> LastModifiedBies;
        /// <summary>
        /// (int) - Timestamp when the ZPA gateway was last modified
        /// </summary>
        public readonly int LastModifiedTime;
        /// <summary>
        /// (string) The configured name of the entity
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// (string) - Indicates whether the ZPA gateway is configured for Zscaler Internet Access (using option ZPA) or Zscaler Cloud Connector (using option ECZPA)
        /// </summary>
        public readonly string Type;
        public readonly ImmutableArray<Outputs.GetForwardingControlZPAGatewayZpaAppSegmentResult> ZpaAppSegments;
        /// <summary>
        /// () - The ZPA Server Group that is configured for Source IP Anchoring
        /// </summary>
        public readonly ImmutableArray<Outputs.GetForwardingControlZPAGatewayZpaServerGroupResult> ZpaServerGroups;
        public readonly int ZpaTenantId;

        [OutputConstructor]
        private GetForwardingControlZPAGatewayResult(
            string description,

            int id,

            ImmutableArray<Outputs.GetForwardingControlZPAGatewayLastModifiedByResult> lastModifiedBies,

            int lastModifiedTime,

            string name,

            string type,

            ImmutableArray<Outputs.GetForwardingControlZPAGatewayZpaAppSegmentResult> zpaAppSegments,

            ImmutableArray<Outputs.GetForwardingControlZPAGatewayZpaServerGroupResult> zpaServerGroups,

            int zpaTenantId)
        {
            Description = description;
            Id = id;
            LastModifiedBies = lastModifiedBies;
            LastModifiedTime = lastModifiedTime;
            Name = name;
            Type = type;
            ZpaAppSegments = zpaAppSegments;
            ZpaServerGroups = zpaServerGroups;
            ZpaTenantId = zpaTenantId;
        }
    }
}
