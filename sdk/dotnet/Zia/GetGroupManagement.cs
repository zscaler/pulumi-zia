// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetGroupManagement
    {
        public static Task<GetGroupManagementResult> InvokeAsync(GetGroupManagementArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupManagementResult>("zia:index/getGroupManagement:getGroupManagement", args ?? new GetGroupManagementArgs(), options.WithDefaults());

        public static Output<GetGroupManagementResult> Invoke(GetGroupManagementInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupManagementResult>("zia:index/getGroupManagement:getGroupManagement", args ?? new GetGroupManagementInvokeArgs(), options.WithDefaults());

        public static Output<GetGroupManagementResult> Invoke(GetGroupManagementInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupManagementResult>("zia:index/getGroupManagement:getGroupManagement", args ?? new GetGroupManagementInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupManagementArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public string? Name { get; set; }

        public GetGroupManagementArgs()
        {
        }
        public static new GetGroupManagementArgs Empty => new GetGroupManagementArgs();
    }

    public sealed class GetGroupManagementInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetGroupManagementInvokeArgs()
        {
        }
        public static new GetGroupManagementInvokeArgs Empty => new GetGroupManagementInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupManagementResult
    {
        public readonly string Comments;
        public readonly int Id;
        public readonly int IdpId;
        public readonly string? Name;

        [OutputConstructor]
        private GetGroupManagementResult(
            string comments,

            int id,

            int idpId,

            string? name)
        {
            Comments = comments;
            Id = id;
            IdpId = idpId;
            Name = name;
        }
    }
}
