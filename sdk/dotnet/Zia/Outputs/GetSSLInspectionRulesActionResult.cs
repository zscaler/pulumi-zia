// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia.Outputs
{

    [OutputType]
    public sealed class GetSSLInspectionRulesActionResult
    {
        public readonly ImmutableArray<Outputs.GetSSLInspectionRulesActionDecryptSubActionResult> DecryptSubActions;
        /// <summary>
        /// Action taken when bypassing SSL intercept
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSSLInspectionRulesActionDoNotDecryptSubActionResult> DoNotDecryptSubActions;
        /// <summary>
        /// Whether to override the default SSL interception certificate.
        /// </summary>
        public readonly bool OverrideDefaultCertificate;
        /// <summary>
        /// Whether to show End User Notification (EUN).
        /// </summary>
        public readonly bool ShowEun;
        /// <summary>
        /// Whether to display the EUN ATP page.
        /// </summary>
        public readonly bool ShowEunatp;
        /// <summary>
        /// Action taken when enabling SSL intercept
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSSLInspectionRulesActionSslInterceptionCertResult> SslInterceptionCerts;
        /// <summary>
        /// The action type for this rule. Possible values: `BLOCK`, `DECRYPT`, or `DO_NOT_DECRYPT`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSSLInspectionRulesActionResult(
            ImmutableArray<Outputs.GetSSLInspectionRulesActionDecryptSubActionResult> decryptSubActions,

            ImmutableArray<Outputs.GetSSLInspectionRulesActionDoNotDecryptSubActionResult> doNotDecryptSubActions,

            bool overrideDefaultCertificate,

            bool showEun,

            bool showEunatp,

            ImmutableArray<Outputs.GetSSLInspectionRulesActionSslInterceptionCertResult> sslInterceptionCerts,

            string type)
        {
            DecryptSubActions = decryptSubActions;
            DoNotDecryptSubActions = doNotDecryptSubActions;
            OverrideDefaultCertificate = overrideDefaultCertificate;
            ShowEun = showEun;
            ShowEunatp = showEunatp;
            SslInterceptionCerts = sslInterceptionCerts;
            Type = type;
        }
    }
}
