// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia.Outputs
{

    [OutputType]
    public sealed class SSLInspectionRulesActionDoNotDecryptSubAction
    {
        /// <summary>
        /// (Boolean) - Whether to block SSL traffic when SNI is not present.
        /// </summary>
        public readonly bool? BlockSslTrafficWithNoSniEnabled;
        /// <summary>
        /// (Boolean) - Whether to bypass other policies when action is set to `DO_NOT_DECRYPT`.
        /// </summary>
        public readonly bool? BypassOtherPolicies;
        /// <summary>
        /// (String) -  The minimum TLS version allowed on the server side: Supported Values are: `SERVER_TLS_1_0`, `SERVER_TLS_1_1`, `SERVER_TLS_1_2`,  `SERVER_TLS_1_3`.
        /// **NOTE** `min_tls_version` and `server_certificates` CANNOT be set if `bypass_other_policies` is `true`
        /// </summary>
        public readonly string? MinTlsVersion;
        /// <summary>
        /// (Boolean) - Whether to enable OCSP check.
        /// </summary>
        public readonly bool? OcspCheck;
        /// <summary>
        /// (String) - Action to take on server certificates. Valid values might include `ALLOW`, `BLOCK`, or `PASS_THRU`.
        /// </summary>
        public readonly string? ServerCertificates;

        [OutputConstructor]
        private SSLInspectionRulesActionDoNotDecryptSubAction(
            bool? blockSslTrafficWithNoSniEnabled,

            bool? bypassOtherPolicies,

            string? minTlsVersion,

            bool? ocspCheck,

            string? serverCertificates)
        {
            BlockSslTrafficWithNoSniEnabled = blockSslTrafficWithNoSniEnabled;
            BypassOtherPolicies = bypassOtherPolicies;
            MinTlsVersion = minTlsVersion;
            OcspCheck = ocspCheck;
            ServerCertificates = serverCertificates;
        }
    }
}
