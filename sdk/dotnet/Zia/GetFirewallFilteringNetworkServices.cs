// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetFirewallFilteringNetworkServices
    {
        /// <summary>
        /// The **zia_firewall_filtering_network_service** data source to get information about a network service available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering network service rule.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zia = Pulumi.Zia;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Zia.GetFirewallFilteringNetworkServices.Invoke(new()
        ///     {
        ///         Name = "ICMP_ANY",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFirewallFilteringNetworkServicesResult> InvokeAsync(GetFirewallFilteringNetworkServicesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFirewallFilteringNetworkServicesResult>("zia:index/getFirewallFilteringNetworkServices:getFirewallFilteringNetworkServices", args ?? new GetFirewallFilteringNetworkServicesArgs(), options.WithDefaults());

        /// <summary>
        /// The **zia_firewall_filtering_network_service** data source to get information about a network service available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering network service rule.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zia = Pulumi.Zia;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Zia.GetFirewallFilteringNetworkServices.Invoke(new()
        ///     {
        ///         Name = "ICMP_ANY",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFirewallFilteringNetworkServicesResult> Invoke(GetFirewallFilteringNetworkServicesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFirewallFilteringNetworkServicesResult>("zia:index/getFirewallFilteringNetworkServices:getFirewallFilteringNetworkServices", args ?? new GetFirewallFilteringNetworkServicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFirewallFilteringNetworkServicesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the application layer service to be exported.
        /// </summary>
        [Input("id")]
        public int? Id { get; set; }

        /// <summary>
        /// Name of the application layer service that you want to control. It can include any character and spaces.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetFirewallFilteringNetworkServicesArgs()
        {
        }
        public static new GetFirewallFilteringNetworkServicesArgs Empty => new GetFirewallFilteringNetworkServicesArgs();
    }

    public sealed class GetFirewallFilteringNetworkServicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the application layer service to be exported.
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        /// <summary>
        /// Name of the application layer service that you want to control. It can include any character and spaces.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetFirewallFilteringNetworkServicesInvokeArgs()
        {
        }
        public static new GetFirewallFilteringNetworkServicesInvokeArgs Empty => new GetFirewallFilteringNetworkServicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetFirewallFilteringNetworkServicesResult
    {
        /// <summary>
        /// (String) (Optional) Enter additional notes or information. The description cannot exceed 10240 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// (Required) The TCP destination port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFirewallFilteringNetworkServicesDestTcpPortResult> DestTcpPorts;
        /// <summary>
        /// The UDP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFirewallFilteringNetworkServicesDestUdpPortResult> DestUdpPorts;
        public readonly int Id;
        /// <summary>
        /// (Bool) - Default: false
        /// </summary>
        public readonly bool IsNameL10nTag;
        public readonly string Name;
        /// <summary>
        /// (Optional) The TCP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFirewallFilteringNetworkServicesSrcTcpPortResult> SrcTcpPorts;
        /// <summary>
        /// The UDP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFirewallFilteringNetworkServicesSrcUdpPortResult> SrcUdpPorts;
        public readonly string Tag;
        /// <summary>
        /// (String) - Supported values are: `STANDARD`, `PREDEFINED` and `CUSTOM`
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFirewallFilteringNetworkServicesResult(
            string description,

            ImmutableArray<Outputs.GetFirewallFilteringNetworkServicesDestTcpPortResult> destTcpPorts,

            ImmutableArray<Outputs.GetFirewallFilteringNetworkServicesDestUdpPortResult> destUdpPorts,

            int id,

            bool isNameL10nTag,

            string name,

            ImmutableArray<Outputs.GetFirewallFilteringNetworkServicesSrcTcpPortResult> srcTcpPorts,

            ImmutableArray<Outputs.GetFirewallFilteringNetworkServicesSrcUdpPortResult> srcUdpPorts,

            string tag,

            string type)
        {
            Description = description;
            DestTcpPorts = destTcpPorts;
            DestUdpPorts = destUdpPorts;
            Id = id;
            IsNameL10nTag = isNameL10nTag;
            Name = name;
            SrcTcpPorts = srcTcpPorts;
            SrcUdpPorts = srcUdpPorts;
            Tag = tag;
            Type = type;
        }
    }
}
