// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetFirewallDnsRule
    {
        public static Task<GetFirewallDnsRuleResult> InvokeAsync(GetFirewallDnsRuleArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFirewallDnsRuleResult>("zia:index/getFirewallDnsRule:getFirewallDnsRule", args ?? new GetFirewallDnsRuleArgs(), options.WithDefaults());

        public static Output<GetFirewallDnsRuleResult> Invoke(GetFirewallDnsRuleInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFirewallDnsRuleResult>("zia:index/getFirewallDnsRule:getFirewallDnsRule", args ?? new GetFirewallDnsRuleInvokeArgs(), options.WithDefaults());

        public static Output<GetFirewallDnsRuleResult> Invoke(GetFirewallDnsRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFirewallDnsRuleResult>("zia:index/getFirewallDnsRule:getFirewallDnsRule", args ?? new GetFirewallDnsRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFirewallDnsRuleArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public int? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetFirewallDnsRuleArgs()
        {
        }
        public static new GetFirewallDnsRuleArgs Empty => new GetFirewallDnsRuleArgs();
    }

    public sealed class GetFirewallDnsRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<int>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetFirewallDnsRuleInvokeArgs()
        {
        }
        public static new GetFirewallDnsRuleInvokeArgs Empty => new GetFirewallDnsRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetFirewallDnsRuleResult
    {
        public readonly string Action;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleApplicationGroupResult> ApplicationGroups;
        public readonly ImmutableArray<string> Applications;
        public readonly string BlockResponseCode;
        public readonly bool CapturePcap;
        public readonly bool DefaultRule;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleDepartmentResult> Departments;
        public readonly string Description;
        public readonly ImmutableArray<string> DestAddresses;
        public readonly ImmutableArray<string> DestCountries;
        public readonly ImmutableArray<string> DestIpCategories;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleDestIpGroupResult> DestIpGroups;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleDestIpv6GroupResult> DestIpv6Groups;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleDeviceGroupResult> DeviceGroups;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleDeviceResult> Devices;
        public readonly ImmutableArray<string> DnsRuleRequestTypes;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleGroupResult> Groups;
        public readonly int Id;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleLabelResult> Labels;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleLastModifiedByResult> LastModifiedBies;
        public readonly int LastModifiedTime;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleLocationGroupResult> LocationGroups;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleLocationResult> Locations;
        public readonly string Name;
        public readonly int Order;
        public readonly bool Predefined;
        public readonly ImmutableArray<string> Protocols;
        public readonly int Rank;
        public readonly string RedirectIp;
        public readonly ImmutableArray<string> ResCategories;
        public readonly ImmutableArray<string> SourceCountries;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleSrcIpGroupResult> SrcIpGroups;
        public readonly ImmutableArray<string> SrcIps;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleSrcIpv6GroupResult> SrcIpv6Groups;
        public readonly string State;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleTimeWindowResult> TimeWindows;
        public readonly ImmutableArray<Outputs.GetFirewallDnsRuleUserResult> Users;

        [OutputConstructor]
        private GetFirewallDnsRuleResult(
            string action,

            ImmutableArray<Outputs.GetFirewallDnsRuleApplicationGroupResult> applicationGroups,

            ImmutableArray<string> applications,

            string blockResponseCode,

            bool capturePcap,

            bool defaultRule,

            ImmutableArray<Outputs.GetFirewallDnsRuleDepartmentResult> departments,

            string description,

            ImmutableArray<string> destAddresses,

            ImmutableArray<string> destCountries,

            ImmutableArray<string> destIpCategories,

            ImmutableArray<Outputs.GetFirewallDnsRuleDestIpGroupResult> destIpGroups,

            ImmutableArray<Outputs.GetFirewallDnsRuleDestIpv6GroupResult> destIpv6Groups,

            ImmutableArray<Outputs.GetFirewallDnsRuleDeviceGroupResult> deviceGroups,

            ImmutableArray<Outputs.GetFirewallDnsRuleDeviceResult> devices,

            ImmutableArray<string> dnsRuleRequestTypes,

            ImmutableArray<Outputs.GetFirewallDnsRuleGroupResult> groups,

            int id,

            ImmutableArray<Outputs.GetFirewallDnsRuleLabelResult> labels,

            ImmutableArray<Outputs.GetFirewallDnsRuleLastModifiedByResult> lastModifiedBies,

            int lastModifiedTime,

            ImmutableArray<Outputs.GetFirewallDnsRuleLocationGroupResult> locationGroups,

            ImmutableArray<Outputs.GetFirewallDnsRuleLocationResult> locations,

            string name,

            int order,

            bool predefined,

            ImmutableArray<string> protocols,

            int rank,

            string redirectIp,

            ImmutableArray<string> resCategories,

            ImmutableArray<string> sourceCountries,

            ImmutableArray<Outputs.GetFirewallDnsRuleSrcIpGroupResult> srcIpGroups,

            ImmutableArray<string> srcIps,

            ImmutableArray<Outputs.GetFirewallDnsRuleSrcIpv6GroupResult> srcIpv6Groups,

            string state,

            ImmutableArray<Outputs.GetFirewallDnsRuleTimeWindowResult> timeWindows,

            ImmutableArray<Outputs.GetFirewallDnsRuleUserResult> users)
        {
            Action = action;
            ApplicationGroups = applicationGroups;
            Applications = applications;
            BlockResponseCode = blockResponseCode;
            CapturePcap = capturePcap;
            DefaultRule = defaultRule;
            Departments = departments;
            Description = description;
            DestAddresses = destAddresses;
            DestCountries = destCountries;
            DestIpCategories = destIpCategories;
            DestIpGroups = destIpGroups;
            DestIpv6Groups = destIpv6Groups;
            DeviceGroups = deviceGroups;
            Devices = devices;
            DnsRuleRequestTypes = dnsRuleRequestTypes;
            Groups = groups;
            Id = id;
            Labels = labels;
            LastModifiedBies = lastModifiedBies;
            LastModifiedTime = lastModifiedTime;
            LocationGroups = locationGroups;
            Locations = locations;
            Name = name;
            Order = order;
            Predefined = predefined;
            Protocols = protocols;
            Rank = rank;
            RedirectIp = redirectIp;
            ResCategories = resCategories;
            SourceCountries = sourceCountries;
            SrcIpGroups = srcIpGroups;
            SrcIps = srcIps;
            SrcIpv6Groups = srcIpv6Groups;
            State = state;
            TimeWindows = timeWindows;
            Users = users;
        }
    }
}
