// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    /// <summary>
    /// * [Official documentation](https://help.zscaler.com/zia/about-cloud-application-instances)
    /// * [API documentation](https://help.zscaler.com/zia/cloud-app-control-policy#/cloudApplicationInstances-post)
    /// 
    /// The **zia_cloud_application_instance** resource allows the creation and management of cloud application instance.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
    /// 
    /// Visit
    /// 
    /// **zia_cloud_application_instance** can be imported by using `&lt;INSTANCE_ID&gt;` or `&lt;INSTANCE_NAME&gt;` as the import ID.
    /// 
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import zia:index/cloudApplicationInstance:CloudApplicationInstance example &lt;instance_id&gt;
    /// ```
    /// 
    /// or
    /// 
    /// ```sh
    /// $ pulumi import zia:index/cloudApplicationInstance:CloudApplicationInstance example &lt;instance_name&gt;
    /// ```
    /// </summary>
    [ZiaResourceType("zia:index/cloudApplicationInstance:CloudApplicationInstance")]
    public partial class CloudApplicationInstance : global::Pulumi.CustomResource
    {
        [Output("instanceId")]
        public Output<int> InstanceId { get; private set; } = null!;

        /// <summary>
        /// List of identifiers for the cloud application instance.
        /// </summary>
        [Output("instanceIdentifiers")]
        public Output<ImmutableArray<Outputs.CloudApplicationInstanceInstanceIdentifier>> InstanceIdentifiers { get; private set; } = null!;

        /// <summary>
        /// Type of the cloud application instance.
        /// </summary>
        [Output("instanceType")]
        public Output<string?> InstanceType { get; private set; } = null!;

        /// <summary>
        /// Name of the cloud application instance.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a CloudApplicationInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudApplicationInstance(string name, CloudApplicationInstanceArgs? args = null, CustomResourceOptions? options = null)
            : base("zia:index/cloudApplicationInstance:CloudApplicationInstance", name, args ?? new CloudApplicationInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudApplicationInstance(string name, Input<string> id, CloudApplicationInstanceState? state = null, CustomResourceOptions? options = null)
            : base("zia:index/cloudApplicationInstance:CloudApplicationInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudApplicationInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudApplicationInstance Get(string name, Input<string> id, CloudApplicationInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudApplicationInstance(name, id, state, options);
        }
    }

    public sealed class CloudApplicationInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("instanceIdentifiers")]
        private InputList<Inputs.CloudApplicationInstanceInstanceIdentifierArgs>? _instanceIdentifiers;

        /// <summary>
        /// List of identifiers for the cloud application instance.
        /// </summary>
        public InputList<Inputs.CloudApplicationInstanceInstanceIdentifierArgs> InstanceIdentifiers
        {
            get => _instanceIdentifiers ?? (_instanceIdentifiers = new InputList<Inputs.CloudApplicationInstanceInstanceIdentifierArgs>());
            set => _instanceIdentifiers = value;
        }

        /// <summary>
        /// Type of the cloud application instance.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Name of the cloud application instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public CloudApplicationInstanceArgs()
        {
        }
        public static new CloudApplicationInstanceArgs Empty => new CloudApplicationInstanceArgs();
    }

    public sealed class CloudApplicationInstanceState : global::Pulumi.ResourceArgs
    {
        [Input("instanceId")]
        public Input<int>? InstanceId { get; set; }

        [Input("instanceIdentifiers")]
        private InputList<Inputs.CloudApplicationInstanceInstanceIdentifierGetArgs>? _instanceIdentifiers;

        /// <summary>
        /// List of identifiers for the cloud application instance.
        /// </summary>
        public InputList<Inputs.CloudApplicationInstanceInstanceIdentifierGetArgs> InstanceIdentifiers
        {
            get => _instanceIdentifiers ?? (_instanceIdentifiers = new InputList<Inputs.CloudApplicationInstanceInstanceIdentifierGetArgs>());
            set => _instanceIdentifiers = value;
        }

        /// <summary>
        /// Type of the cloud application instance.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Name of the cloud application instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public CloudApplicationInstanceState()
        {
        }
        public static new CloudApplicationInstanceState Empty => new CloudApplicationInstanceState();
    }
}
