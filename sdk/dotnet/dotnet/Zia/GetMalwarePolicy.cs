// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetMalwarePolicy
    {
        /// <summary>
        /// Use the **zia_atp_malware_policy** data source to retrieves information about the security exceptions configured for the Malware Protection policy. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// data "zia_atp_malware_policy" "this" {}
        /// ```
        /// </summary>
        public static Task<GetMalwarePolicyResult> InvokeAsync(GetMalwarePolicyArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMalwarePolicyResult>("zia:index/getMalwarePolicy:getMalwarePolicy", args ?? new GetMalwarePolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zia_atp_malware_policy** data source to retrieves information about the security exceptions configured for the Malware Protection policy. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// data "zia_atp_malware_policy" "this" {}
        /// ```
        /// </summary>
        public static Output<GetMalwarePolicyResult> Invoke(GetMalwarePolicyInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMalwarePolicyResult>("zia:index/getMalwarePolicy:getMalwarePolicy", args ?? new GetMalwarePolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zia_atp_malware_policy** data source to retrieves information about the security exceptions configured for the Malware Protection policy. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// data "zia_atp_malware_policy" "this" {}
        /// ```
        /// </summary>
        public static Output<GetMalwarePolicyResult> Invoke(GetMalwarePolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMalwarePolicyResult>("zia:index/getMalwarePolicy:getMalwarePolicy", args ?? new GetMalwarePolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMalwarePolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("blockPasswordProtectedArchiveFiles")]
        public bool? BlockPasswordProtectedArchiveFiles { get; set; }

        [Input("blockUnscannableFiles")]
        public bool? BlockUnscannableFiles { get; set; }

        public GetMalwarePolicyArgs()
        {
        }
        public static new GetMalwarePolicyArgs Empty => new GetMalwarePolicyArgs();
    }

    public sealed class GetMalwarePolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("blockPasswordProtectedArchiveFiles")]
        public Input<bool>? BlockPasswordProtectedArchiveFiles { get; set; }

        [Input("blockUnscannableFiles")]
        public Input<bool>? BlockUnscannableFiles { get; set; }

        public GetMalwarePolicyInvokeArgs()
        {
        }
        public static new GetMalwarePolicyInvokeArgs Empty => new GetMalwarePolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetMalwarePolicyResult
    {
        public readonly bool BlockPasswordProtectedArchiveFiles;
        public readonly bool BlockUnscannableFiles;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetMalwarePolicyResult(
            bool blockPasswordProtectedArchiveFiles,

            bool blockUnscannableFiles,

            string id)
        {
            BlockPasswordProtectedArchiveFiles = blockPasswordProtectedArchiveFiles;
            BlockUnscannableFiles = blockUnscannableFiles;
            Id = id;
        }
    }
}
