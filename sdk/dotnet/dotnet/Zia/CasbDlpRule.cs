// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    /// <summary>
    /// * [Official documentation](https://help.zscaler.com/zia/configuring-data-rest-scanning-dlp-policy)
    /// * [API documentation](https://help.zscaler.com/zia/saas-security-api#/casbDlpRules-post)
    /// 
    /// The **zia_casb_dlp_rules** resource Adds a new SaaS Security Data at Rest Scanning DLP rule in the Zscaler Internet Access.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
    /// 
    /// Visit
    /// 
    /// **zia_casb_dlp_rules** can be imported by using `&lt;RULE_TYPE:RULE_ID&gt;` or `&lt;RULE_TYPE:RULE_NAME&gt;` as the import ID.
    /// 
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import zia:index/casbDlpRule:CasbDlpRule this &lt;rule_type:rule_id&gt;
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import zia:index/casbDlpRule:CasbDlpRule this &lt;"rule_type:rule_name"&gt;
    /// ```
    /// </summary>
    [ZiaResourceType("zia:index/casbDlpRule:CasbDlpRule")]
    public partial class CasbDlpRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The configured action for the policy rule
        /// </summary>
        [Output("action")]
        public Output<string?> Action { get; private set; } = null!;

        /// <summary>
        /// Notification template used for DLP email alerts sent to the auditor
        /// </summary>
        [Output("auditorNotifications")]
        public Output<ImmutableArray<Outputs.CasbDlpRuleAuditorNotification>> AuditorNotifications { get; private set; } = null!;

        /// <summary>
        /// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
        /// field
        /// </summary>
        [Output("bucketOwner")]
        public Output<string?> BucketOwner { get; private set; } = null!;

        /// <summary>
        /// The buckets for the Zscaler service to inspect for sensitive data
        /// </summary>
        [Output("buckets")]
        public Output<Outputs.CasbDlpRuleBuckets?> Buckets { get; private set; } = null!;

        /// <summary>
        /// Name-ID of the email label associated with the rule
        /// </summary>
        [Output("casbEmailLabels")]
        public Output<ImmutableArray<Outputs.CasbDlpRuleCasbEmailLabel>> CasbEmailLabels { get; private set; } = null!;

        /// <summary>
        /// Name-ID of the quarantine tombstone template associated with the rule
        /// </summary>
        [Output("casbTombstoneTemplates")]
        public Output<ImmutableArray<Outputs.CasbDlpRuleCasbTombstoneTemplate>> CasbTombstoneTemplates { get; private set; } = null!;

        /// <summary>
        /// Name-ID pairs of the cloud application tenants for which the rule is applied
        /// </summary>
        [Output("cloudAppTenants")]
        public Output<Outputs.CasbDlpRuleCloudAppTenants?> CloudAppTenants { get; private set; } = null!;

        /// <summary>
        /// Collaboration scope for the rule
        /// </summary>
        [Output("collaborationScopes")]
        public Output<ImmutableArray<string>> CollaborationScopes { get; private set; } = null!;

        /// <summary>
        /// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
        /// </summary>
        [Output("components")]
        public Output<ImmutableArray<string>> Components { get; private set; } = null!;

        /// <summary>
        /// The location for the content that the Zscaler service inspects for sensitive data
        /// </summary>
        [Output("contentLocation")]
        public Output<string?> ContentLocation { get; private set; } = null!;

        /// <summary>
        /// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
        /// </summary>
        [Output("criteriaDomainProfiles")]
        public Output<Outputs.CasbDlpRuleCriteriaDomainProfiles?> CriteriaDomainProfiles { get; private set; } = null!;

        /// <summary>
        /// Name-ID pairs of departments for which rule must be applied
        /// </summary>
        [Output("departments")]
        public Output<Outputs.CasbDlpRuleDepartments?> Departments { get; private set; } = null!;

        /// <summary>
        /// An admin editable text-based description of the rule
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The list of DLP engines to which the DLP policy rule must be applied
        /// </summary>
        [Output("dlpEngines")]
        public Output<Outputs.CasbDlpRuleDlpEngines?> DlpEngines { get; private set; } = null!;

        /// <summary>
        /// The domain for the external organization sharing the channel
        /// </summary>
        [Output("domains")]
        public Output<ImmutableArray<string>> Domains { get; private set; } = null!;

        /// <summary>
        /// Name-ID pairs of recipient profiles for which the rule is applied
        /// </summary>
        [Output("emailRecipientProfiles")]
        public Output<Outputs.CasbDlpRuleEmailRecipientProfiles?> EmailRecipientProfiles { get; private set; } = null!;

        /// <summary>
        /// Name-ID pairs of entity groups that are part of the rule criteria
        /// </summary>
        [Output("entityGroups")]
        public Output<Outputs.CasbDlpRuleEntityGroups?> EntityGroups { get; private set; } = null!;

        /// <summary>
        /// Name-ID pairs of domain profiles excluded in the criteria for the rule
        /// </summary>
        [Output("excludedDomainProfiles")]
        public Output<Outputs.CasbDlpRuleExcludedDomainProfiles?> ExcludedDomainProfiles { get; private set; } = null!;

        /// <summary>
        /// Email address of the external auditor to whom the DLP email alerts are sent
        /// </summary>
        [Output("externalAuditorEmail")]
        public Output<string?> ExternalAuditorEmail { get; private set; } = null!;

        /// <summary>
        /// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
        /// </summary>
        [Output("fileTypes")]
        public Output<ImmutableArray<string>> FileTypes { get; private set; } = null!;

        /// <summary>
        /// Name-ID pairs of groups for which the rule is applied
        /// </summary>
        [Output("groups")]
        public Output<Outputs.CasbDlpRuleGroups?> Groups { get; private set; } = null!;

        /// <summary>
        /// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
        /// </summary>
        [Output("includeCriteriaDomainProfile")]
        public Output<bool?> IncludeCriteriaDomainProfile { get; private set; } = null!;

        /// <summary>
        /// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
        /// </summary>
        [Output("includeEmailRecipientProfile")]
        public Output<bool?> IncludeEmailRecipientProfile { get; private set; } = null!;

        /// <summary>
        /// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
        /// </summary>
        [Output("includeEntityGroups")]
        public Output<bool> IncludeEntityGroups { get; private set; } = null!;

        /// <summary>
        /// Name-ID pairs of domain profiles included in the criteria for the rule
        /// </summary>
        [Output("includedDomainProfiles")]
        public Output<Outputs.CasbDlpRuleIncludedDomainProfiles?> IncludedDomainProfiles { get; private set; } = null!;

        /// <summary>
        /// Name-ID pairs of rule labels associated with the rule
        /// </summary>
        [Output("labels")]
        public Output<Outputs.CasbDlpRuleLabels?> Labels { get; private set; } = null!;

        /// <summary>
        /// Rule name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of object types for which the rule is applied
        /// </summary>
        [Output("objectTypes")]
        public Output<Outputs.CasbDlpRuleObjectTypes?> ObjectTypes { get; private set; } = null!;

        /// <summary>
        /// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
        /// </summary>
        [Output("order")]
        public Output<int?> Order { get; private set; } = null!;

        /// <summary>
        /// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
        /// data
        /// </summary>
        [Output("quarantineLocation")]
        public Output<string?> QuarantineLocation { get; private set; } = null!;

        /// <summary>
        /// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
        /// </summary>
        [Output("rank")]
        public Output<int?> Rank { get; private set; } = null!;

        /// <summary>
        /// Specifies if the email recipient is internal or external
        /// </summary>
        [Output("recipient")]
        public Output<string?> Recipient { get; private set; } = null!;

        /// <summary>
        /// Name-ID of the redaction profile in the criteria
        /// </summary>
        [Output("redactionProfiles")]
        public Output<ImmutableArray<Outputs.CasbDlpRuleRedactionProfile>> RedactionProfiles { get; private set; } = null!;

        /// <summary>
        /// System-generated identifier for the SaaS Security Data at Rest Scanning DLP rule
        /// </summary>
        [Output("ruleId")]
        public Output<int> RuleId { get; private set; } = null!;

        /// <summary>
        /// The severity level of the incidents that match the policy rule
        /// </summary>
        [Output("severity")]
        public Output<string?> Severity { get; private set; } = null!;

        /// <summary>
        /// Administrative state of the rule
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// Tag applied to the rule
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.CasbDlpRuleTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of SaaS Security Data at Rest Scanning DLP rule
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// Name-ID pairs of users for which rule must be applied
        /// </summary>
        [Output("users")]
        public Output<Outputs.CasbDlpRuleUsers?> Users { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to delete an old version of the watermarked file
        /// </summary>
        [Output("watermarkDeleteOldVersion")]
        public Output<bool?> WatermarkDeleteOldVersion { get; private set; } = null!;

        /// <summary>
        /// Watermark profile applied to the rule
        /// </summary>
        [Output("watermarkProfiles")]
        public Output<ImmutableArray<Outputs.CasbDlpRuleWatermarkProfile>> WatermarkProfiles { get; private set; } = null!;

        /// <summary>
        /// If true, Content Matching is set to None
        /// </summary>
        [Output("withoutContentInspection")]
        public Output<bool?> WithoutContentInspection { get; private set; } = null!;

        /// <summary>
        /// The Zscaler Incident Receiver details
        /// </summary>
        [Output("zscalerIncidentReceivers")]
        public Output<ImmutableArray<Outputs.CasbDlpRuleZscalerIncidentReceiver>> ZscalerIncidentReceivers { get; private set; } = null!;


        /// <summary>
        /// Create a CasbDlpRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CasbDlpRule(string name, CasbDlpRuleArgs? args = null, CustomResourceOptions? options = null)
            : base("zia:index/casbDlpRule:CasbDlpRule", name, args ?? new CasbDlpRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CasbDlpRule(string name, Input<string> id, CasbDlpRuleState? state = null, CustomResourceOptions? options = null)
            : base("zia:index/casbDlpRule:CasbDlpRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "zia:index/casbDlpRules:CasbDlpRules" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CasbDlpRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CasbDlpRule Get(string name, Input<string> id, CasbDlpRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new CasbDlpRule(name, id, state, options);
        }
    }

    public sealed class CasbDlpRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configured action for the policy rule
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("auditorNotifications")]
        private InputList<Inputs.CasbDlpRuleAuditorNotificationArgs>? _auditorNotifications;

        /// <summary>
        /// Notification template used for DLP email alerts sent to the auditor
        /// </summary>
        public InputList<Inputs.CasbDlpRuleAuditorNotificationArgs> AuditorNotifications
        {
            get => _auditorNotifications ?? (_auditorNotifications = new InputList<Inputs.CasbDlpRuleAuditorNotificationArgs>());
            set => _auditorNotifications = value;
        }

        /// <summary>
        /// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
        /// field
        /// </summary>
        [Input("bucketOwner")]
        public Input<string>? BucketOwner { get; set; }

        /// <summary>
        /// The buckets for the Zscaler service to inspect for sensitive data
        /// </summary>
        [Input("buckets")]
        public Input<Inputs.CasbDlpRuleBucketsArgs>? Buckets { get; set; }

        [Input("casbEmailLabels")]
        private InputList<Inputs.CasbDlpRuleCasbEmailLabelArgs>? _casbEmailLabels;

        /// <summary>
        /// Name-ID of the email label associated with the rule
        /// </summary>
        public InputList<Inputs.CasbDlpRuleCasbEmailLabelArgs> CasbEmailLabels
        {
            get => _casbEmailLabels ?? (_casbEmailLabels = new InputList<Inputs.CasbDlpRuleCasbEmailLabelArgs>());
            set => _casbEmailLabels = value;
        }

        [Input("casbTombstoneTemplates")]
        private InputList<Inputs.CasbDlpRuleCasbTombstoneTemplateArgs>? _casbTombstoneTemplates;

        /// <summary>
        /// Name-ID of the quarantine tombstone template associated with the rule
        /// </summary>
        public InputList<Inputs.CasbDlpRuleCasbTombstoneTemplateArgs> CasbTombstoneTemplates
        {
            get => _casbTombstoneTemplates ?? (_casbTombstoneTemplates = new InputList<Inputs.CasbDlpRuleCasbTombstoneTemplateArgs>());
            set => _casbTombstoneTemplates = value;
        }

        /// <summary>
        /// Name-ID pairs of the cloud application tenants for which the rule is applied
        /// </summary>
        [Input("cloudAppTenants")]
        public Input<Inputs.CasbDlpRuleCloudAppTenantsArgs>? CloudAppTenants { get; set; }

        [Input("collaborationScopes")]
        private InputList<string>? _collaborationScopes;

        /// <summary>
        /// Collaboration scope for the rule
        /// </summary>
        public InputList<string> CollaborationScopes
        {
            get => _collaborationScopes ?? (_collaborationScopes = new InputList<string>());
            set => _collaborationScopes = value;
        }

        [Input("components")]
        private InputList<string>? _components;

        /// <summary>
        /// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
        /// </summary>
        public InputList<string> Components
        {
            get => _components ?? (_components = new InputList<string>());
            set => _components = value;
        }

        /// <summary>
        /// The location for the content that the Zscaler service inspects for sensitive data
        /// </summary>
        [Input("contentLocation")]
        public Input<string>? ContentLocation { get; set; }

        /// <summary>
        /// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
        /// </summary>
        [Input("criteriaDomainProfiles")]
        public Input<Inputs.CasbDlpRuleCriteriaDomainProfilesArgs>? CriteriaDomainProfiles { get; set; }

        /// <summary>
        /// Name-ID pairs of departments for which rule must be applied
        /// </summary>
        [Input("departments")]
        public Input<Inputs.CasbDlpRuleDepartmentsArgs>? Departments { get; set; }

        /// <summary>
        /// An admin editable text-based description of the rule
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The list of DLP engines to which the DLP policy rule must be applied
        /// </summary>
        [Input("dlpEngines")]
        public Input<Inputs.CasbDlpRuleDlpEnginesArgs>? DlpEngines { get; set; }

        [Input("domains")]
        private InputList<string>? _domains;

        /// <summary>
        /// The domain for the external organization sharing the channel
        /// </summary>
        public InputList<string> Domains
        {
            get => _domains ?? (_domains = new InputList<string>());
            set => _domains = value;
        }

        /// <summary>
        /// Name-ID pairs of recipient profiles for which the rule is applied
        /// </summary>
        [Input("emailRecipientProfiles")]
        public Input<Inputs.CasbDlpRuleEmailRecipientProfilesArgs>? EmailRecipientProfiles { get; set; }

        /// <summary>
        /// Name-ID pairs of entity groups that are part of the rule criteria
        /// </summary>
        [Input("entityGroups")]
        public Input<Inputs.CasbDlpRuleEntityGroupsArgs>? EntityGroups { get; set; }

        /// <summary>
        /// Name-ID pairs of domain profiles excluded in the criteria for the rule
        /// </summary>
        [Input("excludedDomainProfiles")]
        public Input<Inputs.CasbDlpRuleExcludedDomainProfilesArgs>? ExcludedDomainProfiles { get; set; }

        /// <summary>
        /// Email address of the external auditor to whom the DLP email alerts are sent
        /// </summary>
        [Input("externalAuditorEmail")]
        public Input<string>? ExternalAuditorEmail { get; set; }

        [Input("fileTypes")]
        private InputList<string>? _fileTypes;

        /// <summary>
        /// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
        /// </summary>
        public InputList<string> FileTypes
        {
            get => _fileTypes ?? (_fileTypes = new InputList<string>());
            set => _fileTypes = value;
        }

        /// <summary>
        /// Name-ID pairs of groups for which the rule is applied
        /// </summary>
        [Input("groups")]
        public Input<Inputs.CasbDlpRuleGroupsArgs>? Groups { get; set; }

        /// <summary>
        /// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
        /// </summary>
        [Input("includeCriteriaDomainProfile")]
        public Input<bool>? IncludeCriteriaDomainProfile { get; set; }

        /// <summary>
        /// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
        /// </summary>
        [Input("includeEmailRecipientProfile")]
        public Input<bool>? IncludeEmailRecipientProfile { get; set; }

        /// <summary>
        /// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
        /// </summary>
        [Input("includeEntityGroups")]
        public Input<bool>? IncludeEntityGroups { get; set; }

        /// <summary>
        /// Name-ID pairs of domain profiles included in the criteria for the rule
        /// </summary>
        [Input("includedDomainProfiles")]
        public Input<Inputs.CasbDlpRuleIncludedDomainProfilesArgs>? IncludedDomainProfiles { get; set; }

        /// <summary>
        /// Name-ID pairs of rule labels associated with the rule
        /// </summary>
        [Input("labels")]
        public Input<Inputs.CasbDlpRuleLabelsArgs>? Labels { get; set; }

        /// <summary>
        /// Rule name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// List of object types for which the rule is applied
        /// </summary>
        [Input("objectTypes")]
        public Input<Inputs.CasbDlpRuleObjectTypesArgs>? ObjectTypes { get; set; }

        /// <summary>
        /// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
        /// </summary>
        [Input("order")]
        public Input<int>? Order { get; set; }

        /// <summary>
        /// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
        /// data
        /// </summary>
        [Input("quarantineLocation")]
        public Input<string>? QuarantineLocation { get; set; }

        /// <summary>
        /// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
        /// </summary>
        [Input("rank")]
        public Input<int>? Rank { get; set; }

        /// <summary>
        /// Specifies if the email recipient is internal or external
        /// </summary>
        [Input("recipient")]
        public Input<string>? Recipient { get; set; }

        [Input("redactionProfiles")]
        private InputList<Inputs.CasbDlpRuleRedactionProfileArgs>? _redactionProfiles;

        /// <summary>
        /// Name-ID of the redaction profile in the criteria
        /// </summary>
        public InputList<Inputs.CasbDlpRuleRedactionProfileArgs> RedactionProfiles
        {
            get => _redactionProfiles ?? (_redactionProfiles = new InputList<Inputs.CasbDlpRuleRedactionProfileArgs>());
            set => _redactionProfiles = value;
        }

        /// <summary>
        /// The severity level of the incidents that match the policy rule
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        /// <summary>
        /// Administrative state of the rule
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputList<Inputs.CasbDlpRuleTagArgs>? _tags;

        /// <summary>
        /// Tag applied to the rule
        /// </summary>
        public InputList<Inputs.CasbDlpRuleTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.CasbDlpRuleTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of SaaS Security Data at Rest Scanning DLP rule
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Name-ID pairs of users for which rule must be applied
        /// </summary>
        [Input("users")]
        public Input<Inputs.CasbDlpRuleUsersArgs>? Users { get; set; }

        /// <summary>
        /// Specifies whether to delete an old version of the watermarked file
        /// </summary>
        [Input("watermarkDeleteOldVersion")]
        public Input<bool>? WatermarkDeleteOldVersion { get; set; }

        [Input("watermarkProfiles")]
        private InputList<Inputs.CasbDlpRuleWatermarkProfileArgs>? _watermarkProfiles;

        /// <summary>
        /// Watermark profile applied to the rule
        /// </summary>
        public InputList<Inputs.CasbDlpRuleWatermarkProfileArgs> WatermarkProfiles
        {
            get => _watermarkProfiles ?? (_watermarkProfiles = new InputList<Inputs.CasbDlpRuleWatermarkProfileArgs>());
            set => _watermarkProfiles = value;
        }

        /// <summary>
        /// If true, Content Matching is set to None
        /// </summary>
        [Input("withoutContentInspection")]
        public Input<bool>? WithoutContentInspection { get; set; }

        [Input("zscalerIncidentReceivers")]
        private InputList<Inputs.CasbDlpRuleZscalerIncidentReceiverArgs>? _zscalerIncidentReceivers;

        /// <summary>
        /// The Zscaler Incident Receiver details
        /// </summary>
        public InputList<Inputs.CasbDlpRuleZscalerIncidentReceiverArgs> ZscalerIncidentReceivers
        {
            get => _zscalerIncidentReceivers ?? (_zscalerIncidentReceivers = new InputList<Inputs.CasbDlpRuleZscalerIncidentReceiverArgs>());
            set => _zscalerIncidentReceivers = value;
        }

        public CasbDlpRuleArgs()
        {
        }
        public static new CasbDlpRuleArgs Empty => new CasbDlpRuleArgs();
    }

    public sealed class CasbDlpRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configured action for the policy rule
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("auditorNotifications")]
        private InputList<Inputs.CasbDlpRuleAuditorNotificationGetArgs>? _auditorNotifications;

        /// <summary>
        /// Notification template used for DLP email alerts sent to the auditor
        /// </summary>
        public InputList<Inputs.CasbDlpRuleAuditorNotificationGetArgs> AuditorNotifications
        {
            get => _auditorNotifications ?? (_auditorNotifications = new InputList<Inputs.CasbDlpRuleAuditorNotificationGetArgs>());
            set => _auditorNotifications = value;
        }

        /// <summary>
        /// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
        /// field
        /// </summary>
        [Input("bucketOwner")]
        public Input<string>? BucketOwner { get; set; }

        /// <summary>
        /// The buckets for the Zscaler service to inspect for sensitive data
        /// </summary>
        [Input("buckets")]
        public Input<Inputs.CasbDlpRuleBucketsGetArgs>? Buckets { get; set; }

        [Input("casbEmailLabels")]
        private InputList<Inputs.CasbDlpRuleCasbEmailLabelGetArgs>? _casbEmailLabels;

        /// <summary>
        /// Name-ID of the email label associated with the rule
        /// </summary>
        public InputList<Inputs.CasbDlpRuleCasbEmailLabelGetArgs> CasbEmailLabels
        {
            get => _casbEmailLabels ?? (_casbEmailLabels = new InputList<Inputs.CasbDlpRuleCasbEmailLabelGetArgs>());
            set => _casbEmailLabels = value;
        }

        [Input("casbTombstoneTemplates")]
        private InputList<Inputs.CasbDlpRuleCasbTombstoneTemplateGetArgs>? _casbTombstoneTemplates;

        /// <summary>
        /// Name-ID of the quarantine tombstone template associated with the rule
        /// </summary>
        public InputList<Inputs.CasbDlpRuleCasbTombstoneTemplateGetArgs> CasbTombstoneTemplates
        {
            get => _casbTombstoneTemplates ?? (_casbTombstoneTemplates = new InputList<Inputs.CasbDlpRuleCasbTombstoneTemplateGetArgs>());
            set => _casbTombstoneTemplates = value;
        }

        /// <summary>
        /// Name-ID pairs of the cloud application tenants for which the rule is applied
        /// </summary>
        [Input("cloudAppTenants")]
        public Input<Inputs.CasbDlpRuleCloudAppTenantsGetArgs>? CloudAppTenants { get; set; }

        [Input("collaborationScopes")]
        private InputList<string>? _collaborationScopes;

        /// <summary>
        /// Collaboration scope for the rule
        /// </summary>
        public InputList<string> CollaborationScopes
        {
            get => _collaborationScopes ?? (_collaborationScopes = new InputList<string>());
            set => _collaborationScopes = value;
        }

        [Input("components")]
        private InputList<string>? _components;

        /// <summary>
        /// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
        /// </summary>
        public InputList<string> Components
        {
            get => _components ?? (_components = new InputList<string>());
            set => _components = value;
        }

        /// <summary>
        /// The location for the content that the Zscaler service inspects for sensitive data
        /// </summary>
        [Input("contentLocation")]
        public Input<string>? ContentLocation { get; set; }

        /// <summary>
        /// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
        /// </summary>
        [Input("criteriaDomainProfiles")]
        public Input<Inputs.CasbDlpRuleCriteriaDomainProfilesGetArgs>? CriteriaDomainProfiles { get; set; }

        /// <summary>
        /// Name-ID pairs of departments for which rule must be applied
        /// </summary>
        [Input("departments")]
        public Input<Inputs.CasbDlpRuleDepartmentsGetArgs>? Departments { get; set; }

        /// <summary>
        /// An admin editable text-based description of the rule
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The list of DLP engines to which the DLP policy rule must be applied
        /// </summary>
        [Input("dlpEngines")]
        public Input<Inputs.CasbDlpRuleDlpEnginesGetArgs>? DlpEngines { get; set; }

        [Input("domains")]
        private InputList<string>? _domains;

        /// <summary>
        /// The domain for the external organization sharing the channel
        /// </summary>
        public InputList<string> Domains
        {
            get => _domains ?? (_domains = new InputList<string>());
            set => _domains = value;
        }

        /// <summary>
        /// Name-ID pairs of recipient profiles for which the rule is applied
        /// </summary>
        [Input("emailRecipientProfiles")]
        public Input<Inputs.CasbDlpRuleEmailRecipientProfilesGetArgs>? EmailRecipientProfiles { get; set; }

        /// <summary>
        /// Name-ID pairs of entity groups that are part of the rule criteria
        /// </summary>
        [Input("entityGroups")]
        public Input<Inputs.CasbDlpRuleEntityGroupsGetArgs>? EntityGroups { get; set; }

        /// <summary>
        /// Name-ID pairs of domain profiles excluded in the criteria for the rule
        /// </summary>
        [Input("excludedDomainProfiles")]
        public Input<Inputs.CasbDlpRuleExcludedDomainProfilesGetArgs>? ExcludedDomainProfiles { get; set; }

        /// <summary>
        /// Email address of the external auditor to whom the DLP email alerts are sent
        /// </summary>
        [Input("externalAuditorEmail")]
        public Input<string>? ExternalAuditorEmail { get; set; }

        [Input("fileTypes")]
        private InputList<string>? _fileTypes;

        /// <summary>
        /// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
        /// </summary>
        public InputList<string> FileTypes
        {
            get => _fileTypes ?? (_fileTypes = new InputList<string>());
            set => _fileTypes = value;
        }

        /// <summary>
        /// Name-ID pairs of groups for which the rule is applied
        /// </summary>
        [Input("groups")]
        public Input<Inputs.CasbDlpRuleGroupsGetArgs>? Groups { get; set; }

        /// <summary>
        /// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
        /// </summary>
        [Input("includeCriteriaDomainProfile")]
        public Input<bool>? IncludeCriteriaDomainProfile { get; set; }

        /// <summary>
        /// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
        /// </summary>
        [Input("includeEmailRecipientProfile")]
        public Input<bool>? IncludeEmailRecipientProfile { get; set; }

        /// <summary>
        /// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
        /// </summary>
        [Input("includeEntityGroups")]
        public Input<bool>? IncludeEntityGroups { get; set; }

        /// <summary>
        /// Name-ID pairs of domain profiles included in the criteria for the rule
        /// </summary>
        [Input("includedDomainProfiles")]
        public Input<Inputs.CasbDlpRuleIncludedDomainProfilesGetArgs>? IncludedDomainProfiles { get; set; }

        /// <summary>
        /// Name-ID pairs of rule labels associated with the rule
        /// </summary>
        [Input("labels")]
        public Input<Inputs.CasbDlpRuleLabelsGetArgs>? Labels { get; set; }

        /// <summary>
        /// Rule name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// List of object types for which the rule is applied
        /// </summary>
        [Input("objectTypes")]
        public Input<Inputs.CasbDlpRuleObjectTypesGetArgs>? ObjectTypes { get; set; }

        /// <summary>
        /// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
        /// </summary>
        [Input("order")]
        public Input<int>? Order { get; set; }

        /// <summary>
        /// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
        /// data
        /// </summary>
        [Input("quarantineLocation")]
        public Input<string>? QuarantineLocation { get; set; }

        /// <summary>
        /// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
        /// </summary>
        [Input("rank")]
        public Input<int>? Rank { get; set; }

        /// <summary>
        /// Specifies if the email recipient is internal or external
        /// </summary>
        [Input("recipient")]
        public Input<string>? Recipient { get; set; }

        [Input("redactionProfiles")]
        private InputList<Inputs.CasbDlpRuleRedactionProfileGetArgs>? _redactionProfiles;

        /// <summary>
        /// Name-ID of the redaction profile in the criteria
        /// </summary>
        public InputList<Inputs.CasbDlpRuleRedactionProfileGetArgs> RedactionProfiles
        {
            get => _redactionProfiles ?? (_redactionProfiles = new InputList<Inputs.CasbDlpRuleRedactionProfileGetArgs>());
            set => _redactionProfiles = value;
        }

        /// <summary>
        /// System-generated identifier for the SaaS Security Data at Rest Scanning DLP rule
        /// </summary>
        [Input("ruleId")]
        public Input<int>? RuleId { get; set; }

        /// <summary>
        /// The severity level of the incidents that match the policy rule
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        /// <summary>
        /// Administrative state of the rule
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputList<Inputs.CasbDlpRuleTagGetArgs>? _tags;

        /// <summary>
        /// Tag applied to the rule
        /// </summary>
        public InputList<Inputs.CasbDlpRuleTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.CasbDlpRuleTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of SaaS Security Data at Rest Scanning DLP rule
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Name-ID pairs of users for which rule must be applied
        /// </summary>
        [Input("users")]
        public Input<Inputs.CasbDlpRuleUsersGetArgs>? Users { get; set; }

        /// <summary>
        /// Specifies whether to delete an old version of the watermarked file
        /// </summary>
        [Input("watermarkDeleteOldVersion")]
        public Input<bool>? WatermarkDeleteOldVersion { get; set; }

        [Input("watermarkProfiles")]
        private InputList<Inputs.CasbDlpRuleWatermarkProfileGetArgs>? _watermarkProfiles;

        /// <summary>
        /// Watermark profile applied to the rule
        /// </summary>
        public InputList<Inputs.CasbDlpRuleWatermarkProfileGetArgs> WatermarkProfiles
        {
            get => _watermarkProfiles ?? (_watermarkProfiles = new InputList<Inputs.CasbDlpRuleWatermarkProfileGetArgs>());
            set => _watermarkProfiles = value;
        }

        /// <summary>
        /// If true, Content Matching is set to None
        /// </summary>
        [Input("withoutContentInspection")]
        public Input<bool>? WithoutContentInspection { get; set; }

        [Input("zscalerIncidentReceivers")]
        private InputList<Inputs.CasbDlpRuleZscalerIncidentReceiverGetArgs>? _zscalerIncidentReceivers;

        /// <summary>
        /// The Zscaler Incident Receiver details
        /// </summary>
        public InputList<Inputs.CasbDlpRuleZscalerIncidentReceiverGetArgs> ZscalerIncidentReceivers
        {
            get => _zscalerIncidentReceivers ?? (_zscalerIncidentReceivers = new InputList<Inputs.CasbDlpRuleZscalerIncidentReceiverGetArgs>());
            set => _zscalerIncidentReceivers = value;
        }

        public CasbDlpRuleState()
        {
        }
        public static new CasbDlpRuleState Empty => new CasbDlpRuleState();
    }
}
