// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetDomainProfiles
    {
        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-email-profiles)
        /// * [API documentation](https://help.zscaler.com/zia/saas-security-api#/domainProfiles/lite-get)
        /// 
        /// Use the **zia_domain_profiles** data source to get information about a ZIA Domain Profiles in the Zscaler Internet Access cloud or via the API. The resource can then be utilized when configuring a Web DLP Rule resource `zia.DLPWebRules`
        /// 
        /// ## Example Usage
        /// 
        /// ### By Name
        /// 
        /// ```hcl
        /// data "zia_domain_profiles" "this"{
        ///     profile_name = "Example"
        /// }
        /// ```
        /// 
        /// ### By ID
        /// 
        /// ```hcl
        /// data "zia_domain_profiles" "this"{
        ///     profile_id = "Example"
        /// }
        /// ```
        /// </summary>
        public static Task<GetDomainProfilesResult> InvokeAsync(GetDomainProfilesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainProfilesResult>("zia:index/getDomainProfiles:getDomainProfiles", args ?? new GetDomainProfilesArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-email-profiles)
        /// * [API documentation](https://help.zscaler.com/zia/saas-security-api#/domainProfiles/lite-get)
        /// 
        /// Use the **zia_domain_profiles** data source to get information about a ZIA Domain Profiles in the Zscaler Internet Access cloud or via the API. The resource can then be utilized when configuring a Web DLP Rule resource `zia.DLPWebRules`
        /// 
        /// ## Example Usage
        /// 
        /// ### By Name
        /// 
        /// ```hcl
        /// data "zia_domain_profiles" "this"{
        ///     profile_name = "Example"
        /// }
        /// ```
        /// 
        /// ### By ID
        /// 
        /// ```hcl
        /// data "zia_domain_profiles" "this"{
        ///     profile_id = "Example"
        /// }
        /// ```
        /// </summary>
        public static Output<GetDomainProfilesResult> Invoke(GetDomainProfilesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainProfilesResult>("zia:index/getDomainProfiles:getDomainProfiles", args ?? new GetDomainProfilesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-email-profiles)
        /// * [API documentation](https://help.zscaler.com/zia/saas-security-api#/domainProfiles/lite-get)
        /// 
        /// Use the **zia_domain_profiles** data source to get information about a ZIA Domain Profiles in the Zscaler Internet Access cloud or via the API. The resource can then be utilized when configuring a Web DLP Rule resource `zia.DLPWebRules`
        /// 
        /// ## Example Usage
        /// 
        /// ### By Name
        /// 
        /// ```hcl
        /// data "zia_domain_profiles" "this"{
        ///     profile_name = "Example"
        /// }
        /// ```
        /// 
        /// ### By ID
        /// 
        /// ```hcl
        /// data "zia_domain_profiles" "this"{
        ///     profile_id = "Example"
        /// }
        /// ```
        /// </summary>
        public static Output<GetDomainProfilesResult> Invoke(GetDomainProfilesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainProfilesResult>("zia:index/getDomainProfiles:getDomainProfiles", args ?? new GetDomainProfilesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainProfilesArgs : global::Pulumi.InvokeArgs
    {
        [Input("profileId")]
        public int? ProfileId { get; set; }

        [Input("profileName")]
        public string? ProfileName { get; set; }

        public GetDomainProfilesArgs()
        {
        }
        public static new GetDomainProfilesArgs Empty => new GetDomainProfilesArgs();
    }

    public sealed class GetDomainProfilesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("profileId")]
        public Input<int>? ProfileId { get; set; }

        [Input("profileName")]
        public Input<string>? ProfileName { get; set; }

        public GetDomainProfilesInvokeArgs()
        {
        }
        public static new GetDomainProfilesInvokeArgs Empty => new GetDomainProfilesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainProfilesResult
    {
        public readonly ImmutableArray<string> CustomDomains;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool IncludeCompanyDomains;
        public readonly bool IncludeSubdomains;
        public readonly ImmutableArray<string> PredefinedEmailDomains;
        public readonly int ProfileId;
        public readonly string ProfileName;

        [OutputConstructor]
        private GetDomainProfilesResult(
            ImmutableArray<string> customDomains,

            string description,

            string id,

            bool includeCompanyDomains,

            bool includeSubdomains,

            ImmutableArray<string> predefinedEmailDomains,

            int profileId,

            string profileName)
        {
            CustomDomains = customDomains;
            Description = description;
            Id = id;
            IncludeCompanyDomains = includeCompanyDomains;
            IncludeSubdomains = includeSubdomains;
            PredefinedEmailDomains = predefinedEmailDomains;
            ProfileId = profileId;
            ProfileName = profileName;
        }
    }
}
