// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia.Outputs
{

    [OutputType]
    public sealed class GetWorkloadGroupsExpressionJsonExpressionContainerTagContainerResult
    {
        /// <summary>
        /// (String) The operator (either AND or OR) used to create logical relationships among tag types. Returned values are: ``AND``, ``OR``, ``OPEN_PARENTHESES``, ``CLOSE_PARENTHESES``
        /// </summary>
        public readonly string Operator;
        /// <summary>
        /// (String) One or more tags, each consisting of a key-value pair, selected within a tag type. If multiple tags are present within a tag type, they are combined using a logical operator. Note: A maximum of 8 tags can be added to a workload group, irrespective of the number of tag types present.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkloadGroupsExpressionJsonExpressionContainerTagContainerTagResult> Tags;

        [OutputConstructor]
        private GetWorkloadGroupsExpressionJsonExpressionContainerTagContainerResult(
            string @operator,

            ImmutableArray<Outputs.GetWorkloadGroupsExpressionJsonExpressionContainerTagContainerTagResult> tags)
        {
            Operator = @operator;
            Tags = tags;
        }
    }
}
