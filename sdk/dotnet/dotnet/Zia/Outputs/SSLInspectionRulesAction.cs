// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia.Outputs
{

    [OutputType]
    public sealed class SSLInspectionRulesAction
    {
        /// <summary>
        /// (Block List) - Action taken when enabling SSL intercept
        /// </summary>
        public readonly ImmutableArray<Outputs.SSLInspectionRulesActionDecryptSubAction> DecryptSubActions;
        /// <summary>
        /// (Block List) - Action taken when bypassing SSL intercept
        /// </summary>
        public readonly ImmutableArray<Outputs.SSLInspectionRulesActionDoNotDecryptSubAction> DoNotDecryptSubActions;
        /// <summary>
        /// (Boolean) - Whether to override the default SSL interception certificate.
        /// </summary>
        public readonly bool? OverrideDefaultCertificate;
        /// <summary>
        /// (Boolean) - Enable this setting to display end user notifications.
        /// </summary>
        public readonly bool? ShowEun;
        /// <summary>
        /// (Boolean) - Whether to display the EUN ATP page.
        /// </summary>
        public readonly bool? ShowEunatp;
        /// <summary>
        /// has the following attributes:
        /// **NOTE** This block can only be set when `override_default_certificate` is `true`
        /// </summary>
        public readonly ImmutableArray<Outputs.SSLInspectionRulesActionSslInterceptionCert> SslInterceptionCerts;
        /// <summary>
        /// (String) - The action type for this rule. Possible values: `BLOCK`.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private SSLInspectionRulesAction(
            ImmutableArray<Outputs.SSLInspectionRulesActionDecryptSubAction> decryptSubActions,

            ImmutableArray<Outputs.SSLInspectionRulesActionDoNotDecryptSubAction> doNotDecryptSubActions,

            bool? overrideDefaultCertificate,

            bool? showEun,

            bool? showEunatp,

            ImmutableArray<Outputs.SSLInspectionRulesActionSslInterceptionCert> sslInterceptionCerts,

            string? type)
        {
            DecryptSubActions = decryptSubActions;
            DoNotDecryptSubActions = doNotDecryptSubActions;
            OverrideDefaultCertificate = overrideDefaultCertificate;
            ShowEun = showEun;
            ShowEunatp = showEunatp;
            SslInterceptionCerts = sslInterceptionCerts;
            Type = type;
        }
    }
}
