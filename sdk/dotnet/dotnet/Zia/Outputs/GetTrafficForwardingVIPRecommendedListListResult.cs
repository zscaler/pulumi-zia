// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia.Outputs
{

    [OutputType]
    public sealed class GetTrafficForwardingVIPRecommendedListListResult
    {
        /// <summary>
        /// (String) Data center city information
        /// </summary>
        public readonly string City;
        /// <summary>
        /// (String) Data center information
        /// </summary>
        public readonly string? Datacenter;
        /// <summary>
        /// Unique identifer of the GRE virtual IP address (VIP)
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// (Number) The latitude coordinate of the GRE tunnel source.
        /// </summary>
        public readonly double Latitude;
        /// <summary>
        /// (Number) The longitude coordinate of the GRE tunnel source.
        /// </summary>
        public readonly double Longitude;
        /// <summary>
        /// (Boolean) Set to true if the virtual IP address (VIP) is a ZIA Private Service Edge
        /// </summary>
        public readonly bool? PrivateServiceEdge;
        /// <summary>
        /// (String) Data center region information.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// (String) GRE cluster virtual IP address (VIP)
        /// </summary>
        public readonly string? VirtualIp;

        [OutputConstructor]
        private GetTrafficForwardingVIPRecommendedListListResult(
            string city,

            string? datacenter,

            int? id,

            double latitude,

            double longitude,

            bool? privateServiceEdge,

            string region,

            string? virtualIp)
        {
            City = city;
            Datacenter = datacenter;
            Id = id;
            Latitude = latitude;
            Longitude = longitude;
            PrivateServiceEdge = privateServiceEdge;
            Region = region;
            VirtualIp = virtualIp;
        }
    }
}
