// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia.Outputs
{

    [OutputType]
    public sealed class GetSSLInspectionRulesActionDoNotDecryptSubActionResult
    {
        /// <summary>
        /// Whether to block SSL traffic when SNI is not present.
        /// </summary>
        public readonly bool BlockSslTrafficWithNoSniEnabled;
        /// <summary>
        /// Whether to bypass other policies when action is set to `DO_NOT_DECRYPT`.
        /// </summary>
        public readonly bool BypassOtherPolicies;
        /// <summary>
        /// The minimum TLS version allowed when action is `DO_NOT_DECRYPT`.
        /// </summary>
        public readonly string MinTlsVersion;
        /// <summary>
        /// Whether to enable OCSP check.
        /// </summary>
        public readonly bool OcspCheck;
        /// <summary>
        /// Action to take on server certificates. Valid values might include `ALLOW`, `BLOCK`, or `PASS_THRU`.
        /// </summary>
        public readonly string ServerCertificates;

        [OutputConstructor]
        private GetSSLInspectionRulesActionDoNotDecryptSubActionResult(
            bool blockSslTrafficWithNoSniEnabled,

            bool bypassOtherPolicies,

            string minTlsVersion,

            bool ocspCheck,

            string serverCertificates)
        {
            BlockSslTrafficWithNoSniEnabled = blockSslTrafficWithNoSniEnabled;
            BypassOtherPolicies = bypassOtherPolicies;
            MinTlsVersion = minTlsVersion;
            OcspCheck = ocspCheck;
            ServerCertificates = serverCertificates;
        }
    }
}
