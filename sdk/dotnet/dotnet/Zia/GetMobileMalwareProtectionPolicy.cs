// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetMobileMalwareProtectionPolicy
    {
        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)
        /// * [API documentation](https://help.zscaler.com/zia/mobile-malware-protection-policy#/mobileAdvanceThreatSettings-put)
        /// 
        /// Use the **zia_mobile_malware_protection_policy** data source to retrieves all the rules in the Mobile Malware Protection policy configuration. To learn more see [Configuring the Mobile Malware Protection Policy](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// data "zia_mobile_malware_protection_policy" "this" {}
        /// ```
        /// </summary>
        public static Task<GetMobileMalwareProtectionPolicyResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMobileMalwareProtectionPolicyResult>("zia:index/getMobileMalwareProtectionPolicy:getMobileMalwareProtectionPolicy", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)
        /// * [API documentation](https://help.zscaler.com/zia/mobile-malware-protection-policy#/mobileAdvanceThreatSettings-put)
        /// 
        /// Use the **zia_mobile_malware_protection_policy** data source to retrieves all the rules in the Mobile Malware Protection policy configuration. To learn more see [Configuring the Mobile Malware Protection Policy](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// data "zia_mobile_malware_protection_policy" "this" {}
        /// ```
        /// </summary>
        public static Output<GetMobileMalwareProtectionPolicyResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMobileMalwareProtectionPolicyResult>("zia:index/getMobileMalwareProtectionPolicy:getMobileMalwareProtectionPolicy", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)
        /// * [API documentation](https://help.zscaler.com/zia/mobile-malware-protection-policy#/mobileAdvanceThreatSettings-put)
        /// 
        /// Use the **zia_mobile_malware_protection_policy** data source to retrieves all the rules in the Mobile Malware Protection policy configuration. To learn more see [Configuring the Mobile Malware Protection Policy](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// data "zia_mobile_malware_protection_policy" "this" {}
        /// ```
        /// </summary>
        public static Output<GetMobileMalwareProtectionPolicyResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMobileMalwareProtectionPolicyResult>("zia:index/getMobileMalwareProtectionPolicy:getMobileMalwareProtectionPolicy", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetMobileMalwareProtectionPolicyResult
    {
        /// <summary>
        /// (Boolean) Blocks an application from communicating with known advertisement websites
        /// </summary>
        public readonly bool BlockAppsCommunicatingWithAdWebsites;
        /// <summary>
        /// (Boolean) Blocks an application from communicating with unknown servers (i.e., servers not normally or historically associated with the application)
        /// </summary>
        public readonly bool BlockAppsCommunicatingWithRemoteUnknownServers;
        /// <summary>
        /// (Boolean) Blocks an application from leaking device identifiers via communication in an unencrypted format or for an unknown purpose
        /// </summary>
        public readonly bool BlockAppsSendingDeviceIdentifier;
        /// <summary>
        /// (Boolean) Blocks an application from leaking device location details via communication in an unencrypted format or for an unknown purpose
        /// </summary>
        public readonly bool BlockAppsSendingLocationInfo;
        /// <summary>
        /// (Boolean) Blocks an application from leaking a user's personally identifiable information (PII) via communication in an unencrypted format or for an unknown purpose
        /// </summary>
        public readonly bool BlockAppsSendingPersonallyIdentifiableInfo;
        /// <summary>
        /// (Boolean) Blocks an application from leaking a user's credentials in an unencrypted format
        /// </summary>
        public readonly bool BlockAppsSendingUnencryptedUserCredentials;
        /// <summary>
        /// (Boolean) Blocks applications that contain vulnerabilities or that use insecure features, modules, or protocols
        /// </summary>
        public readonly bool BlockAppsWithKnownVulnerabilities;
        /// <summary>
        /// (Boolean) Blocks applications that are known to be malicious, compromised, or perform activities unknown to or hidden from the user
        /// </summary>
        public readonly bool BlockAppsWithMaliciousActivity;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetMobileMalwareProtectionPolicyResult(
            bool blockAppsCommunicatingWithAdWebsites,

            bool blockAppsCommunicatingWithRemoteUnknownServers,

            bool blockAppsSendingDeviceIdentifier,

            bool blockAppsSendingLocationInfo,

            bool blockAppsSendingPersonallyIdentifiableInfo,

            bool blockAppsSendingUnencryptedUserCredentials,

            bool blockAppsWithKnownVulnerabilities,

            bool blockAppsWithMaliciousActivity,

            string id)
        {
            BlockAppsCommunicatingWithAdWebsites = blockAppsCommunicatingWithAdWebsites;
            BlockAppsCommunicatingWithRemoteUnknownServers = blockAppsCommunicatingWithRemoteUnknownServers;
            BlockAppsSendingDeviceIdentifier = blockAppsSendingDeviceIdentifier;
            BlockAppsSendingLocationInfo = blockAppsSendingLocationInfo;
            BlockAppsSendingPersonallyIdentifiableInfo = blockAppsSendingPersonallyIdentifiableInfo;
            BlockAppsSendingUnencryptedUserCredentials = blockAppsSendingUnencryptedUserCredentials;
            BlockAppsWithKnownVulnerabilities = blockAppsWithKnownVulnerabilities;
            BlockAppsWithMaliciousActivity = blockAppsWithMaliciousActivity;
            Id = id;
        }
    }
}
