// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetFileTypeControlRules
    {
        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-file-type-control)
        /// * [API documentation](https://help.zscaler.com/zia/file-type-control-policy#/fileTypeRules-post)
        /// 
        /// Use the **zia_file_type_control_rules** data source to retrieves File Type Control rules.
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// # Retrieve a File Type Control Rule by name
        /// data "zia_file_type_control_rules" "this" {
        ///     name = "Example"
        /// }
        /// ```
        /// 
        /// ```hcl
        /// # Retrieve a File Type Control Rule by ID
        /// data "zia_file_type_control_rules" "this" {
        ///     name = "12134558"
        /// }
        /// ```
        /// </summary>
        public static Task<GetFileTypeControlRulesResult> InvokeAsync(GetFileTypeControlRulesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFileTypeControlRulesResult>("zia:index/getFileTypeControlRules:getFileTypeControlRules", args ?? new GetFileTypeControlRulesArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-file-type-control)
        /// * [API documentation](https://help.zscaler.com/zia/file-type-control-policy#/fileTypeRules-post)
        /// 
        /// Use the **zia_file_type_control_rules** data source to retrieves File Type Control rules.
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// # Retrieve a File Type Control Rule by name
        /// data "zia_file_type_control_rules" "this" {
        ///     name = "Example"
        /// }
        /// ```
        /// 
        /// ```hcl
        /// # Retrieve a File Type Control Rule by ID
        /// data "zia_file_type_control_rules" "this" {
        ///     name = "12134558"
        /// }
        /// ```
        /// </summary>
        public static Output<GetFileTypeControlRulesResult> Invoke(GetFileTypeControlRulesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFileTypeControlRulesResult>("zia:index/getFileTypeControlRules:getFileTypeControlRules", args ?? new GetFileTypeControlRulesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-file-type-control)
        /// * [API documentation](https://help.zscaler.com/zia/file-type-control-policy#/fileTypeRules-post)
        /// 
        /// Use the **zia_file_type_control_rules** data source to retrieves File Type Control rules.
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// # Retrieve a File Type Control Rule by name
        /// data "zia_file_type_control_rules" "this" {
        ///     name = "Example"
        /// }
        /// ```
        /// 
        /// ```hcl
        /// # Retrieve a File Type Control Rule by ID
        /// data "zia_file_type_control_rules" "this" {
        ///     name = "12134558"
        /// }
        /// ```
        /// </summary>
        public static Output<GetFileTypeControlRulesResult> Invoke(GetFileTypeControlRulesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFileTypeControlRulesResult>("zia:index/getFileTypeControlRules:getFileTypeControlRules", args ?? new GetFileTypeControlRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFileTypeControlRulesArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public int? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetFileTypeControlRulesArgs()
        {
        }
        public static new GetFileTypeControlRulesArgs Empty => new GetFileTypeControlRulesArgs();
    }

    public sealed class GetFileTypeControlRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<int>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetFileTypeControlRulesInvokeArgs()
        {
        }
        public static new GetFileTypeControlRulesInvokeArgs Empty => new GetFileTypeControlRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetFileTypeControlRulesResult
    {
        public readonly string AccessControl;
        public readonly bool ActiveContent;
        public readonly bool CapturePcap;
        public readonly ImmutableArray<string> CloudApplications;
        public readonly ImmutableArray<Outputs.GetFileTypeControlRulesDepartmentResult> Departments;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetFileTypeControlRulesDeviceGroupResult> DeviceGroups;
        public readonly ImmutableArray<string> DeviceTrustLevels;
        public readonly ImmutableArray<Outputs.GetFileTypeControlRulesDeviceResult> Devices;
        public readonly ImmutableArray<string> FileTypes;
        public readonly string FilteringAction;
        public readonly ImmutableArray<Outputs.GetFileTypeControlRulesGroupResult> Groups;
        public readonly int Id;
        public readonly ImmutableArray<Outputs.GetFileTypeControlRulesLabelResult> Labels;
        public readonly ImmutableArray<Outputs.GetFileTypeControlRulesLastModifiedByResult> LastModifiedBies;
        public readonly int LastModifiedTime;
        public readonly ImmutableArray<Outputs.GetFileTypeControlRulesLocationGroupResult> LocationGroups;
        public readonly ImmutableArray<Outputs.GetFileTypeControlRulesLocationResult> Locations;
        public readonly int MaxSize;
        public readonly int MinSize;
        public readonly string Name;
        public readonly string Operation;
        public readonly int Order;
        public readonly ImmutableArray<string> Protocols;
        public readonly int Rank;
        public readonly int SizeQuota;
        public readonly string State;
        public readonly int TimeQuota;
        public readonly ImmutableArray<Outputs.GetFileTypeControlRulesTimeWindowResult> TimeWindows;
        public readonly bool Unscannable;
        public readonly ImmutableArray<string> UrlCategories;
        public readonly ImmutableArray<Outputs.GetFileTypeControlRulesUserResult> Users;
        public readonly ImmutableArray<Outputs.GetFileTypeControlRulesZpaAppSegmentResult> ZpaAppSegments;

        [OutputConstructor]
        private GetFileTypeControlRulesResult(
            string accessControl,

            bool activeContent,

            bool capturePcap,

            ImmutableArray<string> cloudApplications,

            ImmutableArray<Outputs.GetFileTypeControlRulesDepartmentResult> departments,

            string description,

            ImmutableArray<Outputs.GetFileTypeControlRulesDeviceGroupResult> deviceGroups,

            ImmutableArray<string> deviceTrustLevels,

            ImmutableArray<Outputs.GetFileTypeControlRulesDeviceResult> devices,

            ImmutableArray<string> fileTypes,

            string filteringAction,

            ImmutableArray<Outputs.GetFileTypeControlRulesGroupResult> groups,

            int id,

            ImmutableArray<Outputs.GetFileTypeControlRulesLabelResult> labels,

            ImmutableArray<Outputs.GetFileTypeControlRulesLastModifiedByResult> lastModifiedBies,

            int lastModifiedTime,

            ImmutableArray<Outputs.GetFileTypeControlRulesLocationGroupResult> locationGroups,

            ImmutableArray<Outputs.GetFileTypeControlRulesLocationResult> locations,

            int maxSize,

            int minSize,

            string name,

            string operation,

            int order,

            ImmutableArray<string> protocols,

            int rank,

            int sizeQuota,

            string state,

            int timeQuota,

            ImmutableArray<Outputs.GetFileTypeControlRulesTimeWindowResult> timeWindows,

            bool unscannable,

            ImmutableArray<string> urlCategories,

            ImmutableArray<Outputs.GetFileTypeControlRulesUserResult> users,

            ImmutableArray<Outputs.GetFileTypeControlRulesZpaAppSegmentResult> zpaAppSegments)
        {
            AccessControl = accessControl;
            ActiveContent = activeContent;
            CapturePcap = capturePcap;
            CloudApplications = cloudApplications;
            Departments = departments;
            Description = description;
            DeviceGroups = deviceGroups;
            DeviceTrustLevels = deviceTrustLevels;
            Devices = devices;
            FileTypes = fileTypes;
            FilteringAction = filteringAction;
            Groups = groups;
            Id = id;
            Labels = labels;
            LastModifiedBies = lastModifiedBies;
            LastModifiedTime = lastModifiedTime;
            LocationGroups = locationGroups;
            Locations = locations;
            MaxSize = maxSize;
            MinSize = minSize;
            Name = name;
            Operation = operation;
            Order = order;
            Protocols = protocols;
            Rank = rank;
            SizeQuota = sizeQuota;
            State = state;
            TimeQuota = timeQuota;
            TimeWindows = timeWindows;
            Unscannable = unscannable;
            UrlCategories = urlCategories;
            Users = users;
            ZpaAppSegments = zpaAppSegments;
        }
    }
}
