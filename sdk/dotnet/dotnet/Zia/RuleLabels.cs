// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    /// <summary>
    /// * [Official documentation](https://help.zscaler.com/zia/about-rule-labels)
    /// * [API documentation](https://help.zscaler.com/zia/rule-labels#/ruleLabels-get)
    /// 
    /// The **zia_rule_labels** resource allows the creation and management of rule labels in the Zscaler Internet Access cloud or via the API. This resource can then be associated with resources such as: Firewall Rules and URL filtering rules
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
    /// 
    /// Visit
    /// 
    /// **zia_rule_labels** can be imported by using `&lt;LABEL_ID&gt;` or `&lt;LABEL_NAME&gt;` as the import ID.
    /// 
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import zia:index/ruleLabels:RuleLabels example &lt;label_id&gt;
    /// ```
    /// 
    /// or
    /// 
    /// ```sh
    /// $ pulumi import zia:index/ruleLabels:RuleLabels example &lt;label_name&gt;
    /// ```
    /// </summary>
    [ZiaResourceType("zia:index/ruleLabels:RuleLabels")]
    public partial class RuleLabels : global::Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the devices to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("ruleLabelId")]
        public Output<int> RuleLabelId { get; private set; } = null!;


        /// <summary>
        /// Create a RuleLabels resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RuleLabels(string name, RuleLabelsArgs? args = null, CustomResourceOptions? options = null)
            : base("zia:index/ruleLabels:RuleLabels", name, args ?? new RuleLabelsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RuleLabels(string name, Input<string> id, RuleLabelsState? state = null, CustomResourceOptions? options = null)
            : base("zia:index/ruleLabels:RuleLabels", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RuleLabels resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RuleLabels Get(string name, Input<string> id, RuleLabelsState? state = null, CustomResourceOptions? options = null)
        {
            return new RuleLabels(name, id, state, options);
        }
    }

    public sealed class RuleLabelsArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the devices to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public RuleLabelsArgs()
        {
        }
        public static new RuleLabelsArgs Empty => new RuleLabelsArgs();
    }

    public sealed class RuleLabelsState : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the devices to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ruleLabelId")]
        public Input<int>? RuleLabelId { get; set; }

        public RuleLabelsState()
        {
        }
        public static new RuleLabelsState Empty => new RuleLabelsState();
    }
}
