// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetRiskProfiles
    {
        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-cloud-application-risk-profile)
        /// * [API documentation](https://help.zscaler.com/zia/cloud-applications#/riskProfiles-get)
        /// 
        /// Use the **zia_risk_profiles** data source to get information about a cloud application risk profile in the Zscaler Internet Access cloud or via the API.
        /// See [About Cloud Application Risk Profile](https://help.zscaler.com/zia/about-cloud-application-risk-profile) for more details.
        /// 
        /// ## Example Usage
        /// 
        /// ### Retrieve By Name
        /// 
        /// ```hcl
        /// data "zia_risk_profiles" "this" {
        ///     name = "RiskProfile01"
        /// }
        /// ```
        /// 
        /// ### Retrieve By ID
        /// 
        /// ```hcl
        /// data "zia_risk_profiles" "this" {
        ///     id = "5445585"
        /// }
        /// ```
        /// </summary>
        public static Task<GetRiskProfilesResult> InvokeAsync(GetRiskProfilesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRiskProfilesResult>("zia:index/getRiskProfiles:getRiskProfiles", args ?? new GetRiskProfilesArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-cloud-application-risk-profile)
        /// * [API documentation](https://help.zscaler.com/zia/cloud-applications#/riskProfiles-get)
        /// 
        /// Use the **zia_risk_profiles** data source to get information about a cloud application risk profile in the Zscaler Internet Access cloud or via the API.
        /// See [About Cloud Application Risk Profile](https://help.zscaler.com/zia/about-cloud-application-risk-profile) for more details.
        /// 
        /// ## Example Usage
        /// 
        /// ### Retrieve By Name
        /// 
        /// ```hcl
        /// data "zia_risk_profiles" "this" {
        ///     name = "RiskProfile01"
        /// }
        /// ```
        /// 
        /// ### Retrieve By ID
        /// 
        /// ```hcl
        /// data "zia_risk_profiles" "this" {
        ///     id = "5445585"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRiskProfilesResult> Invoke(GetRiskProfilesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRiskProfilesResult>("zia:index/getRiskProfiles:getRiskProfiles", args ?? new GetRiskProfilesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-cloud-application-risk-profile)
        /// * [API documentation](https://help.zscaler.com/zia/cloud-applications#/riskProfiles-get)
        /// 
        /// Use the **zia_risk_profiles** data source to get information about a cloud application risk profile in the Zscaler Internet Access cloud or via the API.
        /// See [About Cloud Application Risk Profile](https://help.zscaler.com/zia/about-cloud-application-risk-profile) for more details.
        /// 
        /// ## Example Usage
        /// 
        /// ### Retrieve By Name
        /// 
        /// ```hcl
        /// data "zia_risk_profiles" "this" {
        ///     name = "RiskProfile01"
        /// }
        /// ```
        /// 
        /// ### Retrieve By ID
        /// 
        /// ```hcl
        /// data "zia_risk_profiles" "this" {
        ///     id = "5445585"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRiskProfilesResult> Invoke(GetRiskProfilesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRiskProfilesResult>("zia:index/getRiskProfiles:getRiskProfiles", args ?? new GetRiskProfilesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRiskProfilesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier for the risk profile.
        /// </summary>
        [Input("id")]
        public int? Id { get; set; }

        /// <summary>
        /// Cloud application risk profile name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetRiskProfilesArgs()
        {
        }
        public static new GetRiskProfilesArgs Empty => new GetRiskProfilesArgs();
    }

    public sealed class GetRiskProfilesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier for the risk profile.
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        /// <summary>
        /// Cloud application risk profile name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetRiskProfilesInvokeArgs()
        {
        }
        public static new GetRiskProfilesInvokeArgs Empty => new GetRiskProfilesInvokeArgs();
    }


    [OutputType]
    public sealed class GetRiskProfilesResult
    {
        /// <summary>
        /// (String) Filters based on support for administrative logging. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string AdminAuditLogs;
        /// <summary>
        /// (Optional) Filters based on supported certifications.
        /// </summary>
        public readonly ImmutableArray<string> Certifications;
        public readonly int CreateTime;
        /// <summary>
        /// (Set) List of custom tags to be included or excluded for the profile.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRiskProfilesCustomTagResult> CustomTags;
        /// <summary>
        /// (String) Filters based on history of data breaches. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string DataBreach;
        /// <summary>
        /// (Optional) Filters based on encryption of data in transit.
        /// </summary>
        public readonly ImmutableArray<string> DataEncryptionInTransits;
        /// <summary>
        /// (String) Filters based on DNS CAA policy implementation.
        /// </summary>
        public readonly string DnsCaaPolicy;
        /// <summary>
        /// (String) Filters based on DMARC support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string DomainBasedMessageAuth;
        /// <summary>
        /// (String) Filters based on DKIM authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string DomainKeysIdentifiedMail;
        /// <summary>
        /// (String) Filters based on anonymous access support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string Evasive;
        /// <summary>
        /// (Int) Indicates if the certificates are included or not.
        /// </summary>
        public readonly int ExcludeCertificates;
        /// <summary>
        /// (String) Filters based on file sharing capability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string FileSharing;
        /// <summary>
        /// (String) Filters based on HTTP security headers support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string HttpSecurityHeaders;
        public readonly int Id;
        public readonly int LastModTime;
        public readonly ImmutableArray<Outputs.GetRiskProfilesLastModifiedByResult> LastModifiedBies;
        /// <summary>
        /// (String) Filters based on content malware scanning. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string MalwareScanningForContent;
        /// <summary>
        /// (String) Filters based on multi-factor authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string MfaSupport;
        public readonly string Name;
        /// <summary>
        /// (String) Filters based on password strength policy. Supported values: `ANY`, `GOOD`, `POOR`, `UN_KNOWN`.
        /// </summary>
        public readonly string PasswordStrength;
        /// <summary>
        /// (String) Filters applications based on questionable legal terms. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string PoorItemsOfService;
        /// <summary>
        /// (String) Risk profile type. Supported value: `CLOUD_APPLICATIONS`. Default is `CLOUD_APPLICATIONS`.
        /// </summary>
        public readonly string ProfileType;
        /// <summary>
        /// (String) Filters based on remote screen sharing support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string RemoteScreenSharing;
        /// <summary>
        /// (Optional) Filters based on risk index thresholds.
        /// </summary>
        public readonly ImmutableArray<int> RiskIndices;
        /// <summary>
        /// (String) Filters based on SPF authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string SenderPolicyFramework;
        /// <summary>
        /// (String) Filters based on IP restriction support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string SourceIpRestrictions;
        /// <summary>
        /// (String) Filters based on SSL certificate key size. Supported values: `ANY`, `UN_KNOWN`, `BITS_1024`, `BITS_2048`, `BITS_256`, `BITS_3072`, `BITS_384`, `BITS_4096`, `BITS_8192`.
        /// </summary>
        public readonly string SslCertKeySize;
        /// <summary>
        /// (String) Filters based on SSL certificate validity period. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string SslCertValidity;
        /// <summary>
        /// (String) Filters based on use of pinned SSL certificates. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string SslPinned;
        /// <summary>
        /// (String) Status of the applications. Supported values: `UN_SANCTIONED`, `SANCTIONED`, `ANY`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// (String) Filters based on Web Application Firewall (WAF) support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string SupportForWaf;
        /// <summary>
        /// (String) Filters based on published CVE vulnerabilities. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string Vulnerability;
        /// <summary>
        /// (String) Filters based on vulnerability disclosure policy. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string VulnerabilityDisclosure;
        /// <summary>
        /// (String) Filters based on Heartbleed vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string VulnerableToHeartBleed;
        /// <summary>
        /// (String) Filters based on Logjam vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string VulnerableToLogJam;
        /// <summary>
        /// (String) Filters based on POODLE vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string VulnerableToPoodle;
        /// <summary>
        /// (String) Filters based on weak cipher usage. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
        /// </summary>
        public readonly string WeakCipherSupport;

        [OutputConstructor]
        private GetRiskProfilesResult(
            string adminAuditLogs,

            ImmutableArray<string> certifications,

            int createTime,

            ImmutableArray<Outputs.GetRiskProfilesCustomTagResult> customTags,

            string dataBreach,

            ImmutableArray<string> dataEncryptionInTransits,

            string dnsCaaPolicy,

            string domainBasedMessageAuth,

            string domainKeysIdentifiedMail,

            string evasive,

            int excludeCertificates,

            string fileSharing,

            string httpSecurityHeaders,

            int id,

            int lastModTime,

            ImmutableArray<Outputs.GetRiskProfilesLastModifiedByResult> lastModifiedBies,

            string malwareScanningForContent,

            string mfaSupport,

            string name,

            string passwordStrength,

            string poorItemsOfService,

            string profileType,

            string remoteScreenSharing,

            ImmutableArray<int> riskIndices,

            string senderPolicyFramework,

            string sourceIpRestrictions,

            string sslCertKeySize,

            string sslCertValidity,

            string sslPinned,

            string status,

            string supportForWaf,

            string vulnerability,

            string vulnerabilityDisclosure,

            string vulnerableToHeartBleed,

            string vulnerableToLogJam,

            string vulnerableToPoodle,

            string weakCipherSupport)
        {
            AdminAuditLogs = adminAuditLogs;
            Certifications = certifications;
            CreateTime = createTime;
            CustomTags = customTags;
            DataBreach = dataBreach;
            DataEncryptionInTransits = dataEncryptionInTransits;
            DnsCaaPolicy = dnsCaaPolicy;
            DomainBasedMessageAuth = domainBasedMessageAuth;
            DomainKeysIdentifiedMail = domainKeysIdentifiedMail;
            Evasive = evasive;
            ExcludeCertificates = excludeCertificates;
            FileSharing = fileSharing;
            HttpSecurityHeaders = httpSecurityHeaders;
            Id = id;
            LastModTime = lastModTime;
            LastModifiedBies = lastModifiedBies;
            MalwareScanningForContent = malwareScanningForContent;
            MfaSupport = mfaSupport;
            Name = name;
            PasswordStrength = passwordStrength;
            PoorItemsOfService = poorItemsOfService;
            ProfileType = profileType;
            RemoteScreenSharing = remoteScreenSharing;
            RiskIndices = riskIndices;
            SenderPolicyFramework = senderPolicyFramework;
            SourceIpRestrictions = sourceIpRestrictions;
            SslCertKeySize = sslCertKeySize;
            SslCertValidity = sslCertValidity;
            SslPinned = sslPinned;
            Status = status;
            SupportForWaf = supportForWaf;
            Vulnerability = vulnerability;
            VulnerabilityDisclosure = vulnerabilityDisclosure;
            VulnerableToHeartBleed = vulnerableToHeartBleed;
            VulnerableToLogJam = vulnerableToLogJam;
            VulnerableToPoodle = vulnerableToPoodle;
            WeakCipherSupport = weakCipherSupport;
        }
    }
}
