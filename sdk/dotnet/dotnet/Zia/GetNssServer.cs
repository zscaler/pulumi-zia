// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetNssServer
    {
        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-nss-servers)
        /// * [API documentation](https://help.zscaler.com/zia/cloud-nanolog-streaming-service-nss#/nssServers-get)
        /// 
        /// Use the **zia_nss_server** data source to get information about a nss server resource in the Zscaler Internet Access cloud or via the API.
        /// See [Adding NSS Servers](https://help.zscaler.com/zia/adding-nss-servers) for more details.
        /// 
        /// ## Example Usage
        /// 
        /// ### Retrieve By Name
        /// 
        /// ```hcl
        /// data "zia_nss_server" "this" {
        ///     name = "NSSServer01"
        /// }
        /// ```
        /// 
        /// ### Retrieve By ID
        /// 
        /// ```hcl
        /// data "zia_nss_server" "this" {
        ///     id = "5445585"
        /// }
        /// ```
        /// </summary>
        public static Task<GetNssServerResult> InvokeAsync(GetNssServerArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNssServerResult>("zia:index/getNssServer:getNssServer", args ?? new GetNssServerArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-nss-servers)
        /// * [API documentation](https://help.zscaler.com/zia/cloud-nanolog-streaming-service-nss#/nssServers-get)
        /// 
        /// Use the **zia_nss_server** data source to get information about a nss server resource in the Zscaler Internet Access cloud or via the API.
        /// See [Adding NSS Servers](https://help.zscaler.com/zia/adding-nss-servers) for more details.
        /// 
        /// ## Example Usage
        /// 
        /// ### Retrieve By Name
        /// 
        /// ```hcl
        /// data "zia_nss_server" "this" {
        ///     name = "NSSServer01"
        /// }
        /// ```
        /// 
        /// ### Retrieve By ID
        /// 
        /// ```hcl
        /// data "zia_nss_server" "this" {
        ///     id = "5445585"
        /// }
        /// ```
        /// </summary>
        public static Output<GetNssServerResult> Invoke(GetNssServerInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNssServerResult>("zia:index/getNssServer:getNssServer", args ?? new GetNssServerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-nss-servers)
        /// * [API documentation](https://help.zscaler.com/zia/cloud-nanolog-streaming-service-nss#/nssServers-get)
        /// 
        /// Use the **zia_nss_server** data source to get information about a nss server resource in the Zscaler Internet Access cloud or via the API.
        /// See [Adding NSS Servers](https://help.zscaler.com/zia/adding-nss-servers) for more details.
        /// 
        /// ## Example Usage
        /// 
        /// ### Retrieve By Name
        /// 
        /// ```hcl
        /// data "zia_nss_server" "this" {
        ///     name = "NSSServer01"
        /// }
        /// ```
        /// 
        /// ### Retrieve By ID
        /// 
        /// ```hcl
        /// data "zia_nss_server" "this" {
        ///     id = "5445585"
        /// }
        /// ```
        /// </summary>
        public static Output<GetNssServerResult> Invoke(GetNssServerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNssServerResult>("zia:index/getNssServer:getNssServer", args ?? new GetNssServerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNssServerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// System-generated identifier of the NSS server based on the software platform
        /// </summary>
        [Input("id")]
        public int? Id { get; set; }

        /// <summary>
        /// The name of the nss server to be exported.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetNssServerArgs()
        {
        }
        public static new GetNssServerArgs Empty => new GetNssServerArgs();
    }

    public sealed class GetNssServerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// System-generated identifier of the NSS server based on the software platform
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        /// <summary>
        /// The name of the nss server to be exported.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetNssServerInvokeArgs()
        {
        }
        public static new GetNssServerInvokeArgs Empty => new GetNssServerInvokeArgs();
    }


    [OutputType]
    public sealed class GetNssServerResult
    {
        /// <summary>
        /// (integer) The ICAP server ID
        /// </summary>
        public readonly int IcapSvrId;
        public readonly int Id;
        public readonly string Name;
        /// <summary>
        /// (String) The health of the NSS server. Returned Values:  `UNHEALTHY`, `HEALTHY`, `UNKNOWN`
        /// </summary>
        public readonly string State;
        /// <summary>
        /// (String) Enables or disables the status of the NSS server. Returned Values: `ENABLED`, `DISABLED`, `DISABLED_BY_SERVICE_PROVIDER`, `NOT_PROVISIONED_IN_SERVICE_PROVIDER`, `IN_TRIAL`
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// (String) Whether you are creating an NSS for web logs or firewall logs. Returned Values:  `NSS_FOR_WEB`, `NSS_FOR_FIREWALL`
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNssServerResult(
            int icapSvrId,

            int id,

            string name,

            string state,

            string status,

            string type)
        {
            IcapSvrId = icapSvrId;
            Id = id;
            Name = name;
            State = state;
            Status = status;
            Type = type;
        }
    }
}
