// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    /// <summary>
    /// * [Official documentation](https://help.zscaler.com/zia/understanding-browser-based-end-user-notifications)
    /// * [API documentation](https://help.zscaler.com/zia/end-user-notifications#/eun-get)
    /// 
    /// The **zia_end_user_notification** resource allows you to update the browser-based end user notification (EUN) configuration details. To learn more see [Understanding Browser-Based End User Notifications](https://help.zscaler.com/unified/understanding-browser-based-end-user-notifications)
    /// 
    /// ## Example Usage
    /// 
    /// ### NOTIFICATION TYPE - DEFAULT
    /// 
    /// ### NOTIFICATION TYPE - CUSTOM
    /// 
    /// ## Import
    /// 
    /// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
    /// 
    /// Visit
    /// 
    /// **zia_end_user_notification** can be imported by using `enduser_notification` as the import ID.
    /// 
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import zia:index/endUserNotification:EndUserNotification this "enduser_notification"
    /// ```
    /// </summary>
    [ZiaResourceType("zia:index/endUserNotification:EndUserNotification")]
    public partial class EndUserNotification : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The custom frequency (in days) for showing the AUP to the end users. Valid range is 0 to 180.
        /// </summary>
        [Output("aupCustomFrequency")]
        public Output<int> AupCustomFrequency { get; private set; } = null!;

        /// <summary>
        /// Specifies which day of the week or month the AUP is shown for users when aupFrequency is set. Valid range is 0 to 31.
        /// </summary>
        [Output("aupDayOffset")]
        public Output<int> AupDayOffset { get; private set; } = null!;

        /// <summary>
        /// The frequency at which the Acceptable Use Policy (AUP) is shown to the end users
        /// </summary>
        [Output("aupFrequency")]
        public Output<string> AupFrequency { get; private set; } = null!;

        /// <summary>
        /// The acceptable use statement that is shown in the AUP
        /// </summary>
        [Output("aupMessage")]
        public Output<string> AupMessage { get; private set; } = null!;

        /// <summary>
        /// The time interval at which the caution notification is shown when users continue browsing a restricted site.
        /// </summary>
        [Output("cautionAgainAfter")]
        public Output<int> CautionAgainAfter { get; private set; } = null!;

        /// <summary>
        /// The custom message that appears in the caution notification
        /// </summary>
        [Output("cautionCustomText")]
        public Output<string> CautionCustomText { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to display the caution notification at a specific time interval for URLs in the Miscellaneous or
        /// Unknown category.
        /// </summary>
        [Output("cautionPerDomain")]
        public Output<bool> CautionPerDomain { get; private set; } = null!;

        /// <summary>
        /// The custom text shown in the EUN
        /// </summary>
        [Output("customText")]
        public Output<string> CustomText { get; private set; } = null!;

        /// <summary>
        /// A Boolean value indicating whether your organization's logo appears in the EUN or not
        /// </summary>
        [Output("displayCompLogo")]
        public Output<bool> DisplayCompLogo { get; private set; } = null!;

        /// <summary>
        /// A Boolean value indicating whether the organization's name appears in the EUN or not
        /// </summary>
        [Output("displayCompName")]
        public Output<bool> DisplayCompName { get; private set; } = null!;

        /// <summary>
        /// A Boolean value indicating whether or not the reason for cautioning or blocking access to a site, file, or application
        /// is shown when the respective notification is triggered
        /// </summary>
        [Output("displayReason")]
        public Output<bool> DisplayReason { get; private set; } = null!;

        /// <summary>
        /// The message that appears in the IdP Proxy notification
        /// </summary>
        [Output("idpProxyNotificationText")]
        public Output<string> IdpProxyNotificationText { get; private set; } = null!;

        /// <summary>
        /// The type of EUN as default or custom
        /// </summary>
        [Output("notificationType")]
        public Output<string> NotificationType { get; private set; } = null!;

        /// <summary>
        /// The URL of the organization's policy page. This field is required for the default notification type.
        /// </summary>
        [Output("orgPolicyLink")]
        public Output<string> OrgPolicyLink { get; private set; } = null!;

        /// <summary>
        /// The message that appears in the quarantine notification
        /// </summary>
        [Output("quarantineCustomNotificationText")]
        public Output<string?> QuarantineCustomNotificationText { get; private set; } = null!;

        /// <summary>
        /// The redirect URL for the external site hosting the EUN specified when the custom notification type is selected
        /// </summary>
        [Output("redirectUrl")]
        public Output<string> RedirectUrl { get; private set; } = null!;

        /// <summary>
        /// Value indicating whether or not to include the ECS option in all DNS queries, originating from all locations and remote
        /// users.
        /// </summary>
        [Output("securityReviewCustomLocation")]
        public Output<string> SecurityReviewCustomLocation { get; private set; } = null!;

        /// <summary>
        /// A Boolean value indicating whether the Security Violation notification is enabled or disabled
        /// </summary>
        [Output("securityReviewEnabled")]
        public Output<bool> SecurityReviewEnabled { get; private set; } = null!;

        /// <summary>
        /// A Boolean value indicating whether users' review requests for blocked URLs are submitted to the Zscaler service (i.e.,
        /// Security Cloud) or a custom location.
        /// </summary>
        [Output("securityReviewSubmitToSecurityCloud")]
        public Output<bool> SecurityReviewSubmitToSecurityCloud { get; private set; } = null!;

        /// <summary>
        /// The message that appears in the Security Violation notification
        /// </summary>
        [Output("securityReviewText")]
        public Output<string> SecurityReviewText { get; private set; } = null!;

        /// <summary>
        /// The email address for writing to IT Support
        /// </summary>
        [Output("supportEmail")]
        public Output<string> SupportEmail { get; private set; } = null!;

        /// <summary>
        /// The phone number for contacting IT Support
        /// </summary>
        [Output("supportPhone")]
        public Output<string> SupportPhone { get; private set; } = null!;

        /// <summary>
        /// A custom URL location where users' review requests for blocked URLs are sent
        /// </summary>
        [Output("urlCatReviewCustomLocation")]
        public Output<string> UrlCatReviewCustomLocation { get; private set; } = null!;

        /// <summary>
        /// A Boolean value indicating whether the URL Categorization notification is enabled or disabled
        /// </summary>
        [Output("urlCatReviewEnabled")]
        public Output<bool> UrlCatReviewEnabled { get; private set; } = null!;

        /// <summary>
        /// A Boolean value indicating whether users' review requests for possibly misclassified URLs are submitted to the Zscaler
        /// service (i.e., Security Cloud) or a custom location.
        /// </summary>
        [Output("urlCatReviewSubmitToSecurityCloud")]
        public Output<bool> UrlCatReviewSubmitToSecurityCloud { get; private set; } = null!;

        /// <summary>
        /// The message that appears in the URL Categorization notification
        /// </summary>
        [Output("urlCatReviewText")]
        public Output<string> UrlCatReviewText { get; private set; } = null!;

        /// <summary>
        /// A custom URL location where users' review requests for the web DLP policy violation are sent
        /// </summary>
        [Output("webDlpReviewCustomLocation")]
        public Output<string> WebDlpReviewCustomLocation { get; private set; } = null!;

        /// <summary>
        /// A Boolean value indicating whether the Web DLP Violation notification is enabled or disabled
        /// </summary>
        [Output("webDlpReviewEnabled")]
        public Output<bool> WebDlpReviewEnabled { get; private set; } = null!;

        /// <summary>
        /// A Boolean value indicating whether users' review requests for web DLP policy violation are submitted to the Zscaler
        /// service (i.e., Security Cloud) or a custom location.
        /// </summary>
        [Output("webDlpReviewSubmitToSecurityCloud")]
        public Output<bool> WebDlpReviewSubmitToSecurityCloud { get; private set; } = null!;

        /// <summary>
        /// The message that appears in the Web DLP Violation notification
        /// </summary>
        [Output("webDlpReviewText")]
        public Output<string> WebDlpReviewText { get; private set; } = null!;


        /// <summary>
        /// Create a EndUserNotification resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EndUserNotification(string name, EndUserNotificationArgs? args = null, CustomResourceOptions? options = null)
            : base("zia:index/endUserNotification:EndUserNotification", name, args ?? new EndUserNotificationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EndUserNotification(string name, Input<string> id, EndUserNotificationState? state = null, CustomResourceOptions? options = null)
            : base("zia:index/endUserNotification:EndUserNotification", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EndUserNotification resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EndUserNotification Get(string name, Input<string> id, EndUserNotificationState? state = null, CustomResourceOptions? options = null)
        {
            return new EndUserNotification(name, id, state, options);
        }
    }

    public sealed class EndUserNotificationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The custom frequency (in days) for showing the AUP to the end users. Valid range is 0 to 180.
        /// </summary>
        [Input("aupCustomFrequency")]
        public Input<int>? AupCustomFrequency { get; set; }

        /// <summary>
        /// Specifies which day of the week or month the AUP is shown for users when aupFrequency is set. Valid range is 0 to 31.
        /// </summary>
        [Input("aupDayOffset")]
        public Input<int>? AupDayOffset { get; set; }

        /// <summary>
        /// The frequency at which the Acceptable Use Policy (AUP) is shown to the end users
        /// </summary>
        [Input("aupFrequency")]
        public Input<string>? AupFrequency { get; set; }

        /// <summary>
        /// The acceptable use statement that is shown in the AUP
        /// </summary>
        [Input("aupMessage")]
        public Input<string>? AupMessage { get; set; }

        /// <summary>
        /// The time interval at which the caution notification is shown when users continue browsing a restricted site.
        /// </summary>
        [Input("cautionAgainAfter")]
        public Input<int>? CautionAgainAfter { get; set; }

        /// <summary>
        /// The custom message that appears in the caution notification
        /// </summary>
        [Input("cautionCustomText")]
        public Input<string>? CautionCustomText { get; set; }

        /// <summary>
        /// Specifies whether to display the caution notification at a specific time interval for URLs in the Miscellaneous or
        /// Unknown category.
        /// </summary>
        [Input("cautionPerDomain")]
        public Input<bool>? CautionPerDomain { get; set; }

        /// <summary>
        /// The custom text shown in the EUN
        /// </summary>
        [Input("customText")]
        public Input<string>? CustomText { get; set; }

        /// <summary>
        /// A Boolean value indicating whether your organization's logo appears in the EUN or not
        /// </summary>
        [Input("displayCompLogo")]
        public Input<bool>? DisplayCompLogo { get; set; }

        /// <summary>
        /// A Boolean value indicating whether the organization's name appears in the EUN or not
        /// </summary>
        [Input("displayCompName")]
        public Input<bool>? DisplayCompName { get; set; }

        /// <summary>
        /// A Boolean value indicating whether or not the reason for cautioning or blocking access to a site, file, or application
        /// is shown when the respective notification is triggered
        /// </summary>
        [Input("displayReason")]
        public Input<bool>? DisplayReason { get; set; }

        /// <summary>
        /// The message that appears in the IdP Proxy notification
        /// </summary>
        [Input("idpProxyNotificationText")]
        public Input<string>? IdpProxyNotificationText { get; set; }

        /// <summary>
        /// The type of EUN as default or custom
        /// </summary>
        [Input("notificationType")]
        public Input<string>? NotificationType { get; set; }

        /// <summary>
        /// The URL of the organization's policy page. This field is required for the default notification type.
        /// </summary>
        [Input("orgPolicyLink")]
        public Input<string>? OrgPolicyLink { get; set; }

        /// <summary>
        /// The message that appears in the quarantine notification
        /// </summary>
        [Input("quarantineCustomNotificationText")]
        public Input<string>? QuarantineCustomNotificationText { get; set; }

        /// <summary>
        /// The redirect URL for the external site hosting the EUN specified when the custom notification type is selected
        /// </summary>
        [Input("redirectUrl")]
        public Input<string>? RedirectUrl { get; set; }

        /// <summary>
        /// Value indicating whether or not to include the ECS option in all DNS queries, originating from all locations and remote
        /// users.
        /// </summary>
        [Input("securityReviewCustomLocation")]
        public Input<string>? SecurityReviewCustomLocation { get; set; }

        /// <summary>
        /// A Boolean value indicating whether the Security Violation notification is enabled or disabled
        /// </summary>
        [Input("securityReviewEnabled")]
        public Input<bool>? SecurityReviewEnabled { get; set; }

        /// <summary>
        /// A Boolean value indicating whether users' review requests for blocked URLs are submitted to the Zscaler service (i.e.,
        /// Security Cloud) or a custom location.
        /// </summary>
        [Input("securityReviewSubmitToSecurityCloud")]
        public Input<bool>? SecurityReviewSubmitToSecurityCloud { get; set; }

        /// <summary>
        /// The message that appears in the Security Violation notification
        /// </summary>
        [Input("securityReviewText")]
        public Input<string>? SecurityReviewText { get; set; }

        /// <summary>
        /// The email address for writing to IT Support
        /// </summary>
        [Input("supportEmail")]
        public Input<string>? SupportEmail { get; set; }

        /// <summary>
        /// The phone number for contacting IT Support
        /// </summary>
        [Input("supportPhone")]
        public Input<string>? SupportPhone { get; set; }

        /// <summary>
        /// A custom URL location where users' review requests for blocked URLs are sent
        /// </summary>
        [Input("urlCatReviewCustomLocation")]
        public Input<string>? UrlCatReviewCustomLocation { get; set; }

        /// <summary>
        /// A Boolean value indicating whether the URL Categorization notification is enabled or disabled
        /// </summary>
        [Input("urlCatReviewEnabled")]
        public Input<bool>? UrlCatReviewEnabled { get; set; }

        /// <summary>
        /// A Boolean value indicating whether users' review requests for possibly misclassified URLs are submitted to the Zscaler
        /// service (i.e., Security Cloud) or a custom location.
        /// </summary>
        [Input("urlCatReviewSubmitToSecurityCloud")]
        public Input<bool>? UrlCatReviewSubmitToSecurityCloud { get; set; }

        /// <summary>
        /// The message that appears in the URL Categorization notification
        /// </summary>
        [Input("urlCatReviewText")]
        public Input<string>? UrlCatReviewText { get; set; }

        /// <summary>
        /// A custom URL location where users' review requests for the web DLP policy violation are sent
        /// </summary>
        [Input("webDlpReviewCustomLocation")]
        public Input<string>? WebDlpReviewCustomLocation { get; set; }

        /// <summary>
        /// A Boolean value indicating whether the Web DLP Violation notification is enabled or disabled
        /// </summary>
        [Input("webDlpReviewEnabled")]
        public Input<bool>? WebDlpReviewEnabled { get; set; }

        /// <summary>
        /// A Boolean value indicating whether users' review requests for web DLP policy violation are submitted to the Zscaler
        /// service (i.e., Security Cloud) or a custom location.
        /// </summary>
        [Input("webDlpReviewSubmitToSecurityCloud")]
        public Input<bool>? WebDlpReviewSubmitToSecurityCloud { get; set; }

        /// <summary>
        /// The message that appears in the Web DLP Violation notification
        /// </summary>
        [Input("webDlpReviewText")]
        public Input<string>? WebDlpReviewText { get; set; }

        public EndUserNotificationArgs()
        {
        }
        public static new EndUserNotificationArgs Empty => new EndUserNotificationArgs();
    }

    public sealed class EndUserNotificationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The custom frequency (in days) for showing the AUP to the end users. Valid range is 0 to 180.
        /// </summary>
        [Input("aupCustomFrequency")]
        public Input<int>? AupCustomFrequency { get; set; }

        /// <summary>
        /// Specifies which day of the week or month the AUP is shown for users when aupFrequency is set. Valid range is 0 to 31.
        /// </summary>
        [Input("aupDayOffset")]
        public Input<int>? AupDayOffset { get; set; }

        /// <summary>
        /// The frequency at which the Acceptable Use Policy (AUP) is shown to the end users
        /// </summary>
        [Input("aupFrequency")]
        public Input<string>? AupFrequency { get; set; }

        /// <summary>
        /// The acceptable use statement that is shown in the AUP
        /// </summary>
        [Input("aupMessage")]
        public Input<string>? AupMessage { get; set; }

        /// <summary>
        /// The time interval at which the caution notification is shown when users continue browsing a restricted site.
        /// </summary>
        [Input("cautionAgainAfter")]
        public Input<int>? CautionAgainAfter { get; set; }

        /// <summary>
        /// The custom message that appears in the caution notification
        /// </summary>
        [Input("cautionCustomText")]
        public Input<string>? CautionCustomText { get; set; }

        /// <summary>
        /// Specifies whether to display the caution notification at a specific time interval for URLs in the Miscellaneous or
        /// Unknown category.
        /// </summary>
        [Input("cautionPerDomain")]
        public Input<bool>? CautionPerDomain { get; set; }

        /// <summary>
        /// The custom text shown in the EUN
        /// </summary>
        [Input("customText")]
        public Input<string>? CustomText { get; set; }

        /// <summary>
        /// A Boolean value indicating whether your organization's logo appears in the EUN or not
        /// </summary>
        [Input("displayCompLogo")]
        public Input<bool>? DisplayCompLogo { get; set; }

        /// <summary>
        /// A Boolean value indicating whether the organization's name appears in the EUN or not
        /// </summary>
        [Input("displayCompName")]
        public Input<bool>? DisplayCompName { get; set; }

        /// <summary>
        /// A Boolean value indicating whether or not the reason for cautioning or blocking access to a site, file, or application
        /// is shown when the respective notification is triggered
        /// </summary>
        [Input("displayReason")]
        public Input<bool>? DisplayReason { get; set; }

        /// <summary>
        /// The message that appears in the IdP Proxy notification
        /// </summary>
        [Input("idpProxyNotificationText")]
        public Input<string>? IdpProxyNotificationText { get; set; }

        /// <summary>
        /// The type of EUN as default or custom
        /// </summary>
        [Input("notificationType")]
        public Input<string>? NotificationType { get; set; }

        /// <summary>
        /// The URL of the organization's policy page. This field is required for the default notification type.
        /// </summary>
        [Input("orgPolicyLink")]
        public Input<string>? OrgPolicyLink { get; set; }

        /// <summary>
        /// The message that appears in the quarantine notification
        /// </summary>
        [Input("quarantineCustomNotificationText")]
        public Input<string>? QuarantineCustomNotificationText { get; set; }

        /// <summary>
        /// The redirect URL for the external site hosting the EUN specified when the custom notification type is selected
        /// </summary>
        [Input("redirectUrl")]
        public Input<string>? RedirectUrl { get; set; }

        /// <summary>
        /// Value indicating whether or not to include the ECS option in all DNS queries, originating from all locations and remote
        /// users.
        /// </summary>
        [Input("securityReviewCustomLocation")]
        public Input<string>? SecurityReviewCustomLocation { get; set; }

        /// <summary>
        /// A Boolean value indicating whether the Security Violation notification is enabled or disabled
        /// </summary>
        [Input("securityReviewEnabled")]
        public Input<bool>? SecurityReviewEnabled { get; set; }

        /// <summary>
        /// A Boolean value indicating whether users' review requests for blocked URLs are submitted to the Zscaler service (i.e.,
        /// Security Cloud) or a custom location.
        /// </summary>
        [Input("securityReviewSubmitToSecurityCloud")]
        public Input<bool>? SecurityReviewSubmitToSecurityCloud { get; set; }

        /// <summary>
        /// The message that appears in the Security Violation notification
        /// </summary>
        [Input("securityReviewText")]
        public Input<string>? SecurityReviewText { get; set; }

        /// <summary>
        /// The email address for writing to IT Support
        /// </summary>
        [Input("supportEmail")]
        public Input<string>? SupportEmail { get; set; }

        /// <summary>
        /// The phone number for contacting IT Support
        /// </summary>
        [Input("supportPhone")]
        public Input<string>? SupportPhone { get; set; }

        /// <summary>
        /// A custom URL location where users' review requests for blocked URLs are sent
        /// </summary>
        [Input("urlCatReviewCustomLocation")]
        public Input<string>? UrlCatReviewCustomLocation { get; set; }

        /// <summary>
        /// A Boolean value indicating whether the URL Categorization notification is enabled or disabled
        /// </summary>
        [Input("urlCatReviewEnabled")]
        public Input<bool>? UrlCatReviewEnabled { get; set; }

        /// <summary>
        /// A Boolean value indicating whether users' review requests for possibly misclassified URLs are submitted to the Zscaler
        /// service (i.e., Security Cloud) or a custom location.
        /// </summary>
        [Input("urlCatReviewSubmitToSecurityCloud")]
        public Input<bool>? UrlCatReviewSubmitToSecurityCloud { get; set; }

        /// <summary>
        /// The message that appears in the URL Categorization notification
        /// </summary>
        [Input("urlCatReviewText")]
        public Input<string>? UrlCatReviewText { get; set; }

        /// <summary>
        /// A custom URL location where users' review requests for the web DLP policy violation are sent
        /// </summary>
        [Input("webDlpReviewCustomLocation")]
        public Input<string>? WebDlpReviewCustomLocation { get; set; }

        /// <summary>
        /// A Boolean value indicating whether the Web DLP Violation notification is enabled or disabled
        /// </summary>
        [Input("webDlpReviewEnabled")]
        public Input<bool>? WebDlpReviewEnabled { get; set; }

        /// <summary>
        /// A Boolean value indicating whether users' review requests for web DLP policy violation are submitted to the Zscaler
        /// service (i.e., Security Cloud) or a custom location.
        /// </summary>
        [Input("webDlpReviewSubmitToSecurityCloud")]
        public Input<bool>? WebDlpReviewSubmitToSecurityCloud { get; set; }

        /// <summary>
        /// The message that appears in the Web DLP Violation notification
        /// </summary>
        [Input("webDlpReviewText")]
        public Input<string>? WebDlpReviewText { get; set; }

        public EndUserNotificationState()
        {
        }
        public static new EndUserNotificationState Empty => new EndUserNotificationState();
    }
}
