// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    public static class GetFtpControlPolicy
    {
        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-ftp-control)
        /// * [API documentation](https://help.zscaler.com/zia/ftp-control-policy#/ftpSettings-get)
        /// 
        /// Use the **zia_ftp_control_policy** data source to retrieves the FTP Control Policy configuration. To learn more see [Configuring the FTP Control Policy](https://help.zscaler.com/zia/configuring-ftp-control-policy)
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// data "zia_ftp_control_policy" "this" {}
        /// ```
        /// </summary>
        public static Task<GetFtpControlPolicyResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFtpControlPolicyResult>("zia:index/getFtpControlPolicy:getFtpControlPolicy", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-ftp-control)
        /// * [API documentation](https://help.zscaler.com/zia/ftp-control-policy#/ftpSettings-get)
        /// 
        /// Use the **zia_ftp_control_policy** data source to retrieves the FTP Control Policy configuration. To learn more see [Configuring the FTP Control Policy](https://help.zscaler.com/zia/configuring-ftp-control-policy)
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// data "zia_ftp_control_policy" "this" {}
        /// ```
        /// </summary>
        public static Output<GetFtpControlPolicyResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFtpControlPolicyResult>("zia:index/getFtpControlPolicy:getFtpControlPolicy", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zia/about-ftp-control)
        /// * [API documentation](https://help.zscaler.com/zia/ftp-control-policy#/ftpSettings-get)
        /// 
        /// Use the **zia_ftp_control_policy** data source to retrieves the FTP Control Policy configuration. To learn more see [Configuring the FTP Control Policy](https://help.zscaler.com/zia/configuring-ftp-control-policy)
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl
        /// data "zia_ftp_control_policy" "this" {}
        /// ```
        /// </summary>
        public static Output<GetFtpControlPolicyResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFtpControlPolicyResult>("zia:index/getFtpControlPolicy:getFtpControlPolicy", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetFtpControlPolicyResult
    {
        /// <summary>
        /// (Boolean) Indicates whether to enable native FTP. When enabled, users can connect to native FTP sites and download files.
        /// </summary>
        public readonly bool FtpEnabled;
        /// <summary>
        /// (Boolean) Indicates whether to enable FTP over HTTP. By default, the Zscaler service doesn't allow users from a location to upload or download files from FTP sites that use FTP over HTTP. Select this to enable browsers to connect to FTP over HTTP sites and download files. If a remote user uses a dedicated port, then the service supports FTP over HTTP for them.
        /// </summary>
        public readonly bool FtpOverHttpEnabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (List of Strings) List of URL categories that allow FTP traffic
        /// </summary>
        public readonly ImmutableArray<string> UrlCategories;
        /// <summary>
        /// (List of Strings) Domains or URLs included for the FTP Control settings
        /// </summary>
        public readonly ImmutableArray<string> Urls;

        [OutputConstructor]
        private GetFtpControlPolicyResult(
            bool ftpEnabled,

            bool ftpOverHttpEnabled,

            string id,

            ImmutableArray<string> urlCategories,

            ImmutableArray<string> urls)
        {
            FtpEnabled = ftpEnabled;
            FtpOverHttpEnabled = ftpOverHttpEnabled;
            Id = id;
            UrlCategories = urlCategories;
            Urls = urls;
        }
    }
}
