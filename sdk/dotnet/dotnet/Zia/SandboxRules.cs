// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    /// <summary>
    /// * [Official documentation](https://help.zscaler.com/zia/about-sandbox)
    /// * [API documentation](https://help.zscaler.com/zia/sandbox-policy-settings#/sandboxRules-get)
    /// 
    /// The **zia_sandbox_rules** resource allows the creation and management of SAndbox rules in the Zscaler Internet Access.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
    /// 
    /// Visit
    /// 
    /// **zia_sandbox_rules** can be imported by using `&lt;RULE ID&gt;` or `&lt;RULE NAME&gt;` as the import ID.
    /// 
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import zia:index/sandboxRules:SandboxRules example &lt;rule_id&gt;
    /// ```
    /// 
    /// or
    /// 
    /// ```sh
    /// $ pulumi import zia:index/sandboxRules:SandboxRules example &lt;rule_name&gt;
    /// ```
    /// </summary>
    [ZiaResourceType("zia:index/sandboxRules:SandboxRules")]
    public partial class SandboxRules : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The threat categories to which the rule applies
        /// </summary>
        [Output("baPolicyCategories")]
        public Output<ImmutableArray<string>> BaPolicyCategories { get; private set; } = null!;

        /// <summary>
        /// (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`
        /// </summary>
        [Output("baRuleAction")]
        public Output<string> BaRuleAction { get; private set; } = null!;

        /// <summary>
        /// (Integer)
        /// </summary>
        [Output("byThreatScore")]
        public Output<int> ByThreatScore { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
        /// </summary>
        [Output("departments")]
        public Output<Outputs.SandboxRulesDepartments?> Departments { get; private set; } = null!;

        /// <summary>
        /// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.
        /// </summary>
        [Output("fileTypes")]
        public Output<ImmutableArray<string>> FileTypes { get; private set; } = null!;

        /// <summary>
        /// (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.
        /// </summary>
        [Output("firstTimeEnable")]
        public Output<bool> FirstTimeEnable { get; private set; } = null!;

        /// <summary>
        /// (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`
        /// </summary>
        [Output("firstTimeOperation")]
        public Output<string> FirstTimeOperation { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
        /// </summary>
        [Output("groups")]
        public Output<Outputs.SandboxRulesGroups?> Groups { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) Labels that are applicable to the rule.
        /// </summary>
        [Output("labels")]
        public Output<Outputs.SandboxRulesLabels?> Labels { get; private set; } = null!;

        /// <summary>
        /// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
        /// </summary>
        [Output("locationGroups")]
        public Output<Outputs.SandboxRulesLocationGroups?> LocationGroups { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
        /// </summary>
        [Output("locations")]
        public Output<Outputs.SandboxRulesLocations?> Locations { get; private set; } = null!;

        /// <summary>
        /// (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.
        /// </summary>
        [Output("mlActionEnabled")]
        public Output<bool> MlActionEnabled { get; private set; } = null!;

        /// <summary>
        /// The File Type Control policy rule name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
        /// </summary>
        [Output("order")]
        public Output<int> Order { get; private set; } = null!;

        /// <summary>
        /// Protocol for the given rule. This field is not applicable to the Lite API.
        /// </summary>
        [Output("protocols")]
        public Output<ImmutableArray<string>> Protocols { get; private set; } = null!;

        /// <summary>
        /// (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.
        /// </summary>
        [Output("rank")]
        public Output<int> Rank { get; private set; } = null!;

        [Output("ruleId")]
        public Output<int> RuleId { get; private set; } = null!;

        /// <summary>
        /// (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (List of Strings) The list of URL categories to which the DLP policy rule must be applied.
        /// </summary>
        [Output("urlCategories")]
        public Output<ImmutableArray<string>> UrlCategories { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
        /// </summary>
        [Output("users")]
        public Output<Outputs.SandboxRulesUsers?> Users { get; private set; } = null!;

        /// <summary>
        /// (List of Objects) The ZPA application segments to which the rule applies
        /// </summary>
        [Output("zpaAppSegments")]
        public Output<ImmutableArray<Outputs.SandboxRulesZpaAppSegment>> ZpaAppSegments { get; private set; } = null!;


        /// <summary>
        /// Create a SandboxRules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SandboxRules(string name, SandboxRulesArgs args, CustomResourceOptions? options = null)
            : base("zia:index/sandboxRules:SandboxRules", name, args ?? new SandboxRulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SandboxRules(string name, Input<string> id, SandboxRulesState? state = null, CustomResourceOptions? options = null)
            : base("zia:index/sandboxRules:SandboxRules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SandboxRules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SandboxRules Get(string name, Input<string> id, SandboxRulesState? state = null, CustomResourceOptions? options = null)
        {
            return new SandboxRules(name, id, state, options);
        }
    }

    public sealed class SandboxRulesArgs : global::Pulumi.ResourceArgs
    {
        [Input("baPolicyCategories")]
        private InputList<string>? _baPolicyCategories;

        /// <summary>
        /// The threat categories to which the rule applies
        /// </summary>
        public InputList<string> BaPolicyCategories
        {
            get => _baPolicyCategories ?? (_baPolicyCategories = new InputList<string>());
            set => _baPolicyCategories = value;
        }

        /// <summary>
        /// (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`
        /// </summary>
        [Input("baRuleAction")]
        public Input<string>? BaRuleAction { get; set; }

        /// <summary>
        /// (Integer)
        /// </summary>
        [Input("byThreatScore")]
        public Input<int>? ByThreatScore { get; set; }

        /// <summary>
        /// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
        /// </summary>
        [Input("departments")]
        public Input<Inputs.SandboxRulesDepartmentsArgs>? Departments { get; set; }

        /// <summary>
        /// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("fileTypes", required: true)]
        private InputList<string>? _fileTypes;

        /// <summary>
        /// (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.
        /// </summary>
        public InputList<string> FileTypes
        {
            get => _fileTypes ?? (_fileTypes = new InputList<string>());
            set => _fileTypes = value;
        }

        /// <summary>
        /// (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.
        /// </summary>
        [Input("firstTimeEnable")]
        public Input<bool>? FirstTimeEnable { get; set; }

        /// <summary>
        /// (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`
        /// </summary>
        [Input("firstTimeOperation")]
        public Input<string>? FirstTimeOperation { get; set; }

        /// <summary>
        /// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
        /// </summary>
        [Input("groups")]
        public Input<Inputs.SandboxRulesGroupsArgs>? Groups { get; set; }

        /// <summary>
        /// (List of Objects) Labels that are applicable to the rule.
        /// </summary>
        [Input("labels")]
        public Input<Inputs.SandboxRulesLabelsArgs>? Labels { get; set; }

        /// <summary>
        /// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
        /// </summary>
        [Input("locationGroups")]
        public Input<Inputs.SandboxRulesLocationGroupsArgs>? LocationGroups { get; set; }

        /// <summary>
        /// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
        /// </summary>
        [Input("locations")]
        public Input<Inputs.SandboxRulesLocationsArgs>? Locations { get; set; }

        /// <summary>
        /// (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.
        /// </summary>
        [Input("mlActionEnabled")]
        public Input<bool>? MlActionEnabled { get; set; }

        /// <summary>
        /// The File Type Control policy rule name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
        /// </summary>
        [Input("order", required: true)]
        public Input<int> Order { get; set; } = null!;

        [Input("protocols", required: true)]
        private InputList<string>? _protocols;

        /// <summary>
        /// Protocol for the given rule. This field is not applicable to the Lite API.
        /// </summary>
        public InputList<string> Protocols
        {
            get => _protocols ?? (_protocols = new InputList<string>());
            set => _protocols = value;
        }

        /// <summary>
        /// (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.
        /// </summary>
        [Input("rank")]
        public Input<int>? Rank { get; set; }

        /// <summary>
        /// (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("urlCategories")]
        private InputList<string>? _urlCategories;

        /// <summary>
        /// (List of Strings) The list of URL categories to which the DLP policy rule must be applied.
        /// </summary>
        public InputList<string> UrlCategories
        {
            get => _urlCategories ?? (_urlCategories = new InputList<string>());
            set => _urlCategories = value;
        }

        /// <summary>
        /// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
        /// </summary>
        [Input("users")]
        public Input<Inputs.SandboxRulesUsersArgs>? Users { get; set; }

        [Input("zpaAppSegments")]
        private InputList<Inputs.SandboxRulesZpaAppSegmentArgs>? _zpaAppSegments;

        /// <summary>
        /// (List of Objects) The ZPA application segments to which the rule applies
        /// </summary>
        public InputList<Inputs.SandboxRulesZpaAppSegmentArgs> ZpaAppSegments
        {
            get => _zpaAppSegments ?? (_zpaAppSegments = new InputList<Inputs.SandboxRulesZpaAppSegmentArgs>());
            set => _zpaAppSegments = value;
        }

        public SandboxRulesArgs()
        {
        }
        public static new SandboxRulesArgs Empty => new SandboxRulesArgs();
    }

    public sealed class SandboxRulesState : global::Pulumi.ResourceArgs
    {
        [Input("baPolicyCategories")]
        private InputList<string>? _baPolicyCategories;

        /// <summary>
        /// The threat categories to which the rule applies
        /// </summary>
        public InputList<string> BaPolicyCategories
        {
            get => _baPolicyCategories ?? (_baPolicyCategories = new InputList<string>());
            set => _baPolicyCategories = value;
        }

        /// <summary>
        /// (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`
        /// </summary>
        [Input("baRuleAction")]
        public Input<string>? BaRuleAction { get; set; }

        /// <summary>
        /// (Integer)
        /// </summary>
        [Input("byThreatScore")]
        public Input<int>? ByThreatScore { get; set; }

        /// <summary>
        /// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
        /// </summary>
        [Input("departments")]
        public Input<Inputs.SandboxRulesDepartmentsGetArgs>? Departments { get; set; }

        /// <summary>
        /// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("fileTypes")]
        private InputList<string>? _fileTypes;

        /// <summary>
        /// (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.
        /// </summary>
        public InputList<string> FileTypes
        {
            get => _fileTypes ?? (_fileTypes = new InputList<string>());
            set => _fileTypes = value;
        }

        /// <summary>
        /// (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.
        /// </summary>
        [Input("firstTimeEnable")]
        public Input<bool>? FirstTimeEnable { get; set; }

        /// <summary>
        /// (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`
        /// </summary>
        [Input("firstTimeOperation")]
        public Input<string>? FirstTimeOperation { get; set; }

        /// <summary>
        /// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
        /// </summary>
        [Input("groups")]
        public Input<Inputs.SandboxRulesGroupsGetArgs>? Groups { get; set; }

        /// <summary>
        /// (List of Objects) Labels that are applicable to the rule.
        /// </summary>
        [Input("labels")]
        public Input<Inputs.SandboxRulesLabelsGetArgs>? Labels { get; set; }

        /// <summary>
        /// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
        /// </summary>
        [Input("locationGroups")]
        public Input<Inputs.SandboxRulesLocationGroupsGetArgs>? LocationGroups { get; set; }

        /// <summary>
        /// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
        /// </summary>
        [Input("locations")]
        public Input<Inputs.SandboxRulesLocationsGetArgs>? Locations { get; set; }

        /// <summary>
        /// (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.
        /// </summary>
        [Input("mlActionEnabled")]
        public Input<bool>? MlActionEnabled { get; set; }

        /// <summary>
        /// The File Type Control policy rule name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
        /// </summary>
        [Input("order")]
        public Input<int>? Order { get; set; }

        [Input("protocols")]
        private InputList<string>? _protocols;

        /// <summary>
        /// Protocol for the given rule. This field is not applicable to the Lite API.
        /// </summary>
        public InputList<string> Protocols
        {
            get => _protocols ?? (_protocols = new InputList<string>());
            set => _protocols = value;
        }

        /// <summary>
        /// (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.
        /// </summary>
        [Input("rank")]
        public Input<int>? Rank { get; set; }

        [Input("ruleId")]
        public Input<int>? RuleId { get; set; }

        /// <summary>
        /// (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("urlCategories")]
        private InputList<string>? _urlCategories;

        /// <summary>
        /// (List of Strings) The list of URL categories to which the DLP policy rule must be applied.
        /// </summary>
        public InputList<string> UrlCategories
        {
            get => _urlCategories ?? (_urlCategories = new InputList<string>());
            set => _urlCategories = value;
        }

        /// <summary>
        /// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
        /// </summary>
        [Input("users")]
        public Input<Inputs.SandboxRulesUsersGetArgs>? Users { get; set; }

        [Input("zpaAppSegments")]
        private InputList<Inputs.SandboxRulesZpaAppSegmentGetArgs>? _zpaAppSegments;

        /// <summary>
        /// (List of Objects) The ZPA application segments to which the rule applies
        /// </summary>
        public InputList<Inputs.SandboxRulesZpaAppSegmentGetArgs> ZpaAppSegments
        {
            get => _zpaAppSegments ?? (_zpaAppSegments = new InputList<Inputs.SandboxRulesZpaAppSegmentGetArgs>());
            set => _zpaAppSegments = value;
        }

        public SandboxRulesState()
        {
        }
        public static new SandboxRulesState Empty => new SandboxRulesState();
    }
}
