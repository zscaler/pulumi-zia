// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    /// <summary>
    /// * [Official documentation](https://help.zscaler.com/zia/about-virtual-service-edge-clusters)
    /// * [API documentation](https://help.zscaler.com/zia/service-edges#/virtualZenClusters-get)
    /// 
    /// Use the **zia_virtual_service_edge_cluster** resource allows the creation and management of Service Edge Cluster objects in the Zscaler Internet Access.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
    /// 
    /// Visit
    /// 
    /// **zia_virtual_service_edge_cluster** can be imported by using `&lt;CLUSTER_ID&gt;` or `&lt;CLUSTER_NAME&gt;` as the import ID.
    /// 
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import zia:index/virtualServiceEdgeCluster:VirtualServiceEdgeCluster example &lt;cluster_id&gt;
    /// ```
    /// 
    /// or
    /// 
    /// ```sh
    /// $ pulumi import zia:index/virtualServiceEdgeCluster:VirtualServiceEdgeCluster example &lt;cluster_name&gt;
    /// ```
    /// </summary>
    [ZiaResourceType("zia:index/virtualServiceEdgeCluster:VirtualServiceEdgeCluster")]
    public partial class VirtualServiceEdgeCluster : global::Pulumi.CustomResource
    {
        [Output("clusterId")]
        public Output<int> ClusterId { get; private set; } = null!;

        /// <summary>
        /// (String) The IP address of the default gateway to the internet
        /// </summary>
        [Output("defaultGateway")]
        public Output<string?> DefaultGateway { get; private set; } = null!;

        /// <summary>
        /// (String) The Virtual Service Edge cluster IP address. In a Virtual Service Edge cluster, the cluster IP address provides fault tolerance and is used to listen for user traffic. This interface doesn't explicitly get an IP address. The cluster IP address must be in the same VLAN as the proxy and load balancer IP addresses.
        /// </summary>
        [Output("ipAddress")]
        public Output<string?> IpAddress { get; private set; } = null!;

        /// <summary>
        /// (String) A Boolean value that specifies whether to terminate IPSec traffic from the client at selected Virtual Service Edge instances for the Virtual Service Edge cluster
        /// </summary>
        [Output("ipSecEnabled")]
        public Output<bool?> IpSecEnabled { get; private set; } = null!;

        /// <summary>
        /// Name of the Virtual Service Edge cluster
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Number) Specifies the status of the Virtual Service Edge cluster. The status is set to `ENABLED` by default.
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// (String) The Virtual Service Edge cluster subnet mask
        /// </summary>
        [Output("subnetMask")]
        public Output<string?> SubnetMask { get; private set; } = null!;

        /// <summary>
        /// (String) The Virtual Service Edge cluster type
        /// `ANY`, `NONE`, `SME`, `SMSM`, `SMCA`, `SMUI`, `SMCDS`, `SMDNSD`, `SMAA`, `SMTP`,`SMQTN`,`VIP`,
        /// `UIZ`, `UIAE`, `SITEREVIEW`, `PAC`, `S_RELAY`, `M_RELAY`, `H_MON`, `SMIKE`, `NSS`, `SMEZA`, `SMLB`,
        /// `SMFCCLT`, `SMBA`, `SMBAC`, `SMESXI`, `SMBAUI`, `VZEN`, `ZSCMCLT`, `SMDLP`, `ZSQUERY`, `ADP`, `SMCDSDLP`,
        /// `SMSCIM`, `ZSAPI`, `ZSCMCDSSCLT`, `LOCAL_MTS`, `SVPN`, `SMCASB`, `SMFALCONUI`, `MOBILEAPP_REG`, `SMRESTSVR`, `FALCONCA`, `MOBILEAPP_NF`, `ZIRSVR`, `SMEDGEUI`, `ALERTEVAL`, `ALERTNOTIF`, `SMPARTNERUI`, `CQM`, `DATAKEEPER`,`SMBAM`, `ZWACLT`
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// (List of Object) The Virtual Service Edge instances you want to include in the cluster. A Virtual Service Edge cluster must contain at least two Virtual Service Edge instances.
        /// </summary>
        [Output("virtualZenNodes")]
        public Output<Outputs.VirtualServiceEdgeClusterVirtualZenNodes?> VirtualZenNodes { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualServiceEdgeCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualServiceEdgeCluster(string name, VirtualServiceEdgeClusterArgs? args = null, CustomResourceOptions? options = null)
            : base("zia:index/virtualServiceEdgeCluster:VirtualServiceEdgeCluster", name, args ?? new VirtualServiceEdgeClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualServiceEdgeCluster(string name, Input<string> id, VirtualServiceEdgeClusterState? state = null, CustomResourceOptions? options = null)
            : base("zia:index/virtualServiceEdgeCluster:VirtualServiceEdgeCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualServiceEdgeCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualServiceEdgeCluster Get(string name, Input<string> id, VirtualServiceEdgeClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new VirtualServiceEdgeCluster(name, id, state, options);
        }
    }

    public sealed class VirtualServiceEdgeClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (String) The IP address of the default gateway to the internet
        /// </summary>
        [Input("defaultGateway")]
        public Input<string>? DefaultGateway { get; set; }

        /// <summary>
        /// (String) The Virtual Service Edge cluster IP address. In a Virtual Service Edge cluster, the cluster IP address provides fault tolerance and is used to listen for user traffic. This interface doesn't explicitly get an IP address. The cluster IP address must be in the same VLAN as the proxy and load balancer IP addresses.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// (String) A Boolean value that specifies whether to terminate IPSec traffic from the client at selected Virtual Service Edge instances for the Virtual Service Edge cluster
        /// </summary>
        [Input("ipSecEnabled")]
        public Input<bool>? IpSecEnabled { get; set; }

        /// <summary>
        /// Name of the Virtual Service Edge cluster
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Number) Specifies the status of the Virtual Service Edge cluster. The status is set to `ENABLED` by default.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// (String) The Virtual Service Edge cluster subnet mask
        /// </summary>
        [Input("subnetMask")]
        public Input<string>? SubnetMask { get; set; }

        /// <summary>
        /// (String) The Virtual Service Edge cluster type
        /// `ANY`, `NONE`, `SME`, `SMSM`, `SMCA`, `SMUI`, `SMCDS`, `SMDNSD`, `SMAA`, `SMTP`,`SMQTN`,`VIP`,
        /// `UIZ`, `UIAE`, `SITEREVIEW`, `PAC`, `S_RELAY`, `M_RELAY`, `H_MON`, `SMIKE`, `NSS`, `SMEZA`, `SMLB`,
        /// `SMFCCLT`, `SMBA`, `SMBAC`, `SMESXI`, `SMBAUI`, `VZEN`, `ZSCMCLT`, `SMDLP`, `ZSQUERY`, `ADP`, `SMCDSDLP`,
        /// `SMSCIM`, `ZSAPI`, `ZSCMCDSSCLT`, `LOCAL_MTS`, `SVPN`, `SMCASB`, `SMFALCONUI`, `MOBILEAPP_REG`, `SMRESTSVR`, `FALCONCA`, `MOBILEAPP_NF`, `ZIRSVR`, `SMEDGEUI`, `ALERTEVAL`, `ALERTNOTIF`, `SMPARTNERUI`, `CQM`, `DATAKEEPER`,`SMBAM`, `ZWACLT`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// (List of Object) The Virtual Service Edge instances you want to include in the cluster. A Virtual Service Edge cluster must contain at least two Virtual Service Edge instances.
        /// </summary>
        [Input("virtualZenNodes")]
        public Input<Inputs.VirtualServiceEdgeClusterVirtualZenNodesArgs>? VirtualZenNodes { get; set; }

        public VirtualServiceEdgeClusterArgs()
        {
        }
        public static new VirtualServiceEdgeClusterArgs Empty => new VirtualServiceEdgeClusterArgs();
    }

    public sealed class VirtualServiceEdgeClusterState : global::Pulumi.ResourceArgs
    {
        [Input("clusterId")]
        public Input<int>? ClusterId { get; set; }

        /// <summary>
        /// (String) The IP address of the default gateway to the internet
        /// </summary>
        [Input("defaultGateway")]
        public Input<string>? DefaultGateway { get; set; }

        /// <summary>
        /// (String) The Virtual Service Edge cluster IP address. In a Virtual Service Edge cluster, the cluster IP address provides fault tolerance and is used to listen for user traffic. This interface doesn't explicitly get an IP address. The cluster IP address must be in the same VLAN as the proxy and load balancer IP addresses.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// (String) A Boolean value that specifies whether to terminate IPSec traffic from the client at selected Virtual Service Edge instances for the Virtual Service Edge cluster
        /// </summary>
        [Input("ipSecEnabled")]
        public Input<bool>? IpSecEnabled { get; set; }

        /// <summary>
        /// Name of the Virtual Service Edge cluster
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Number) Specifies the status of the Virtual Service Edge cluster. The status is set to `ENABLED` by default.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// (String) The Virtual Service Edge cluster subnet mask
        /// </summary>
        [Input("subnetMask")]
        public Input<string>? SubnetMask { get; set; }

        /// <summary>
        /// (String) The Virtual Service Edge cluster type
        /// `ANY`, `NONE`, `SME`, `SMSM`, `SMCA`, `SMUI`, `SMCDS`, `SMDNSD`, `SMAA`, `SMTP`,`SMQTN`,`VIP`,
        /// `UIZ`, `UIAE`, `SITEREVIEW`, `PAC`, `S_RELAY`, `M_RELAY`, `H_MON`, `SMIKE`, `NSS`, `SMEZA`, `SMLB`,
        /// `SMFCCLT`, `SMBA`, `SMBAC`, `SMESXI`, `SMBAUI`, `VZEN`, `ZSCMCLT`, `SMDLP`, `ZSQUERY`, `ADP`, `SMCDSDLP`,
        /// `SMSCIM`, `ZSAPI`, `ZSCMCDSSCLT`, `LOCAL_MTS`, `SVPN`, `SMCASB`, `SMFALCONUI`, `MOBILEAPP_REG`, `SMRESTSVR`, `FALCONCA`, `MOBILEAPP_NF`, `ZIRSVR`, `SMEDGEUI`, `ALERTEVAL`, `ALERTNOTIF`, `SMPARTNERUI`, `CQM`, `DATAKEEPER`,`SMBAM`, `ZWACLT`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// (List of Object) The Virtual Service Edge instances you want to include in the cluster. A Virtual Service Edge cluster must contain at least two Virtual Service Edge instances.
        /// </summary>
        [Input("virtualZenNodes")]
        public Input<Inputs.VirtualServiceEdgeClusterVirtualZenNodesGetArgs>? VirtualZenNodes { get; set; }

        public VirtualServiceEdgeClusterState()
        {
        }
        public static new VirtualServiceEdgeClusterState Empty => new VirtualServiceEdgeClusterState();
    }
}
