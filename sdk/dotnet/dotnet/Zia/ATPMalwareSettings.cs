// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    /// <summary>
    /// * [Official documentation](https://help.zscaler.com/zia/configuring-malware-protection-policy)
    /// * [API documentation](https://help.zscaler.com/zia/malware-protection-policy#/cyberThreatProtection/atpMalwareInspection-put)
    /// 
    /// The **zia_atp_malware_settings** resource allows you to update the malware protection policy configuration details. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
    /// 
    /// Visit
    /// 
    /// **zia_advanced_threat_settings** can be imported by using `advanced_threat_settings` as the import ID.
    /// 
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import zia:index/aTPMalwareSettings:ATPMalwareSettings this "advanced_threat_settings"
    /// ```
    /// </summary>
    [ZiaResourceType("zia:index/aTPMalwareSettings:ATPMalwareSettings")]
    public partial class ATPMalwareSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
        /// allowed or blocked
        /// </summary>
        [Output("adwareBlocked")]
        public Output<bool> AdwareBlocked { get; private set; } = null!;

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
        /// </summary>
        [Output("adwareCapture")]
        public Output<bool> AdwareCapture { get; private set; } = null!;

        /// <summary>
        /// A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
        /// accessing their devices, files, or data until a ransom payment is made.
        /// </summary>
        [Output("ransomwareBlocked")]
        public Output<bool> RansomwareBlocked { get; private set; } = null!;

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
        /// </summary>
        [Output("ransomwareCapture")]
        public Output<bool> RansomwareCapture { get; private set; } = null!;

        /// <summary>
        /// A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
        /// </summary>
        [Output("remoteAccessToolBlocked")]
        public Output<bool> RemoteAccessToolBlocked { get; private set; } = null!;

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
        /// </summary>
        [Output("remoteAccessToolCapture")]
        public Output<bool> RemoteAccessToolCapture { get; private set; } = null!;

        /// <summary>
        /// A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
        /// allowed or blocked
        /// </summary>
        [Output("spywareBlocked")]
        public Output<bool> SpywareBlocked { get; private set; } = null!;

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
        /// </summary>
        [Output("spywareCapture")]
        public Output<bool> SpywareCapture { get; private set; } = null!;

        /// <summary>
        /// A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
        /// useful
        /// </summary>
        [Output("trojanBlocked")]
        public Output<bool> TrojanBlocked { get; private set; } = null!;

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
        /// </summary>
        [Output("trojanCapture")]
        public Output<bool> TrojanCapture { get; private set; } = null!;

        /// <summary>
        /// A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
        /// users
        /// </summary>
        [Output("unwantedApplicationsBlocked")]
        public Output<bool> UnwantedApplicationsBlocked { get; private set; } = null!;

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
        /// </summary>
        [Output("unwantedApplicationsCapture")]
        public Output<bool> UnwantedApplicationsCapture { get; private set; } = null!;

        /// <summary>
        /// A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
        /// </summary>
        [Output("virusBlocked")]
        public Output<bool> VirusBlocked { get; private set; } = null!;

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
        /// </summary>
        [Output("virusCapture")]
        public Output<bool> VirusCapture { get; private set; } = null!;

        /// <summary>
        /// A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
        /// devices are allowed or blocked
        /// </summary>
        [Output("wormBlocked")]
        public Output<bool> WormBlocked { get; private set; } = null!;

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
        /// </summary>
        [Output("wormCapture")]
        public Output<bool> WormCapture { get; private set; } = null!;


        /// <summary>
        /// Create a ATPMalwareSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ATPMalwareSettings(string name, ATPMalwareSettingsArgs? args = null, CustomResourceOptions? options = null)
            : base("zia:index/aTPMalwareSettings:ATPMalwareSettings", name, args ?? new ATPMalwareSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ATPMalwareSettings(string name, Input<string> id, ATPMalwareSettingsState? state = null, CustomResourceOptions? options = null)
            : base("zia:index/aTPMalwareSettings:ATPMalwareSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ATPMalwareSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ATPMalwareSettings Get(string name, Input<string> id, ATPMalwareSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new ATPMalwareSettings(name, id, state, options);
        }
    }

    public sealed class ATPMalwareSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
        /// allowed or blocked
        /// </summary>
        [Input("adwareBlocked")]
        public Input<bool>? AdwareBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
        /// </summary>
        [Input("adwareCapture")]
        public Input<bool>? AdwareCapture { get; set; }

        /// <summary>
        /// A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
        /// accessing their devices, files, or data until a ransom payment is made.
        /// </summary>
        [Input("ransomwareBlocked")]
        public Input<bool>? RansomwareBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
        /// </summary>
        [Input("ransomwareCapture")]
        public Input<bool>? RansomwareCapture { get; set; }

        /// <summary>
        /// A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
        /// </summary>
        [Input("remoteAccessToolBlocked")]
        public Input<bool>? RemoteAccessToolBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
        /// </summary>
        [Input("remoteAccessToolCapture")]
        public Input<bool>? RemoteAccessToolCapture { get; set; }

        /// <summary>
        /// A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
        /// allowed or blocked
        /// </summary>
        [Input("spywareBlocked")]
        public Input<bool>? SpywareBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
        /// </summary>
        [Input("spywareCapture")]
        public Input<bool>? SpywareCapture { get; set; }

        /// <summary>
        /// A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
        /// useful
        /// </summary>
        [Input("trojanBlocked")]
        public Input<bool>? TrojanBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
        /// </summary>
        [Input("trojanCapture")]
        public Input<bool>? TrojanCapture { get; set; }

        /// <summary>
        /// A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
        /// users
        /// </summary>
        [Input("unwantedApplicationsBlocked")]
        public Input<bool>? UnwantedApplicationsBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
        /// </summary>
        [Input("unwantedApplicationsCapture")]
        public Input<bool>? UnwantedApplicationsCapture { get; set; }

        /// <summary>
        /// A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
        /// </summary>
        [Input("virusBlocked")]
        public Input<bool>? VirusBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
        /// </summary>
        [Input("virusCapture")]
        public Input<bool>? VirusCapture { get; set; }

        /// <summary>
        /// A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
        /// devices are allowed or blocked
        /// </summary>
        [Input("wormBlocked")]
        public Input<bool>? WormBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
        /// </summary>
        [Input("wormCapture")]
        public Input<bool>? WormCapture { get; set; }

        public ATPMalwareSettingsArgs()
        {
        }
        public static new ATPMalwareSettingsArgs Empty => new ATPMalwareSettingsArgs();
    }

    public sealed class ATPMalwareSettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
        /// allowed or blocked
        /// </summary>
        [Input("adwareBlocked")]
        public Input<bool>? AdwareBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
        /// </summary>
        [Input("adwareCapture")]
        public Input<bool>? AdwareCapture { get; set; }

        /// <summary>
        /// A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
        /// accessing their devices, files, or data until a ransom payment is made.
        /// </summary>
        [Input("ransomwareBlocked")]
        public Input<bool>? RansomwareBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
        /// </summary>
        [Input("ransomwareCapture")]
        public Input<bool>? RansomwareCapture { get; set; }

        /// <summary>
        /// A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
        /// </summary>
        [Input("remoteAccessToolBlocked")]
        public Input<bool>? RemoteAccessToolBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
        /// </summary>
        [Input("remoteAccessToolCapture")]
        public Input<bool>? RemoteAccessToolCapture { get; set; }

        /// <summary>
        /// A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
        /// allowed or blocked
        /// </summary>
        [Input("spywareBlocked")]
        public Input<bool>? SpywareBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
        /// </summary>
        [Input("spywareCapture")]
        public Input<bool>? SpywareCapture { get; set; }

        /// <summary>
        /// A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
        /// useful
        /// </summary>
        [Input("trojanBlocked")]
        public Input<bool>? TrojanBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
        /// </summary>
        [Input("trojanCapture")]
        public Input<bool>? TrojanCapture { get; set; }

        /// <summary>
        /// A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
        /// users
        /// </summary>
        [Input("unwantedApplicationsBlocked")]
        public Input<bool>? UnwantedApplicationsBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
        /// </summary>
        [Input("unwantedApplicationsCapture")]
        public Input<bool>? UnwantedApplicationsCapture { get; set; }

        /// <summary>
        /// A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
        /// </summary>
        [Input("virusBlocked")]
        public Input<bool>? VirusBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
        /// </summary>
        [Input("virusCapture")]
        public Input<bool>? VirusCapture { get; set; }

        /// <summary>
        /// A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
        /// devices are allowed or blocked
        /// </summary>
        [Input("wormBlocked")]
        public Input<bool>? WormBlocked { get; set; }

        /// <summary>
        /// A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
        /// </summary>
        [Input("wormCapture")]
        public Input<bool>? WormCapture { get; set; }

        public ATPMalwareSettingsState()
        {
        }
        public static new ATPMalwareSettingsState Empty => new ATPMalwareSettingsState();
    }
}
