// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zia
{
    /// <summary>
    /// * [Official documentation](https://help.zscaler.com/zia/firewall-policies#/ipSourceGroups-get)
    /// * [API documentation](https://help.zscaler.com/zia/firewall-policies#/ipSourceGroups-get)
    /// 
    /// The **zia_firewall_filtering_ip_source_groups** resource allows the creation and management of ZIA Cloud Firewall IP source groups in the Zscaler Internet Access. This resource can then be associated with a ZIA cloud firewall filtering rule.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
    /// 
    /// Visit
    /// 
    /// **zia_firewall_filtering_ip_source_groups** can be imported by using `&lt;GROUP_ID&gt;` or `&lt;GROUP_NAME&gt;` as the import ID.
    /// 
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import zia:index/firewallFilteringSourceGroups:FirewallFilteringSourceGroups example &lt;group_id&gt;
    /// ```
    /// 
    /// or
    /// 
    /// ```sh
    /// $ pulumi import zia:index/firewallFilteringSourceGroups:FirewallFilteringSourceGroups example &lt;group_name&gt;
    /// ```
    /// </summary>
    [ZiaResourceType("zia:index/firewallFilteringSourceGroups:FirewallFilteringSourceGroups")]
    public partial class FirewallFilteringSourceGroups : global::Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("groupId")]
        public Output<int> GroupId { get; private set; } = null!;

        [Output("ipAddresses")]
        public Output<ImmutableArray<string>> IpAddresses { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a FirewallFilteringSourceGroups resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FirewallFilteringSourceGroups(string name, FirewallFilteringSourceGroupsArgs args, CustomResourceOptions? options = null)
            : base("zia:index/firewallFilteringSourceGroups:FirewallFilteringSourceGroups", name, args ?? new FirewallFilteringSourceGroupsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FirewallFilteringSourceGroups(string name, Input<string> id, FirewallFilteringSourceGroupsState? state = null, CustomResourceOptions? options = null)
            : base("zia:index/firewallFilteringSourceGroups:FirewallFilteringSourceGroups", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FirewallFilteringSourceGroups resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FirewallFilteringSourceGroups Get(string name, Input<string> id, FirewallFilteringSourceGroupsState? state = null, CustomResourceOptions? options = null)
        {
            return new FirewallFilteringSourceGroups(name, id, state, options);
        }
    }

    public sealed class FirewallFilteringSourceGroupsArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ipAddresses", required: true)]
        private InputList<string>? _ipAddresses;
        public InputList<string> IpAddresses
        {
            get => _ipAddresses ?? (_ipAddresses = new InputList<string>());
            set => _ipAddresses = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public FirewallFilteringSourceGroupsArgs()
        {
        }
        public static new FirewallFilteringSourceGroupsArgs Empty => new FirewallFilteringSourceGroupsArgs();
    }

    public sealed class FirewallFilteringSourceGroupsState : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("groupId")]
        public Input<int>? GroupId { get; set; }

        [Input("ipAddresses")]
        private InputList<string>? _ipAddresses;
        public InputList<string> IpAddresses
        {
            get => _ipAddresses ?? (_ipAddresses = new InputList<string>());
            set => _ipAddresses = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public FirewallFilteringSourceGroupsState()
        {
        }
        public static new FirewallFilteringSourceGroupsState Empty => new FirewallFilteringSourceGroupsState();
    }
}
