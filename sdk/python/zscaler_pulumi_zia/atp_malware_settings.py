# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['ATPMalwareSettingsArgs', 'ATPMalwareSettings']

@pulumi.input_type
class ATPMalwareSettingsArgs:
    def __init__(__self__, *,
                 adware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 adware_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 ransomware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 ransomware_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 remote_access_tool_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 remote_access_tool_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 spyware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 spyware_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 trojan_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 trojan_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 unwanted_applications_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 unwanted_applications_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 virus_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 virus_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 worm_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 worm_capture: Optional[pulumi.Input[builtins.bool]] = None):
        """
        The set of arguments for constructing a ATPMalwareSettings resource.
        :param pulumi.Input[builtins.bool] adware_blocked: A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
               allowed or blocked
        :param pulumi.Input[builtins.bool] adware_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
        :param pulumi.Input[builtins.bool] ransomware_blocked: A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
               accessing their devices, files, or data until a ransom payment is made.
        :param pulumi.Input[builtins.bool] ransomware_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
        :param pulumi.Input[builtins.bool] remote_access_tool_blocked: A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
        :param pulumi.Input[builtins.bool] remote_access_tool_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
        :param pulumi.Input[builtins.bool] spyware_blocked: A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
               allowed or blocked
        :param pulumi.Input[builtins.bool] spyware_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
        :param pulumi.Input[builtins.bool] trojan_blocked: A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
               useful
        :param pulumi.Input[builtins.bool] trojan_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
        :param pulumi.Input[builtins.bool] unwanted_applications_blocked: A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
               users
        :param pulumi.Input[builtins.bool] unwanted_applications_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
        :param pulumi.Input[builtins.bool] virus_blocked: A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
        :param pulumi.Input[builtins.bool] virus_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
        :param pulumi.Input[builtins.bool] worm_blocked: A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
               devices are allowed or blocked
        :param pulumi.Input[builtins.bool] worm_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
        """
        if adware_blocked is not None:
            pulumi.set(__self__, "adware_blocked", adware_blocked)
        if adware_capture is not None:
            pulumi.set(__self__, "adware_capture", adware_capture)
        if ransomware_blocked is not None:
            pulumi.set(__self__, "ransomware_blocked", ransomware_blocked)
        if ransomware_capture is not None:
            pulumi.set(__self__, "ransomware_capture", ransomware_capture)
        if remote_access_tool_blocked is not None:
            pulumi.set(__self__, "remote_access_tool_blocked", remote_access_tool_blocked)
        if remote_access_tool_capture is not None:
            pulumi.set(__self__, "remote_access_tool_capture", remote_access_tool_capture)
        if spyware_blocked is not None:
            pulumi.set(__self__, "spyware_blocked", spyware_blocked)
        if spyware_capture is not None:
            pulumi.set(__self__, "spyware_capture", spyware_capture)
        if trojan_blocked is not None:
            pulumi.set(__self__, "trojan_blocked", trojan_blocked)
        if trojan_capture is not None:
            pulumi.set(__self__, "trojan_capture", trojan_capture)
        if unwanted_applications_blocked is not None:
            pulumi.set(__self__, "unwanted_applications_blocked", unwanted_applications_blocked)
        if unwanted_applications_capture is not None:
            pulumi.set(__self__, "unwanted_applications_capture", unwanted_applications_capture)
        if virus_blocked is not None:
            pulumi.set(__self__, "virus_blocked", virus_blocked)
        if virus_capture is not None:
            pulumi.set(__self__, "virus_capture", virus_capture)
        if worm_blocked is not None:
            pulumi.set(__self__, "worm_blocked", worm_blocked)
        if worm_capture is not None:
            pulumi.set(__self__, "worm_capture", worm_capture)

    @property
    @pulumi.getter(name="adwareBlocked")
    def adware_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
        allowed or blocked
        """
        return pulumi.get(self, "adware_blocked")

    @adware_blocked.setter
    def adware_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "adware_blocked", value)

    @property
    @pulumi.getter(name="adwareCapture")
    def adware_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
        """
        return pulumi.get(self, "adware_capture")

    @adware_capture.setter
    def adware_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "adware_capture", value)

    @property
    @pulumi.getter(name="ransomwareBlocked")
    def ransomware_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
        accessing their devices, files, or data until a ransom payment is made.
        """
        return pulumi.get(self, "ransomware_blocked")

    @ransomware_blocked.setter
    def ransomware_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "ransomware_blocked", value)

    @property
    @pulumi.getter(name="ransomwareCapture")
    def ransomware_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
        """
        return pulumi.get(self, "ransomware_capture")

    @ransomware_capture.setter
    def ransomware_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "ransomware_capture", value)

    @property
    @pulumi.getter(name="remoteAccessToolBlocked")
    def remote_access_tool_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
        """
        return pulumi.get(self, "remote_access_tool_blocked")

    @remote_access_tool_blocked.setter
    def remote_access_tool_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "remote_access_tool_blocked", value)

    @property
    @pulumi.getter(name="remoteAccessToolCapture")
    def remote_access_tool_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
        """
        return pulumi.get(self, "remote_access_tool_capture")

    @remote_access_tool_capture.setter
    def remote_access_tool_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "remote_access_tool_capture", value)

    @property
    @pulumi.getter(name="spywareBlocked")
    def spyware_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
        allowed or blocked
        """
        return pulumi.get(self, "spyware_blocked")

    @spyware_blocked.setter
    def spyware_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "spyware_blocked", value)

    @property
    @pulumi.getter(name="spywareCapture")
    def spyware_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
        """
        return pulumi.get(self, "spyware_capture")

    @spyware_capture.setter
    def spyware_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "spyware_capture", value)

    @property
    @pulumi.getter(name="trojanBlocked")
    def trojan_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
        useful
        """
        return pulumi.get(self, "trojan_blocked")

    @trojan_blocked.setter
    def trojan_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "trojan_blocked", value)

    @property
    @pulumi.getter(name="trojanCapture")
    def trojan_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
        """
        return pulumi.get(self, "trojan_capture")

    @trojan_capture.setter
    def trojan_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "trojan_capture", value)

    @property
    @pulumi.getter(name="unwantedApplicationsBlocked")
    def unwanted_applications_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
        users
        """
        return pulumi.get(self, "unwanted_applications_blocked")

    @unwanted_applications_blocked.setter
    def unwanted_applications_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "unwanted_applications_blocked", value)

    @property
    @pulumi.getter(name="unwantedApplicationsCapture")
    def unwanted_applications_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
        """
        return pulumi.get(self, "unwanted_applications_capture")

    @unwanted_applications_capture.setter
    def unwanted_applications_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "unwanted_applications_capture", value)

    @property
    @pulumi.getter(name="virusBlocked")
    def virus_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
        """
        return pulumi.get(self, "virus_blocked")

    @virus_blocked.setter
    def virus_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "virus_blocked", value)

    @property
    @pulumi.getter(name="virusCapture")
    def virus_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
        """
        return pulumi.get(self, "virus_capture")

    @virus_capture.setter
    def virus_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "virus_capture", value)

    @property
    @pulumi.getter(name="wormBlocked")
    def worm_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
        devices are allowed or blocked
        """
        return pulumi.get(self, "worm_blocked")

    @worm_blocked.setter
    def worm_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "worm_blocked", value)

    @property
    @pulumi.getter(name="wormCapture")
    def worm_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
        """
        return pulumi.get(self, "worm_capture")

    @worm_capture.setter
    def worm_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "worm_capture", value)


@pulumi.input_type
class _ATPMalwareSettingsState:
    def __init__(__self__, *,
                 adware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 adware_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 ransomware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 ransomware_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 remote_access_tool_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 remote_access_tool_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 spyware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 spyware_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 trojan_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 trojan_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 unwanted_applications_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 unwanted_applications_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 virus_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 virus_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 worm_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 worm_capture: Optional[pulumi.Input[builtins.bool]] = None):
        """
        Input properties used for looking up and filtering ATPMalwareSettings resources.
        :param pulumi.Input[builtins.bool] adware_blocked: A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
               allowed or blocked
        :param pulumi.Input[builtins.bool] adware_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
        :param pulumi.Input[builtins.bool] ransomware_blocked: A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
               accessing their devices, files, or data until a ransom payment is made.
        :param pulumi.Input[builtins.bool] ransomware_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
        :param pulumi.Input[builtins.bool] remote_access_tool_blocked: A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
        :param pulumi.Input[builtins.bool] remote_access_tool_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
        :param pulumi.Input[builtins.bool] spyware_blocked: A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
               allowed or blocked
        :param pulumi.Input[builtins.bool] spyware_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
        :param pulumi.Input[builtins.bool] trojan_blocked: A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
               useful
        :param pulumi.Input[builtins.bool] trojan_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
        :param pulumi.Input[builtins.bool] unwanted_applications_blocked: A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
               users
        :param pulumi.Input[builtins.bool] unwanted_applications_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
        :param pulumi.Input[builtins.bool] virus_blocked: A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
        :param pulumi.Input[builtins.bool] virus_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
        :param pulumi.Input[builtins.bool] worm_blocked: A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
               devices are allowed or blocked
        :param pulumi.Input[builtins.bool] worm_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
        """
        if adware_blocked is not None:
            pulumi.set(__self__, "adware_blocked", adware_blocked)
        if adware_capture is not None:
            pulumi.set(__self__, "adware_capture", adware_capture)
        if ransomware_blocked is not None:
            pulumi.set(__self__, "ransomware_blocked", ransomware_blocked)
        if ransomware_capture is not None:
            pulumi.set(__self__, "ransomware_capture", ransomware_capture)
        if remote_access_tool_blocked is not None:
            pulumi.set(__self__, "remote_access_tool_blocked", remote_access_tool_blocked)
        if remote_access_tool_capture is not None:
            pulumi.set(__self__, "remote_access_tool_capture", remote_access_tool_capture)
        if spyware_blocked is not None:
            pulumi.set(__self__, "spyware_blocked", spyware_blocked)
        if spyware_capture is not None:
            pulumi.set(__self__, "spyware_capture", spyware_capture)
        if trojan_blocked is not None:
            pulumi.set(__self__, "trojan_blocked", trojan_blocked)
        if trojan_capture is not None:
            pulumi.set(__self__, "trojan_capture", trojan_capture)
        if unwanted_applications_blocked is not None:
            pulumi.set(__self__, "unwanted_applications_blocked", unwanted_applications_blocked)
        if unwanted_applications_capture is not None:
            pulumi.set(__self__, "unwanted_applications_capture", unwanted_applications_capture)
        if virus_blocked is not None:
            pulumi.set(__self__, "virus_blocked", virus_blocked)
        if virus_capture is not None:
            pulumi.set(__self__, "virus_capture", virus_capture)
        if worm_blocked is not None:
            pulumi.set(__self__, "worm_blocked", worm_blocked)
        if worm_capture is not None:
            pulumi.set(__self__, "worm_capture", worm_capture)

    @property
    @pulumi.getter(name="adwareBlocked")
    def adware_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
        allowed or blocked
        """
        return pulumi.get(self, "adware_blocked")

    @adware_blocked.setter
    def adware_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "adware_blocked", value)

    @property
    @pulumi.getter(name="adwareCapture")
    def adware_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
        """
        return pulumi.get(self, "adware_capture")

    @adware_capture.setter
    def adware_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "adware_capture", value)

    @property
    @pulumi.getter(name="ransomwareBlocked")
    def ransomware_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
        accessing their devices, files, or data until a ransom payment is made.
        """
        return pulumi.get(self, "ransomware_blocked")

    @ransomware_blocked.setter
    def ransomware_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "ransomware_blocked", value)

    @property
    @pulumi.getter(name="ransomwareCapture")
    def ransomware_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
        """
        return pulumi.get(self, "ransomware_capture")

    @ransomware_capture.setter
    def ransomware_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "ransomware_capture", value)

    @property
    @pulumi.getter(name="remoteAccessToolBlocked")
    def remote_access_tool_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
        """
        return pulumi.get(self, "remote_access_tool_blocked")

    @remote_access_tool_blocked.setter
    def remote_access_tool_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "remote_access_tool_blocked", value)

    @property
    @pulumi.getter(name="remoteAccessToolCapture")
    def remote_access_tool_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
        """
        return pulumi.get(self, "remote_access_tool_capture")

    @remote_access_tool_capture.setter
    def remote_access_tool_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "remote_access_tool_capture", value)

    @property
    @pulumi.getter(name="spywareBlocked")
    def spyware_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
        allowed or blocked
        """
        return pulumi.get(self, "spyware_blocked")

    @spyware_blocked.setter
    def spyware_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "spyware_blocked", value)

    @property
    @pulumi.getter(name="spywareCapture")
    def spyware_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
        """
        return pulumi.get(self, "spyware_capture")

    @spyware_capture.setter
    def spyware_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "spyware_capture", value)

    @property
    @pulumi.getter(name="trojanBlocked")
    def trojan_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
        useful
        """
        return pulumi.get(self, "trojan_blocked")

    @trojan_blocked.setter
    def trojan_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "trojan_blocked", value)

    @property
    @pulumi.getter(name="trojanCapture")
    def trojan_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
        """
        return pulumi.get(self, "trojan_capture")

    @trojan_capture.setter
    def trojan_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "trojan_capture", value)

    @property
    @pulumi.getter(name="unwantedApplicationsBlocked")
    def unwanted_applications_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
        users
        """
        return pulumi.get(self, "unwanted_applications_blocked")

    @unwanted_applications_blocked.setter
    def unwanted_applications_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "unwanted_applications_blocked", value)

    @property
    @pulumi.getter(name="unwantedApplicationsCapture")
    def unwanted_applications_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
        """
        return pulumi.get(self, "unwanted_applications_capture")

    @unwanted_applications_capture.setter
    def unwanted_applications_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "unwanted_applications_capture", value)

    @property
    @pulumi.getter(name="virusBlocked")
    def virus_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
        """
        return pulumi.get(self, "virus_blocked")

    @virus_blocked.setter
    def virus_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "virus_blocked", value)

    @property
    @pulumi.getter(name="virusCapture")
    def virus_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
        """
        return pulumi.get(self, "virus_capture")

    @virus_capture.setter
    def virus_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "virus_capture", value)

    @property
    @pulumi.getter(name="wormBlocked")
    def worm_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
        devices are allowed or blocked
        """
        return pulumi.get(self, "worm_blocked")

    @worm_blocked.setter
    def worm_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "worm_blocked", value)

    @property
    @pulumi.getter(name="wormCapture")
    def worm_capture(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
        """
        return pulumi.get(self, "worm_capture")

    @worm_capture.setter
    def worm_capture(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "worm_capture", value)


@pulumi.type_token("zia:index/aTPMalwareSettings:ATPMalwareSettings")
class ATPMalwareSettings(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 adware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 adware_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 ransomware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 ransomware_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 remote_access_tool_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 remote_access_tool_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 spyware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 spyware_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 trojan_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 trojan_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 unwanted_applications_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 unwanted_applications_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 virus_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 virus_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 worm_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 worm_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 __props__=None):
        """
        * [Official documentation](https://help.zscaler.com/zia/configuring-malware-protection-policy)
        * [API documentation](https://help.zscaler.com/zia/malware-protection-policy#/cyberThreatProtection/atpMalwareInspection-put)

        The **zia_atp_malware_settings** resource allows you to update the malware protection policy configuration details. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)

        ## Example Usage

        ## Import

        Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.

        Visit

        **zia_advanced_threat_settings** can be imported by using `advanced_threat_settings` as the import ID.

        For example:

        ```sh
        $ pulumi import zia:index/aTPMalwareSettings:ATPMalwareSettings this "advanced_threat_settings"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.bool] adware_blocked: A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
               allowed or blocked
        :param pulumi.Input[builtins.bool] adware_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
        :param pulumi.Input[builtins.bool] ransomware_blocked: A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
               accessing their devices, files, or data until a ransom payment is made.
        :param pulumi.Input[builtins.bool] ransomware_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
        :param pulumi.Input[builtins.bool] remote_access_tool_blocked: A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
        :param pulumi.Input[builtins.bool] remote_access_tool_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
        :param pulumi.Input[builtins.bool] spyware_blocked: A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
               allowed or blocked
        :param pulumi.Input[builtins.bool] spyware_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
        :param pulumi.Input[builtins.bool] trojan_blocked: A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
               useful
        :param pulumi.Input[builtins.bool] trojan_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
        :param pulumi.Input[builtins.bool] unwanted_applications_blocked: A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
               users
        :param pulumi.Input[builtins.bool] unwanted_applications_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
        :param pulumi.Input[builtins.bool] virus_blocked: A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
        :param pulumi.Input[builtins.bool] virus_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
        :param pulumi.Input[builtins.bool] worm_blocked: A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
               devices are allowed or blocked
        :param pulumi.Input[builtins.bool] worm_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[ATPMalwareSettingsArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        * [Official documentation](https://help.zscaler.com/zia/configuring-malware-protection-policy)
        * [API documentation](https://help.zscaler.com/zia/malware-protection-policy#/cyberThreatProtection/atpMalwareInspection-put)

        The **zia_atp_malware_settings** resource allows you to update the malware protection policy configuration details. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)

        ## Example Usage

        ## Import

        Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.

        Visit

        **zia_advanced_threat_settings** can be imported by using `advanced_threat_settings` as the import ID.

        For example:

        ```sh
        $ pulumi import zia:index/aTPMalwareSettings:ATPMalwareSettings this "advanced_threat_settings"
        ```

        :param str resource_name: The name of the resource.
        :param ATPMalwareSettingsArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ATPMalwareSettingsArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 adware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 adware_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 ransomware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 ransomware_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 remote_access_tool_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 remote_access_tool_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 spyware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 spyware_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 trojan_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 trojan_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 unwanted_applications_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 unwanted_applications_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 virus_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 virus_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 worm_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 worm_capture: Optional[pulumi.Input[builtins.bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ATPMalwareSettingsArgs.__new__(ATPMalwareSettingsArgs)

            __props__.__dict__["adware_blocked"] = adware_blocked
            __props__.__dict__["adware_capture"] = adware_capture
            __props__.__dict__["ransomware_blocked"] = ransomware_blocked
            __props__.__dict__["ransomware_capture"] = ransomware_capture
            __props__.__dict__["remote_access_tool_blocked"] = remote_access_tool_blocked
            __props__.__dict__["remote_access_tool_capture"] = remote_access_tool_capture
            __props__.__dict__["spyware_blocked"] = spyware_blocked
            __props__.__dict__["spyware_capture"] = spyware_capture
            __props__.__dict__["trojan_blocked"] = trojan_blocked
            __props__.__dict__["trojan_capture"] = trojan_capture
            __props__.__dict__["unwanted_applications_blocked"] = unwanted_applications_blocked
            __props__.__dict__["unwanted_applications_capture"] = unwanted_applications_capture
            __props__.__dict__["virus_blocked"] = virus_blocked
            __props__.__dict__["virus_capture"] = virus_capture
            __props__.__dict__["worm_blocked"] = worm_blocked
            __props__.__dict__["worm_capture"] = worm_capture
        super(ATPMalwareSettings, __self__).__init__(
            'zia:index/aTPMalwareSettings:ATPMalwareSettings',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            adware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
            adware_capture: Optional[pulumi.Input[builtins.bool]] = None,
            ransomware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
            ransomware_capture: Optional[pulumi.Input[builtins.bool]] = None,
            remote_access_tool_blocked: Optional[pulumi.Input[builtins.bool]] = None,
            remote_access_tool_capture: Optional[pulumi.Input[builtins.bool]] = None,
            spyware_blocked: Optional[pulumi.Input[builtins.bool]] = None,
            spyware_capture: Optional[pulumi.Input[builtins.bool]] = None,
            trojan_blocked: Optional[pulumi.Input[builtins.bool]] = None,
            trojan_capture: Optional[pulumi.Input[builtins.bool]] = None,
            unwanted_applications_blocked: Optional[pulumi.Input[builtins.bool]] = None,
            unwanted_applications_capture: Optional[pulumi.Input[builtins.bool]] = None,
            virus_blocked: Optional[pulumi.Input[builtins.bool]] = None,
            virus_capture: Optional[pulumi.Input[builtins.bool]] = None,
            worm_blocked: Optional[pulumi.Input[builtins.bool]] = None,
            worm_capture: Optional[pulumi.Input[builtins.bool]] = None) -> 'ATPMalwareSettings':
        """
        Get an existing ATPMalwareSettings resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.bool] adware_blocked: A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
               allowed or blocked
        :param pulumi.Input[builtins.bool] adware_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
        :param pulumi.Input[builtins.bool] ransomware_blocked: A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
               accessing their devices, files, or data until a ransom payment is made.
        :param pulumi.Input[builtins.bool] ransomware_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
        :param pulumi.Input[builtins.bool] remote_access_tool_blocked: A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
        :param pulumi.Input[builtins.bool] remote_access_tool_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
        :param pulumi.Input[builtins.bool] spyware_blocked: A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
               allowed or blocked
        :param pulumi.Input[builtins.bool] spyware_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
        :param pulumi.Input[builtins.bool] trojan_blocked: A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
               useful
        :param pulumi.Input[builtins.bool] trojan_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
        :param pulumi.Input[builtins.bool] unwanted_applications_blocked: A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
               users
        :param pulumi.Input[builtins.bool] unwanted_applications_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
        :param pulumi.Input[builtins.bool] virus_blocked: A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
        :param pulumi.Input[builtins.bool] virus_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
        :param pulumi.Input[builtins.bool] worm_blocked: A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
               devices are allowed or blocked
        :param pulumi.Input[builtins.bool] worm_capture: A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ATPMalwareSettingsState.__new__(_ATPMalwareSettingsState)

        __props__.__dict__["adware_blocked"] = adware_blocked
        __props__.__dict__["adware_capture"] = adware_capture
        __props__.__dict__["ransomware_blocked"] = ransomware_blocked
        __props__.__dict__["ransomware_capture"] = ransomware_capture
        __props__.__dict__["remote_access_tool_blocked"] = remote_access_tool_blocked
        __props__.__dict__["remote_access_tool_capture"] = remote_access_tool_capture
        __props__.__dict__["spyware_blocked"] = spyware_blocked
        __props__.__dict__["spyware_capture"] = spyware_capture
        __props__.__dict__["trojan_blocked"] = trojan_blocked
        __props__.__dict__["trojan_capture"] = trojan_capture
        __props__.__dict__["unwanted_applications_blocked"] = unwanted_applications_blocked
        __props__.__dict__["unwanted_applications_capture"] = unwanted_applications_capture
        __props__.__dict__["virus_blocked"] = virus_blocked
        __props__.__dict__["virus_capture"] = virus_capture
        __props__.__dict__["worm_blocked"] = worm_blocked
        __props__.__dict__["worm_capture"] = worm_capture
        return ATPMalwareSettings(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="adwareBlocked")
    def adware_blocked(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value indicating whether malicious files that automatically render advertisements and install adware are
        allowed or blocked
        """
        return pulumi.get(self, "adware_blocked")

    @property
    @pulumi.getter(name="adwareCapture")
    def adware_capture(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for adware
        """
        return pulumi.get(self, "adware_capture")

    @property
    @pulumi.getter(name="ransomwareBlocked")
    def ransomware_blocked(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value specifying whether to allow or block malicious programs that can encrypt files and prevent users from
        accessing their devices, files, or data until a ransom payment is made.
        """
        return pulumi.get(self, "ransomware_blocked")

    @property
    @pulumi.getter(name="ransomwareCapture")
    def ransomware_capture(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for ransomware
        """
        return pulumi.get(self, "ransomware_capture")

    @property
    @pulumi.getter(name="remoteAccessToolBlocked")
    def remote_access_tool_blocked(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value specifying whether to allow or block file download from tools that are common from remote access sites
        """
        return pulumi.get(self, "remote_access_tool_blocked")

    @property
    @pulumi.getter(name="remoteAccessToolCapture")
    def remote_access_tool_capture(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for remote access tools
        """
        return pulumi.get(self, "remote_access_tool_capture")

    @property
    @pulumi.getter(name="spywareBlocked")
    def spyware_blocked(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value indicating whether malicious files that covertly gather information about a user or an organization are
        allowed or blocked
        """
        return pulumi.get(self, "spyware_blocked")

    @property
    @pulumi.getter(name="spywareCapture")
    def spyware_capture(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for spyware
        """
        return pulumi.get(self, "spyware_capture")

    @property
    @pulumi.getter(name="trojanBlocked")
    def trojan_blocked(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value that allows or blocks malicious programs such as Trojan viruses that are presented as beneficial or
        useful
        """
        return pulumi.get(self, "trojan_blocked")

    @property
    @pulumi.getter(name="trojanCapture")
    def trojan_capture(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for Trojan viruses
        """
        return pulumi.get(self, "trojan_capture")

    @property
    @pulumi.getter(name="unwantedApplicationsBlocked")
    def unwanted_applications_blocked(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value that allows or blocks unwanted files that are downloaded alongside intentional programs downloaded by
        users
        """
        return pulumi.get(self, "unwanted_applications_blocked")

    @property
    @pulumi.getter(name="unwantedApplicationsCapture")
    def unwanted_applications_capture(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for unwanted applications
        """
        return pulumi.get(self, "unwanted_applications_capture")

    @property
    @pulumi.getter(name="virusBlocked")
    def virus_blocked(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value that indicates if malicious programs that cause damage to systems and data are allowed or blocked.
        """
        return pulumi.get(self, "virus_blocked")

    @property
    @pulumi.getter(name="virusCapture")
    def virus_capture(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for viruses
        """
        return pulumi.get(self, "virus_capture")

    @property
    @pulumi.getter(name="wormBlocked")
    def worm_blocked(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value indicating whether malicious programs that duplicate themselves to spread malicious code to other
        devices are allowed or blocked
        """
        return pulumi.get(self, "worm_blocked")

    @property
    @pulumi.getter(name="wormCapture")
    def worm_capture(self) -> pulumi.Output[builtins.bool]:
        """
        A Boolean value specifying whether packet capture (PCAP) is enabled or disabled for worms
        """
        return pulumi.get(self, "worm_capture")

