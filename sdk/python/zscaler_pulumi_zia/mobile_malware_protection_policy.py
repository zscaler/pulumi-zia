# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['MobileMalwareProtectionPolicyArgs', 'MobileMalwareProtectionPolicy']

@pulumi.input_type
class MobileMalwareProtectionPolicyArgs:
    def __init__(__self__, *,
                 block_apps_communicating_with_ad_websites: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_communicating_with_remote_unknown_servers: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_device_identifier: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_location_info: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_personally_identifiable_info: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_unencrypted_user_credentials: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_with_known_vulnerabilities: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_with_malicious_activity: Optional[pulumi.Input[builtins.bool]] = None):
        """
        The set of arguments for constructing a MobileMalwareProtectionPolicy resource.
        :param pulumi.Input[builtins.bool] block_apps_communicating_with_ad_websites: Blocks an application from communicating with unknown servers (i.e., servers not normally or historically associated
               with the application)
        :param pulumi.Input[builtins.bool] block_apps_sending_device_identifier: Blocks an application from communicating with known advertisement websites
        :param pulumi.Input[builtins.bool] block_apps_sending_location_info: Blocks an application from leaking a user's personally identifiable information (PII) via communication in an
               unencrypted format or for an unknown purpose
        :param pulumi.Input[builtins.bool] block_apps_sending_personally_identifiable_info: Blocks an application from leaking device identifiers via communication in an unencrypted format or for an unknown
               purpose
        :param pulumi.Input[builtins.bool] block_apps_sending_unencrypted_user_credentials: Blocks an application from leaking device location details via communication in an unencrypted format or for an unknown
               purpose
        :param pulumi.Input[builtins.bool] block_apps_with_known_vulnerabilities: Blocks an application from leaking a user's credentials in an unencrypted format
        :param pulumi.Input[builtins.bool] block_apps_with_malicious_activity: Blocks applications that contain vulnerabilities or that use insecure features, modules, or protocols
        """
        if block_apps_communicating_with_ad_websites is not None:
            pulumi.set(__self__, "block_apps_communicating_with_ad_websites", block_apps_communicating_with_ad_websites)
        if block_apps_communicating_with_remote_unknown_servers is not None:
            pulumi.set(__self__, "block_apps_communicating_with_remote_unknown_servers", block_apps_communicating_with_remote_unknown_servers)
        if block_apps_sending_device_identifier is not None:
            pulumi.set(__self__, "block_apps_sending_device_identifier", block_apps_sending_device_identifier)
        if block_apps_sending_location_info is not None:
            pulumi.set(__self__, "block_apps_sending_location_info", block_apps_sending_location_info)
        if block_apps_sending_personally_identifiable_info is not None:
            pulumi.set(__self__, "block_apps_sending_personally_identifiable_info", block_apps_sending_personally_identifiable_info)
        if block_apps_sending_unencrypted_user_credentials is not None:
            pulumi.set(__self__, "block_apps_sending_unencrypted_user_credentials", block_apps_sending_unencrypted_user_credentials)
        if block_apps_with_known_vulnerabilities is not None:
            pulumi.set(__self__, "block_apps_with_known_vulnerabilities", block_apps_with_known_vulnerabilities)
        if block_apps_with_malicious_activity is not None:
            pulumi.set(__self__, "block_apps_with_malicious_activity", block_apps_with_malicious_activity)

    @property
    @pulumi.getter(name="blockAppsCommunicatingWithAdWebsites")
    def block_apps_communicating_with_ad_websites(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks an application from communicating with unknown servers (i.e., servers not normally or historically associated
        with the application)
        """
        return pulumi.get(self, "block_apps_communicating_with_ad_websites")

    @block_apps_communicating_with_ad_websites.setter
    def block_apps_communicating_with_ad_websites(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_communicating_with_ad_websites", value)

    @property
    @pulumi.getter(name="blockAppsCommunicatingWithRemoteUnknownServers")
    def block_apps_communicating_with_remote_unknown_servers(self) -> Optional[pulumi.Input[builtins.bool]]:
        return pulumi.get(self, "block_apps_communicating_with_remote_unknown_servers")

    @block_apps_communicating_with_remote_unknown_servers.setter
    def block_apps_communicating_with_remote_unknown_servers(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_communicating_with_remote_unknown_servers", value)

    @property
    @pulumi.getter(name="blockAppsSendingDeviceIdentifier")
    def block_apps_sending_device_identifier(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks an application from communicating with known advertisement websites
        """
        return pulumi.get(self, "block_apps_sending_device_identifier")

    @block_apps_sending_device_identifier.setter
    def block_apps_sending_device_identifier(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_sending_device_identifier", value)

    @property
    @pulumi.getter(name="blockAppsSendingLocationInfo")
    def block_apps_sending_location_info(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks an application from leaking a user's personally identifiable information (PII) via communication in an
        unencrypted format or for an unknown purpose
        """
        return pulumi.get(self, "block_apps_sending_location_info")

    @block_apps_sending_location_info.setter
    def block_apps_sending_location_info(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_sending_location_info", value)

    @property
    @pulumi.getter(name="blockAppsSendingPersonallyIdentifiableInfo")
    def block_apps_sending_personally_identifiable_info(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks an application from leaking device identifiers via communication in an unencrypted format or for an unknown
        purpose
        """
        return pulumi.get(self, "block_apps_sending_personally_identifiable_info")

    @block_apps_sending_personally_identifiable_info.setter
    def block_apps_sending_personally_identifiable_info(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_sending_personally_identifiable_info", value)

    @property
    @pulumi.getter(name="blockAppsSendingUnencryptedUserCredentials")
    def block_apps_sending_unencrypted_user_credentials(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks an application from leaking device location details via communication in an unencrypted format or for an unknown
        purpose
        """
        return pulumi.get(self, "block_apps_sending_unencrypted_user_credentials")

    @block_apps_sending_unencrypted_user_credentials.setter
    def block_apps_sending_unencrypted_user_credentials(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_sending_unencrypted_user_credentials", value)

    @property
    @pulumi.getter(name="blockAppsWithKnownVulnerabilities")
    def block_apps_with_known_vulnerabilities(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks an application from leaking a user's credentials in an unencrypted format
        """
        return pulumi.get(self, "block_apps_with_known_vulnerabilities")

    @block_apps_with_known_vulnerabilities.setter
    def block_apps_with_known_vulnerabilities(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_with_known_vulnerabilities", value)

    @property
    @pulumi.getter(name="blockAppsWithMaliciousActivity")
    def block_apps_with_malicious_activity(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks applications that contain vulnerabilities or that use insecure features, modules, or protocols
        """
        return pulumi.get(self, "block_apps_with_malicious_activity")

    @block_apps_with_malicious_activity.setter
    def block_apps_with_malicious_activity(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_with_malicious_activity", value)


@pulumi.input_type
class _MobileMalwareProtectionPolicyState:
    def __init__(__self__, *,
                 block_apps_communicating_with_ad_websites: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_communicating_with_remote_unknown_servers: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_device_identifier: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_location_info: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_personally_identifiable_info: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_unencrypted_user_credentials: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_with_known_vulnerabilities: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_with_malicious_activity: Optional[pulumi.Input[builtins.bool]] = None):
        """
        Input properties used for looking up and filtering MobileMalwareProtectionPolicy resources.
        :param pulumi.Input[builtins.bool] block_apps_communicating_with_ad_websites: Blocks an application from communicating with unknown servers (i.e., servers not normally or historically associated
               with the application)
        :param pulumi.Input[builtins.bool] block_apps_sending_device_identifier: Blocks an application from communicating with known advertisement websites
        :param pulumi.Input[builtins.bool] block_apps_sending_location_info: Blocks an application from leaking a user's personally identifiable information (PII) via communication in an
               unencrypted format or for an unknown purpose
        :param pulumi.Input[builtins.bool] block_apps_sending_personally_identifiable_info: Blocks an application from leaking device identifiers via communication in an unencrypted format or for an unknown
               purpose
        :param pulumi.Input[builtins.bool] block_apps_sending_unencrypted_user_credentials: Blocks an application from leaking device location details via communication in an unencrypted format or for an unknown
               purpose
        :param pulumi.Input[builtins.bool] block_apps_with_known_vulnerabilities: Blocks an application from leaking a user's credentials in an unencrypted format
        :param pulumi.Input[builtins.bool] block_apps_with_malicious_activity: Blocks applications that contain vulnerabilities or that use insecure features, modules, or protocols
        """
        if block_apps_communicating_with_ad_websites is not None:
            pulumi.set(__self__, "block_apps_communicating_with_ad_websites", block_apps_communicating_with_ad_websites)
        if block_apps_communicating_with_remote_unknown_servers is not None:
            pulumi.set(__self__, "block_apps_communicating_with_remote_unknown_servers", block_apps_communicating_with_remote_unknown_servers)
        if block_apps_sending_device_identifier is not None:
            pulumi.set(__self__, "block_apps_sending_device_identifier", block_apps_sending_device_identifier)
        if block_apps_sending_location_info is not None:
            pulumi.set(__self__, "block_apps_sending_location_info", block_apps_sending_location_info)
        if block_apps_sending_personally_identifiable_info is not None:
            pulumi.set(__self__, "block_apps_sending_personally_identifiable_info", block_apps_sending_personally_identifiable_info)
        if block_apps_sending_unencrypted_user_credentials is not None:
            pulumi.set(__self__, "block_apps_sending_unencrypted_user_credentials", block_apps_sending_unencrypted_user_credentials)
        if block_apps_with_known_vulnerabilities is not None:
            pulumi.set(__self__, "block_apps_with_known_vulnerabilities", block_apps_with_known_vulnerabilities)
        if block_apps_with_malicious_activity is not None:
            pulumi.set(__self__, "block_apps_with_malicious_activity", block_apps_with_malicious_activity)

    @property
    @pulumi.getter(name="blockAppsCommunicatingWithAdWebsites")
    def block_apps_communicating_with_ad_websites(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks an application from communicating with unknown servers (i.e., servers not normally or historically associated
        with the application)
        """
        return pulumi.get(self, "block_apps_communicating_with_ad_websites")

    @block_apps_communicating_with_ad_websites.setter
    def block_apps_communicating_with_ad_websites(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_communicating_with_ad_websites", value)

    @property
    @pulumi.getter(name="blockAppsCommunicatingWithRemoteUnknownServers")
    def block_apps_communicating_with_remote_unknown_servers(self) -> Optional[pulumi.Input[builtins.bool]]:
        return pulumi.get(self, "block_apps_communicating_with_remote_unknown_servers")

    @block_apps_communicating_with_remote_unknown_servers.setter
    def block_apps_communicating_with_remote_unknown_servers(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_communicating_with_remote_unknown_servers", value)

    @property
    @pulumi.getter(name="blockAppsSendingDeviceIdentifier")
    def block_apps_sending_device_identifier(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks an application from communicating with known advertisement websites
        """
        return pulumi.get(self, "block_apps_sending_device_identifier")

    @block_apps_sending_device_identifier.setter
    def block_apps_sending_device_identifier(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_sending_device_identifier", value)

    @property
    @pulumi.getter(name="blockAppsSendingLocationInfo")
    def block_apps_sending_location_info(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks an application from leaking a user's personally identifiable information (PII) via communication in an
        unencrypted format or for an unknown purpose
        """
        return pulumi.get(self, "block_apps_sending_location_info")

    @block_apps_sending_location_info.setter
    def block_apps_sending_location_info(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_sending_location_info", value)

    @property
    @pulumi.getter(name="blockAppsSendingPersonallyIdentifiableInfo")
    def block_apps_sending_personally_identifiable_info(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks an application from leaking device identifiers via communication in an unencrypted format or for an unknown
        purpose
        """
        return pulumi.get(self, "block_apps_sending_personally_identifiable_info")

    @block_apps_sending_personally_identifiable_info.setter
    def block_apps_sending_personally_identifiable_info(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_sending_personally_identifiable_info", value)

    @property
    @pulumi.getter(name="blockAppsSendingUnencryptedUserCredentials")
    def block_apps_sending_unencrypted_user_credentials(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks an application from leaking device location details via communication in an unencrypted format or for an unknown
        purpose
        """
        return pulumi.get(self, "block_apps_sending_unencrypted_user_credentials")

    @block_apps_sending_unencrypted_user_credentials.setter
    def block_apps_sending_unencrypted_user_credentials(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_sending_unencrypted_user_credentials", value)

    @property
    @pulumi.getter(name="blockAppsWithKnownVulnerabilities")
    def block_apps_with_known_vulnerabilities(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks an application from leaking a user's credentials in an unencrypted format
        """
        return pulumi.get(self, "block_apps_with_known_vulnerabilities")

    @block_apps_with_known_vulnerabilities.setter
    def block_apps_with_known_vulnerabilities(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_with_known_vulnerabilities", value)

    @property
    @pulumi.getter(name="blockAppsWithMaliciousActivity")
    def block_apps_with_malicious_activity(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Blocks applications that contain vulnerabilities or that use insecure features, modules, or protocols
        """
        return pulumi.get(self, "block_apps_with_malicious_activity")

    @block_apps_with_malicious_activity.setter
    def block_apps_with_malicious_activity(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "block_apps_with_malicious_activity", value)


@pulumi.type_token("zia:index/mobileMalwareProtectionPolicy:MobileMalwareProtectionPolicy")
class MobileMalwareProtectionPolicy(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 block_apps_communicating_with_ad_websites: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_communicating_with_remote_unknown_servers: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_device_identifier: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_location_info: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_personally_identifiable_info: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_unencrypted_user_credentials: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_with_known_vulnerabilities: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_with_malicious_activity: Optional[pulumi.Input[builtins.bool]] = None,
                 __props__=None):
        """
        * [Official documentation](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)
        * [API documentation](https://help.zscaler.com/zia/mobile-malware-protection-policy#/mobileAdvanceThreatSettings-put)

        The **zia_mobile_malware_protection_policy** resource allows you to update Mobile Malware Protection policy. To learn more see [Configuring the Mobile Malware Protection Policy](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)

        ## Example Usage

        ## Import

        Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.

        Visit

        **zia_mobile_malware_protection_policy** can be imported by using `mobile_settings` as the import ID.

        For example:

        ```sh
        $ pulumi import zia:index/mobileMalwareProtectionPolicy:MobileMalwareProtectionPolicy this "mobile_settings"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.bool] block_apps_communicating_with_ad_websites: Blocks an application from communicating with unknown servers (i.e., servers not normally or historically associated
               with the application)
        :param pulumi.Input[builtins.bool] block_apps_sending_device_identifier: Blocks an application from communicating with known advertisement websites
        :param pulumi.Input[builtins.bool] block_apps_sending_location_info: Blocks an application from leaking a user's personally identifiable information (PII) via communication in an
               unencrypted format or for an unknown purpose
        :param pulumi.Input[builtins.bool] block_apps_sending_personally_identifiable_info: Blocks an application from leaking device identifiers via communication in an unencrypted format or for an unknown
               purpose
        :param pulumi.Input[builtins.bool] block_apps_sending_unencrypted_user_credentials: Blocks an application from leaking device location details via communication in an unencrypted format or for an unknown
               purpose
        :param pulumi.Input[builtins.bool] block_apps_with_known_vulnerabilities: Blocks an application from leaking a user's credentials in an unencrypted format
        :param pulumi.Input[builtins.bool] block_apps_with_malicious_activity: Blocks applications that contain vulnerabilities or that use insecure features, modules, or protocols
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[MobileMalwareProtectionPolicyArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        * [Official documentation](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)
        * [API documentation](https://help.zscaler.com/zia/mobile-malware-protection-policy#/mobileAdvanceThreatSettings-put)

        The **zia_mobile_malware_protection_policy** resource allows you to update Mobile Malware Protection policy. To learn more see [Configuring the Mobile Malware Protection Policy](https://help.zscaler.com/zia/configuring-mobile-malware-protection-policy)

        ## Example Usage

        ## Import

        Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.

        Visit

        **zia_mobile_malware_protection_policy** can be imported by using `mobile_settings` as the import ID.

        For example:

        ```sh
        $ pulumi import zia:index/mobileMalwareProtectionPolicy:MobileMalwareProtectionPolicy this "mobile_settings"
        ```

        :param str resource_name: The name of the resource.
        :param MobileMalwareProtectionPolicyArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(MobileMalwareProtectionPolicyArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 block_apps_communicating_with_ad_websites: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_communicating_with_remote_unknown_servers: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_device_identifier: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_location_info: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_personally_identifiable_info: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_sending_unencrypted_user_credentials: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_with_known_vulnerabilities: Optional[pulumi.Input[builtins.bool]] = None,
                 block_apps_with_malicious_activity: Optional[pulumi.Input[builtins.bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = MobileMalwareProtectionPolicyArgs.__new__(MobileMalwareProtectionPolicyArgs)

            __props__.__dict__["block_apps_communicating_with_ad_websites"] = block_apps_communicating_with_ad_websites
            __props__.__dict__["block_apps_communicating_with_remote_unknown_servers"] = block_apps_communicating_with_remote_unknown_servers
            __props__.__dict__["block_apps_sending_device_identifier"] = block_apps_sending_device_identifier
            __props__.__dict__["block_apps_sending_location_info"] = block_apps_sending_location_info
            __props__.__dict__["block_apps_sending_personally_identifiable_info"] = block_apps_sending_personally_identifiable_info
            __props__.__dict__["block_apps_sending_unencrypted_user_credentials"] = block_apps_sending_unencrypted_user_credentials
            __props__.__dict__["block_apps_with_known_vulnerabilities"] = block_apps_with_known_vulnerabilities
            __props__.__dict__["block_apps_with_malicious_activity"] = block_apps_with_malicious_activity
        super(MobileMalwareProtectionPolicy, __self__).__init__(
            'zia:index/mobileMalwareProtectionPolicy:MobileMalwareProtectionPolicy',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            block_apps_communicating_with_ad_websites: Optional[pulumi.Input[builtins.bool]] = None,
            block_apps_communicating_with_remote_unknown_servers: Optional[pulumi.Input[builtins.bool]] = None,
            block_apps_sending_device_identifier: Optional[pulumi.Input[builtins.bool]] = None,
            block_apps_sending_location_info: Optional[pulumi.Input[builtins.bool]] = None,
            block_apps_sending_personally_identifiable_info: Optional[pulumi.Input[builtins.bool]] = None,
            block_apps_sending_unencrypted_user_credentials: Optional[pulumi.Input[builtins.bool]] = None,
            block_apps_with_known_vulnerabilities: Optional[pulumi.Input[builtins.bool]] = None,
            block_apps_with_malicious_activity: Optional[pulumi.Input[builtins.bool]] = None) -> 'MobileMalwareProtectionPolicy':
        """
        Get an existing MobileMalwareProtectionPolicy resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.bool] block_apps_communicating_with_ad_websites: Blocks an application from communicating with unknown servers (i.e., servers not normally or historically associated
               with the application)
        :param pulumi.Input[builtins.bool] block_apps_sending_device_identifier: Blocks an application from communicating with known advertisement websites
        :param pulumi.Input[builtins.bool] block_apps_sending_location_info: Blocks an application from leaking a user's personally identifiable information (PII) via communication in an
               unencrypted format or for an unknown purpose
        :param pulumi.Input[builtins.bool] block_apps_sending_personally_identifiable_info: Blocks an application from leaking device identifiers via communication in an unencrypted format or for an unknown
               purpose
        :param pulumi.Input[builtins.bool] block_apps_sending_unencrypted_user_credentials: Blocks an application from leaking device location details via communication in an unencrypted format or for an unknown
               purpose
        :param pulumi.Input[builtins.bool] block_apps_with_known_vulnerabilities: Blocks an application from leaking a user's credentials in an unencrypted format
        :param pulumi.Input[builtins.bool] block_apps_with_malicious_activity: Blocks applications that contain vulnerabilities or that use insecure features, modules, or protocols
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _MobileMalwareProtectionPolicyState.__new__(_MobileMalwareProtectionPolicyState)

        __props__.__dict__["block_apps_communicating_with_ad_websites"] = block_apps_communicating_with_ad_websites
        __props__.__dict__["block_apps_communicating_with_remote_unknown_servers"] = block_apps_communicating_with_remote_unknown_servers
        __props__.__dict__["block_apps_sending_device_identifier"] = block_apps_sending_device_identifier
        __props__.__dict__["block_apps_sending_location_info"] = block_apps_sending_location_info
        __props__.__dict__["block_apps_sending_personally_identifiable_info"] = block_apps_sending_personally_identifiable_info
        __props__.__dict__["block_apps_sending_unencrypted_user_credentials"] = block_apps_sending_unencrypted_user_credentials
        __props__.__dict__["block_apps_with_known_vulnerabilities"] = block_apps_with_known_vulnerabilities
        __props__.__dict__["block_apps_with_malicious_activity"] = block_apps_with_malicious_activity
        return MobileMalwareProtectionPolicy(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="blockAppsCommunicatingWithAdWebsites")
    def block_apps_communicating_with_ad_websites(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Blocks an application from communicating with unknown servers (i.e., servers not normally or historically associated
        with the application)
        """
        return pulumi.get(self, "block_apps_communicating_with_ad_websites")

    @property
    @pulumi.getter(name="blockAppsCommunicatingWithRemoteUnknownServers")
    def block_apps_communicating_with_remote_unknown_servers(self) -> pulumi.Output[Optional[builtins.bool]]:
        return pulumi.get(self, "block_apps_communicating_with_remote_unknown_servers")

    @property
    @pulumi.getter(name="blockAppsSendingDeviceIdentifier")
    def block_apps_sending_device_identifier(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Blocks an application from communicating with known advertisement websites
        """
        return pulumi.get(self, "block_apps_sending_device_identifier")

    @property
    @pulumi.getter(name="blockAppsSendingLocationInfo")
    def block_apps_sending_location_info(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Blocks an application from leaking a user's personally identifiable information (PII) via communication in an
        unencrypted format or for an unknown purpose
        """
        return pulumi.get(self, "block_apps_sending_location_info")

    @property
    @pulumi.getter(name="blockAppsSendingPersonallyIdentifiableInfo")
    def block_apps_sending_personally_identifiable_info(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Blocks an application from leaking device identifiers via communication in an unencrypted format or for an unknown
        purpose
        """
        return pulumi.get(self, "block_apps_sending_personally_identifiable_info")

    @property
    @pulumi.getter(name="blockAppsSendingUnencryptedUserCredentials")
    def block_apps_sending_unencrypted_user_credentials(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Blocks an application from leaking device location details via communication in an unencrypted format or for an unknown
        purpose
        """
        return pulumi.get(self, "block_apps_sending_unencrypted_user_credentials")

    @property
    @pulumi.getter(name="blockAppsWithKnownVulnerabilities")
    def block_apps_with_known_vulnerabilities(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Blocks an application from leaking a user's credentials in an unencrypted format
        """
        return pulumi.get(self, "block_apps_with_known_vulnerabilities")

    @property
    @pulumi.getter(name="blockAppsWithMaliciousActivity")
    def block_apps_with_malicious_activity(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Blocks applications that contain vulnerabilities or that use insecure features, modules, or protocols
        """
        return pulumi.get(self, "block_apps_with_malicious_activity")

