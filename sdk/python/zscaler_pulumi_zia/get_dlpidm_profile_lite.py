# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetDLPIDMProfileLiteResult',
    'AwaitableGetDLPIDMProfileLiteResult',
    'get_dlpidm_profile_lite',
    'get_dlpidm_profile_lite_output',
]

@pulumi.output_type
class GetDLPIDMProfileLiteResult:
    """
    A collection of values returned by getDLPIDMProfileLite.
    """
    def __init__(__self__, active_only=None, client_vms=None, id=None, last_modified_bies=None, last_modified_time=None, num_documents=None, profile_id=None, template_name=None):
        if active_only and not isinstance(active_only, bool):
            raise TypeError("Expected argument 'active_only' to be a bool")
        pulumi.set(__self__, "active_only", active_only)
        if client_vms and not isinstance(client_vms, list):
            raise TypeError("Expected argument 'client_vms' to be a list")
        pulumi.set(__self__, "client_vms", client_vms)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if last_modified_bies and not isinstance(last_modified_bies, list):
            raise TypeError("Expected argument 'last_modified_bies' to be a list")
        pulumi.set(__self__, "last_modified_bies", last_modified_bies)
        if last_modified_time and not isinstance(last_modified_time, int):
            raise TypeError("Expected argument 'last_modified_time' to be a int")
        pulumi.set(__self__, "last_modified_time", last_modified_time)
        if num_documents and not isinstance(num_documents, int):
            raise TypeError("Expected argument 'num_documents' to be a int")
        pulumi.set(__self__, "num_documents", num_documents)
        if profile_id and not isinstance(profile_id, int):
            raise TypeError("Expected argument 'profile_id' to be a int")
        pulumi.set(__self__, "profile_id", profile_id)
        if template_name and not isinstance(template_name, str):
            raise TypeError("Expected argument 'template_name' to be a str")
        pulumi.set(__self__, "template_name", template_name)

    @property
    @pulumi.getter(name="activeOnly")
    def active_only(self) -> Optional[bool]:
        return pulumi.get(self, "active_only")

    @property
    @pulumi.getter(name="clientVms")
    def client_vms(self) -> Sequence['outputs.GetDLPIDMProfileLiteClientVmResult']:
        return pulumi.get(self, "client_vms")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="lastModifiedBies")
    def last_modified_bies(self) -> Sequence['outputs.GetDLPIDMProfileLiteLastModifiedByResult']:
        return pulumi.get(self, "last_modified_bies")

    @property
    @pulumi.getter(name="lastModifiedTime")
    def last_modified_time(self) -> int:
        return pulumi.get(self, "last_modified_time")

    @property
    @pulumi.getter(name="numDocuments")
    def num_documents(self) -> int:
        return pulumi.get(self, "num_documents")

    @property
    @pulumi.getter(name="profileId")
    def profile_id(self) -> int:
        return pulumi.get(self, "profile_id")

    @property
    @pulumi.getter(name="templateName")
    def template_name(self) -> Optional[str]:
        return pulumi.get(self, "template_name")


class AwaitableGetDLPIDMProfileLiteResult(GetDLPIDMProfileLiteResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDLPIDMProfileLiteResult(
            active_only=self.active_only,
            client_vms=self.client_vms,
            id=self.id,
            last_modified_bies=self.last_modified_bies,
            last_modified_time=self.last_modified_time,
            num_documents=self.num_documents,
            profile_id=self.profile_id,
            template_name=self.template_name)


def get_dlpidm_profile_lite(active_only: Optional[bool] = None,
                            template_name: Optional[str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDLPIDMProfileLiteResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['activeOnly'] = active_only
    __args__['templateName'] = template_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('zia:index/getDLPIDMProfileLite:getDLPIDMProfileLite', __args__, opts=opts, typ=GetDLPIDMProfileLiteResult).value

    return AwaitableGetDLPIDMProfileLiteResult(
        active_only=pulumi.get(__ret__, 'active_only'),
        client_vms=pulumi.get(__ret__, 'client_vms'),
        id=pulumi.get(__ret__, 'id'),
        last_modified_bies=pulumi.get(__ret__, 'last_modified_bies'),
        last_modified_time=pulumi.get(__ret__, 'last_modified_time'),
        num_documents=pulumi.get(__ret__, 'num_documents'),
        profile_id=pulumi.get(__ret__, 'profile_id'),
        template_name=pulumi.get(__ret__, 'template_name'))


@_utilities.lift_output_func(get_dlpidm_profile_lite)
def get_dlpidm_profile_lite_output(active_only: Optional[pulumi.Input[Optional[bool]]] = None,
                                   template_name: Optional[pulumi.Input[Optional[str]]] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDLPIDMProfileLiteResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
