# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['URLCategoriesArgs', 'URLCategories']

@pulumi.input_type
class URLCategoriesArgs:
    def __init__(__self__, *,
                 configured_name: Optional[pulumi.Input[str]] = None,
                 custom_category: Optional[pulumi.Input[bool]] = None,
                 custom_ip_ranges_count: Optional[pulumi.Input[int]] = None,
                 custom_urls_count: Optional[pulumi.Input[int]] = None,
                 db_categorized_urls: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 editable: Optional[pulumi.Input[bool]] = None,
                 ip_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ip_ranges_retaining_parent_categories: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ip_ranges_retaining_parent_category_count: Optional[pulumi.Input[int]] = None,
                 keywords: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 keywords_retaining_parent_categories: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 scopes: Optional[pulumi.Input[Sequence[pulumi.Input['URLCategoriesScopeArgs']]]] = None,
                 super_category: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 url_keyword_counts: Optional[pulumi.Input['URLCategoriesUrlKeywordCountsArgs']] = None,
                 urls: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 urls_retaining_parent_category_count: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a URLCategories resource.
        :param pulumi.Input[str] configured_name: Name of the URL category. This is only required for custom URL categories.
        :param pulumi.Input[bool] custom_category: Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
        :param pulumi.Input[int] custom_ip_ranges_count: The number of custom IP address ranges associated to the URL category.
        :param pulumi.Input[int] custom_urls_count: The number of custom URLs associated to the URL category.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] db_categorized_urls: URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
        :param pulumi.Input[str] description: Description of the category.
        :param pulumi.Input[bool] editable: Value is set to false for custom URL category when due to scope user does not have edit permission
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_ranges: Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
               ⚠️ **NOTE :**: This field is available only if the option to configure custom IP ranges is enabled for your organization. To enable this option, contact Zscaler Support.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_ranges_retaining_parent_categories: The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
        :param pulumi.Input[int] ip_ranges_retaining_parent_category_count: The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] keywords: Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
        :param pulumi.Input[Sequence[pulumi.Input['URLCategoriesScopeArgs']]] scopes: Scope of the custom categories.
        :param pulumi.Input[str] super_category: Super Category of the URL category. This field is required when creating custom URL categories.
        :param pulumi.Input[str] type: The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
        :param pulumi.Input['URLCategoriesUrlKeywordCountsArgs'] url_keyword_counts: URL and keyword counts for the category.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] urls: Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
        :param pulumi.Input[int] urls_retaining_parent_category_count: The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        """
        if configured_name is not None:
            pulumi.set(__self__, "configured_name", configured_name)
        if custom_category is not None:
            pulumi.set(__self__, "custom_category", custom_category)
        if custom_ip_ranges_count is not None:
            pulumi.set(__self__, "custom_ip_ranges_count", custom_ip_ranges_count)
        if custom_urls_count is not None:
            pulumi.set(__self__, "custom_urls_count", custom_urls_count)
        if db_categorized_urls is not None:
            pulumi.set(__self__, "db_categorized_urls", db_categorized_urls)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if editable is not None:
            pulumi.set(__self__, "editable", editable)
        if ip_ranges is not None:
            pulumi.set(__self__, "ip_ranges", ip_ranges)
        if ip_ranges_retaining_parent_categories is not None:
            pulumi.set(__self__, "ip_ranges_retaining_parent_categories", ip_ranges_retaining_parent_categories)
        if ip_ranges_retaining_parent_category_count is not None:
            pulumi.set(__self__, "ip_ranges_retaining_parent_category_count", ip_ranges_retaining_parent_category_count)
        if keywords is not None:
            pulumi.set(__self__, "keywords", keywords)
        if keywords_retaining_parent_categories is not None:
            pulumi.set(__self__, "keywords_retaining_parent_categories", keywords_retaining_parent_categories)
        if scopes is not None:
            pulumi.set(__self__, "scopes", scopes)
        if super_category is not None:
            pulumi.set(__self__, "super_category", super_category)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if url_keyword_counts is not None:
            pulumi.set(__self__, "url_keyword_counts", url_keyword_counts)
        if urls is not None:
            pulumi.set(__self__, "urls", urls)
        if urls_retaining_parent_category_count is not None:
            pulumi.set(__self__, "urls_retaining_parent_category_count", urls_retaining_parent_category_count)

    @property
    @pulumi.getter(name="configuredName")
    def configured_name(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the URL category. This is only required for custom URL categories.
        """
        return pulumi.get(self, "configured_name")

    @configured_name.setter
    def configured_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "configured_name", value)

    @property
    @pulumi.getter(name="customCategory")
    def custom_category(self) -> Optional[pulumi.Input[bool]]:
        """
        Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
        """
        return pulumi.get(self, "custom_category")

    @custom_category.setter
    def custom_category(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "custom_category", value)

    @property
    @pulumi.getter(name="customIpRangesCount")
    def custom_ip_ranges_count(self) -> Optional[pulumi.Input[int]]:
        """
        The number of custom IP address ranges associated to the URL category.
        """
        return pulumi.get(self, "custom_ip_ranges_count")

    @custom_ip_ranges_count.setter
    def custom_ip_ranges_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "custom_ip_ranges_count", value)

    @property
    @pulumi.getter(name="customUrlsCount")
    def custom_urls_count(self) -> Optional[pulumi.Input[int]]:
        """
        The number of custom URLs associated to the URL category.
        """
        return pulumi.get(self, "custom_urls_count")

    @custom_urls_count.setter
    def custom_urls_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "custom_urls_count", value)

    @property
    @pulumi.getter(name="dbCategorizedUrls")
    def db_categorized_urls(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
        """
        return pulumi.get(self, "db_categorized_urls")

    @db_categorized_urls.setter
    def db_categorized_urls(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "db_categorized_urls", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the category.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def editable(self) -> Optional[pulumi.Input[bool]]:
        """
        Value is set to false for custom URL category when due to scope user does not have edit permission
        """
        return pulumi.get(self, "editable")

    @editable.setter
    def editable(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "editable", value)

    @property
    @pulumi.getter(name="ipRanges")
    def ip_ranges(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
        ⚠️ **NOTE :**: This field is available only if the option to configure custom IP ranges is enabled for your organization. To enable this option, contact Zscaler Support.
        """
        return pulumi.get(self, "ip_ranges")

    @ip_ranges.setter
    def ip_ranges(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ip_ranges", value)

    @property
    @pulumi.getter(name="ipRangesRetainingParentCategories")
    def ip_ranges_retaining_parent_categories(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
        """
        return pulumi.get(self, "ip_ranges_retaining_parent_categories")

    @ip_ranges_retaining_parent_categories.setter
    def ip_ranges_retaining_parent_categories(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ip_ranges_retaining_parent_categories", value)

    @property
    @pulumi.getter(name="ipRangesRetainingParentCategoryCount")
    def ip_ranges_retaining_parent_category_count(self) -> Optional[pulumi.Input[int]]:
        """
        The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        """
        return pulumi.get(self, "ip_ranges_retaining_parent_category_count")

    @ip_ranges_retaining_parent_category_count.setter
    def ip_ranges_retaining_parent_category_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ip_ranges_retaining_parent_category_count", value)

    @property
    @pulumi.getter
    def keywords(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
        """
        return pulumi.get(self, "keywords")

    @keywords.setter
    def keywords(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "keywords", value)

    @property
    @pulumi.getter(name="keywordsRetainingParentCategories")
    def keywords_retaining_parent_categories(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "keywords_retaining_parent_categories")

    @keywords_retaining_parent_categories.setter
    def keywords_retaining_parent_categories(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "keywords_retaining_parent_categories", value)

    @property
    @pulumi.getter
    def scopes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['URLCategoriesScopeArgs']]]]:
        """
        Scope of the custom categories.
        """
        return pulumi.get(self, "scopes")

    @scopes.setter
    def scopes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['URLCategoriesScopeArgs']]]]):
        pulumi.set(self, "scopes", value)

    @property
    @pulumi.getter(name="superCategory")
    def super_category(self) -> Optional[pulumi.Input[str]]:
        """
        Super Category of the URL category. This field is required when creating custom URL categories.
        """
        return pulumi.get(self, "super_category")

    @super_category.setter
    def super_category(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "super_category", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="urlKeywordCounts")
    def url_keyword_counts(self) -> Optional[pulumi.Input['URLCategoriesUrlKeywordCountsArgs']]:
        """
        URL and keyword counts for the category.
        """
        return pulumi.get(self, "url_keyword_counts")

    @url_keyword_counts.setter
    def url_keyword_counts(self, value: Optional[pulumi.Input['URLCategoriesUrlKeywordCountsArgs']]):
        pulumi.set(self, "url_keyword_counts", value)

    @property
    @pulumi.getter
    def urls(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
        """
        return pulumi.get(self, "urls")

    @urls.setter
    def urls(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "urls", value)

    @property
    @pulumi.getter(name="urlsRetainingParentCategoryCount")
    def urls_retaining_parent_category_count(self) -> Optional[pulumi.Input[int]]:
        """
        The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        """
        return pulumi.get(self, "urls_retaining_parent_category_count")

    @urls_retaining_parent_category_count.setter
    def urls_retaining_parent_category_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "urls_retaining_parent_category_count", value)


@pulumi.input_type
class _URLCategoriesState:
    def __init__(__self__, *,
                 category_id: Optional[pulumi.Input[str]] = None,
                 configured_name: Optional[pulumi.Input[str]] = None,
                 custom_category: Optional[pulumi.Input[bool]] = None,
                 custom_ip_ranges_count: Optional[pulumi.Input[int]] = None,
                 custom_urls_count: Optional[pulumi.Input[int]] = None,
                 db_categorized_urls: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 editable: Optional[pulumi.Input[bool]] = None,
                 ip_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ip_ranges_retaining_parent_categories: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ip_ranges_retaining_parent_category_count: Optional[pulumi.Input[int]] = None,
                 keywords: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 keywords_retaining_parent_categories: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 scopes: Optional[pulumi.Input[Sequence[pulumi.Input['URLCategoriesScopeArgs']]]] = None,
                 super_category: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 url_keyword_counts: Optional[pulumi.Input['URLCategoriesUrlKeywordCountsArgs']] = None,
                 urls: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 urls_retaining_parent_category_count: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering URLCategories resources.
        :param pulumi.Input[str] configured_name: Name of the URL category. This is only required for custom URL categories.
        :param pulumi.Input[bool] custom_category: Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
        :param pulumi.Input[int] custom_ip_ranges_count: The number of custom IP address ranges associated to the URL category.
        :param pulumi.Input[int] custom_urls_count: The number of custom URLs associated to the URL category.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] db_categorized_urls: URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
        :param pulumi.Input[str] description: Description of the category.
        :param pulumi.Input[bool] editable: Value is set to false for custom URL category when due to scope user does not have edit permission
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_ranges: Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
               ⚠️ **NOTE :**: This field is available only if the option to configure custom IP ranges is enabled for your organization. To enable this option, contact Zscaler Support.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_ranges_retaining_parent_categories: The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
        :param pulumi.Input[int] ip_ranges_retaining_parent_category_count: The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] keywords: Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
        :param pulumi.Input[Sequence[pulumi.Input['URLCategoriesScopeArgs']]] scopes: Scope of the custom categories.
        :param pulumi.Input[str] super_category: Super Category of the URL category. This field is required when creating custom URL categories.
        :param pulumi.Input[str] type: The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
        :param pulumi.Input['URLCategoriesUrlKeywordCountsArgs'] url_keyword_counts: URL and keyword counts for the category.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] urls: Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
        :param pulumi.Input[int] urls_retaining_parent_category_count: The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        """
        if category_id is not None:
            pulumi.set(__self__, "category_id", category_id)
        if configured_name is not None:
            pulumi.set(__self__, "configured_name", configured_name)
        if custom_category is not None:
            pulumi.set(__self__, "custom_category", custom_category)
        if custom_ip_ranges_count is not None:
            pulumi.set(__self__, "custom_ip_ranges_count", custom_ip_ranges_count)
        if custom_urls_count is not None:
            pulumi.set(__self__, "custom_urls_count", custom_urls_count)
        if db_categorized_urls is not None:
            pulumi.set(__self__, "db_categorized_urls", db_categorized_urls)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if editable is not None:
            pulumi.set(__self__, "editable", editable)
        if ip_ranges is not None:
            pulumi.set(__self__, "ip_ranges", ip_ranges)
        if ip_ranges_retaining_parent_categories is not None:
            pulumi.set(__self__, "ip_ranges_retaining_parent_categories", ip_ranges_retaining_parent_categories)
        if ip_ranges_retaining_parent_category_count is not None:
            pulumi.set(__self__, "ip_ranges_retaining_parent_category_count", ip_ranges_retaining_parent_category_count)
        if keywords is not None:
            pulumi.set(__self__, "keywords", keywords)
        if keywords_retaining_parent_categories is not None:
            pulumi.set(__self__, "keywords_retaining_parent_categories", keywords_retaining_parent_categories)
        if scopes is not None:
            pulumi.set(__self__, "scopes", scopes)
        if super_category is not None:
            pulumi.set(__self__, "super_category", super_category)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if url_keyword_counts is not None:
            pulumi.set(__self__, "url_keyword_counts", url_keyword_counts)
        if urls is not None:
            pulumi.set(__self__, "urls", urls)
        if urls_retaining_parent_category_count is not None:
            pulumi.set(__self__, "urls_retaining_parent_category_count", urls_retaining_parent_category_count)

    @property
    @pulumi.getter(name="categoryId")
    def category_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "category_id")

    @category_id.setter
    def category_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "category_id", value)

    @property
    @pulumi.getter(name="configuredName")
    def configured_name(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the URL category. This is only required for custom URL categories.
        """
        return pulumi.get(self, "configured_name")

    @configured_name.setter
    def configured_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "configured_name", value)

    @property
    @pulumi.getter(name="customCategory")
    def custom_category(self) -> Optional[pulumi.Input[bool]]:
        """
        Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
        """
        return pulumi.get(self, "custom_category")

    @custom_category.setter
    def custom_category(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "custom_category", value)

    @property
    @pulumi.getter(name="customIpRangesCount")
    def custom_ip_ranges_count(self) -> Optional[pulumi.Input[int]]:
        """
        The number of custom IP address ranges associated to the URL category.
        """
        return pulumi.get(self, "custom_ip_ranges_count")

    @custom_ip_ranges_count.setter
    def custom_ip_ranges_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "custom_ip_ranges_count", value)

    @property
    @pulumi.getter(name="customUrlsCount")
    def custom_urls_count(self) -> Optional[pulumi.Input[int]]:
        """
        The number of custom URLs associated to the URL category.
        """
        return pulumi.get(self, "custom_urls_count")

    @custom_urls_count.setter
    def custom_urls_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "custom_urls_count", value)

    @property
    @pulumi.getter(name="dbCategorizedUrls")
    def db_categorized_urls(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
        """
        return pulumi.get(self, "db_categorized_urls")

    @db_categorized_urls.setter
    def db_categorized_urls(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "db_categorized_urls", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the category.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def editable(self) -> Optional[pulumi.Input[bool]]:
        """
        Value is set to false for custom URL category when due to scope user does not have edit permission
        """
        return pulumi.get(self, "editable")

    @editable.setter
    def editable(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "editable", value)

    @property
    @pulumi.getter(name="ipRanges")
    def ip_ranges(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
        ⚠️ **NOTE :**: This field is available only if the option to configure custom IP ranges is enabled for your organization. To enable this option, contact Zscaler Support.
        """
        return pulumi.get(self, "ip_ranges")

    @ip_ranges.setter
    def ip_ranges(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ip_ranges", value)

    @property
    @pulumi.getter(name="ipRangesRetainingParentCategories")
    def ip_ranges_retaining_parent_categories(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
        """
        return pulumi.get(self, "ip_ranges_retaining_parent_categories")

    @ip_ranges_retaining_parent_categories.setter
    def ip_ranges_retaining_parent_categories(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ip_ranges_retaining_parent_categories", value)

    @property
    @pulumi.getter(name="ipRangesRetainingParentCategoryCount")
    def ip_ranges_retaining_parent_category_count(self) -> Optional[pulumi.Input[int]]:
        """
        The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        """
        return pulumi.get(self, "ip_ranges_retaining_parent_category_count")

    @ip_ranges_retaining_parent_category_count.setter
    def ip_ranges_retaining_parent_category_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ip_ranges_retaining_parent_category_count", value)

    @property
    @pulumi.getter
    def keywords(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
        """
        return pulumi.get(self, "keywords")

    @keywords.setter
    def keywords(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "keywords", value)

    @property
    @pulumi.getter(name="keywordsRetainingParentCategories")
    def keywords_retaining_parent_categories(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "keywords_retaining_parent_categories")

    @keywords_retaining_parent_categories.setter
    def keywords_retaining_parent_categories(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "keywords_retaining_parent_categories", value)

    @property
    @pulumi.getter
    def scopes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['URLCategoriesScopeArgs']]]]:
        """
        Scope of the custom categories.
        """
        return pulumi.get(self, "scopes")

    @scopes.setter
    def scopes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['URLCategoriesScopeArgs']]]]):
        pulumi.set(self, "scopes", value)

    @property
    @pulumi.getter(name="superCategory")
    def super_category(self) -> Optional[pulumi.Input[str]]:
        """
        Super Category of the URL category. This field is required when creating custom URL categories.
        """
        return pulumi.get(self, "super_category")

    @super_category.setter
    def super_category(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "super_category", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="urlKeywordCounts")
    def url_keyword_counts(self) -> Optional[pulumi.Input['URLCategoriesUrlKeywordCountsArgs']]:
        """
        URL and keyword counts for the category.
        """
        return pulumi.get(self, "url_keyword_counts")

    @url_keyword_counts.setter
    def url_keyword_counts(self, value: Optional[pulumi.Input['URLCategoriesUrlKeywordCountsArgs']]):
        pulumi.set(self, "url_keyword_counts", value)

    @property
    @pulumi.getter
    def urls(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
        """
        return pulumi.get(self, "urls")

    @urls.setter
    def urls(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "urls", value)

    @property
    @pulumi.getter(name="urlsRetainingParentCategoryCount")
    def urls_retaining_parent_category_count(self) -> Optional[pulumi.Input[int]]:
        """
        The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        """
        return pulumi.get(self, "urls_retaining_parent_category_count")

    @urls_retaining_parent_category_count.setter
    def urls_retaining_parent_category_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "urls_retaining_parent_category_count", value)


class URLCategories(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 configured_name: Optional[pulumi.Input[str]] = None,
                 custom_category: Optional[pulumi.Input[bool]] = None,
                 custom_ip_ranges_count: Optional[pulumi.Input[int]] = None,
                 custom_urls_count: Optional[pulumi.Input[int]] = None,
                 db_categorized_urls: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 editable: Optional[pulumi.Input[bool]] = None,
                 ip_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ip_ranges_retaining_parent_categories: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ip_ranges_retaining_parent_category_count: Optional[pulumi.Input[int]] = None,
                 keywords: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 keywords_retaining_parent_categories: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 scopes: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['URLCategoriesScopeArgs']]]]] = None,
                 super_category: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 url_keyword_counts: Optional[pulumi.Input[pulumi.InputType['URLCategoriesUrlKeywordCountsArgs']]] = None,
                 urls: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 urls_retaining_parent_category_count: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        The **zia_url_categories** resource creates and manages a new custom URL category. If keywords are included within the request, they will be added to the new category.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import zscaler_pulumi_zia as zia

        example = zia.URLCategories("example",
            super_category="USER_DEFINED",
            configured_name="MCAS Unsanctioned Apps",
            description="MCAS Unsanctioned Apps",
            keywords=["microsoft"],
            custom_category=True,
            type="URL_CATEGORY",
            scopes=[zia.URLCategoriesScopeArgs(
                type="LOCATION",
                scope_entities=zia.URLCategoriesScopeScopeEntitiesArgs(
                    ids=[data["zia_location_management"]["nyc_site"]["id"]],
                ),
                scope_group_member_entities=zia.URLCategoriesScopeScopeGroupMemberEntitiesArgs(
                    ids=[data["zia_group_management"]["engineering"]["id"]],
                ),
            )],
            urls=[
                ".coupons.com",
                ".resource.alaskaair.net",
                ".techrepublic.com",
                ".dailymotion.com",
                ".osiriscomm.com",
                ".uefa.com",
                ".Logz.io",
                ".alexa.com",
                ".baidu.com",
                ".cnn.com",
                ".level3.com",
            ])
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.

        Visit

        **zia_url_categories** can be imported by using `<CATEGORY_ID>` or `<CATEGORY_NAME>` as the import ID.

        For example:

        ```sh
        $ pulumi import zia:index/uRLCategories:URLCategories example <category_id>
        ```

        or

        ```sh
        $ pulumi import zia:index/uRLCategories:URLCategories example <category_name>
        ```

        ⚠️ **NOTE :**:  This provider only supports the importing of custom URL categories. The importing of built-in categories is not supported.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] configured_name: Name of the URL category. This is only required for custom URL categories.
        :param pulumi.Input[bool] custom_category: Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
        :param pulumi.Input[int] custom_ip_ranges_count: The number of custom IP address ranges associated to the URL category.
        :param pulumi.Input[int] custom_urls_count: The number of custom URLs associated to the URL category.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] db_categorized_urls: URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
        :param pulumi.Input[str] description: Description of the category.
        :param pulumi.Input[bool] editable: Value is set to false for custom URL category when due to scope user does not have edit permission
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_ranges: Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
               ⚠️ **NOTE :**: This field is available only if the option to configure custom IP ranges is enabled for your organization. To enable this option, contact Zscaler Support.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_ranges_retaining_parent_categories: The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
        :param pulumi.Input[int] ip_ranges_retaining_parent_category_count: The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] keywords: Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['URLCategoriesScopeArgs']]]] scopes: Scope of the custom categories.
        :param pulumi.Input[str] super_category: Super Category of the URL category. This field is required when creating custom URL categories.
        :param pulumi.Input[str] type: The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
        :param pulumi.Input[pulumi.InputType['URLCategoriesUrlKeywordCountsArgs']] url_keyword_counts: URL and keyword counts for the category.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] urls: Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
        :param pulumi.Input[int] urls_retaining_parent_category_count: The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[URLCategoriesArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        The **zia_url_categories** resource creates and manages a new custom URL category. If keywords are included within the request, they will be added to the new category.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import zscaler_pulumi_zia as zia

        example = zia.URLCategories("example",
            super_category="USER_DEFINED",
            configured_name="MCAS Unsanctioned Apps",
            description="MCAS Unsanctioned Apps",
            keywords=["microsoft"],
            custom_category=True,
            type="URL_CATEGORY",
            scopes=[zia.URLCategoriesScopeArgs(
                type="LOCATION",
                scope_entities=zia.URLCategoriesScopeScopeEntitiesArgs(
                    ids=[data["zia_location_management"]["nyc_site"]["id"]],
                ),
                scope_group_member_entities=zia.URLCategoriesScopeScopeGroupMemberEntitiesArgs(
                    ids=[data["zia_group_management"]["engineering"]["id"]],
                ),
            )],
            urls=[
                ".coupons.com",
                ".resource.alaskaair.net",
                ".techrepublic.com",
                ".dailymotion.com",
                ".osiriscomm.com",
                ".uefa.com",
                ".Logz.io",
                ".alexa.com",
                ".baidu.com",
                ".cnn.com",
                ".level3.com",
            ])
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.

        Visit

        **zia_url_categories** can be imported by using `<CATEGORY_ID>` or `<CATEGORY_NAME>` as the import ID.

        For example:

        ```sh
        $ pulumi import zia:index/uRLCategories:URLCategories example <category_id>
        ```

        or

        ```sh
        $ pulumi import zia:index/uRLCategories:URLCategories example <category_name>
        ```

        ⚠️ **NOTE :**:  This provider only supports the importing of custom URL categories. The importing of built-in categories is not supported.

        :param str resource_name: The name of the resource.
        :param URLCategoriesArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(URLCategoriesArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 configured_name: Optional[pulumi.Input[str]] = None,
                 custom_category: Optional[pulumi.Input[bool]] = None,
                 custom_ip_ranges_count: Optional[pulumi.Input[int]] = None,
                 custom_urls_count: Optional[pulumi.Input[int]] = None,
                 db_categorized_urls: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 editable: Optional[pulumi.Input[bool]] = None,
                 ip_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ip_ranges_retaining_parent_categories: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ip_ranges_retaining_parent_category_count: Optional[pulumi.Input[int]] = None,
                 keywords: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 keywords_retaining_parent_categories: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 scopes: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['URLCategoriesScopeArgs']]]]] = None,
                 super_category: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 url_keyword_counts: Optional[pulumi.Input[pulumi.InputType['URLCategoriesUrlKeywordCountsArgs']]] = None,
                 urls: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 urls_retaining_parent_category_count: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = URLCategoriesArgs.__new__(URLCategoriesArgs)

            __props__.__dict__["configured_name"] = configured_name
            __props__.__dict__["custom_category"] = custom_category
            __props__.__dict__["custom_ip_ranges_count"] = custom_ip_ranges_count
            __props__.__dict__["custom_urls_count"] = custom_urls_count
            __props__.__dict__["db_categorized_urls"] = db_categorized_urls
            __props__.__dict__["description"] = description
            __props__.__dict__["editable"] = editable
            __props__.__dict__["ip_ranges"] = ip_ranges
            __props__.__dict__["ip_ranges_retaining_parent_categories"] = ip_ranges_retaining_parent_categories
            __props__.__dict__["ip_ranges_retaining_parent_category_count"] = ip_ranges_retaining_parent_category_count
            __props__.__dict__["keywords"] = keywords
            __props__.__dict__["keywords_retaining_parent_categories"] = keywords_retaining_parent_categories
            __props__.__dict__["scopes"] = scopes
            __props__.__dict__["super_category"] = super_category
            __props__.__dict__["type"] = type
            __props__.__dict__["url_keyword_counts"] = url_keyword_counts
            __props__.__dict__["urls"] = urls
            __props__.__dict__["urls_retaining_parent_category_count"] = urls_retaining_parent_category_count
            __props__.__dict__["category_id"] = None
        super(URLCategories, __self__).__init__(
            'zia:index/uRLCategories:URLCategories',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            category_id: Optional[pulumi.Input[str]] = None,
            configured_name: Optional[pulumi.Input[str]] = None,
            custom_category: Optional[pulumi.Input[bool]] = None,
            custom_ip_ranges_count: Optional[pulumi.Input[int]] = None,
            custom_urls_count: Optional[pulumi.Input[int]] = None,
            db_categorized_urls: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            description: Optional[pulumi.Input[str]] = None,
            editable: Optional[pulumi.Input[bool]] = None,
            ip_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            ip_ranges_retaining_parent_categories: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            ip_ranges_retaining_parent_category_count: Optional[pulumi.Input[int]] = None,
            keywords: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            keywords_retaining_parent_categories: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            scopes: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['URLCategoriesScopeArgs']]]]] = None,
            super_category: Optional[pulumi.Input[str]] = None,
            type: Optional[pulumi.Input[str]] = None,
            url_keyword_counts: Optional[pulumi.Input[pulumi.InputType['URLCategoriesUrlKeywordCountsArgs']]] = None,
            urls: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            urls_retaining_parent_category_count: Optional[pulumi.Input[int]] = None) -> 'URLCategories':
        """
        Get an existing URLCategories resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] configured_name: Name of the URL category. This is only required for custom URL categories.
        :param pulumi.Input[bool] custom_category: Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
        :param pulumi.Input[int] custom_ip_ranges_count: The number of custom IP address ranges associated to the URL category.
        :param pulumi.Input[int] custom_urls_count: The number of custom URLs associated to the URL category.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] db_categorized_urls: URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
        :param pulumi.Input[str] description: Description of the category.
        :param pulumi.Input[bool] editable: Value is set to false for custom URL category when due to scope user does not have edit permission
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_ranges: Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
               ⚠️ **NOTE :**: This field is available only if the option to configure custom IP ranges is enabled for your organization. To enable this option, contact Zscaler Support.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_ranges_retaining_parent_categories: The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
        :param pulumi.Input[int] ip_ranges_retaining_parent_category_count: The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] keywords: Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['URLCategoriesScopeArgs']]]] scopes: Scope of the custom categories.
        :param pulumi.Input[str] super_category: Super Category of the URL category. This field is required when creating custom URL categories.
        :param pulumi.Input[str] type: The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
        :param pulumi.Input[pulumi.InputType['URLCategoriesUrlKeywordCountsArgs']] url_keyword_counts: URL and keyword counts for the category.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] urls: Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
        :param pulumi.Input[int] urls_retaining_parent_category_count: The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _URLCategoriesState.__new__(_URLCategoriesState)

        __props__.__dict__["category_id"] = category_id
        __props__.__dict__["configured_name"] = configured_name
        __props__.__dict__["custom_category"] = custom_category
        __props__.__dict__["custom_ip_ranges_count"] = custom_ip_ranges_count
        __props__.__dict__["custom_urls_count"] = custom_urls_count
        __props__.__dict__["db_categorized_urls"] = db_categorized_urls
        __props__.__dict__["description"] = description
        __props__.__dict__["editable"] = editable
        __props__.__dict__["ip_ranges"] = ip_ranges
        __props__.__dict__["ip_ranges_retaining_parent_categories"] = ip_ranges_retaining_parent_categories
        __props__.__dict__["ip_ranges_retaining_parent_category_count"] = ip_ranges_retaining_parent_category_count
        __props__.__dict__["keywords"] = keywords
        __props__.__dict__["keywords_retaining_parent_categories"] = keywords_retaining_parent_categories
        __props__.__dict__["scopes"] = scopes
        __props__.__dict__["super_category"] = super_category
        __props__.__dict__["type"] = type
        __props__.__dict__["url_keyword_counts"] = url_keyword_counts
        __props__.__dict__["urls"] = urls
        __props__.__dict__["urls_retaining_parent_category_count"] = urls_retaining_parent_category_count
        return URLCategories(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="categoryId")
    def category_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "category_id")

    @property
    @pulumi.getter(name="configuredName")
    def configured_name(self) -> pulumi.Output[Optional[str]]:
        """
        Name of the URL category. This is only required for custom URL categories.
        """
        return pulumi.get(self, "configured_name")

    @property
    @pulumi.getter(name="customCategory")
    def custom_category(self) -> pulumi.Output[Optional[bool]]:
        """
        Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
        """
        return pulumi.get(self, "custom_category")

    @property
    @pulumi.getter(name="customIpRangesCount")
    def custom_ip_ranges_count(self) -> pulumi.Output[int]:
        """
        The number of custom IP address ranges associated to the URL category.
        """
        return pulumi.get(self, "custom_ip_ranges_count")

    @property
    @pulumi.getter(name="customUrlsCount")
    def custom_urls_count(self) -> pulumi.Output[int]:
        """
        The number of custom URLs associated to the URL category.
        """
        return pulumi.get(self, "custom_urls_count")

    @property
    @pulumi.getter(name="dbCategorizedUrls")
    def db_categorized_urls(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
        """
        return pulumi.get(self, "db_categorized_urls")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        Description of the category.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def editable(self) -> pulumi.Output[bool]:
        """
        Value is set to false for custom URL category when due to scope user does not have edit permission
        """
        return pulumi.get(self, "editable")

    @property
    @pulumi.getter(name="ipRanges")
    def ip_ranges(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
        ⚠️ **NOTE :**: This field is available only if the option to configure custom IP ranges is enabled for your organization. To enable this option, contact Zscaler Support.
        """
        return pulumi.get(self, "ip_ranges")

    @property
    @pulumi.getter(name="ipRangesRetainingParentCategories")
    def ip_ranges_retaining_parent_categories(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
        """
        return pulumi.get(self, "ip_ranges_retaining_parent_categories")

    @property
    @pulumi.getter(name="ipRangesRetainingParentCategoryCount")
    def ip_ranges_retaining_parent_category_count(self) -> pulumi.Output[int]:
        """
        The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        """
        return pulumi.get(self, "ip_ranges_retaining_parent_category_count")

    @property
    @pulumi.getter
    def keywords(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
        """
        return pulumi.get(self, "keywords")

    @property
    @pulumi.getter(name="keywordsRetainingParentCategories")
    def keywords_retaining_parent_categories(self) -> pulumi.Output[Optional[Sequence[str]]]:
        return pulumi.get(self, "keywords_retaining_parent_categories")

    @property
    @pulumi.getter
    def scopes(self) -> pulumi.Output[Optional[Sequence['outputs.URLCategoriesScope']]]:
        """
        Scope of the custom categories.
        """
        return pulumi.get(self, "scopes")

    @property
    @pulumi.getter(name="superCategory")
    def super_category(self) -> pulumi.Output[Optional[str]]:
        """
        Super Category of the URL category. This field is required when creating custom URL categories.
        """
        return pulumi.get(self, "super_category")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[Optional[str]]:
        """
        The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="urlKeywordCounts")
    def url_keyword_counts(self) -> pulumi.Output['outputs.URLCategoriesUrlKeywordCounts']:
        """
        URL and keyword counts for the category.
        """
        return pulumi.get(self, "url_keyword_counts")

    @property
    @pulumi.getter
    def urls(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
        """
        return pulumi.get(self, "urls")

    @property
    @pulumi.getter(name="urlsRetainingParentCategoryCount")
    def urls_retaining_parent_category_count(self) -> pulumi.Output[int]:
        """
        The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
        """
        return pulumi.get(self, "urls_retaining_parent_category_count")

