# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetCbiProfileResult',
    'AwaitableGetCbiProfileResult',
    'get_cbi_profile',
    'get_cbi_profile_output',
]

@pulumi.output_type
class GetCbiProfileResult:
    """
    A collection of values returned by getCbiProfile.
    """
    def __init__(__self__, default_profile=None, id=None, name=None, url=None):
        if default_profile and not isinstance(default_profile, bool):
            raise TypeError("Expected argument 'default_profile' to be a bool")
        pulumi.set(__self__, "default_profile", default_profile)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if url and not isinstance(url, str):
            raise TypeError("Expected argument 'url' to be a str")
        pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="defaultProfile")
    def default_profile(self) -> bool:
        """
        (Optional) Indicates whether this is a default browser isolation profile. Zscaler sets this field
        """
        return pulumi.get(self, "default_profile")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        (string) The universally unique identifier (UUID) for the browser isolation profile.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def url(self) -> str:
        """
        (string) The browser isolation profile URL
        """
        return pulumi.get(self, "url")


class AwaitableGetCbiProfileResult(GetCbiProfileResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCbiProfileResult(
            default_profile=self.default_profile,
            id=self.id,
            name=self.name,
            url=self.url)


def get_cbi_profile(id: Optional[str] = None,
                    name: Optional[str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCbiProfileResult:
    """
    Use the **zia_cloud_browser_isolation_profile** data source to get information about an isolation profile in the Zscaler Internet Access cloud. This data source is required when configuring URL filtering rule where the action is set to `ISOLATE`

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_zia as zia

    this = zia.get_cbi_profile(name="ZS_CBI_Profile1")
    ```
    <!--End PulumiCodeChooser -->


    :param str id: (string) The universally unique identifier (UUID) for the browser isolation profile.
    :param str name: This field defines the name of the isolation profile.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('zia:index/getCbiProfile:getCbiProfile', __args__, opts=opts, typ=GetCbiProfileResult).value

    return AwaitableGetCbiProfileResult(
        default_profile=pulumi.get(__ret__, 'default_profile'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        url=pulumi.get(__ret__, 'url'))


@_utilities.lift_output_func(get_cbi_profile)
def get_cbi_profile_output(id: Optional[pulumi.Input[Optional[str]]] = None,
                           name: Optional[pulumi.Input[Optional[str]]] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetCbiProfileResult]:
    """
    Use the **zia_cloud_browser_isolation_profile** data source to get information about an isolation profile in the Zscaler Internet Access cloud. This data source is required when configuring URL filtering rule where the action is set to `ISOLATE`

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_zia as zia

    this = zia.get_cbi_profile(name="ZS_CBI_Profile1")
    ```
    <!--End PulumiCodeChooser -->


    :param str id: (string) The universally unique identifier (UUID) for the browser isolation profile.
    :param str name: This field defines the name of the isolation profile.
    """
    ...
