# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetForwardingControlZPAGatewayResult',
    'AwaitableGetForwardingControlZPAGatewayResult',
    'get_forwarding_control_zpa_gateway',
    'get_forwarding_control_zpa_gateway_output',
]

@pulumi.output_type
class GetForwardingControlZPAGatewayResult:
    """
    A collection of values returned by getForwardingControlZPAGateway.
    """
    def __init__(__self__, description=None, id=None, last_modified_bies=None, last_modified_time=None, name=None, type=None, zpa_app_segments=None, zpa_server_groups=None, zpa_tenant_id=None):
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if id and not isinstance(id, int):
            raise TypeError("Expected argument 'id' to be a int")
        pulumi.set(__self__, "id", id)
        if last_modified_bies and not isinstance(last_modified_bies, list):
            raise TypeError("Expected argument 'last_modified_bies' to be a list")
        pulumi.set(__self__, "last_modified_bies", last_modified_bies)
        if last_modified_time and not isinstance(last_modified_time, int):
            raise TypeError("Expected argument 'last_modified_time' to be a int")
        pulumi.set(__self__, "last_modified_time", last_modified_time)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)
        if zpa_app_segments and not isinstance(zpa_app_segments, list):
            raise TypeError("Expected argument 'zpa_app_segments' to be a list")
        pulumi.set(__self__, "zpa_app_segments", zpa_app_segments)
        if zpa_server_groups and not isinstance(zpa_server_groups, list):
            raise TypeError("Expected argument 'zpa_server_groups' to be a list")
        pulumi.set(__self__, "zpa_server_groups", zpa_server_groups)
        if zpa_tenant_id and not isinstance(zpa_tenant_id, int):
            raise TypeError("Expected argument 'zpa_tenant_id' to be a int")
        pulumi.set(__self__, "zpa_tenant_id", zpa_tenant_id)

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        (string) - Additional details about the ZPA gateway
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> int:
        """
        (int) - Identifier that uniquely identifies an entity
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="lastModifiedBies")
    def last_modified_bies(self) -> Sequence['outputs.GetForwardingControlZPAGatewayLastModifiedByResult']:
        """
        (list) -  Information about the admin user that last modified the ZPA gateway
        """
        return pulumi.get(self, "last_modified_bies")

    @property
    @pulumi.getter(name="lastModifiedTime")
    def last_modified_time(self) -> int:
        """
        (int) - Timestamp when the ZPA gateway was last modified
        """
        return pulumi.get(self, "last_modified_time")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        (string) The configured name of the entity
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        (string) - Indicates whether the ZPA gateway is configured for Zscaler Internet Access (using option ZPA) or Zscaler Cloud Connector (using option ECZPA)
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="zpaAppSegments")
    def zpa_app_segments(self) -> Sequence['outputs.GetForwardingControlZPAGatewayZpaAppSegmentResult']:
        return pulumi.get(self, "zpa_app_segments")

    @property
    @pulumi.getter(name="zpaServerGroups")
    def zpa_server_groups(self) -> Sequence['outputs.GetForwardingControlZPAGatewayZpaServerGroupResult']:
        """
        () - The ZPA Server Group that is configured for Source IP Anchoring
        """
        return pulumi.get(self, "zpa_server_groups")

    @property
    @pulumi.getter(name="zpaTenantId")
    def zpa_tenant_id(self) -> int:
        return pulumi.get(self, "zpa_tenant_id")


class AwaitableGetForwardingControlZPAGatewayResult(GetForwardingControlZPAGatewayResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetForwardingControlZPAGatewayResult(
            description=self.description,
            id=self.id,
            last_modified_bies=self.last_modified_bies,
            last_modified_time=self.last_modified_time,
            name=self.name,
            type=self.type,
            zpa_app_segments=self.zpa_app_segments,
            zpa_server_groups=self.zpa_server_groups,
            zpa_tenant_id=self.zpa_tenant_id)


def get_forwarding_control_zpa_gateway(id: Optional[int] = None,
                                       name: Optional[str] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetForwardingControlZPAGatewayResult:
    """
    Use the **forwarding_control_zpa_gateway** data source to get information about a forwarding control zpa gateway used in IP Source Anchoring integration between Zscaler Internet Access and Zscaler Private Access. This data source can then be associated with a ZIA Forwarding Control Rule.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_zia as zia

    this = zia.get_forwarding_control_zpa_gateway(name="ZPA_GW01")
    ```
    <!--End PulumiCodeChooser -->


    :param int id: The ID of the forwarding control ZPA Gateway resource.
    :param str name: The name of the forwarding control ZPA Gateway to be exported.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('zia:index/getForwardingControlZPAGateway:getForwardingControlZPAGateway', __args__, opts=opts, typ=GetForwardingControlZPAGatewayResult).value

    return AwaitableGetForwardingControlZPAGatewayResult(
        description=pulumi.get(__ret__, 'description'),
        id=pulumi.get(__ret__, 'id'),
        last_modified_bies=pulumi.get(__ret__, 'last_modified_bies'),
        last_modified_time=pulumi.get(__ret__, 'last_modified_time'),
        name=pulumi.get(__ret__, 'name'),
        type=pulumi.get(__ret__, 'type'),
        zpa_app_segments=pulumi.get(__ret__, 'zpa_app_segments'),
        zpa_server_groups=pulumi.get(__ret__, 'zpa_server_groups'),
        zpa_tenant_id=pulumi.get(__ret__, 'zpa_tenant_id'))


@_utilities.lift_output_func(get_forwarding_control_zpa_gateway)
def get_forwarding_control_zpa_gateway_output(id: Optional[pulumi.Input[Optional[int]]] = None,
                                              name: Optional[pulumi.Input[Optional[str]]] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetForwardingControlZPAGatewayResult]:
    """
    Use the **forwarding_control_zpa_gateway** data source to get information about a forwarding control zpa gateway used in IP Source Anchoring integration between Zscaler Internet Access and Zscaler Private Access. This data source can then be associated with a ZIA Forwarding Control Rule.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_zia as zia

    this = zia.get_forwarding_control_zpa_gateway(name="ZPA_GW01")
    ```
    <!--End PulumiCodeChooser -->


    :param int id: The ID of the forwarding control ZPA Gateway resource.
    :param str name: The name of the forwarding control ZPA Gateway to be exported.
    """
    ...
