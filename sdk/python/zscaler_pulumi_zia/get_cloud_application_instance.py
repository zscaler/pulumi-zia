# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetCloudApplicationInstanceResult',
    'AwaitableGetCloudApplicationInstanceResult',
    'get_cloud_application_instance',
    'get_cloud_application_instance_output',
]

@pulumi.output_type
class GetCloudApplicationInstanceResult:
    """
    A collection of values returned by getCloudApplicationInstance.
    """
    def __init__(__self__, id=None, instance_identifiers=None, instance_type=None, last_modified_bies=None, modified_at=None, name=None):
        if id and not isinstance(id, int):
            raise TypeError("Expected argument 'id' to be a int")
        pulumi.set(__self__, "id", id)
        if instance_identifiers and not isinstance(instance_identifiers, list):
            raise TypeError("Expected argument 'instance_identifiers' to be a list")
        pulumi.set(__self__, "instance_identifiers", instance_identifiers)
        if instance_type and not isinstance(instance_type, str):
            raise TypeError("Expected argument 'instance_type' to be a str")
        pulumi.set(__self__, "instance_type", instance_type)
        if last_modified_bies and not isinstance(last_modified_bies, list):
            raise TypeError("Expected argument 'last_modified_bies' to be a list")
        pulumi.set(__self__, "last_modified_bies", last_modified_bies)
        if modified_at and not isinstance(modified_at, int):
            raise TypeError("Expected argument 'modified_at' to be a int")
        pulumi.set(__self__, "modified_at", modified_at)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def id(self) -> builtins.int:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceIdentifiers")
    def instance_identifiers(self) -> Sequence['outputs.GetCloudApplicationInstanceInstanceIdentifierResult']:
        return pulumi.get(self, "instance_identifiers")

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> builtins.str:
        return pulumi.get(self, "instance_type")

    @property
    @pulumi.getter(name="lastModifiedBies")
    def last_modified_bies(self) -> Sequence['outputs.GetCloudApplicationInstanceLastModifiedByResult']:
        return pulumi.get(self, "last_modified_bies")

    @property
    @pulumi.getter(name="modifiedAt")
    def modified_at(self) -> builtins.int:
        return pulumi.get(self, "modified_at")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        return pulumi.get(self, "name")


class AwaitableGetCloudApplicationInstanceResult(GetCloudApplicationInstanceResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCloudApplicationInstanceResult(
            id=self.id,
            instance_identifiers=self.instance_identifiers,
            instance_type=self.instance_type,
            last_modified_bies=self.last_modified_bies,
            modified_at=self.modified_at,
            name=self.name)


def get_cloud_application_instance(id: Optional[builtins.int] = None,
                                   name: Optional[builtins.str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCloudApplicationInstanceResult:
    """
    * [Official documentation](https://help.zscaler.com/zia/about-cloud-application-instances)
    * [API documentation](https://help.zscaler.com/zia/cloud-app-control-policy#/cloudApplicationInstances-get)

    Use the **zia_cloud_application_instance** data source to get information about cloud application instances in the Zscaler Internet Access cloud or via the API.

    ## Example Usage

    ### By Name

    ### By ID
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('zia:index/getCloudApplicationInstance:getCloudApplicationInstance', __args__, opts=opts, typ=GetCloudApplicationInstanceResult).value

    return AwaitableGetCloudApplicationInstanceResult(
        id=pulumi.get(__ret__, 'id'),
        instance_identifiers=pulumi.get(__ret__, 'instance_identifiers'),
        instance_type=pulumi.get(__ret__, 'instance_type'),
        last_modified_bies=pulumi.get(__ret__, 'last_modified_bies'),
        modified_at=pulumi.get(__ret__, 'modified_at'),
        name=pulumi.get(__ret__, 'name'))
def get_cloud_application_instance_output(id: Optional[pulumi.Input[Optional[builtins.int]]] = None,
                                          name: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCloudApplicationInstanceResult]:
    """
    * [Official documentation](https://help.zscaler.com/zia/about-cloud-application-instances)
    * [API documentation](https://help.zscaler.com/zia/cloud-app-control-policy#/cloudApplicationInstances-get)

    Use the **zia_cloud_application_instance** data source to get information about cloud application instances in the Zscaler Internet Access cloud or via the API.

    ## Example Usage

    ### By Name

    ### By ID
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['name'] = name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('zia:index/getCloudApplicationInstance:getCloudApplicationInstance', __args__, opts=opts, typ=GetCloudApplicationInstanceResult)
    return __ret__.apply(lambda __response__: GetCloudApplicationInstanceResult(
        id=pulumi.get(__response__, 'id'),
        instance_identifiers=pulumi.get(__response__, 'instance_identifiers'),
        instance_type=pulumi.get(__response__, 'instance_type'),
        last_modified_bies=pulumi.get(__response__, 'last_modified_bies'),
        modified_at=pulumi.get(__response__, 'modified_at'),
        name=pulumi.get(__response__, 'name')))
