# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetTenantRestrictionProfileResult',
    'AwaitableGetTenantRestrictionProfileResult',
    'get_tenant_restriction_profile',
    'get_tenant_restriction_profile_output',
]

@pulumi.output_type
class GetTenantRestrictionProfileResult:
    """
    A collection of values returned by getTenantRestrictionProfile.
    """
    def __init__(__self__, allow_gcp_cloud_storage_read=None, allow_google_consumers=None, allow_google_visitors=None, app_type=None, description=None, id=None, item_data_primaries=None, item_data_secondaries=None, item_type_primary=None, item_type_secondary=None, item_values=None, last_modified_time=None, last_modified_user_id=None, ms_login_services_tr_v2=None, name=None, restrict_personal_o365_domains=None):
        if allow_gcp_cloud_storage_read and not isinstance(allow_gcp_cloud_storage_read, bool):
            raise TypeError("Expected argument 'allow_gcp_cloud_storage_read' to be a bool")
        pulumi.set(__self__, "allow_gcp_cloud_storage_read", allow_gcp_cloud_storage_read)
        if allow_google_consumers and not isinstance(allow_google_consumers, bool):
            raise TypeError("Expected argument 'allow_google_consumers' to be a bool")
        pulumi.set(__self__, "allow_google_consumers", allow_google_consumers)
        if allow_google_visitors and not isinstance(allow_google_visitors, bool):
            raise TypeError("Expected argument 'allow_google_visitors' to be a bool")
        pulumi.set(__self__, "allow_google_visitors", allow_google_visitors)
        if app_type and not isinstance(app_type, str):
            raise TypeError("Expected argument 'app_type' to be a str")
        pulumi.set(__self__, "app_type", app_type)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if id and not isinstance(id, int):
            raise TypeError("Expected argument 'id' to be a int")
        pulumi.set(__self__, "id", id)
        if item_data_primaries and not isinstance(item_data_primaries, list):
            raise TypeError("Expected argument 'item_data_primaries' to be a list")
        pulumi.set(__self__, "item_data_primaries", item_data_primaries)
        if item_data_secondaries and not isinstance(item_data_secondaries, list):
            raise TypeError("Expected argument 'item_data_secondaries' to be a list")
        pulumi.set(__self__, "item_data_secondaries", item_data_secondaries)
        if item_type_primary and not isinstance(item_type_primary, str):
            raise TypeError("Expected argument 'item_type_primary' to be a str")
        pulumi.set(__self__, "item_type_primary", item_type_primary)
        if item_type_secondary and not isinstance(item_type_secondary, str):
            raise TypeError("Expected argument 'item_type_secondary' to be a str")
        pulumi.set(__self__, "item_type_secondary", item_type_secondary)
        if item_values and not isinstance(item_values, list):
            raise TypeError("Expected argument 'item_values' to be a list")
        pulumi.set(__self__, "item_values", item_values)
        if last_modified_time and not isinstance(last_modified_time, int):
            raise TypeError("Expected argument 'last_modified_time' to be a int")
        pulumi.set(__self__, "last_modified_time", last_modified_time)
        if last_modified_user_id and not isinstance(last_modified_user_id, int):
            raise TypeError("Expected argument 'last_modified_user_id' to be a int")
        pulumi.set(__self__, "last_modified_user_id", last_modified_user_id)
        if ms_login_services_tr_v2 and not isinstance(ms_login_services_tr_v2, bool):
            raise TypeError("Expected argument 'ms_login_services_tr_v2' to be a bool")
        pulumi.set(__self__, "ms_login_services_tr_v2", ms_login_services_tr_v2)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if restrict_personal_o365_domains and not isinstance(restrict_personal_o365_domains, bool):
            raise TypeError("Expected argument 'restrict_personal_o365_domains' to be a bool")
        pulumi.set(__self__, "restrict_personal_o365_domains", restrict_personal_o365_domains)

    @property
    @pulumi.getter(name="allowGcpCloudStorageRead")
    def allow_gcp_cloud_storage_read(self) -> builtins.bool:
        return pulumi.get(self, "allow_gcp_cloud_storage_read")

    @property
    @pulumi.getter(name="allowGoogleConsumers")
    def allow_google_consumers(self) -> builtins.bool:
        return pulumi.get(self, "allow_google_consumers")

    @property
    @pulumi.getter(name="allowGoogleVisitors")
    def allow_google_visitors(self) -> builtins.bool:
        return pulumi.get(self, "allow_google_visitors")

    @property
    @pulumi.getter(name="appType")
    def app_type(self) -> builtins.str:
        return pulumi.get(self, "app_type")

    @property
    @pulumi.getter
    def description(self) -> builtins.str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> builtins.int:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="itemDataPrimaries")
    def item_data_primaries(self) -> Sequence[builtins.str]:
        return pulumi.get(self, "item_data_primaries")

    @property
    @pulumi.getter(name="itemDataSecondaries")
    def item_data_secondaries(self) -> Sequence[builtins.str]:
        return pulumi.get(self, "item_data_secondaries")

    @property
    @pulumi.getter(name="itemTypePrimary")
    def item_type_primary(self) -> builtins.str:
        return pulumi.get(self, "item_type_primary")

    @property
    @pulumi.getter(name="itemTypeSecondary")
    def item_type_secondary(self) -> builtins.str:
        return pulumi.get(self, "item_type_secondary")

    @property
    @pulumi.getter(name="itemValues")
    def item_values(self) -> Sequence[builtins.str]:
        return pulumi.get(self, "item_values")

    @property
    @pulumi.getter(name="lastModifiedTime")
    def last_modified_time(self) -> builtins.int:
        return pulumi.get(self, "last_modified_time")

    @property
    @pulumi.getter(name="lastModifiedUserId")
    def last_modified_user_id(self) -> builtins.int:
        return pulumi.get(self, "last_modified_user_id")

    @property
    @pulumi.getter(name="msLoginServicesTrV2")
    def ms_login_services_tr_v2(self) -> builtins.bool:
        return pulumi.get(self, "ms_login_services_tr_v2")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="restrictPersonalO365Domains")
    def restrict_personal_o365_domains(self) -> builtins.bool:
        return pulumi.get(self, "restrict_personal_o365_domains")


class AwaitableGetTenantRestrictionProfileResult(GetTenantRestrictionProfileResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTenantRestrictionProfileResult(
            allow_gcp_cloud_storage_read=self.allow_gcp_cloud_storage_read,
            allow_google_consumers=self.allow_google_consumers,
            allow_google_visitors=self.allow_google_visitors,
            app_type=self.app_type,
            description=self.description,
            id=self.id,
            item_data_primaries=self.item_data_primaries,
            item_data_secondaries=self.item_data_secondaries,
            item_type_primary=self.item_type_primary,
            item_type_secondary=self.item_type_secondary,
            item_values=self.item_values,
            last_modified_time=self.last_modified_time,
            last_modified_user_id=self.last_modified_user_id,
            ms_login_services_tr_v2=self.ms_login_services_tr_v2,
            name=self.name,
            restrict_personal_o365_domains=self.restrict_personal_o365_domains)


def get_tenant_restriction_profile(description: Optional[builtins.str] = None,
                                   id: Optional[builtins.int] = None,
                                   name: Optional[builtins.str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTenantRestrictionProfileResult:
    """
    * [Official documentation](https://help.zscaler.com/zia/about-tenant-profiles)
    * [API documentation](https://help.zscaler.com/zia/cloud-app-control-policy#/tenancyRestrictionProfile-get)

    Use the **zia_tenant_restriction_profile** data source to get information about a ZIA Domain Profiles in the Zscaler Internet Access cloud or via the API. The resource can then be utilized when configuring a Web DLP Rule resource `DLPWebRules`

    ## Example Usage

    ### By Name

    ### By ID
    """
    __args__ = dict()
    __args__['description'] = description
    __args__['id'] = id
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('zia:index/getTenantRestrictionProfile:getTenantRestrictionProfile', __args__, opts=opts, typ=GetTenantRestrictionProfileResult).value

    return AwaitableGetTenantRestrictionProfileResult(
        allow_gcp_cloud_storage_read=pulumi.get(__ret__, 'allow_gcp_cloud_storage_read'),
        allow_google_consumers=pulumi.get(__ret__, 'allow_google_consumers'),
        allow_google_visitors=pulumi.get(__ret__, 'allow_google_visitors'),
        app_type=pulumi.get(__ret__, 'app_type'),
        description=pulumi.get(__ret__, 'description'),
        id=pulumi.get(__ret__, 'id'),
        item_data_primaries=pulumi.get(__ret__, 'item_data_primaries'),
        item_data_secondaries=pulumi.get(__ret__, 'item_data_secondaries'),
        item_type_primary=pulumi.get(__ret__, 'item_type_primary'),
        item_type_secondary=pulumi.get(__ret__, 'item_type_secondary'),
        item_values=pulumi.get(__ret__, 'item_values'),
        last_modified_time=pulumi.get(__ret__, 'last_modified_time'),
        last_modified_user_id=pulumi.get(__ret__, 'last_modified_user_id'),
        ms_login_services_tr_v2=pulumi.get(__ret__, 'ms_login_services_tr_v2'),
        name=pulumi.get(__ret__, 'name'),
        restrict_personal_o365_domains=pulumi.get(__ret__, 'restrict_personal_o365_domains'))
def get_tenant_restriction_profile_output(description: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                          id: Optional[pulumi.Input[Optional[builtins.int]]] = None,
                                          name: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetTenantRestrictionProfileResult]:
    """
    * [Official documentation](https://help.zscaler.com/zia/about-tenant-profiles)
    * [API documentation](https://help.zscaler.com/zia/cloud-app-control-policy#/tenancyRestrictionProfile-get)

    Use the **zia_tenant_restriction_profile** data source to get information about a ZIA Domain Profiles in the Zscaler Internet Access cloud or via the API. The resource can then be utilized when configuring a Web DLP Rule resource `DLPWebRules`

    ## Example Usage

    ### By Name

    ### By ID
    """
    __args__ = dict()
    __args__['description'] = description
    __args__['id'] = id
    __args__['name'] = name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('zia:index/getTenantRestrictionProfile:getTenantRestrictionProfile', __args__, opts=opts, typ=GetTenantRestrictionProfileResult)
    return __ret__.apply(lambda __response__: GetTenantRestrictionProfileResult(
        allow_gcp_cloud_storage_read=pulumi.get(__response__, 'allow_gcp_cloud_storage_read'),
        allow_google_consumers=pulumi.get(__response__, 'allow_google_consumers'),
        allow_google_visitors=pulumi.get(__response__, 'allow_google_visitors'),
        app_type=pulumi.get(__response__, 'app_type'),
        description=pulumi.get(__response__, 'description'),
        id=pulumi.get(__response__, 'id'),
        item_data_primaries=pulumi.get(__response__, 'item_data_primaries'),
        item_data_secondaries=pulumi.get(__response__, 'item_data_secondaries'),
        item_type_primary=pulumi.get(__response__, 'item_type_primary'),
        item_type_secondary=pulumi.get(__response__, 'item_type_secondary'),
        item_values=pulumi.get(__response__, 'item_values'),
        last_modified_time=pulumi.get(__response__, 'last_modified_time'),
        last_modified_user_id=pulumi.get(__response__, 'last_modified_user_id'),
        ms_login_services_tr_v2=pulumi.get(__response__, 'ms_login_services_tr_v2'),
        name=pulumi.get(__response__, 'name'),
        restrict_personal_o365_domains=pulumi.get(__response__, 'restrict_personal_o365_domains')))
