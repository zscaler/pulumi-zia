# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetDlpDictionaryPredefinedIdentifiersResult',
    'AwaitableGetDlpDictionaryPredefinedIdentifiersResult',
    'get_dlp_dictionary_predefined_identifiers',
    'get_dlp_dictionary_predefined_identifiers_output',
]

@pulumi.output_type
class GetDlpDictionaryPredefinedIdentifiersResult:
    """
    A collection of values returned by getDlpDictionaryPredefinedIdentifiers.
    """
    def __init__(__self__, id=None, name=None, predefined_identifiers=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if predefined_identifiers and not isinstance(predefined_identifiers, list):
            raise TypeError("Expected argument 'predefined_identifiers' to be a list")
        pulumi.set(__self__, "predefined_identifiers", predefined_identifiers)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        (String) The ID of the hierarchical DLP dictionary.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        """
        (String) The name of the hierarchical DLP dictionary: Supported values: `ASPP_LEAKAGE`, `CRED_LEAKAGE`, `EUIBAN_LEAKAGE`, `PPEU_LEAKAGE`, `USDL_LEAKAGE`.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="predefinedIdentifiers")
    def predefined_identifiers(self) -> Sequence[builtins.str]:
        """
        (List) The list of hierarchical DLP dictionary values.
        """
        return pulumi.get(self, "predefined_identifiers")


class AwaitableGetDlpDictionaryPredefinedIdentifiersResult(GetDlpDictionaryPredefinedIdentifiersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDlpDictionaryPredefinedIdentifiersResult(
            id=self.id,
            name=self.name,
            predefined_identifiers=self.predefined_identifiers)


def get_dlp_dictionary_predefined_identifiers(name: Optional[builtins.str] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDlpDictionaryPredefinedIdentifiersResult:
    """
    * [Official documentation](https://help.zscaler.com/zia/understanding-predefined-dlp-dictionaries)
    * [API documentation](https://help.zscaler.com/zia/data-loss-prevention#/dlpDictionaries/{dictId}/predefinedIdentifiers-get)

    Use the **zia_dlp_dictionary_predefined_identifiers** data source to get information about the list of predefined identifiers that are available for selection in the specified hierarchical DLP dictionary.

    ## Example Usage


    :param builtins.str name: The name of the hierarchical DLP dictionary.
    """
    __args__ = dict()
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('zia:index/getDlpDictionaryPredefinedIdentifiers:getDlpDictionaryPredefinedIdentifiers', __args__, opts=opts, typ=GetDlpDictionaryPredefinedIdentifiersResult).value

    return AwaitableGetDlpDictionaryPredefinedIdentifiersResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        predefined_identifiers=pulumi.get(__ret__, 'predefined_identifiers'))
def get_dlp_dictionary_predefined_identifiers_output(name: Optional[pulumi.Input[builtins.str]] = None,
                                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDlpDictionaryPredefinedIdentifiersResult]:
    """
    * [Official documentation](https://help.zscaler.com/zia/understanding-predefined-dlp-dictionaries)
    * [API documentation](https://help.zscaler.com/zia/data-loss-prevention#/dlpDictionaries/{dictId}/predefinedIdentifiers-get)

    Use the **zia_dlp_dictionary_predefined_identifiers** data source to get information about the list of predefined identifiers that are available for selection in the specified hierarchical DLP dictionary.

    ## Example Usage


    :param builtins.str name: The name of the hierarchical DLP dictionary.
    """
    __args__ = dict()
    __args__['name'] = name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('zia:index/getDlpDictionaryPredefinedIdentifiers:getDlpDictionaryPredefinedIdentifiers', __args__, opts=opts, typ=GetDlpDictionaryPredefinedIdentifiersResult)
    return __ret__.apply(lambda __response__: GetDlpDictionaryPredefinedIdentifiersResult(
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        predefined_identifiers=pulumi.get(__response__, 'predefined_identifiers')))
