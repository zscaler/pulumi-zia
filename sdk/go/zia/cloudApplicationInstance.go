// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/about-cloud-application-instances)
// * [API documentation](https://help.zscaler.com/zia/cloud-app-control-policy#/cloudApplicationInstances-post)
//
// The **zia_cloud_application_instance** resource allows the creation and management of cloud application instance.
//
// ## Example Usage
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// **zia_cloud_application_instance** can be imported by using `<INSTANCE_ID>` or `<INSTANCE_NAME>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zia:index/cloudApplicationInstance:CloudApplicationInstance example <instance_id>
// ```
//
// or
//
// ```sh
// $ pulumi import zia:index/cloudApplicationInstance:CloudApplicationInstance example <instance_name>
// ```
type CloudApplicationInstance struct {
	pulumi.CustomResourceState

	InstanceId pulumi.IntOutput `pulumi:"instanceId"`
	// List of identifiers for the cloud application instance.
	InstanceIdentifiers CloudApplicationInstanceInstanceIdentifierArrayOutput `pulumi:"instanceIdentifiers"`
	// Type of the cloud application instance.
	InstanceType pulumi.StringPtrOutput `pulumi:"instanceType"`
	// Name of the cloud application instance.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewCloudApplicationInstance registers a new resource with the given unique name, arguments, and options.
func NewCloudApplicationInstance(ctx *pulumi.Context,
	name string, args *CloudApplicationInstanceArgs, opts ...pulumi.ResourceOption) (*CloudApplicationInstance, error) {
	if args == nil {
		args = &CloudApplicationInstanceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudApplicationInstance
	err := ctx.RegisterResource("zia:index/cloudApplicationInstance:CloudApplicationInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudApplicationInstance gets an existing CloudApplicationInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudApplicationInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudApplicationInstanceState, opts ...pulumi.ResourceOption) (*CloudApplicationInstance, error) {
	var resource CloudApplicationInstance
	err := ctx.ReadResource("zia:index/cloudApplicationInstance:CloudApplicationInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudApplicationInstance resources.
type cloudApplicationInstanceState struct {
	InstanceId *int `pulumi:"instanceId"`
	// List of identifiers for the cloud application instance.
	InstanceIdentifiers []CloudApplicationInstanceInstanceIdentifier `pulumi:"instanceIdentifiers"`
	// Type of the cloud application instance.
	InstanceType *string `pulumi:"instanceType"`
	// Name of the cloud application instance.
	Name *string `pulumi:"name"`
}

type CloudApplicationInstanceState struct {
	InstanceId pulumi.IntPtrInput
	// List of identifiers for the cloud application instance.
	InstanceIdentifiers CloudApplicationInstanceInstanceIdentifierArrayInput
	// Type of the cloud application instance.
	InstanceType pulumi.StringPtrInput
	// Name of the cloud application instance.
	Name pulumi.StringPtrInput
}

func (CloudApplicationInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudApplicationInstanceState)(nil)).Elem()
}

type cloudApplicationInstanceArgs struct {
	// List of identifiers for the cloud application instance.
	InstanceIdentifiers []CloudApplicationInstanceInstanceIdentifier `pulumi:"instanceIdentifiers"`
	// Type of the cloud application instance.
	InstanceType *string `pulumi:"instanceType"`
	// Name of the cloud application instance.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a CloudApplicationInstance resource.
type CloudApplicationInstanceArgs struct {
	// List of identifiers for the cloud application instance.
	InstanceIdentifiers CloudApplicationInstanceInstanceIdentifierArrayInput
	// Type of the cloud application instance.
	InstanceType pulumi.StringPtrInput
	// Name of the cloud application instance.
	Name pulumi.StringPtrInput
}

func (CloudApplicationInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudApplicationInstanceArgs)(nil)).Elem()
}

type CloudApplicationInstanceInput interface {
	pulumi.Input

	ToCloudApplicationInstanceOutput() CloudApplicationInstanceOutput
	ToCloudApplicationInstanceOutputWithContext(ctx context.Context) CloudApplicationInstanceOutput
}

func (*CloudApplicationInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudApplicationInstance)(nil)).Elem()
}

func (i *CloudApplicationInstance) ToCloudApplicationInstanceOutput() CloudApplicationInstanceOutput {
	return i.ToCloudApplicationInstanceOutputWithContext(context.Background())
}

func (i *CloudApplicationInstance) ToCloudApplicationInstanceOutputWithContext(ctx context.Context) CloudApplicationInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudApplicationInstanceOutput)
}

// CloudApplicationInstanceArrayInput is an input type that accepts CloudApplicationInstanceArray and CloudApplicationInstanceArrayOutput values.
// You can construct a concrete instance of `CloudApplicationInstanceArrayInput` via:
//
//	CloudApplicationInstanceArray{ CloudApplicationInstanceArgs{...} }
type CloudApplicationInstanceArrayInput interface {
	pulumi.Input

	ToCloudApplicationInstanceArrayOutput() CloudApplicationInstanceArrayOutput
	ToCloudApplicationInstanceArrayOutputWithContext(context.Context) CloudApplicationInstanceArrayOutput
}

type CloudApplicationInstanceArray []CloudApplicationInstanceInput

func (CloudApplicationInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudApplicationInstance)(nil)).Elem()
}

func (i CloudApplicationInstanceArray) ToCloudApplicationInstanceArrayOutput() CloudApplicationInstanceArrayOutput {
	return i.ToCloudApplicationInstanceArrayOutputWithContext(context.Background())
}

func (i CloudApplicationInstanceArray) ToCloudApplicationInstanceArrayOutputWithContext(ctx context.Context) CloudApplicationInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudApplicationInstanceArrayOutput)
}

// CloudApplicationInstanceMapInput is an input type that accepts CloudApplicationInstanceMap and CloudApplicationInstanceMapOutput values.
// You can construct a concrete instance of `CloudApplicationInstanceMapInput` via:
//
//	CloudApplicationInstanceMap{ "key": CloudApplicationInstanceArgs{...} }
type CloudApplicationInstanceMapInput interface {
	pulumi.Input

	ToCloudApplicationInstanceMapOutput() CloudApplicationInstanceMapOutput
	ToCloudApplicationInstanceMapOutputWithContext(context.Context) CloudApplicationInstanceMapOutput
}

type CloudApplicationInstanceMap map[string]CloudApplicationInstanceInput

func (CloudApplicationInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudApplicationInstance)(nil)).Elem()
}

func (i CloudApplicationInstanceMap) ToCloudApplicationInstanceMapOutput() CloudApplicationInstanceMapOutput {
	return i.ToCloudApplicationInstanceMapOutputWithContext(context.Background())
}

func (i CloudApplicationInstanceMap) ToCloudApplicationInstanceMapOutputWithContext(ctx context.Context) CloudApplicationInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudApplicationInstanceMapOutput)
}

type CloudApplicationInstanceOutput struct{ *pulumi.OutputState }

func (CloudApplicationInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudApplicationInstance)(nil)).Elem()
}

func (o CloudApplicationInstanceOutput) ToCloudApplicationInstanceOutput() CloudApplicationInstanceOutput {
	return o
}

func (o CloudApplicationInstanceOutput) ToCloudApplicationInstanceOutputWithContext(ctx context.Context) CloudApplicationInstanceOutput {
	return o
}

func (o CloudApplicationInstanceOutput) InstanceId() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudApplicationInstance) pulumi.IntOutput { return v.InstanceId }).(pulumi.IntOutput)
}

// List of identifiers for the cloud application instance.
func (o CloudApplicationInstanceOutput) InstanceIdentifiers() CloudApplicationInstanceInstanceIdentifierArrayOutput {
	return o.ApplyT(func(v *CloudApplicationInstance) CloudApplicationInstanceInstanceIdentifierArrayOutput {
		return v.InstanceIdentifiers
	}).(CloudApplicationInstanceInstanceIdentifierArrayOutput)
}

// Type of the cloud application instance.
func (o CloudApplicationInstanceOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudApplicationInstance) pulumi.StringPtrOutput { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Name of the cloud application instance.
func (o CloudApplicationInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudApplicationInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type CloudApplicationInstanceArrayOutput struct{ *pulumi.OutputState }

func (CloudApplicationInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudApplicationInstance)(nil)).Elem()
}

func (o CloudApplicationInstanceArrayOutput) ToCloudApplicationInstanceArrayOutput() CloudApplicationInstanceArrayOutput {
	return o
}

func (o CloudApplicationInstanceArrayOutput) ToCloudApplicationInstanceArrayOutputWithContext(ctx context.Context) CloudApplicationInstanceArrayOutput {
	return o
}

func (o CloudApplicationInstanceArrayOutput) Index(i pulumi.IntInput) CloudApplicationInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudApplicationInstance {
		return vs[0].([]*CloudApplicationInstance)[vs[1].(int)]
	}).(CloudApplicationInstanceOutput)
}

type CloudApplicationInstanceMapOutput struct{ *pulumi.OutputState }

func (CloudApplicationInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudApplicationInstance)(nil)).Elem()
}

func (o CloudApplicationInstanceMapOutput) ToCloudApplicationInstanceMapOutput() CloudApplicationInstanceMapOutput {
	return o
}

func (o CloudApplicationInstanceMapOutput) ToCloudApplicationInstanceMapOutputWithContext(ctx context.Context) CloudApplicationInstanceMapOutput {
	return o
}

func (o CloudApplicationInstanceMapOutput) MapIndex(k pulumi.StringInput) CloudApplicationInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudApplicationInstance {
		return vs[0].(map[string]*CloudApplicationInstance)[vs[1].(string)]
	}).(CloudApplicationInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudApplicationInstanceInput)(nil)).Elem(), &CloudApplicationInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudApplicationInstanceArrayInput)(nil)).Elem(), CloudApplicationInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudApplicationInstanceMapInput)(nil)).Elem(), CloudApplicationInstanceMap{})
	pulumi.RegisterOutputType(CloudApplicationInstanceOutput{})
	pulumi.RegisterOutputType(CloudApplicationInstanceArrayOutput{})
	pulumi.RegisterOutputType(CloudApplicationInstanceMapOutput{})
}
