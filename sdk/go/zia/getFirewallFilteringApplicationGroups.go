// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// Use the **zia_firewall_filtering_network_application_groups** data source to get information about network application groups available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering rule.
//
// ## Example Usage
func LookupFirewallFilteringApplicationGroups(ctx *pulumi.Context, args *LookupFirewallFilteringApplicationGroupsArgs, opts ...pulumi.InvokeOption) (*LookupFirewallFilteringApplicationGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFirewallFilteringApplicationGroupsResult
	err := ctx.Invoke("zia:index/getFirewallFilteringApplicationGroups:getFirewallFilteringApplicationGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFirewallFilteringApplicationGroups.
type LookupFirewallFilteringApplicationGroupsArgs struct {
	// The ID of the ip source group resource.
	Id *int `pulumi:"id"`
	// The name of the ip source group to be exported.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getFirewallFilteringApplicationGroups.
type LookupFirewallFilteringApplicationGroupsResult struct {
	Description         string   `pulumi:"description"`
	Id                  int      `pulumi:"id"`
	Name                string   `pulumi:"name"`
	NetworkApplications []string `pulumi:"networkApplications"`
}

func LookupFirewallFilteringApplicationGroupsOutput(ctx *pulumi.Context, args LookupFirewallFilteringApplicationGroupsOutputArgs, opts ...pulumi.InvokeOption) LookupFirewallFilteringApplicationGroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFirewallFilteringApplicationGroupsResultOutput, error) {
			args := v.(LookupFirewallFilteringApplicationGroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zia:index/getFirewallFilteringApplicationGroups:getFirewallFilteringApplicationGroups", args, LookupFirewallFilteringApplicationGroupsResultOutput{}, options).(LookupFirewallFilteringApplicationGroupsResultOutput), nil
		}).(LookupFirewallFilteringApplicationGroupsResultOutput)
}

// A collection of arguments for invoking getFirewallFilteringApplicationGroups.
type LookupFirewallFilteringApplicationGroupsOutputArgs struct {
	// The ID of the ip source group resource.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// The name of the ip source group to be exported.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupFirewallFilteringApplicationGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallFilteringApplicationGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getFirewallFilteringApplicationGroups.
type LookupFirewallFilteringApplicationGroupsResultOutput struct{ *pulumi.OutputState }

func (LookupFirewallFilteringApplicationGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallFilteringApplicationGroupsResult)(nil)).Elem()
}

func (o LookupFirewallFilteringApplicationGroupsResultOutput) ToLookupFirewallFilteringApplicationGroupsResultOutput() LookupFirewallFilteringApplicationGroupsResultOutput {
	return o
}

func (o LookupFirewallFilteringApplicationGroupsResultOutput) ToLookupFirewallFilteringApplicationGroupsResultOutputWithContext(ctx context.Context) LookupFirewallFilteringApplicationGroupsResultOutput {
	return o
}

func (o LookupFirewallFilteringApplicationGroupsResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallFilteringApplicationGroupsResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupFirewallFilteringApplicationGroupsResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFirewallFilteringApplicationGroupsResult) int { return v.Id }).(pulumi.IntOutput)
}

func (o LookupFirewallFilteringApplicationGroupsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallFilteringApplicationGroupsResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupFirewallFilteringApplicationGroupsResultOutput) NetworkApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFirewallFilteringApplicationGroupsResult) []string { return v.NetworkApplications }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFirewallFilteringApplicationGroupsResultOutput{})
}
