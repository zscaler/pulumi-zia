// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/ips-control-policy#/firewallIpsRules-get)
// * [API documentation](https://help.zscaler.com/zia/configuring-ips-control-policy)
//
// The **zia_firewall_ips_rule** resource allows the creation and management of ZIA Cloud Firewall IPS rules in the Zscaler Internet Access.
//
// ## Example Usage
type IPSFirewallRule struct {
	pulumi.CustomResourceState

	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
	CapturePcap pulumi.BoolOutput `pulumi:"capturePcap"`
	// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
	DefaultRule pulumi.BoolPtrOutput `pulumi:"defaultRule"`
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments IPSFirewallRuleDepartmentsPtrOutput `pulumi:"departments"`
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	DestAddresses pulumi.StringArrayOutput `pulumi:"destAddresses"`
	// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	DestCountries pulumi.StringArrayOutput `pulumi:"destCountries"`
	// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories pulumi.StringArrayOutput `pulumi:"destIpCategories"`
	// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups IPSFirewallRuleDestIpGroupsPtrOutput `pulumi:"destIpGroups"`
	// list of destination ip groups
	DestIpv6Groups IPSFirewallRuleDestIpv6GroupsPtrOutput `pulumi:"destIpv6Groups"`
	// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	DeviceGroups IPSFirewallRuleDeviceGroupsPtrOutput `pulumi:"deviceGroups"`
	// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	Devices IPSFirewallRuleDevicesPtrOutput `pulumi:"devices"`
	// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
	EnableFullLogging pulumi.BoolPtrOutput `pulumi:"enableFullLogging"`
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups IPSFirewallRuleGroupsPtrOutput `pulumi:"groups"`
	// (List of Objects) Labels that are applicable to the rule.
	Labels IPSFirewallRuleLabelsPtrOutput `pulumi:"labels"`
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups IPSFirewallRuleLocationGroupsPtrOutput `pulumi:"locationGroups"`
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations IPSFirewallRuleLocationsPtrOutput `pulumi:"locations"`
	// The name of the IPS Control rule
	Name pulumi.StringOutput `pulumi:"name"`
	// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups IPSFirewallRuleNwServiceGroupsPtrOutput `pulumi:"nwServiceGroups"`
	// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices IPSFirewallRuleNwServicesPtrOutput `pulumi:"nwServices"`
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order pulumi.IntOutput `pulumi:"order"`
	// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
	Predefined pulumi.BoolPtrOutput `pulumi:"predefined"`
	// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
	Rank pulumi.IntPtrOutput `pulumi:"rank"`
	// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
	ResCategories pulumi.StringArrayOutput `pulumi:"resCategories"`
	RuleId        pulumi.IntOutput         `pulumi:"ruleId"`
	// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	SourceCountries pulumi.StringArrayOutput `pulumi:"sourceCountries"`
	// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
	SrcIpGroups IPSFirewallRuleSrcIpGroupsPtrOutput `pulumi:"srcIpGroups"`
	// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	SrcIps pulumi.StringArrayOutput `pulumi:"srcIps"`
	// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups IPSFirewallRuleSrcIpv6GroupsPtrOutput `pulumi:"srcIpv6Groups"`
	// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// (List of Objects) Advanced threat categories to which the rule applies
	ThreatCategories IPSFirewallRuleThreatCategoriesPtrOutput `pulumi:"threatCategories"`
	// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
	TimeWindows IPSFirewallRuleTimeWindowsPtrOutput `pulumi:"timeWindows"`
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users IPSFirewallRuleUsersPtrOutput `pulumi:"users"`
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments IPSFirewallRuleZpaAppSegmentArrayOutput `pulumi:"zpaAppSegments"`
}

// NewIPSFirewallRule registers a new resource with the given unique name, arguments, and options.
func NewIPSFirewallRule(ctx *pulumi.Context,
	name string, args *IPSFirewallRuleArgs, opts ...pulumi.ResourceOption) (*IPSFirewallRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Order == nil {
		return nil, errors.New("invalid value for required argument 'Order'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("zia:index/firewallIPSRule:FirewallIPSRule"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IPSFirewallRule
	err := ctx.RegisterResource("zia:index/iPSFirewallRule:IPSFirewallRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIPSFirewallRule gets an existing IPSFirewallRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIPSFirewallRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IPSFirewallRuleState, opts ...pulumi.ResourceOption) (*IPSFirewallRule, error) {
	var resource IPSFirewallRule
	err := ctx.ReadResource("zia:index/iPSFirewallRule:IPSFirewallRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IPSFirewallRule resources.
type ipsfirewallRuleState struct {
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
	Action *string `pulumi:"action"`
	// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
	CapturePcap *bool `pulumi:"capturePcap"`
	// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
	DefaultRule *bool `pulumi:"defaultRule"`
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments *IPSFirewallRuleDepartments `pulumi:"departments"`
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description *string `pulumi:"description"`
	// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	DestAddresses []string `pulumi:"destAddresses"`
	// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	DestCountries []string `pulumi:"destCountries"`
	// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories []string `pulumi:"destIpCategories"`
	// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups *IPSFirewallRuleDestIpGroups `pulumi:"destIpGroups"`
	// list of destination ip groups
	DestIpv6Groups *IPSFirewallRuleDestIpv6Groups `pulumi:"destIpv6Groups"`
	// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	DeviceGroups *IPSFirewallRuleDeviceGroups `pulumi:"deviceGroups"`
	// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	Devices *IPSFirewallRuleDevices `pulumi:"devices"`
	// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
	EnableFullLogging *bool `pulumi:"enableFullLogging"`
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups *IPSFirewallRuleGroups `pulumi:"groups"`
	// (List of Objects) Labels that are applicable to the rule.
	Labels *IPSFirewallRuleLabels `pulumi:"labels"`
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups *IPSFirewallRuleLocationGroups `pulumi:"locationGroups"`
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations *IPSFirewallRuleLocations `pulumi:"locations"`
	// The name of the IPS Control rule
	Name *string `pulumi:"name"`
	// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups *IPSFirewallRuleNwServiceGroups `pulumi:"nwServiceGroups"`
	// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices *IPSFirewallRuleNwServices `pulumi:"nwServices"`
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order *int `pulumi:"order"`
	// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
	Predefined *bool `pulumi:"predefined"`
	// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
	Rank *int `pulumi:"rank"`
	// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
	ResCategories []string `pulumi:"resCategories"`
	RuleId        *int     `pulumi:"ruleId"`
	// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	SourceCountries []string `pulumi:"sourceCountries"`
	// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
	SrcIpGroups *IPSFirewallRuleSrcIpGroups `pulumi:"srcIpGroups"`
	// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	SrcIps []string `pulumi:"srcIps"`
	// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups *IPSFirewallRuleSrcIpv6Groups `pulumi:"srcIpv6Groups"`
	// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
	State *string `pulumi:"state"`
	// (List of Objects) Advanced threat categories to which the rule applies
	ThreatCategories *IPSFirewallRuleThreatCategories `pulumi:"threatCategories"`
	// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
	TimeWindows *IPSFirewallRuleTimeWindows `pulumi:"timeWindows"`
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users *IPSFirewallRuleUsers `pulumi:"users"`
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments []IPSFirewallRuleZpaAppSegment `pulumi:"zpaAppSegments"`
}

type IPSFirewallRuleState struct {
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
	Action pulumi.StringPtrInput
	// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
	CapturePcap pulumi.BoolPtrInput
	// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
	DefaultRule pulumi.BoolPtrInput
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments IPSFirewallRuleDepartmentsPtrInput
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description pulumi.StringPtrInput
	// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	DestAddresses pulumi.StringArrayInput
	// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	DestCountries pulumi.StringArrayInput
	// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories pulumi.StringArrayInput
	// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups IPSFirewallRuleDestIpGroupsPtrInput
	// list of destination ip groups
	DestIpv6Groups IPSFirewallRuleDestIpv6GroupsPtrInput
	// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	DeviceGroups IPSFirewallRuleDeviceGroupsPtrInput
	// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	Devices IPSFirewallRuleDevicesPtrInput
	// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
	EnableFullLogging pulumi.BoolPtrInput
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups IPSFirewallRuleGroupsPtrInput
	// (List of Objects) Labels that are applicable to the rule.
	Labels IPSFirewallRuleLabelsPtrInput
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups IPSFirewallRuleLocationGroupsPtrInput
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations IPSFirewallRuleLocationsPtrInput
	// The name of the IPS Control rule
	Name pulumi.StringPtrInput
	// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups IPSFirewallRuleNwServiceGroupsPtrInput
	// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices IPSFirewallRuleNwServicesPtrInput
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order pulumi.IntPtrInput
	// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
	Predefined pulumi.BoolPtrInput
	// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
	Rank pulumi.IntPtrInput
	// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
	ResCategories pulumi.StringArrayInput
	RuleId        pulumi.IntPtrInput
	// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	SourceCountries pulumi.StringArrayInput
	// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
	SrcIpGroups IPSFirewallRuleSrcIpGroupsPtrInput
	// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	SrcIps pulumi.StringArrayInput
	// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups IPSFirewallRuleSrcIpv6GroupsPtrInput
	// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
	State pulumi.StringPtrInput
	// (List of Objects) Advanced threat categories to which the rule applies
	ThreatCategories IPSFirewallRuleThreatCategoriesPtrInput
	// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
	TimeWindows IPSFirewallRuleTimeWindowsPtrInput
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users IPSFirewallRuleUsersPtrInput
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments IPSFirewallRuleZpaAppSegmentArrayInput
}

func (IPSFirewallRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsfirewallRuleState)(nil)).Elem()
}

type ipsfirewallRuleArgs struct {
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
	Action *string `pulumi:"action"`
	// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
	CapturePcap *bool `pulumi:"capturePcap"`
	// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
	DefaultRule *bool `pulumi:"defaultRule"`
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments *IPSFirewallRuleDepartments `pulumi:"departments"`
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description *string `pulumi:"description"`
	// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	DestAddresses []string `pulumi:"destAddresses"`
	// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	DestCountries []string `pulumi:"destCountries"`
	// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories []string `pulumi:"destIpCategories"`
	// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups *IPSFirewallRuleDestIpGroups `pulumi:"destIpGroups"`
	// list of destination ip groups
	DestIpv6Groups *IPSFirewallRuleDestIpv6Groups `pulumi:"destIpv6Groups"`
	// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	DeviceGroups *IPSFirewallRuleDeviceGroups `pulumi:"deviceGroups"`
	// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	Devices *IPSFirewallRuleDevices `pulumi:"devices"`
	// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
	EnableFullLogging *bool `pulumi:"enableFullLogging"`
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups *IPSFirewallRuleGroups `pulumi:"groups"`
	// (List of Objects) Labels that are applicable to the rule.
	Labels *IPSFirewallRuleLabels `pulumi:"labels"`
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups *IPSFirewallRuleLocationGroups `pulumi:"locationGroups"`
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations *IPSFirewallRuleLocations `pulumi:"locations"`
	// The name of the IPS Control rule
	Name *string `pulumi:"name"`
	// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups *IPSFirewallRuleNwServiceGroups `pulumi:"nwServiceGroups"`
	// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices *IPSFirewallRuleNwServices `pulumi:"nwServices"`
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order int `pulumi:"order"`
	// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
	Predefined *bool `pulumi:"predefined"`
	// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
	Rank *int `pulumi:"rank"`
	// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
	ResCategories []string `pulumi:"resCategories"`
	// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	SourceCountries []string `pulumi:"sourceCountries"`
	// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
	SrcIpGroups *IPSFirewallRuleSrcIpGroups `pulumi:"srcIpGroups"`
	// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	SrcIps []string `pulumi:"srcIps"`
	// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups *IPSFirewallRuleSrcIpv6Groups `pulumi:"srcIpv6Groups"`
	// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
	State *string `pulumi:"state"`
	// (List of Objects) Advanced threat categories to which the rule applies
	ThreatCategories *IPSFirewallRuleThreatCategories `pulumi:"threatCategories"`
	// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
	TimeWindows *IPSFirewallRuleTimeWindows `pulumi:"timeWindows"`
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users *IPSFirewallRuleUsers `pulumi:"users"`
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments []IPSFirewallRuleZpaAppSegment `pulumi:"zpaAppSegments"`
}

// The set of arguments for constructing a IPSFirewallRule resource.
type IPSFirewallRuleArgs struct {
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
	Action pulumi.StringPtrInput
	// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
	CapturePcap pulumi.BoolPtrInput
	// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
	DefaultRule pulumi.BoolPtrInput
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments IPSFirewallRuleDepartmentsPtrInput
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description pulumi.StringPtrInput
	// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	DestAddresses pulumi.StringArrayInput
	// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	DestCountries pulumi.StringArrayInput
	// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories pulumi.StringArrayInput
	// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups IPSFirewallRuleDestIpGroupsPtrInput
	// list of destination ip groups
	DestIpv6Groups IPSFirewallRuleDestIpv6GroupsPtrInput
	// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	DeviceGroups IPSFirewallRuleDeviceGroupsPtrInput
	// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	Devices IPSFirewallRuleDevicesPtrInput
	// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
	EnableFullLogging pulumi.BoolPtrInput
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups IPSFirewallRuleGroupsPtrInput
	// (List of Objects) Labels that are applicable to the rule.
	Labels IPSFirewallRuleLabelsPtrInput
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups IPSFirewallRuleLocationGroupsPtrInput
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations IPSFirewallRuleLocationsPtrInput
	// The name of the IPS Control rule
	Name pulumi.StringPtrInput
	// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups IPSFirewallRuleNwServiceGroupsPtrInput
	// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices IPSFirewallRuleNwServicesPtrInput
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order pulumi.IntInput
	// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
	Predefined pulumi.BoolPtrInput
	// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
	Rank pulumi.IntPtrInput
	// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
	ResCategories pulumi.StringArrayInput
	// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	SourceCountries pulumi.StringArrayInput
	// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
	SrcIpGroups IPSFirewallRuleSrcIpGroupsPtrInput
	// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	SrcIps pulumi.StringArrayInput
	// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups IPSFirewallRuleSrcIpv6GroupsPtrInput
	// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
	State pulumi.StringPtrInput
	// (List of Objects) Advanced threat categories to which the rule applies
	ThreatCategories IPSFirewallRuleThreatCategoriesPtrInput
	// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
	TimeWindows IPSFirewallRuleTimeWindowsPtrInput
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users IPSFirewallRuleUsersPtrInput
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments IPSFirewallRuleZpaAppSegmentArrayInput
}

func (IPSFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsfirewallRuleArgs)(nil)).Elem()
}

type IPSFirewallRuleInput interface {
	pulumi.Input

	ToIPSFirewallRuleOutput() IPSFirewallRuleOutput
	ToIPSFirewallRuleOutputWithContext(ctx context.Context) IPSFirewallRuleOutput
}

func (*IPSFirewallRule) ElementType() reflect.Type {
	return reflect.TypeOf((**IPSFirewallRule)(nil)).Elem()
}

func (i *IPSFirewallRule) ToIPSFirewallRuleOutput() IPSFirewallRuleOutput {
	return i.ToIPSFirewallRuleOutputWithContext(context.Background())
}

func (i *IPSFirewallRule) ToIPSFirewallRuleOutputWithContext(ctx context.Context) IPSFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPSFirewallRuleOutput)
}

// IPSFirewallRuleArrayInput is an input type that accepts IPSFirewallRuleArray and IPSFirewallRuleArrayOutput values.
// You can construct a concrete instance of `IPSFirewallRuleArrayInput` via:
//
//	IPSFirewallRuleArray{ IPSFirewallRuleArgs{...} }
type IPSFirewallRuleArrayInput interface {
	pulumi.Input

	ToIPSFirewallRuleArrayOutput() IPSFirewallRuleArrayOutput
	ToIPSFirewallRuleArrayOutputWithContext(context.Context) IPSFirewallRuleArrayOutput
}

type IPSFirewallRuleArray []IPSFirewallRuleInput

func (IPSFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IPSFirewallRule)(nil)).Elem()
}

func (i IPSFirewallRuleArray) ToIPSFirewallRuleArrayOutput() IPSFirewallRuleArrayOutput {
	return i.ToIPSFirewallRuleArrayOutputWithContext(context.Background())
}

func (i IPSFirewallRuleArray) ToIPSFirewallRuleArrayOutputWithContext(ctx context.Context) IPSFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPSFirewallRuleArrayOutput)
}

// IPSFirewallRuleMapInput is an input type that accepts IPSFirewallRuleMap and IPSFirewallRuleMapOutput values.
// You can construct a concrete instance of `IPSFirewallRuleMapInput` via:
//
//	IPSFirewallRuleMap{ "key": IPSFirewallRuleArgs{...} }
type IPSFirewallRuleMapInput interface {
	pulumi.Input

	ToIPSFirewallRuleMapOutput() IPSFirewallRuleMapOutput
	ToIPSFirewallRuleMapOutputWithContext(context.Context) IPSFirewallRuleMapOutput
}

type IPSFirewallRuleMap map[string]IPSFirewallRuleInput

func (IPSFirewallRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IPSFirewallRule)(nil)).Elem()
}

func (i IPSFirewallRuleMap) ToIPSFirewallRuleMapOutput() IPSFirewallRuleMapOutput {
	return i.ToIPSFirewallRuleMapOutputWithContext(context.Background())
}

func (i IPSFirewallRuleMap) ToIPSFirewallRuleMapOutputWithContext(ctx context.Context) IPSFirewallRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPSFirewallRuleMapOutput)
}

type IPSFirewallRuleOutput struct{ *pulumi.OutputState }

func (IPSFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPSFirewallRule)(nil)).Elem()
}

func (o IPSFirewallRuleOutput) ToIPSFirewallRuleOutput() IPSFirewallRuleOutput {
	return o
}

func (o IPSFirewallRuleOutput) ToIPSFirewallRuleOutputWithContext(ctx context.Context) IPSFirewallRuleOutput {
	return o
}

// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
func (o IPSFirewallRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
func (o IPSFirewallRuleOutput) CapturePcap() pulumi.BoolOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.BoolOutput { return v.CapturePcap }).(pulumi.BoolOutput)
}

// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
func (o IPSFirewallRuleOutput) DefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.BoolPtrOutput { return v.DefaultRule }).(pulumi.BoolPtrOutput)
}

// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
func (o IPSFirewallRuleOutput) Departments() IPSFirewallRuleDepartmentsPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleDepartmentsPtrOutput { return v.Departments }).(IPSFirewallRuleDepartmentsPtrOutput)
}

// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
func (o IPSFirewallRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
func (o IPSFirewallRuleOutput) DestAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.StringArrayOutput { return v.DestAddresses }).(pulumi.StringArrayOutput)
}

// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e “"US"“, “"CA"“
func (o IPSFirewallRuleOutput) DestCountries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.StringArrayOutput { return v.DestCountries }).(pulumi.StringArrayOutput)
}

// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
func (o IPSFirewallRuleOutput) DestIpCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.StringArrayOutput { return v.DestIpCategories }).(pulumi.StringArrayOutput)
}

// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
func (o IPSFirewallRuleOutput) DestIpGroups() IPSFirewallRuleDestIpGroupsPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleDestIpGroupsPtrOutput { return v.DestIpGroups }).(IPSFirewallRuleDestIpGroupsPtrOutput)
}

// list of destination ip groups
func (o IPSFirewallRuleOutput) DestIpv6Groups() IPSFirewallRuleDestIpv6GroupsPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleDestIpv6GroupsPtrOutput { return v.DestIpv6Groups }).(IPSFirewallRuleDestIpv6GroupsPtrOutput)
}

// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
func (o IPSFirewallRuleOutput) DeviceGroups() IPSFirewallRuleDeviceGroupsPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleDeviceGroupsPtrOutput { return v.DeviceGroups }).(IPSFirewallRuleDeviceGroupsPtrOutput)
}

// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
func (o IPSFirewallRuleOutput) Devices() IPSFirewallRuleDevicesPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleDevicesPtrOutput { return v.Devices }).(IPSFirewallRuleDevicesPtrOutput)
}

// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
func (o IPSFirewallRuleOutput) EnableFullLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.BoolPtrOutput { return v.EnableFullLogging }).(pulumi.BoolPtrOutput)
}

// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
func (o IPSFirewallRuleOutput) Groups() IPSFirewallRuleGroupsPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleGroupsPtrOutput { return v.Groups }).(IPSFirewallRuleGroupsPtrOutput)
}

// (List of Objects) Labels that are applicable to the rule.
func (o IPSFirewallRuleOutput) Labels() IPSFirewallRuleLabelsPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleLabelsPtrOutput { return v.Labels }).(IPSFirewallRuleLabelsPtrOutput)
}

// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
func (o IPSFirewallRuleOutput) LocationGroups() IPSFirewallRuleLocationGroupsPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleLocationGroupsPtrOutput { return v.LocationGroups }).(IPSFirewallRuleLocationGroupsPtrOutput)
}

// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
func (o IPSFirewallRuleOutput) Locations() IPSFirewallRuleLocationsPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleLocationsPtrOutput { return v.Locations }).(IPSFirewallRuleLocationsPtrOutput)
}

// The name of the IPS Control rule
func (o IPSFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
func (o IPSFirewallRuleOutput) NwServiceGroups() IPSFirewallRuleNwServiceGroupsPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleNwServiceGroupsPtrOutput { return v.NwServiceGroups }).(IPSFirewallRuleNwServiceGroupsPtrOutput)
}

// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
func (o IPSFirewallRuleOutput) NwServices() IPSFirewallRuleNwServicesPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleNwServicesPtrOutput { return v.NwServices }).(IPSFirewallRuleNwServicesPtrOutput)
}

// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
func (o IPSFirewallRuleOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.IntOutput { return v.Order }).(pulumi.IntOutput)
}

// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
func (o IPSFirewallRuleOutput) Predefined() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.BoolPtrOutput { return v.Predefined }).(pulumi.BoolPtrOutput)
}

// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
func (o IPSFirewallRuleOutput) Rank() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.IntPtrOutput { return v.Rank }).(pulumi.IntPtrOutput)
}

// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
func (o IPSFirewallRuleOutput) ResCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.StringArrayOutput { return v.ResCategories }).(pulumi.StringArrayOutput)
}

func (o IPSFirewallRuleOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e “"US"“, “"CA"“
func (o IPSFirewallRuleOutput) SourceCountries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.StringArrayOutput { return v.SourceCountries }).(pulumi.StringArrayOutput)
}

// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
func (o IPSFirewallRuleOutput) SrcIpGroups() IPSFirewallRuleSrcIpGroupsPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleSrcIpGroupsPtrOutput { return v.SrcIpGroups }).(IPSFirewallRuleSrcIpGroupsPtrOutput)
}

// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
func (o IPSFirewallRuleOutput) SrcIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.StringArrayOutput { return v.SrcIps }).(pulumi.StringArrayOutput)
}

// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
func (o IPSFirewallRuleOutput) SrcIpv6Groups() IPSFirewallRuleSrcIpv6GroupsPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleSrcIpv6GroupsPtrOutput { return v.SrcIpv6Groups }).(IPSFirewallRuleSrcIpv6GroupsPtrOutput)
}

// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
func (o IPSFirewallRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// (List of Objects) Advanced threat categories to which the rule applies
func (o IPSFirewallRuleOutput) ThreatCategories() IPSFirewallRuleThreatCategoriesPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleThreatCategoriesPtrOutput { return v.ThreatCategories }).(IPSFirewallRuleThreatCategoriesPtrOutput)
}

// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
func (o IPSFirewallRuleOutput) TimeWindows() IPSFirewallRuleTimeWindowsPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleTimeWindowsPtrOutput { return v.TimeWindows }).(IPSFirewallRuleTimeWindowsPtrOutput)
}

// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
func (o IPSFirewallRuleOutput) Users() IPSFirewallRuleUsersPtrOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleUsersPtrOutput { return v.Users }).(IPSFirewallRuleUsersPtrOutput)
}

// (List of Objects) The ZPA application segments to which the rule applies
func (o IPSFirewallRuleOutput) ZpaAppSegments() IPSFirewallRuleZpaAppSegmentArrayOutput {
	return o.ApplyT(func(v *IPSFirewallRule) IPSFirewallRuleZpaAppSegmentArrayOutput { return v.ZpaAppSegments }).(IPSFirewallRuleZpaAppSegmentArrayOutput)
}

type IPSFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (IPSFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IPSFirewallRule)(nil)).Elem()
}

func (o IPSFirewallRuleArrayOutput) ToIPSFirewallRuleArrayOutput() IPSFirewallRuleArrayOutput {
	return o
}

func (o IPSFirewallRuleArrayOutput) ToIPSFirewallRuleArrayOutputWithContext(ctx context.Context) IPSFirewallRuleArrayOutput {
	return o
}

func (o IPSFirewallRuleArrayOutput) Index(i pulumi.IntInput) IPSFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IPSFirewallRule {
		return vs[0].([]*IPSFirewallRule)[vs[1].(int)]
	}).(IPSFirewallRuleOutput)
}

type IPSFirewallRuleMapOutput struct{ *pulumi.OutputState }

func (IPSFirewallRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IPSFirewallRule)(nil)).Elem()
}

func (o IPSFirewallRuleMapOutput) ToIPSFirewallRuleMapOutput() IPSFirewallRuleMapOutput {
	return o
}

func (o IPSFirewallRuleMapOutput) ToIPSFirewallRuleMapOutputWithContext(ctx context.Context) IPSFirewallRuleMapOutput {
	return o
}

func (o IPSFirewallRuleMapOutput) MapIndex(k pulumi.StringInput) IPSFirewallRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IPSFirewallRule {
		return vs[0].(map[string]*IPSFirewallRule)[vs[1].(string)]
	}).(IPSFirewallRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IPSFirewallRuleInput)(nil)).Elem(), &IPSFirewallRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPSFirewallRuleArrayInput)(nil)).Elem(), IPSFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPSFirewallRuleMapInput)(nil)).Elem(), IPSFirewallRuleMap{})
	pulumi.RegisterOutputType(IPSFirewallRuleOutput{})
	pulumi.RegisterOutputType(IPSFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(IPSFirewallRuleMapOutput{})
}
