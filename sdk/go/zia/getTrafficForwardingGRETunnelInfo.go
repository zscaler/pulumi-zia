// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/traffic-forwarding-0#/orgProvisioning/ipGreTunnelInfo-get)
// * [API documentation](https://help.zscaler.com/zia/traffic-forwarding-0#/orgProvisioning/ipGreTunnelInfo-get)
//
// The **zia_traffic_forwarding_gre_tunnel_info** data source to get information about provisioned GRE tunnel information created in the Zscaler Internet Access portal.
//
// ## Example Usage
func GetTrafficForwardingGRETunnelInfo(ctx *pulumi.Context, args *GetTrafficForwardingGRETunnelInfoArgs, opts ...pulumi.InvokeOption) (*GetTrafficForwardingGRETunnelInfoResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTrafficForwardingGRETunnelInfoResult
	err := ctx.Invoke("zia:index/getTrafficForwardingGRETunnelInfo:getTrafficForwardingGRETunnelInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrafficForwardingGRETunnelInfo.
type GetTrafficForwardingGRETunnelInfoArgs struct {
	// Displays only ip addresses with GRE tunnel enabled
	//
	// > **NOTE** `ipAddress` is the public IP address (Static IP) associated with the GRE Tunnel
	GreEnabled *bool `pulumi:"greEnabled"`
	// Filter based on an IP address range.
	IpAddress *string `pulumi:"ipAddress"`
}

// A collection of values returned by getTrafficForwardingGRETunnelInfo.
type GetTrafficForwardingGRETunnelInfoResult struct {
	GreEnabled *bool `pulumi:"greEnabled"`
	// (String)
	GreRangePrimary string `pulumi:"greRangePrimary"`
	// (String)
	GreRangeSecondary string `pulumi:"greRangeSecondary"`
	// (String) The start of the internal IP address in /29 CIDR range
	GreTunnelIp string `pulumi:"greTunnelIp"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	IpAddress *string `pulumi:"ipAddress"`
	// (String)
	PrimaryGw string `pulumi:"primaryGw"`
	// (String)
	SecondaryGw string `pulumi:"secondaryGw"`
	// (Number)
	TunId int `pulumi:"tunId"`
}

func GetTrafficForwardingGRETunnelInfoOutput(ctx *pulumi.Context, args GetTrafficForwardingGRETunnelInfoOutputArgs, opts ...pulumi.InvokeOption) GetTrafficForwardingGRETunnelInfoResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTrafficForwardingGRETunnelInfoResultOutput, error) {
			args := v.(GetTrafficForwardingGRETunnelInfoArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zia:index/getTrafficForwardingGRETunnelInfo:getTrafficForwardingGRETunnelInfo", args, GetTrafficForwardingGRETunnelInfoResultOutput{}, options).(GetTrafficForwardingGRETunnelInfoResultOutput), nil
		}).(GetTrafficForwardingGRETunnelInfoResultOutput)
}

// A collection of arguments for invoking getTrafficForwardingGRETunnelInfo.
type GetTrafficForwardingGRETunnelInfoOutputArgs struct {
	// Displays only ip addresses with GRE tunnel enabled
	//
	// > **NOTE** `ipAddress` is the public IP address (Static IP) associated with the GRE Tunnel
	GreEnabled pulumi.BoolPtrInput `pulumi:"greEnabled"`
	// Filter based on an IP address range.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (GetTrafficForwardingGRETunnelInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficForwardingGRETunnelInfoArgs)(nil)).Elem()
}

// A collection of values returned by getTrafficForwardingGRETunnelInfo.
type GetTrafficForwardingGRETunnelInfoResultOutput struct{ *pulumi.OutputState }

func (GetTrafficForwardingGRETunnelInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficForwardingGRETunnelInfoResult)(nil)).Elem()
}

func (o GetTrafficForwardingGRETunnelInfoResultOutput) ToGetTrafficForwardingGRETunnelInfoResultOutput() GetTrafficForwardingGRETunnelInfoResultOutput {
	return o
}

func (o GetTrafficForwardingGRETunnelInfoResultOutput) ToGetTrafficForwardingGRETunnelInfoResultOutputWithContext(ctx context.Context) GetTrafficForwardingGRETunnelInfoResultOutput {
	return o
}

func (o GetTrafficForwardingGRETunnelInfoResultOutput) GreEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTrafficForwardingGRETunnelInfoResult) *bool { return v.GreEnabled }).(pulumi.BoolPtrOutput)
}

// (String)
func (o GetTrafficForwardingGRETunnelInfoResultOutput) GreRangePrimary() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingGRETunnelInfoResult) string { return v.GreRangePrimary }).(pulumi.StringOutput)
}

// (String)
func (o GetTrafficForwardingGRETunnelInfoResultOutput) GreRangeSecondary() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingGRETunnelInfoResult) string { return v.GreRangeSecondary }).(pulumi.StringOutput)
}

// (String) The start of the internal IP address in /29 CIDR range
func (o GetTrafficForwardingGRETunnelInfoResultOutput) GreTunnelIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingGRETunnelInfoResult) string { return v.GreTunnelIp }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTrafficForwardingGRETunnelInfoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingGRETunnelInfoResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTrafficForwardingGRETunnelInfoResultOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficForwardingGRETunnelInfoResult) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// (String)
func (o GetTrafficForwardingGRETunnelInfoResultOutput) PrimaryGw() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingGRETunnelInfoResult) string { return v.PrimaryGw }).(pulumi.StringOutput)
}

// (String)
func (o GetTrafficForwardingGRETunnelInfoResultOutput) SecondaryGw() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingGRETunnelInfoResult) string { return v.SecondaryGw }).(pulumi.StringOutput)
}

// (Number)
func (o GetTrafficForwardingGRETunnelInfoResultOutput) TunId() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficForwardingGRETunnelInfoResult) int { return v.TunId }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTrafficForwardingGRETunnelInfoResultOutput{})
}
