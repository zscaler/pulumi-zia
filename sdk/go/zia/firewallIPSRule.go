// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// The **zia_firewall_ips_rule** resource allows the creation and management of ZIA Cloud Firewall IPS rules in the Zscaler Internet Access.
//
// ## Example Usage
//
// Deprecated: zia.index/firewallipsrule.FirewallIPSRule has been deprecated in favor of zia.index/ipsfirewallrule.IPSFirewallRule
type FirewallIPSRule struct {
	pulumi.CustomResourceState

	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
	CapturePcap pulumi.BoolOutput `pulumi:"capturePcap"`
	// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
	DefaultRule pulumi.BoolPtrOutput `pulumi:"defaultRule"`
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments FirewallIPSRuleDepartmentsPtrOutput `pulumi:"departments"`
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	DestAddresses pulumi.StringArrayOutput `pulumi:"destAddresses"`
	// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	DestCountries pulumi.StringArrayOutput `pulumi:"destCountries"`
	// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories pulumi.StringArrayOutput `pulumi:"destIpCategories"`
	// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups FirewallIPSRuleDestIpGroupsPtrOutput `pulumi:"destIpGroups"`
	// list of destination ip groups
	DestIpv6Groups FirewallIPSRuleDestIpv6GroupsPtrOutput `pulumi:"destIpv6Groups"`
	// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	DeviceGroups FirewallIPSRuleDeviceGroupsPtrOutput `pulumi:"deviceGroups"`
	// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	Devices FirewallIPSRuleDevicesPtrOutput `pulumi:"devices"`
	// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
	EnableFullLogging pulumi.BoolPtrOutput `pulumi:"enableFullLogging"`
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups FirewallIPSRuleGroupsPtrOutput `pulumi:"groups"`
	// (List of Objects) Labels that are applicable to the rule.
	Labels FirewallIPSRuleLabelsPtrOutput `pulumi:"labels"`
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups FirewallIPSRuleLocationGroupsPtrOutput `pulumi:"locationGroups"`
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations FirewallIPSRuleLocationsPtrOutput `pulumi:"locations"`
	// The name of the IPS Control rule
	Name pulumi.StringOutput `pulumi:"name"`
	// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups FirewallIPSRuleNwServiceGroupsPtrOutput `pulumi:"nwServiceGroups"`
	// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices FirewallIPSRuleNwServicesPtrOutput `pulumi:"nwServices"`
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order pulumi.IntOutput `pulumi:"order"`
	// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
	Predefined pulumi.BoolPtrOutput `pulumi:"predefined"`
	// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
	Rank pulumi.IntPtrOutput `pulumi:"rank"`
	// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
	ResCategories pulumi.StringArrayOutput `pulumi:"resCategories"`
	RuleId        pulumi.IntOutput         `pulumi:"ruleId"`
	// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	SourceCountries pulumi.StringArrayOutput `pulumi:"sourceCountries"`
	// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
	SrcIpGroups FirewallIPSRuleSrcIpGroupsPtrOutput `pulumi:"srcIpGroups"`
	// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	SrcIps pulumi.StringArrayOutput `pulumi:"srcIps"`
	// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups FirewallIPSRuleSrcIpv6GroupsPtrOutput `pulumi:"srcIpv6Groups"`
	// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// (List of Objects) Advanced threat categories to which the rule applies
	ThreatCategories FirewallIPSRuleThreatCategoriesPtrOutput `pulumi:"threatCategories"`
	// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
	TimeWindows FirewallIPSRuleTimeWindowsPtrOutput `pulumi:"timeWindows"`
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users FirewallIPSRuleUsersPtrOutput `pulumi:"users"`
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments FirewallIPSRuleZpaAppSegmentArrayOutput `pulumi:"zpaAppSegments"`
}

// NewFirewallIPSRule registers a new resource with the given unique name, arguments, and options.
func NewFirewallIPSRule(ctx *pulumi.Context,
	name string, args *FirewallIPSRuleArgs, opts ...pulumi.ResourceOption) (*FirewallIPSRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Order == nil {
		return nil, errors.New("invalid value for required argument 'Order'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallIPSRule
	err := ctx.RegisterResource("zia:index/firewallIPSRule:FirewallIPSRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallIPSRule gets an existing FirewallIPSRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallIPSRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallIPSRuleState, opts ...pulumi.ResourceOption) (*FirewallIPSRule, error) {
	var resource FirewallIPSRule
	err := ctx.ReadResource("zia:index/firewallIPSRule:FirewallIPSRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallIPSRule resources.
type firewallIPSRuleState struct {
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
	Action *string `pulumi:"action"`
	// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
	CapturePcap *bool `pulumi:"capturePcap"`
	// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
	DefaultRule *bool `pulumi:"defaultRule"`
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments *FirewallIPSRuleDepartments `pulumi:"departments"`
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description *string `pulumi:"description"`
	// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	DestAddresses []string `pulumi:"destAddresses"`
	// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	DestCountries []string `pulumi:"destCountries"`
	// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories []string `pulumi:"destIpCategories"`
	// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups *FirewallIPSRuleDestIpGroups `pulumi:"destIpGroups"`
	// list of destination ip groups
	DestIpv6Groups *FirewallIPSRuleDestIpv6Groups `pulumi:"destIpv6Groups"`
	// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	DeviceGroups *FirewallIPSRuleDeviceGroups `pulumi:"deviceGroups"`
	// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	Devices *FirewallIPSRuleDevices `pulumi:"devices"`
	// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
	EnableFullLogging *bool `pulumi:"enableFullLogging"`
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups *FirewallIPSRuleGroups `pulumi:"groups"`
	// (List of Objects) Labels that are applicable to the rule.
	Labels *FirewallIPSRuleLabels `pulumi:"labels"`
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups *FirewallIPSRuleLocationGroups `pulumi:"locationGroups"`
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations *FirewallIPSRuleLocations `pulumi:"locations"`
	// The name of the IPS Control rule
	Name *string `pulumi:"name"`
	// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups *FirewallIPSRuleNwServiceGroups `pulumi:"nwServiceGroups"`
	// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices *FirewallIPSRuleNwServices `pulumi:"nwServices"`
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order *int `pulumi:"order"`
	// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
	Predefined *bool `pulumi:"predefined"`
	// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
	Rank *int `pulumi:"rank"`
	// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
	ResCategories []string `pulumi:"resCategories"`
	RuleId        *int     `pulumi:"ruleId"`
	// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	SourceCountries []string `pulumi:"sourceCountries"`
	// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
	SrcIpGroups *FirewallIPSRuleSrcIpGroups `pulumi:"srcIpGroups"`
	// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	SrcIps []string `pulumi:"srcIps"`
	// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups *FirewallIPSRuleSrcIpv6Groups `pulumi:"srcIpv6Groups"`
	// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
	State *string `pulumi:"state"`
	// (List of Objects) Advanced threat categories to which the rule applies
	ThreatCategories *FirewallIPSRuleThreatCategories `pulumi:"threatCategories"`
	// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
	TimeWindows *FirewallIPSRuleTimeWindows `pulumi:"timeWindows"`
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users *FirewallIPSRuleUsers `pulumi:"users"`
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments []FirewallIPSRuleZpaAppSegment `pulumi:"zpaAppSegments"`
}

type FirewallIPSRuleState struct {
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
	Action pulumi.StringPtrInput
	// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
	CapturePcap pulumi.BoolPtrInput
	// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
	DefaultRule pulumi.BoolPtrInput
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments FirewallIPSRuleDepartmentsPtrInput
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description pulumi.StringPtrInput
	// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	DestAddresses pulumi.StringArrayInput
	// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	DestCountries pulumi.StringArrayInput
	// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories pulumi.StringArrayInput
	// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups FirewallIPSRuleDestIpGroupsPtrInput
	// list of destination ip groups
	DestIpv6Groups FirewallIPSRuleDestIpv6GroupsPtrInput
	// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	DeviceGroups FirewallIPSRuleDeviceGroupsPtrInput
	// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	Devices FirewallIPSRuleDevicesPtrInput
	// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
	EnableFullLogging pulumi.BoolPtrInput
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups FirewallIPSRuleGroupsPtrInput
	// (List of Objects) Labels that are applicable to the rule.
	Labels FirewallIPSRuleLabelsPtrInput
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups FirewallIPSRuleLocationGroupsPtrInput
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations FirewallIPSRuleLocationsPtrInput
	// The name of the IPS Control rule
	Name pulumi.StringPtrInput
	// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups FirewallIPSRuleNwServiceGroupsPtrInput
	// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices FirewallIPSRuleNwServicesPtrInput
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order pulumi.IntPtrInput
	// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
	Predefined pulumi.BoolPtrInput
	// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
	Rank pulumi.IntPtrInput
	// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
	ResCategories pulumi.StringArrayInput
	RuleId        pulumi.IntPtrInput
	// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	SourceCountries pulumi.StringArrayInput
	// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
	SrcIpGroups FirewallIPSRuleSrcIpGroupsPtrInput
	// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	SrcIps pulumi.StringArrayInput
	// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups FirewallIPSRuleSrcIpv6GroupsPtrInput
	// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
	State pulumi.StringPtrInput
	// (List of Objects) Advanced threat categories to which the rule applies
	ThreatCategories FirewallIPSRuleThreatCategoriesPtrInput
	// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
	TimeWindows FirewallIPSRuleTimeWindowsPtrInput
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users FirewallIPSRuleUsersPtrInput
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments FirewallIPSRuleZpaAppSegmentArrayInput
}

func (FirewallIPSRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallIPSRuleState)(nil)).Elem()
}

type firewallIPSRuleArgs struct {
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
	Action *string `pulumi:"action"`
	// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
	CapturePcap *bool `pulumi:"capturePcap"`
	// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
	DefaultRule *bool `pulumi:"defaultRule"`
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments *FirewallIPSRuleDepartments `pulumi:"departments"`
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description *string `pulumi:"description"`
	// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	DestAddresses []string `pulumi:"destAddresses"`
	// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	DestCountries []string `pulumi:"destCountries"`
	// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories []string `pulumi:"destIpCategories"`
	// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups *FirewallIPSRuleDestIpGroups `pulumi:"destIpGroups"`
	// list of destination ip groups
	DestIpv6Groups *FirewallIPSRuleDestIpv6Groups `pulumi:"destIpv6Groups"`
	// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	DeviceGroups *FirewallIPSRuleDeviceGroups `pulumi:"deviceGroups"`
	// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	Devices *FirewallIPSRuleDevices `pulumi:"devices"`
	// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
	EnableFullLogging *bool `pulumi:"enableFullLogging"`
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups *FirewallIPSRuleGroups `pulumi:"groups"`
	// (List of Objects) Labels that are applicable to the rule.
	Labels *FirewallIPSRuleLabels `pulumi:"labels"`
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups *FirewallIPSRuleLocationGroups `pulumi:"locationGroups"`
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations *FirewallIPSRuleLocations `pulumi:"locations"`
	// The name of the IPS Control rule
	Name *string `pulumi:"name"`
	// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups *FirewallIPSRuleNwServiceGroups `pulumi:"nwServiceGroups"`
	// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices *FirewallIPSRuleNwServices `pulumi:"nwServices"`
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order int `pulumi:"order"`
	// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
	Predefined *bool `pulumi:"predefined"`
	// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
	Rank *int `pulumi:"rank"`
	// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
	ResCategories []string `pulumi:"resCategories"`
	// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	SourceCountries []string `pulumi:"sourceCountries"`
	// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
	SrcIpGroups *FirewallIPSRuleSrcIpGroups `pulumi:"srcIpGroups"`
	// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	SrcIps []string `pulumi:"srcIps"`
	// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups *FirewallIPSRuleSrcIpv6Groups `pulumi:"srcIpv6Groups"`
	// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
	State *string `pulumi:"state"`
	// (List of Objects) Advanced threat categories to which the rule applies
	ThreatCategories *FirewallIPSRuleThreatCategories `pulumi:"threatCategories"`
	// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
	TimeWindows *FirewallIPSRuleTimeWindows `pulumi:"timeWindows"`
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users *FirewallIPSRuleUsers `pulumi:"users"`
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments []FirewallIPSRuleZpaAppSegment `pulumi:"zpaAppSegments"`
}

// The set of arguments for constructing a FirewallIPSRule resource.
type FirewallIPSRuleArgs struct {
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
	Action pulumi.StringPtrInput
	// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
	CapturePcap pulumi.BoolPtrInput
	// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
	DefaultRule pulumi.BoolPtrInput
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments FirewallIPSRuleDepartmentsPtrInput
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description pulumi.StringPtrInput
	// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	DestAddresses pulumi.StringArrayInput
	// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	DestCountries pulumi.StringArrayInput
	// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories pulumi.StringArrayInput
	// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups FirewallIPSRuleDestIpGroupsPtrInput
	// list of destination ip groups
	DestIpv6Groups FirewallIPSRuleDestIpv6GroupsPtrInput
	// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	DeviceGroups FirewallIPSRuleDeviceGroupsPtrInput
	// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	Devices FirewallIPSRuleDevicesPtrInput
	// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
	EnableFullLogging pulumi.BoolPtrInput
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups FirewallIPSRuleGroupsPtrInput
	// (List of Objects) Labels that are applicable to the rule.
	Labels FirewallIPSRuleLabelsPtrInput
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups FirewallIPSRuleLocationGroupsPtrInput
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations FirewallIPSRuleLocationsPtrInput
	// The name of the IPS Control rule
	Name pulumi.StringPtrInput
	// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups FirewallIPSRuleNwServiceGroupsPtrInput
	// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices FirewallIPSRuleNwServicesPtrInput
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order pulumi.IntInput
	// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
	Predefined pulumi.BoolPtrInput
	// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
	Rank pulumi.IntPtrInput
	// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
	ResCategories pulumi.StringArrayInput
	// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	SourceCountries pulumi.StringArrayInput
	// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
	SrcIpGroups FirewallIPSRuleSrcIpGroupsPtrInput
	// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	SrcIps pulumi.StringArrayInput
	// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups FirewallIPSRuleSrcIpv6GroupsPtrInput
	// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
	State pulumi.StringPtrInput
	// (List of Objects) Advanced threat categories to which the rule applies
	ThreatCategories FirewallIPSRuleThreatCategoriesPtrInput
	// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
	TimeWindows FirewallIPSRuleTimeWindowsPtrInput
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users FirewallIPSRuleUsersPtrInput
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments FirewallIPSRuleZpaAppSegmentArrayInput
}

func (FirewallIPSRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallIPSRuleArgs)(nil)).Elem()
}

type FirewallIPSRuleInput interface {
	pulumi.Input

	ToFirewallIPSRuleOutput() FirewallIPSRuleOutput
	ToFirewallIPSRuleOutputWithContext(ctx context.Context) FirewallIPSRuleOutput
}

func (*FirewallIPSRule) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallIPSRule)(nil)).Elem()
}

func (i *FirewallIPSRule) ToFirewallIPSRuleOutput() FirewallIPSRuleOutput {
	return i.ToFirewallIPSRuleOutputWithContext(context.Background())
}

func (i *FirewallIPSRule) ToFirewallIPSRuleOutputWithContext(ctx context.Context) FirewallIPSRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIPSRuleOutput)
}

// FirewallIPSRuleArrayInput is an input type that accepts FirewallIPSRuleArray and FirewallIPSRuleArrayOutput values.
// You can construct a concrete instance of `FirewallIPSRuleArrayInput` via:
//
//	FirewallIPSRuleArray{ FirewallIPSRuleArgs{...} }
type FirewallIPSRuleArrayInput interface {
	pulumi.Input

	ToFirewallIPSRuleArrayOutput() FirewallIPSRuleArrayOutput
	ToFirewallIPSRuleArrayOutputWithContext(context.Context) FirewallIPSRuleArrayOutput
}

type FirewallIPSRuleArray []FirewallIPSRuleInput

func (FirewallIPSRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallIPSRule)(nil)).Elem()
}

func (i FirewallIPSRuleArray) ToFirewallIPSRuleArrayOutput() FirewallIPSRuleArrayOutput {
	return i.ToFirewallIPSRuleArrayOutputWithContext(context.Background())
}

func (i FirewallIPSRuleArray) ToFirewallIPSRuleArrayOutputWithContext(ctx context.Context) FirewallIPSRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIPSRuleArrayOutput)
}

// FirewallIPSRuleMapInput is an input type that accepts FirewallIPSRuleMap and FirewallIPSRuleMapOutput values.
// You can construct a concrete instance of `FirewallIPSRuleMapInput` via:
//
//	FirewallIPSRuleMap{ "key": FirewallIPSRuleArgs{...} }
type FirewallIPSRuleMapInput interface {
	pulumi.Input

	ToFirewallIPSRuleMapOutput() FirewallIPSRuleMapOutput
	ToFirewallIPSRuleMapOutputWithContext(context.Context) FirewallIPSRuleMapOutput
}

type FirewallIPSRuleMap map[string]FirewallIPSRuleInput

func (FirewallIPSRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallIPSRule)(nil)).Elem()
}

func (i FirewallIPSRuleMap) ToFirewallIPSRuleMapOutput() FirewallIPSRuleMapOutput {
	return i.ToFirewallIPSRuleMapOutputWithContext(context.Background())
}

func (i FirewallIPSRuleMap) ToFirewallIPSRuleMapOutputWithContext(ctx context.Context) FirewallIPSRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIPSRuleMapOutput)
}

type FirewallIPSRuleOutput struct{ *pulumi.OutputState }

func (FirewallIPSRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallIPSRule)(nil)).Elem()
}

func (o FirewallIPSRuleOutput) ToFirewallIPSRuleOutput() FirewallIPSRuleOutput {
	return o
}

func (o FirewallIPSRuleOutput) ToFirewallIPSRuleOutputWithContext(ctx context.Context) FirewallIPSRuleOutput {
	return o
}

// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
func (o FirewallIPSRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
func (o FirewallIPSRuleOutput) CapturePcap() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.BoolOutput { return v.CapturePcap }).(pulumi.BoolOutput)
}

// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
func (o FirewallIPSRuleOutput) DefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.BoolPtrOutput { return v.DefaultRule }).(pulumi.BoolPtrOutput)
}

// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
func (o FirewallIPSRuleOutput) Departments() FirewallIPSRuleDepartmentsPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleDepartmentsPtrOutput { return v.Departments }).(FirewallIPSRuleDepartmentsPtrOutput)
}

// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
func (o FirewallIPSRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
func (o FirewallIPSRuleOutput) DestAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.StringArrayOutput { return v.DestAddresses }).(pulumi.StringArrayOutput)
}

// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e “"US"“, “"CA"“
func (o FirewallIPSRuleOutput) DestCountries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.StringArrayOutput { return v.DestCountries }).(pulumi.StringArrayOutput)
}

// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
func (o FirewallIPSRuleOutput) DestIpCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.StringArrayOutput { return v.DestIpCategories }).(pulumi.StringArrayOutput)
}

// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
func (o FirewallIPSRuleOutput) DestIpGroups() FirewallIPSRuleDestIpGroupsPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleDestIpGroupsPtrOutput { return v.DestIpGroups }).(FirewallIPSRuleDestIpGroupsPtrOutput)
}

// list of destination ip groups
func (o FirewallIPSRuleOutput) DestIpv6Groups() FirewallIPSRuleDestIpv6GroupsPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleDestIpv6GroupsPtrOutput { return v.DestIpv6Groups }).(FirewallIPSRuleDestIpv6GroupsPtrOutput)
}

// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
func (o FirewallIPSRuleOutput) DeviceGroups() FirewallIPSRuleDeviceGroupsPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleDeviceGroupsPtrOutput { return v.DeviceGroups }).(FirewallIPSRuleDeviceGroupsPtrOutput)
}

// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
func (o FirewallIPSRuleOutput) Devices() FirewallIPSRuleDevicesPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleDevicesPtrOutput { return v.Devices }).(FirewallIPSRuleDevicesPtrOutput)
}

// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
func (o FirewallIPSRuleOutput) EnableFullLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.BoolPtrOutput { return v.EnableFullLogging }).(pulumi.BoolPtrOutput)
}

// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
func (o FirewallIPSRuleOutput) Groups() FirewallIPSRuleGroupsPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleGroupsPtrOutput { return v.Groups }).(FirewallIPSRuleGroupsPtrOutput)
}

// (List of Objects) Labels that are applicable to the rule.
func (o FirewallIPSRuleOutput) Labels() FirewallIPSRuleLabelsPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleLabelsPtrOutput { return v.Labels }).(FirewallIPSRuleLabelsPtrOutput)
}

// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
func (o FirewallIPSRuleOutput) LocationGroups() FirewallIPSRuleLocationGroupsPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleLocationGroupsPtrOutput { return v.LocationGroups }).(FirewallIPSRuleLocationGroupsPtrOutput)
}

// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
func (o FirewallIPSRuleOutput) Locations() FirewallIPSRuleLocationsPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleLocationsPtrOutput { return v.Locations }).(FirewallIPSRuleLocationsPtrOutput)
}

// The name of the IPS Control rule
func (o FirewallIPSRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
func (o FirewallIPSRuleOutput) NwServiceGroups() FirewallIPSRuleNwServiceGroupsPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleNwServiceGroupsPtrOutput { return v.NwServiceGroups }).(FirewallIPSRuleNwServiceGroupsPtrOutput)
}

// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
func (o FirewallIPSRuleOutput) NwServices() FirewallIPSRuleNwServicesPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleNwServicesPtrOutput { return v.NwServices }).(FirewallIPSRuleNwServicesPtrOutput)
}

// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
func (o FirewallIPSRuleOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.IntOutput { return v.Order }).(pulumi.IntOutput)
}

// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
func (o FirewallIPSRuleOutput) Predefined() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.BoolPtrOutput { return v.Predefined }).(pulumi.BoolPtrOutput)
}

// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
func (o FirewallIPSRuleOutput) Rank() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.IntPtrOutput { return v.Rank }).(pulumi.IntPtrOutput)
}

// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
func (o FirewallIPSRuleOutput) ResCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.StringArrayOutput { return v.ResCategories }).(pulumi.StringArrayOutput)
}

func (o FirewallIPSRuleOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e “"US"“, “"CA"“
func (o FirewallIPSRuleOutput) SourceCountries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.StringArrayOutput { return v.SourceCountries }).(pulumi.StringArrayOutput)
}

// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
func (o FirewallIPSRuleOutput) SrcIpGroups() FirewallIPSRuleSrcIpGroupsPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleSrcIpGroupsPtrOutput { return v.SrcIpGroups }).(FirewallIPSRuleSrcIpGroupsPtrOutput)
}

// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
func (o FirewallIPSRuleOutput) SrcIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.StringArrayOutput { return v.SrcIps }).(pulumi.StringArrayOutput)
}

// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
func (o FirewallIPSRuleOutput) SrcIpv6Groups() FirewallIPSRuleSrcIpv6GroupsPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleSrcIpv6GroupsPtrOutput { return v.SrcIpv6Groups }).(FirewallIPSRuleSrcIpv6GroupsPtrOutput)
}

// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
func (o FirewallIPSRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// (List of Objects) Advanced threat categories to which the rule applies
func (o FirewallIPSRuleOutput) ThreatCategories() FirewallIPSRuleThreatCategoriesPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleThreatCategoriesPtrOutput { return v.ThreatCategories }).(FirewallIPSRuleThreatCategoriesPtrOutput)
}

// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
func (o FirewallIPSRuleOutput) TimeWindows() FirewallIPSRuleTimeWindowsPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleTimeWindowsPtrOutput { return v.TimeWindows }).(FirewallIPSRuleTimeWindowsPtrOutput)
}

// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
func (o FirewallIPSRuleOutput) Users() FirewallIPSRuleUsersPtrOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleUsersPtrOutput { return v.Users }).(FirewallIPSRuleUsersPtrOutput)
}

// (List of Objects) The ZPA application segments to which the rule applies
func (o FirewallIPSRuleOutput) ZpaAppSegments() FirewallIPSRuleZpaAppSegmentArrayOutput {
	return o.ApplyT(func(v *FirewallIPSRule) FirewallIPSRuleZpaAppSegmentArrayOutput { return v.ZpaAppSegments }).(FirewallIPSRuleZpaAppSegmentArrayOutput)
}

type FirewallIPSRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallIPSRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallIPSRule)(nil)).Elem()
}

func (o FirewallIPSRuleArrayOutput) ToFirewallIPSRuleArrayOutput() FirewallIPSRuleArrayOutput {
	return o
}

func (o FirewallIPSRuleArrayOutput) ToFirewallIPSRuleArrayOutputWithContext(ctx context.Context) FirewallIPSRuleArrayOutput {
	return o
}

func (o FirewallIPSRuleArrayOutput) Index(i pulumi.IntInput) FirewallIPSRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallIPSRule {
		return vs[0].([]*FirewallIPSRule)[vs[1].(int)]
	}).(FirewallIPSRuleOutput)
}

type FirewallIPSRuleMapOutput struct{ *pulumi.OutputState }

func (FirewallIPSRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallIPSRule)(nil)).Elem()
}

func (o FirewallIPSRuleMapOutput) ToFirewallIPSRuleMapOutput() FirewallIPSRuleMapOutput {
	return o
}

func (o FirewallIPSRuleMapOutput) ToFirewallIPSRuleMapOutputWithContext(ctx context.Context) FirewallIPSRuleMapOutput {
	return o
}

func (o FirewallIPSRuleMapOutput) MapIndex(k pulumi.StringInput) FirewallIPSRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallIPSRule {
		return vs[0].(map[string]*FirewallIPSRule)[vs[1].(string)]
	}).(FirewallIPSRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIPSRuleInput)(nil)).Elem(), &FirewallIPSRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIPSRuleArrayInput)(nil)).Elem(), FirewallIPSRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIPSRuleMapInput)(nil)).Elem(), FirewallIPSRuleMap{})
	pulumi.RegisterOutputType(FirewallIPSRuleOutput{})
	pulumi.RegisterOutputType(FirewallIPSRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallIPSRuleMapOutput{})
}
