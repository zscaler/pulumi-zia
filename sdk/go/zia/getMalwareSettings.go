// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// Use the **zia_atp_malware_settings** data source to retrieves the malware protection policy configuration setting details. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)
//
// ## Example Usage
func GetMalwareSettings(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetMalwareSettingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMalwareSettingsResult
	err := ctx.Invoke("zia:index/getMalwareSettings:getMalwareSettings", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getMalwareSettings.
type GetMalwareSettingsResult struct {
	AdwareBlocked bool `pulumi:"adwareBlocked"`
	AdwareCapture bool `pulumi:"adwareCapture"`
	// The provider-assigned unique ID for this managed resource.
	Id                          string `pulumi:"id"`
	RansomwareBlocked           bool   `pulumi:"ransomwareBlocked"`
	RansomwareCapture           bool   `pulumi:"ransomwareCapture"`
	RemoteAccessToolBlocked     bool   `pulumi:"remoteAccessToolBlocked"`
	RemoteAccessToolCapture     bool   `pulumi:"remoteAccessToolCapture"`
	SpywareBlocked              bool   `pulumi:"spywareBlocked"`
	SpywareCapture              bool   `pulumi:"spywareCapture"`
	TrojanBlocked               bool   `pulumi:"trojanBlocked"`
	TrojanCapture               bool   `pulumi:"trojanCapture"`
	UnwantedApplicationsBlocked bool   `pulumi:"unwantedApplicationsBlocked"`
	UnwantedApplicationsCapture bool   `pulumi:"unwantedApplicationsCapture"`
	VirusBlocked                bool   `pulumi:"virusBlocked"`
	VirusCapture                bool   `pulumi:"virusCapture"`
	WormBlocked                 bool   `pulumi:"wormBlocked"`
	WormCapture                 bool   `pulumi:"wormCapture"`
}

func GetMalwareSettingsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetMalwareSettingsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetMalwareSettingsResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("zia:index/getMalwareSettings:getMalwareSettings", nil, GetMalwareSettingsResultOutput{}, options).(GetMalwareSettingsResultOutput), nil
	}).(GetMalwareSettingsResultOutput)
}

// A collection of values returned by getMalwareSettings.
type GetMalwareSettingsResultOutput struct{ *pulumi.OutputState }

func (GetMalwareSettingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMalwareSettingsResult)(nil)).Elem()
}

func (o GetMalwareSettingsResultOutput) ToGetMalwareSettingsResultOutput() GetMalwareSettingsResultOutput {
	return o
}

func (o GetMalwareSettingsResultOutput) ToGetMalwareSettingsResultOutputWithContext(ctx context.Context) GetMalwareSettingsResultOutput {
	return o
}

func (o GetMalwareSettingsResultOutput) AdwareBlocked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.AdwareBlocked }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) AdwareCapture() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.AdwareCapture }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMalwareSettingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMalwareSettingsResultOutput) RansomwareBlocked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.RansomwareBlocked }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) RansomwareCapture() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.RansomwareCapture }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) RemoteAccessToolBlocked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.RemoteAccessToolBlocked }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) RemoteAccessToolCapture() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.RemoteAccessToolCapture }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) SpywareBlocked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.SpywareBlocked }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) SpywareCapture() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.SpywareCapture }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) TrojanBlocked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.TrojanBlocked }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) TrojanCapture() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.TrojanCapture }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) UnwantedApplicationsBlocked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.UnwantedApplicationsBlocked }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) UnwantedApplicationsCapture() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.UnwantedApplicationsCapture }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) VirusBlocked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.VirusBlocked }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) VirusCapture() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.VirusCapture }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) WormBlocked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.WormBlocked }).(pulumi.BoolOutput)
}

func (o GetMalwareSettingsResultOutput) WormCapture() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwareSettingsResult) bool { return v.WormCapture }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMalwareSettingsResultOutput{})
}
