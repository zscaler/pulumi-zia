// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// Use the **zia_devices** data source to get information about a device in the Zscaler Internet Access cloud or via the API. This data source can then be associated with resources such as: URL Filtering Rules
//
// ## Example Usage
func GetDevices(ctx *pulumi.Context, args *GetDevicesArgs, opts ...pulumi.InvokeOption) (*GetDevicesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDevicesResult
	err := ctx.Invoke("zia:index/getDevices:getDevices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDevices.
type GetDevicesArgs struct {
	// (String) The device group type. i.e ``ZCC_OS``, ``NON_ZCC``, ``CBI``
	DeviceGroupType *string `pulumi:"deviceGroupType"`
	// (String) The device model.
	DeviceModel *string `pulumi:"deviceModel"`
	Hostname    *string `pulumi:"hostname"`
	// The unique identifer for the devices.
	Id *int `pulumi:"id"`
	// The name of the devices to be exported.
	Name *string `pulumi:"name"`
	// (String) The operating system (OS). ``ANY``, ``OTHER_OS``, ``IOS``, ``ANDROID_OS``, ``WINDOWS_OS``, ``MAC_OS``, ``LINUX``
	OsType *string `pulumi:"osType"`
	// (String) The operating system version.
	OsVersion *string `pulumi:"osVersion"`
	// (String) The device owner's user name.
	OwnerName *string `pulumi:"ownerName"`
}

// A collection of values returned by getDevices.
type GetDevicesResult struct {
	// (String) The device's description.
	Description string `pulumi:"description"`
	// (String) The device group type. i.e ``ZCC_OS``, ``NON_ZCC``, ``CBI``
	DeviceGroupType string `pulumi:"deviceGroupType"`
	// (String) The device model.
	DeviceModel string `pulumi:"deviceModel"`
	Hostname    string `pulumi:"hostname"`
	// (String) The unique identifer for the device group.
	Id int `pulumi:"id"`
	// (String) The device name.
	Name string `pulumi:"name"`
	// (String) The operating system (OS). ``ANY``, ``OTHER_OS``, ``IOS``, ``ANDROID_OS``, ``WINDOWS_OS``, ``MAC_OS``, ``LINUX``
	OsType string `pulumi:"osType"`
	// (String) The operating system version.
	OsVersion string `pulumi:"osVersion"`
	// (String) The device owner's user name.
	OwnerName string `pulumi:"ownerName"`
	// (int) The unique identifier of the device owner (i.e., user).
	OwnerUserId int `pulumi:"ownerUserId"`
}

func GetDevicesOutput(ctx *pulumi.Context, args GetDevicesOutputArgs, opts ...pulumi.InvokeOption) GetDevicesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDevicesResultOutput, error) {
			args := v.(GetDevicesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zia:index/getDevices:getDevices", args, GetDevicesResultOutput{}, options).(GetDevicesResultOutput), nil
		}).(GetDevicesResultOutput)
}

// A collection of arguments for invoking getDevices.
type GetDevicesOutputArgs struct {
	// (String) The device group type. i.e ``ZCC_OS``, ``NON_ZCC``, ``CBI``
	DeviceGroupType pulumi.StringPtrInput `pulumi:"deviceGroupType"`
	// (String) The device model.
	DeviceModel pulumi.StringPtrInput `pulumi:"deviceModel"`
	Hostname    pulumi.StringPtrInput `pulumi:"hostname"`
	// The unique identifer for the devices.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// The name of the devices to be exported.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (String) The operating system (OS). ``ANY``, ``OTHER_OS``, ``IOS``, ``ANDROID_OS``, ``WINDOWS_OS``, ``MAC_OS``, ``LINUX``
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// (String) The operating system version.
	OsVersion pulumi.StringPtrInput `pulumi:"osVersion"`
	// (String) The device owner's user name.
	OwnerName pulumi.StringPtrInput `pulumi:"ownerName"`
}

func (GetDevicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesArgs)(nil)).Elem()
}

// A collection of values returned by getDevices.
type GetDevicesResultOutput struct{ *pulumi.OutputState }

func (GetDevicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesResult)(nil)).Elem()
}

func (o GetDevicesResultOutput) ToGetDevicesResultOutput() GetDevicesResultOutput {
	return o
}

func (o GetDevicesResultOutput) ToGetDevicesResultOutputWithContext(ctx context.Context) GetDevicesResultOutput {
	return o
}

// (String) The device's description.
func (o GetDevicesResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesResult) string { return v.Description }).(pulumi.StringOutput)
}

// (String) The device group type. i.e “ZCC_OS“, “NON_ZCC“, “CBI“
func (o GetDevicesResultOutput) DeviceGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesResult) string { return v.DeviceGroupType }).(pulumi.StringOutput)
}

// (String) The device model.
func (o GetDevicesResultOutput) DeviceModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesResult) string { return v.DeviceModel }).(pulumi.StringOutput)
}

func (o GetDevicesResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// (String) The unique identifer for the device group.
func (o GetDevicesResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesResult) int { return v.Id }).(pulumi.IntOutput)
}

// (String) The device name.
func (o GetDevicesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesResult) string { return v.Name }).(pulumi.StringOutput)
}

// (String) The operating system (OS). “ANY“, “OTHER_OS“, “IOS“, “ANDROID_OS“, “WINDOWS_OS“, “MAC_OS“, “LINUX“
func (o GetDevicesResultOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesResult) string { return v.OsType }).(pulumi.StringOutput)
}

// (String) The operating system version.
func (o GetDevicesResultOutput) OsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesResult) string { return v.OsVersion }).(pulumi.StringOutput)
}

// (String) The device owner's user name.
func (o GetDevicesResultOutput) OwnerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesResult) string { return v.OwnerName }).(pulumi.StringOutput)
}

// (int) The unique identifier of the device owner (i.e., user).
func (o GetDevicesResultOutput) OwnerUserId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesResult) int { return v.OwnerUserId }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDevicesResultOutput{})
}
