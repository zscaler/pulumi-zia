// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/configuring-data-rest-scanning-dlp-policy)
// * [API documentation](https://help.zscaler.com/zia/saas-security-api#/casbDlpRules-post)
//
// The **zia_casb_dlp_rules** resource Adds a new SaaS Security Data at Rest Scanning DLP rule in the Zscaler Internet Access.
//
// ## Example Usage
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// **zia_casb_dlp_rules** can be imported by using `<RULE_TYPE:RULE_ID>` or `<RULE_TYPE:RULE_NAME>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zia:index/casbDlpRule:CasbDlpRule this <rule_type:rule_id>
// ```
//
// ```sh
// $ pulumi import zia:index/casbDlpRule:CasbDlpRule this <"rule_type:rule_name">
// ```
type CasbDlpRule struct {
	pulumi.CustomResourceState

	// The configured action for the policy rule
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// Notification template used for DLP email alerts sent to the auditor
	AuditorNotifications CasbDlpRuleAuditorNotificationArrayOutput `pulumi:"auditorNotifications"`
	// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
	// field
	BucketOwner pulumi.StringPtrOutput `pulumi:"bucketOwner"`
	// The buckets for the Zscaler service to inspect for sensitive data
	Buckets CasbDlpRuleBucketsPtrOutput `pulumi:"buckets"`
	// Name-ID of the email label associated with the rule
	CasbEmailLabels CasbDlpRuleCasbEmailLabelArrayOutput `pulumi:"casbEmailLabels"`
	// Name-ID of the quarantine tombstone template associated with the rule
	CasbTombstoneTemplates CasbDlpRuleCasbTombstoneTemplateArrayOutput `pulumi:"casbTombstoneTemplates"`
	// Name-ID pairs of the cloud application tenants for which the rule is applied
	CloudAppTenants CasbDlpRuleCloudAppTenantsPtrOutput `pulumi:"cloudAppTenants"`
	// Collaboration scope for the rule
	CollaborationScopes pulumi.StringArrayOutput `pulumi:"collaborationScopes"`
	// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
	Components pulumi.StringArrayOutput `pulumi:"components"`
	// The location for the content that the Zscaler service inspects for sensitive data
	ContentLocation pulumi.StringPtrOutput `pulumi:"contentLocation"`
	// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
	CriteriaDomainProfiles CasbDlpRuleCriteriaDomainProfilesPtrOutput `pulumi:"criteriaDomainProfiles"`
	// Name-ID pairs of departments for which rule must be applied
	Departments CasbDlpRuleDepartmentsPtrOutput `pulumi:"departments"`
	// An admin editable text-based description of the rule
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The list of DLP engines to which the DLP policy rule must be applied
	DlpEngines CasbDlpRuleDlpEnginesPtrOutput `pulumi:"dlpEngines"`
	// The domain for the external organization sharing the channel
	Domains pulumi.StringArrayOutput `pulumi:"domains"`
	// Name-ID pairs of recipient profiles for which the rule is applied
	EmailRecipientProfiles CasbDlpRuleEmailRecipientProfilesPtrOutput `pulumi:"emailRecipientProfiles"`
	// Name-ID pairs of entity groups that are part of the rule criteria
	EntityGroups CasbDlpRuleEntityGroupsPtrOutput `pulumi:"entityGroups"`
	// Name-ID pairs of domain profiles excluded in the criteria for the rule
	ExcludedDomainProfiles CasbDlpRuleExcludedDomainProfilesPtrOutput `pulumi:"excludedDomainProfiles"`
	// Email address of the external auditor to whom the DLP email alerts are sent
	ExternalAuditorEmail pulumi.StringPtrOutput `pulumi:"externalAuditorEmail"`
	// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes pulumi.StringArrayOutput `pulumi:"fileTypes"`
	// Name-ID pairs of groups for which the rule is applied
	Groups CasbDlpRuleGroupsPtrOutput `pulumi:"groups"`
	// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeCriteriaDomainProfile pulumi.BoolPtrOutput `pulumi:"includeCriteriaDomainProfile"`
	// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeEmailRecipientProfile pulumi.BoolPtrOutput `pulumi:"includeEmailRecipientProfile"`
	// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
	IncludeEntityGroups pulumi.BoolOutput `pulumi:"includeEntityGroups"`
	// Name-ID pairs of domain profiles included in the criteria for the rule
	IncludedDomainProfiles CasbDlpRuleIncludedDomainProfilesPtrOutput `pulumi:"includedDomainProfiles"`
	// Name-ID pairs of rule labels associated with the rule
	Labels CasbDlpRuleLabelsPtrOutput `pulumi:"labels"`
	// Rule name
	Name pulumi.StringOutput `pulumi:"name"`
	// List of object types for which the rule is applied
	ObjectTypes CasbDlpRuleObjectTypesPtrOutput `pulumi:"objectTypes"`
	// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
	Order pulumi.IntPtrOutput `pulumi:"order"`
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation pulumi.StringPtrOutput `pulumi:"quarantineLocation"`
	// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
	Rank pulumi.IntPtrOutput `pulumi:"rank"`
	// Specifies if the email recipient is internal or external
	Recipient pulumi.StringPtrOutput `pulumi:"recipient"`
	// Name-ID of the redaction profile in the criteria
	RedactionProfiles CasbDlpRuleRedactionProfileArrayOutput `pulumi:"redactionProfiles"`
	// System-generated identifier for the SaaS Security Data at Rest Scanning DLP rule
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// The severity level of the incidents that match the policy rule
	Severity pulumi.StringPtrOutput `pulumi:"severity"`
	// Administrative state of the rule
	State pulumi.StringPtrOutput `pulumi:"state"`
	// Tag applied to the rule
	Tags CasbDlpRuleTagArrayOutput `pulumi:"tags"`
	// The type of SaaS Security Data at Rest Scanning DLP rule
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// Name-ID pairs of users for which rule must be applied
	Users CasbDlpRuleUsersPtrOutput `pulumi:"users"`
	// Specifies whether to delete an old version of the watermarked file
	WatermarkDeleteOldVersion pulumi.BoolPtrOutput `pulumi:"watermarkDeleteOldVersion"`
	// Watermark profile applied to the rule
	WatermarkProfiles CasbDlpRuleWatermarkProfileArrayOutput `pulumi:"watermarkProfiles"`
	// If true, Content Matching is set to None
	WithoutContentInspection pulumi.BoolPtrOutput `pulumi:"withoutContentInspection"`
	// The Zscaler Incident Receiver details
	ZscalerIncidentReceivers CasbDlpRuleZscalerIncidentReceiverArrayOutput `pulumi:"zscalerIncidentReceivers"`
}

// NewCasbDlpRule registers a new resource with the given unique name, arguments, and options.
func NewCasbDlpRule(ctx *pulumi.Context,
	name string, args *CasbDlpRuleArgs, opts ...pulumi.ResourceOption) (*CasbDlpRule, error) {
	if args == nil {
		args = &CasbDlpRuleArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("zia:index/casbDlpRules:CasbDlpRules"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CasbDlpRule
	err := ctx.RegisterResource("zia:index/casbDlpRule:CasbDlpRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCasbDlpRule gets an existing CasbDlpRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCasbDlpRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CasbDlpRuleState, opts ...pulumi.ResourceOption) (*CasbDlpRule, error) {
	var resource CasbDlpRule
	err := ctx.ReadResource("zia:index/casbDlpRule:CasbDlpRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CasbDlpRule resources.
type casbDlpRuleState struct {
	// The configured action for the policy rule
	Action *string `pulumi:"action"`
	// Notification template used for DLP email alerts sent to the auditor
	AuditorNotifications []CasbDlpRuleAuditorNotification `pulumi:"auditorNotifications"`
	// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
	// field
	BucketOwner *string `pulumi:"bucketOwner"`
	// The buckets for the Zscaler service to inspect for sensitive data
	Buckets *CasbDlpRuleBuckets `pulumi:"buckets"`
	// Name-ID of the email label associated with the rule
	CasbEmailLabels []CasbDlpRuleCasbEmailLabel `pulumi:"casbEmailLabels"`
	// Name-ID of the quarantine tombstone template associated with the rule
	CasbTombstoneTemplates []CasbDlpRuleCasbTombstoneTemplate `pulumi:"casbTombstoneTemplates"`
	// Name-ID pairs of the cloud application tenants for which the rule is applied
	CloudAppTenants *CasbDlpRuleCloudAppTenants `pulumi:"cloudAppTenants"`
	// Collaboration scope for the rule
	CollaborationScopes []string `pulumi:"collaborationScopes"`
	// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
	Components []string `pulumi:"components"`
	// The location for the content that the Zscaler service inspects for sensitive data
	ContentLocation *string `pulumi:"contentLocation"`
	// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
	CriteriaDomainProfiles *CasbDlpRuleCriteriaDomainProfiles `pulumi:"criteriaDomainProfiles"`
	// Name-ID pairs of departments for which rule must be applied
	Departments *CasbDlpRuleDepartments `pulumi:"departments"`
	// An admin editable text-based description of the rule
	Description *string `pulumi:"description"`
	// The list of DLP engines to which the DLP policy rule must be applied
	DlpEngines *CasbDlpRuleDlpEngines `pulumi:"dlpEngines"`
	// The domain for the external organization sharing the channel
	Domains []string `pulumi:"domains"`
	// Name-ID pairs of recipient profiles for which the rule is applied
	EmailRecipientProfiles *CasbDlpRuleEmailRecipientProfiles `pulumi:"emailRecipientProfiles"`
	// Name-ID pairs of entity groups that are part of the rule criteria
	EntityGroups *CasbDlpRuleEntityGroups `pulumi:"entityGroups"`
	// Name-ID pairs of domain profiles excluded in the criteria for the rule
	ExcludedDomainProfiles *CasbDlpRuleExcludedDomainProfiles `pulumi:"excludedDomainProfiles"`
	// Email address of the external auditor to whom the DLP email alerts are sent
	ExternalAuditorEmail *string `pulumi:"externalAuditorEmail"`
	// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes []string `pulumi:"fileTypes"`
	// Name-ID pairs of groups for which the rule is applied
	Groups *CasbDlpRuleGroups `pulumi:"groups"`
	// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeCriteriaDomainProfile *bool `pulumi:"includeCriteriaDomainProfile"`
	// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeEmailRecipientProfile *bool `pulumi:"includeEmailRecipientProfile"`
	// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
	IncludeEntityGroups *bool `pulumi:"includeEntityGroups"`
	// Name-ID pairs of domain profiles included in the criteria for the rule
	IncludedDomainProfiles *CasbDlpRuleIncludedDomainProfiles `pulumi:"includedDomainProfiles"`
	// Name-ID pairs of rule labels associated with the rule
	Labels *CasbDlpRuleLabels `pulumi:"labels"`
	// Rule name
	Name *string `pulumi:"name"`
	// List of object types for which the rule is applied
	ObjectTypes *CasbDlpRuleObjectTypes `pulumi:"objectTypes"`
	// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
	Order *int `pulumi:"order"`
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation *string `pulumi:"quarantineLocation"`
	// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
	Rank *int `pulumi:"rank"`
	// Specifies if the email recipient is internal or external
	Recipient *string `pulumi:"recipient"`
	// Name-ID of the redaction profile in the criteria
	RedactionProfiles []CasbDlpRuleRedactionProfile `pulumi:"redactionProfiles"`
	// System-generated identifier for the SaaS Security Data at Rest Scanning DLP rule
	RuleId *int `pulumi:"ruleId"`
	// The severity level of the incidents that match the policy rule
	Severity *string `pulumi:"severity"`
	// Administrative state of the rule
	State *string `pulumi:"state"`
	// Tag applied to the rule
	Tags []CasbDlpRuleTag `pulumi:"tags"`
	// The type of SaaS Security Data at Rest Scanning DLP rule
	Type *string `pulumi:"type"`
	// Name-ID pairs of users for which rule must be applied
	Users *CasbDlpRuleUsers `pulumi:"users"`
	// Specifies whether to delete an old version of the watermarked file
	WatermarkDeleteOldVersion *bool `pulumi:"watermarkDeleteOldVersion"`
	// Watermark profile applied to the rule
	WatermarkProfiles []CasbDlpRuleWatermarkProfile `pulumi:"watermarkProfiles"`
	// If true, Content Matching is set to None
	WithoutContentInspection *bool `pulumi:"withoutContentInspection"`
	// The Zscaler Incident Receiver details
	ZscalerIncidentReceivers []CasbDlpRuleZscalerIncidentReceiver `pulumi:"zscalerIncidentReceivers"`
}

type CasbDlpRuleState struct {
	// The configured action for the policy rule
	Action pulumi.StringPtrInput
	// Notification template used for DLP email alerts sent to the auditor
	AuditorNotifications CasbDlpRuleAuditorNotificationArrayInput
	// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
	// field
	BucketOwner pulumi.StringPtrInput
	// The buckets for the Zscaler service to inspect for sensitive data
	Buckets CasbDlpRuleBucketsPtrInput
	// Name-ID of the email label associated with the rule
	CasbEmailLabels CasbDlpRuleCasbEmailLabelArrayInput
	// Name-ID of the quarantine tombstone template associated with the rule
	CasbTombstoneTemplates CasbDlpRuleCasbTombstoneTemplateArrayInput
	// Name-ID pairs of the cloud application tenants for which the rule is applied
	CloudAppTenants CasbDlpRuleCloudAppTenantsPtrInput
	// Collaboration scope for the rule
	CollaborationScopes pulumi.StringArrayInput
	// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
	Components pulumi.StringArrayInput
	// The location for the content that the Zscaler service inspects for sensitive data
	ContentLocation pulumi.StringPtrInput
	// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
	CriteriaDomainProfiles CasbDlpRuleCriteriaDomainProfilesPtrInput
	// Name-ID pairs of departments for which rule must be applied
	Departments CasbDlpRuleDepartmentsPtrInput
	// An admin editable text-based description of the rule
	Description pulumi.StringPtrInput
	// The list of DLP engines to which the DLP policy rule must be applied
	DlpEngines CasbDlpRuleDlpEnginesPtrInput
	// The domain for the external organization sharing the channel
	Domains pulumi.StringArrayInput
	// Name-ID pairs of recipient profiles for which the rule is applied
	EmailRecipientProfiles CasbDlpRuleEmailRecipientProfilesPtrInput
	// Name-ID pairs of entity groups that are part of the rule criteria
	EntityGroups CasbDlpRuleEntityGroupsPtrInput
	// Name-ID pairs of domain profiles excluded in the criteria for the rule
	ExcludedDomainProfiles CasbDlpRuleExcludedDomainProfilesPtrInput
	// Email address of the external auditor to whom the DLP email alerts are sent
	ExternalAuditorEmail pulumi.StringPtrInput
	// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes pulumi.StringArrayInput
	// Name-ID pairs of groups for which the rule is applied
	Groups CasbDlpRuleGroupsPtrInput
	// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeCriteriaDomainProfile pulumi.BoolPtrInput
	// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeEmailRecipientProfile pulumi.BoolPtrInput
	// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
	IncludeEntityGroups pulumi.BoolPtrInput
	// Name-ID pairs of domain profiles included in the criteria for the rule
	IncludedDomainProfiles CasbDlpRuleIncludedDomainProfilesPtrInput
	// Name-ID pairs of rule labels associated with the rule
	Labels CasbDlpRuleLabelsPtrInput
	// Rule name
	Name pulumi.StringPtrInput
	// List of object types for which the rule is applied
	ObjectTypes CasbDlpRuleObjectTypesPtrInput
	// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
	Order pulumi.IntPtrInput
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation pulumi.StringPtrInput
	// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
	Rank pulumi.IntPtrInput
	// Specifies if the email recipient is internal or external
	Recipient pulumi.StringPtrInput
	// Name-ID of the redaction profile in the criteria
	RedactionProfiles CasbDlpRuleRedactionProfileArrayInput
	// System-generated identifier for the SaaS Security Data at Rest Scanning DLP rule
	RuleId pulumi.IntPtrInput
	// The severity level of the incidents that match the policy rule
	Severity pulumi.StringPtrInput
	// Administrative state of the rule
	State pulumi.StringPtrInput
	// Tag applied to the rule
	Tags CasbDlpRuleTagArrayInput
	// The type of SaaS Security Data at Rest Scanning DLP rule
	Type pulumi.StringPtrInput
	// Name-ID pairs of users for which rule must be applied
	Users CasbDlpRuleUsersPtrInput
	// Specifies whether to delete an old version of the watermarked file
	WatermarkDeleteOldVersion pulumi.BoolPtrInput
	// Watermark profile applied to the rule
	WatermarkProfiles CasbDlpRuleWatermarkProfileArrayInput
	// If true, Content Matching is set to None
	WithoutContentInspection pulumi.BoolPtrInput
	// The Zscaler Incident Receiver details
	ZscalerIncidentReceivers CasbDlpRuleZscalerIncidentReceiverArrayInput
}

func (CasbDlpRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*casbDlpRuleState)(nil)).Elem()
}

type casbDlpRuleArgs struct {
	// The configured action for the policy rule
	Action *string `pulumi:"action"`
	// Notification template used for DLP email alerts sent to the auditor
	AuditorNotifications []CasbDlpRuleAuditorNotification `pulumi:"auditorNotifications"`
	// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
	// field
	BucketOwner *string `pulumi:"bucketOwner"`
	// The buckets for the Zscaler service to inspect for sensitive data
	Buckets *CasbDlpRuleBuckets `pulumi:"buckets"`
	// Name-ID of the email label associated with the rule
	CasbEmailLabels []CasbDlpRuleCasbEmailLabel `pulumi:"casbEmailLabels"`
	// Name-ID of the quarantine tombstone template associated with the rule
	CasbTombstoneTemplates []CasbDlpRuleCasbTombstoneTemplate `pulumi:"casbTombstoneTemplates"`
	// Name-ID pairs of the cloud application tenants for which the rule is applied
	CloudAppTenants *CasbDlpRuleCloudAppTenants `pulumi:"cloudAppTenants"`
	// Collaboration scope for the rule
	CollaborationScopes []string `pulumi:"collaborationScopes"`
	// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
	Components []string `pulumi:"components"`
	// The location for the content that the Zscaler service inspects for sensitive data
	ContentLocation *string `pulumi:"contentLocation"`
	// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
	CriteriaDomainProfiles *CasbDlpRuleCriteriaDomainProfiles `pulumi:"criteriaDomainProfiles"`
	// Name-ID pairs of departments for which rule must be applied
	Departments *CasbDlpRuleDepartments `pulumi:"departments"`
	// An admin editable text-based description of the rule
	Description *string `pulumi:"description"`
	// The list of DLP engines to which the DLP policy rule must be applied
	DlpEngines *CasbDlpRuleDlpEngines `pulumi:"dlpEngines"`
	// The domain for the external organization sharing the channel
	Domains []string `pulumi:"domains"`
	// Name-ID pairs of recipient profiles for which the rule is applied
	EmailRecipientProfiles *CasbDlpRuleEmailRecipientProfiles `pulumi:"emailRecipientProfiles"`
	// Name-ID pairs of entity groups that are part of the rule criteria
	EntityGroups *CasbDlpRuleEntityGroups `pulumi:"entityGroups"`
	// Name-ID pairs of domain profiles excluded in the criteria for the rule
	ExcludedDomainProfiles *CasbDlpRuleExcludedDomainProfiles `pulumi:"excludedDomainProfiles"`
	// Email address of the external auditor to whom the DLP email alerts are sent
	ExternalAuditorEmail *string `pulumi:"externalAuditorEmail"`
	// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes []string `pulumi:"fileTypes"`
	// Name-ID pairs of groups for which the rule is applied
	Groups *CasbDlpRuleGroups `pulumi:"groups"`
	// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeCriteriaDomainProfile *bool `pulumi:"includeCriteriaDomainProfile"`
	// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeEmailRecipientProfile *bool `pulumi:"includeEmailRecipientProfile"`
	// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
	IncludeEntityGroups *bool `pulumi:"includeEntityGroups"`
	// Name-ID pairs of domain profiles included in the criteria for the rule
	IncludedDomainProfiles *CasbDlpRuleIncludedDomainProfiles `pulumi:"includedDomainProfiles"`
	// Name-ID pairs of rule labels associated with the rule
	Labels *CasbDlpRuleLabels `pulumi:"labels"`
	// Rule name
	Name *string `pulumi:"name"`
	// List of object types for which the rule is applied
	ObjectTypes *CasbDlpRuleObjectTypes `pulumi:"objectTypes"`
	// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
	Order *int `pulumi:"order"`
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation *string `pulumi:"quarantineLocation"`
	// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
	Rank *int `pulumi:"rank"`
	// Specifies if the email recipient is internal or external
	Recipient *string `pulumi:"recipient"`
	// Name-ID of the redaction profile in the criteria
	RedactionProfiles []CasbDlpRuleRedactionProfile `pulumi:"redactionProfiles"`
	// The severity level of the incidents that match the policy rule
	Severity *string `pulumi:"severity"`
	// Administrative state of the rule
	State *string `pulumi:"state"`
	// Tag applied to the rule
	Tags []CasbDlpRuleTag `pulumi:"tags"`
	// The type of SaaS Security Data at Rest Scanning DLP rule
	Type *string `pulumi:"type"`
	// Name-ID pairs of users for which rule must be applied
	Users *CasbDlpRuleUsers `pulumi:"users"`
	// Specifies whether to delete an old version of the watermarked file
	WatermarkDeleteOldVersion *bool `pulumi:"watermarkDeleteOldVersion"`
	// Watermark profile applied to the rule
	WatermarkProfiles []CasbDlpRuleWatermarkProfile `pulumi:"watermarkProfiles"`
	// If true, Content Matching is set to None
	WithoutContentInspection *bool `pulumi:"withoutContentInspection"`
	// The Zscaler Incident Receiver details
	ZscalerIncidentReceivers []CasbDlpRuleZscalerIncidentReceiver `pulumi:"zscalerIncidentReceivers"`
}

// The set of arguments for constructing a CasbDlpRule resource.
type CasbDlpRuleArgs struct {
	// The configured action for the policy rule
	Action pulumi.StringPtrInput
	// Notification template used for DLP email alerts sent to the auditor
	AuditorNotifications CasbDlpRuleAuditorNotificationArrayInput
	// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
	// field
	BucketOwner pulumi.StringPtrInput
	// The buckets for the Zscaler service to inspect for sensitive data
	Buckets CasbDlpRuleBucketsPtrInput
	// Name-ID of the email label associated with the rule
	CasbEmailLabels CasbDlpRuleCasbEmailLabelArrayInput
	// Name-ID of the quarantine tombstone template associated with the rule
	CasbTombstoneTemplates CasbDlpRuleCasbTombstoneTemplateArrayInput
	// Name-ID pairs of the cloud application tenants for which the rule is applied
	CloudAppTenants CasbDlpRuleCloudAppTenantsPtrInput
	// Collaboration scope for the rule
	CollaborationScopes pulumi.StringArrayInput
	// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
	Components pulumi.StringArrayInput
	// The location for the content that the Zscaler service inspects for sensitive data
	ContentLocation pulumi.StringPtrInput
	// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
	CriteriaDomainProfiles CasbDlpRuleCriteriaDomainProfilesPtrInput
	// Name-ID pairs of departments for which rule must be applied
	Departments CasbDlpRuleDepartmentsPtrInput
	// An admin editable text-based description of the rule
	Description pulumi.StringPtrInput
	// The list of DLP engines to which the DLP policy rule must be applied
	DlpEngines CasbDlpRuleDlpEnginesPtrInput
	// The domain for the external organization sharing the channel
	Domains pulumi.StringArrayInput
	// Name-ID pairs of recipient profiles for which the rule is applied
	EmailRecipientProfiles CasbDlpRuleEmailRecipientProfilesPtrInput
	// Name-ID pairs of entity groups that are part of the rule criteria
	EntityGroups CasbDlpRuleEntityGroupsPtrInput
	// Name-ID pairs of domain profiles excluded in the criteria for the rule
	ExcludedDomainProfiles CasbDlpRuleExcludedDomainProfilesPtrInput
	// Email address of the external auditor to whom the DLP email alerts are sent
	ExternalAuditorEmail pulumi.StringPtrInput
	// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes pulumi.StringArrayInput
	// Name-ID pairs of groups for which the rule is applied
	Groups CasbDlpRuleGroupsPtrInput
	// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeCriteriaDomainProfile pulumi.BoolPtrInput
	// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeEmailRecipientProfile pulumi.BoolPtrInput
	// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
	IncludeEntityGroups pulumi.BoolPtrInput
	// Name-ID pairs of domain profiles included in the criteria for the rule
	IncludedDomainProfiles CasbDlpRuleIncludedDomainProfilesPtrInput
	// Name-ID pairs of rule labels associated with the rule
	Labels CasbDlpRuleLabelsPtrInput
	// Rule name
	Name pulumi.StringPtrInput
	// List of object types for which the rule is applied
	ObjectTypes CasbDlpRuleObjectTypesPtrInput
	// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
	Order pulumi.IntPtrInput
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation pulumi.StringPtrInput
	// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
	Rank pulumi.IntPtrInput
	// Specifies if the email recipient is internal or external
	Recipient pulumi.StringPtrInput
	// Name-ID of the redaction profile in the criteria
	RedactionProfiles CasbDlpRuleRedactionProfileArrayInput
	// The severity level of the incidents that match the policy rule
	Severity pulumi.StringPtrInput
	// Administrative state of the rule
	State pulumi.StringPtrInput
	// Tag applied to the rule
	Tags CasbDlpRuleTagArrayInput
	// The type of SaaS Security Data at Rest Scanning DLP rule
	Type pulumi.StringPtrInput
	// Name-ID pairs of users for which rule must be applied
	Users CasbDlpRuleUsersPtrInput
	// Specifies whether to delete an old version of the watermarked file
	WatermarkDeleteOldVersion pulumi.BoolPtrInput
	// Watermark profile applied to the rule
	WatermarkProfiles CasbDlpRuleWatermarkProfileArrayInput
	// If true, Content Matching is set to None
	WithoutContentInspection pulumi.BoolPtrInput
	// The Zscaler Incident Receiver details
	ZscalerIncidentReceivers CasbDlpRuleZscalerIncidentReceiverArrayInput
}

func (CasbDlpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*casbDlpRuleArgs)(nil)).Elem()
}

type CasbDlpRuleInput interface {
	pulumi.Input

	ToCasbDlpRuleOutput() CasbDlpRuleOutput
	ToCasbDlpRuleOutputWithContext(ctx context.Context) CasbDlpRuleOutput
}

func (*CasbDlpRule) ElementType() reflect.Type {
	return reflect.TypeOf((**CasbDlpRule)(nil)).Elem()
}

func (i *CasbDlpRule) ToCasbDlpRuleOutput() CasbDlpRuleOutput {
	return i.ToCasbDlpRuleOutputWithContext(context.Background())
}

func (i *CasbDlpRule) ToCasbDlpRuleOutputWithContext(ctx context.Context) CasbDlpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbDlpRuleOutput)
}

// CasbDlpRuleArrayInput is an input type that accepts CasbDlpRuleArray and CasbDlpRuleArrayOutput values.
// You can construct a concrete instance of `CasbDlpRuleArrayInput` via:
//
//	CasbDlpRuleArray{ CasbDlpRuleArgs{...} }
type CasbDlpRuleArrayInput interface {
	pulumi.Input

	ToCasbDlpRuleArrayOutput() CasbDlpRuleArrayOutput
	ToCasbDlpRuleArrayOutputWithContext(context.Context) CasbDlpRuleArrayOutput
}

type CasbDlpRuleArray []CasbDlpRuleInput

func (CasbDlpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CasbDlpRule)(nil)).Elem()
}

func (i CasbDlpRuleArray) ToCasbDlpRuleArrayOutput() CasbDlpRuleArrayOutput {
	return i.ToCasbDlpRuleArrayOutputWithContext(context.Background())
}

func (i CasbDlpRuleArray) ToCasbDlpRuleArrayOutputWithContext(ctx context.Context) CasbDlpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbDlpRuleArrayOutput)
}

// CasbDlpRuleMapInput is an input type that accepts CasbDlpRuleMap and CasbDlpRuleMapOutput values.
// You can construct a concrete instance of `CasbDlpRuleMapInput` via:
//
//	CasbDlpRuleMap{ "key": CasbDlpRuleArgs{...} }
type CasbDlpRuleMapInput interface {
	pulumi.Input

	ToCasbDlpRuleMapOutput() CasbDlpRuleMapOutput
	ToCasbDlpRuleMapOutputWithContext(context.Context) CasbDlpRuleMapOutput
}

type CasbDlpRuleMap map[string]CasbDlpRuleInput

func (CasbDlpRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CasbDlpRule)(nil)).Elem()
}

func (i CasbDlpRuleMap) ToCasbDlpRuleMapOutput() CasbDlpRuleMapOutput {
	return i.ToCasbDlpRuleMapOutputWithContext(context.Background())
}

func (i CasbDlpRuleMap) ToCasbDlpRuleMapOutputWithContext(ctx context.Context) CasbDlpRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbDlpRuleMapOutput)
}

type CasbDlpRuleOutput struct{ *pulumi.OutputState }

func (CasbDlpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CasbDlpRule)(nil)).Elem()
}

func (o CasbDlpRuleOutput) ToCasbDlpRuleOutput() CasbDlpRuleOutput {
	return o
}

func (o CasbDlpRuleOutput) ToCasbDlpRuleOutputWithContext(ctx context.Context) CasbDlpRuleOutput {
	return o
}

// The configured action for the policy rule
func (o CasbDlpRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// Notification template used for DLP email alerts sent to the auditor
func (o CasbDlpRuleOutput) AuditorNotifications() CasbDlpRuleAuditorNotificationArrayOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleAuditorNotificationArrayOutput { return v.AuditorNotifications }).(CasbDlpRuleAuditorNotificationArrayOutput)
}

// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
// field
func (o CasbDlpRuleOutput) BucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringPtrOutput { return v.BucketOwner }).(pulumi.StringPtrOutput)
}

// The buckets for the Zscaler service to inspect for sensitive data
func (o CasbDlpRuleOutput) Buckets() CasbDlpRuleBucketsPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleBucketsPtrOutput { return v.Buckets }).(CasbDlpRuleBucketsPtrOutput)
}

// Name-ID of the email label associated with the rule
func (o CasbDlpRuleOutput) CasbEmailLabels() CasbDlpRuleCasbEmailLabelArrayOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleCasbEmailLabelArrayOutput { return v.CasbEmailLabels }).(CasbDlpRuleCasbEmailLabelArrayOutput)
}

// Name-ID of the quarantine tombstone template associated with the rule
func (o CasbDlpRuleOutput) CasbTombstoneTemplates() CasbDlpRuleCasbTombstoneTemplateArrayOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleCasbTombstoneTemplateArrayOutput { return v.CasbTombstoneTemplates }).(CasbDlpRuleCasbTombstoneTemplateArrayOutput)
}

// Name-ID pairs of the cloud application tenants for which the rule is applied
func (o CasbDlpRuleOutput) CloudAppTenants() CasbDlpRuleCloudAppTenantsPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleCloudAppTenantsPtrOutput { return v.CloudAppTenants }).(CasbDlpRuleCloudAppTenantsPtrOutput)
}

// Collaboration scope for the rule
func (o CasbDlpRuleOutput) CollaborationScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringArrayOutput { return v.CollaborationScopes }).(pulumi.StringArrayOutput)
}

// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
func (o CasbDlpRuleOutput) Components() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringArrayOutput { return v.Components }).(pulumi.StringArrayOutput)
}

// The location for the content that the Zscaler service inspects for sensitive data
func (o CasbDlpRuleOutput) ContentLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringPtrOutput { return v.ContentLocation }).(pulumi.StringPtrOutput)
}

// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
func (o CasbDlpRuleOutput) CriteriaDomainProfiles() CasbDlpRuleCriteriaDomainProfilesPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleCriteriaDomainProfilesPtrOutput { return v.CriteriaDomainProfiles }).(CasbDlpRuleCriteriaDomainProfilesPtrOutput)
}

// Name-ID pairs of departments for which rule must be applied
func (o CasbDlpRuleOutput) Departments() CasbDlpRuleDepartmentsPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleDepartmentsPtrOutput { return v.Departments }).(CasbDlpRuleDepartmentsPtrOutput)
}

// An admin editable text-based description of the rule
func (o CasbDlpRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The list of DLP engines to which the DLP policy rule must be applied
func (o CasbDlpRuleOutput) DlpEngines() CasbDlpRuleDlpEnginesPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleDlpEnginesPtrOutput { return v.DlpEngines }).(CasbDlpRuleDlpEnginesPtrOutput)
}

// The domain for the external organization sharing the channel
func (o CasbDlpRuleOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringArrayOutput { return v.Domains }).(pulumi.StringArrayOutput)
}

// Name-ID pairs of recipient profiles for which the rule is applied
func (o CasbDlpRuleOutput) EmailRecipientProfiles() CasbDlpRuleEmailRecipientProfilesPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleEmailRecipientProfilesPtrOutput { return v.EmailRecipientProfiles }).(CasbDlpRuleEmailRecipientProfilesPtrOutput)
}

// Name-ID pairs of entity groups that are part of the rule criteria
func (o CasbDlpRuleOutput) EntityGroups() CasbDlpRuleEntityGroupsPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleEntityGroupsPtrOutput { return v.EntityGroups }).(CasbDlpRuleEntityGroupsPtrOutput)
}

// Name-ID pairs of domain profiles excluded in the criteria for the rule
func (o CasbDlpRuleOutput) ExcludedDomainProfiles() CasbDlpRuleExcludedDomainProfilesPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleExcludedDomainProfilesPtrOutput { return v.ExcludedDomainProfiles }).(CasbDlpRuleExcludedDomainProfilesPtrOutput)
}

// Email address of the external auditor to whom the DLP email alerts are sent
func (o CasbDlpRuleOutput) ExternalAuditorEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringPtrOutput { return v.ExternalAuditorEmail }).(pulumi.StringPtrOutput)
}

// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
func (o CasbDlpRuleOutput) FileTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringArrayOutput { return v.FileTypes }).(pulumi.StringArrayOutput)
}

// Name-ID pairs of groups for which the rule is applied
func (o CasbDlpRuleOutput) Groups() CasbDlpRuleGroupsPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleGroupsPtrOutput { return v.Groups }).(CasbDlpRuleGroupsPtrOutput)
}

// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
func (o CasbDlpRuleOutput) IncludeCriteriaDomainProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.BoolPtrOutput { return v.IncludeCriteriaDomainProfile }).(pulumi.BoolPtrOutput)
}

// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
func (o CasbDlpRuleOutput) IncludeEmailRecipientProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.BoolPtrOutput { return v.IncludeEmailRecipientProfile }).(pulumi.BoolPtrOutput)
}

// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
func (o CasbDlpRuleOutput) IncludeEntityGroups() pulumi.BoolOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.BoolOutput { return v.IncludeEntityGroups }).(pulumi.BoolOutput)
}

// Name-ID pairs of domain profiles included in the criteria for the rule
func (o CasbDlpRuleOutput) IncludedDomainProfiles() CasbDlpRuleIncludedDomainProfilesPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleIncludedDomainProfilesPtrOutput { return v.IncludedDomainProfiles }).(CasbDlpRuleIncludedDomainProfilesPtrOutput)
}

// Name-ID pairs of rule labels associated with the rule
func (o CasbDlpRuleOutput) Labels() CasbDlpRuleLabelsPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleLabelsPtrOutput { return v.Labels }).(CasbDlpRuleLabelsPtrOutput)
}

// Rule name
func (o CasbDlpRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of object types for which the rule is applied
func (o CasbDlpRuleOutput) ObjectTypes() CasbDlpRuleObjectTypesPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleObjectTypesPtrOutput { return v.ObjectTypes }).(CasbDlpRuleObjectTypesPtrOutput)
}

// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
func (o CasbDlpRuleOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.IntPtrOutput { return v.Order }).(pulumi.IntPtrOutput)
}

// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
// data
func (o CasbDlpRuleOutput) QuarantineLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringPtrOutput { return v.QuarantineLocation }).(pulumi.StringPtrOutput)
}

// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
func (o CasbDlpRuleOutput) Rank() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.IntPtrOutput { return v.Rank }).(pulumi.IntPtrOutput)
}

// Specifies if the email recipient is internal or external
func (o CasbDlpRuleOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringPtrOutput { return v.Recipient }).(pulumi.StringPtrOutput)
}

// Name-ID of the redaction profile in the criteria
func (o CasbDlpRuleOutput) RedactionProfiles() CasbDlpRuleRedactionProfileArrayOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleRedactionProfileArrayOutput { return v.RedactionProfiles }).(CasbDlpRuleRedactionProfileArrayOutput)
}

// System-generated identifier for the SaaS Security Data at Rest Scanning DLP rule
func (o CasbDlpRuleOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

// The severity level of the incidents that match the policy rule
func (o CasbDlpRuleOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringPtrOutput { return v.Severity }).(pulumi.StringPtrOutput)
}

// Administrative state of the rule
func (o CasbDlpRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// Tag applied to the rule
func (o CasbDlpRuleOutput) Tags() CasbDlpRuleTagArrayOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleTagArrayOutput { return v.Tags }).(CasbDlpRuleTagArrayOutput)
}

// The type of SaaS Security Data at Rest Scanning DLP rule
func (o CasbDlpRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// Name-ID pairs of users for which rule must be applied
func (o CasbDlpRuleOutput) Users() CasbDlpRuleUsersPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleUsersPtrOutput { return v.Users }).(CasbDlpRuleUsersPtrOutput)
}

// Specifies whether to delete an old version of the watermarked file
func (o CasbDlpRuleOutput) WatermarkDeleteOldVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.BoolPtrOutput { return v.WatermarkDeleteOldVersion }).(pulumi.BoolPtrOutput)
}

// Watermark profile applied to the rule
func (o CasbDlpRuleOutput) WatermarkProfiles() CasbDlpRuleWatermarkProfileArrayOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleWatermarkProfileArrayOutput { return v.WatermarkProfiles }).(CasbDlpRuleWatermarkProfileArrayOutput)
}

// If true, Content Matching is set to None
func (o CasbDlpRuleOutput) WithoutContentInspection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CasbDlpRule) pulumi.BoolPtrOutput { return v.WithoutContentInspection }).(pulumi.BoolPtrOutput)
}

// The Zscaler Incident Receiver details
func (o CasbDlpRuleOutput) ZscalerIncidentReceivers() CasbDlpRuleZscalerIncidentReceiverArrayOutput {
	return o.ApplyT(func(v *CasbDlpRule) CasbDlpRuleZscalerIncidentReceiverArrayOutput { return v.ZscalerIncidentReceivers }).(CasbDlpRuleZscalerIncidentReceiverArrayOutput)
}

type CasbDlpRuleArrayOutput struct{ *pulumi.OutputState }

func (CasbDlpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CasbDlpRule)(nil)).Elem()
}

func (o CasbDlpRuleArrayOutput) ToCasbDlpRuleArrayOutput() CasbDlpRuleArrayOutput {
	return o
}

func (o CasbDlpRuleArrayOutput) ToCasbDlpRuleArrayOutputWithContext(ctx context.Context) CasbDlpRuleArrayOutput {
	return o
}

func (o CasbDlpRuleArrayOutput) Index(i pulumi.IntInput) CasbDlpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CasbDlpRule {
		return vs[0].([]*CasbDlpRule)[vs[1].(int)]
	}).(CasbDlpRuleOutput)
}

type CasbDlpRuleMapOutput struct{ *pulumi.OutputState }

func (CasbDlpRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CasbDlpRule)(nil)).Elem()
}

func (o CasbDlpRuleMapOutput) ToCasbDlpRuleMapOutput() CasbDlpRuleMapOutput {
	return o
}

func (o CasbDlpRuleMapOutput) ToCasbDlpRuleMapOutputWithContext(ctx context.Context) CasbDlpRuleMapOutput {
	return o
}

func (o CasbDlpRuleMapOutput) MapIndex(k pulumi.StringInput) CasbDlpRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CasbDlpRule {
		return vs[0].(map[string]*CasbDlpRule)[vs[1].(string)]
	}).(CasbDlpRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CasbDlpRuleInput)(nil)).Elem(), &CasbDlpRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*CasbDlpRuleArrayInput)(nil)).Elem(), CasbDlpRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CasbDlpRuleMapInput)(nil)).Elem(), CasbDlpRuleMap{})
	pulumi.RegisterOutputType(CasbDlpRuleOutput{})
	pulumi.RegisterOutputType(CasbDlpRuleArrayOutput{})
	pulumi.RegisterOutputType(CasbDlpRuleMapOutput{})
}
