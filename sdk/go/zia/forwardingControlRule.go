// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// **zia_forwarding_control_rule** can be imported by using `<RULE ID>` or `<RULE NAME>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zia:index/forwardingControlRule:ForwardingControlRule example <rule_id>
// ```
//
// or
//
// ```sh
// $ pulumi import zia:index/forwardingControlRule:ForwardingControlRule example <rule_name>
// ```
type ForwardingControlRule struct {
	pulumi.CustomResourceState

	// (list) - Application service groups on which this rule is applied
	AppServiceGroups ForwardingControlRuleAppServiceGroupsPtrOutput `pulumi:"appServiceGroups"`
	// (list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments ForwardingControlRuleDepartmentsPtrOutput `pulumi:"departments"`
	// (string) - Additional information about the forwarding rule
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// ** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.
	DestAddresses pulumi.StringArrayOutput `pulumi:"destAddresses"`
	// ** - (list) destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
	DestCountries pulumi.StringArrayOutput `pulumi:"destCountries"`
	// ** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories pulumi.StringArrayOutput `pulumi:"destIpCategories"`
	// ** - (list) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups ForwardingControlRuleDestIpGroupsPtrOutput `pulumi:"destIpGroups"`
	// ** - (list) Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	DestIpv6Groups ForwardingControlRuleDestIpv6GroupsPtrOutput `pulumi:"destIpv6Groups"`
	// (list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
	EcGroups ForwardingControlRuleEcGroupsPtrOutput `pulumi:"ecGroups"`
	// The type of traffic forwarding method selected from the available options
	ForwardMethod pulumi.StringOutput `pulumi:"forwardMethod"`
	// (list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups ForwardingControlRuleGroupsPtrOutput `pulumi:"groups"`
	// (list) Labels that are applicable to the rule.
	Labels ForwardingControlRuleLabelsPtrOutput `pulumi:"labels"`
	// (Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups ForwardingControlRuleLocationGroupsPtrOutput `pulumi:"locationGroups"`
	// (Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations ForwardingControlRuleLocationsPtrOutput `pulumi:"locations"`
	// (string) The configured name of the entity
	Name pulumi.StringOutput `pulumi:"name"`
	// (list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify
	NwApplicationGroups ForwardingControlRuleNwApplicationGroupsPtrOutput `pulumi:"nwApplicationGroups"`
	// (list) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups ForwardingControlRuleNwServiceGroupsPtrOutput `pulumi:"nwServiceGroups"`
	// (list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices ForwardingControlRuleNwServicesPtrOutput `pulumi:"nwServices"`
	// (int) - The order of execution for the forwarding rule order.
	Order pulumi.IntOutput `pulumi:"order"`
	// (set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.
	ProxyGateway ForwardingControlRuleProxyGatewayOutput `pulumi:"proxyGateway"`
	// Admin rank assigned to the forwarding rule
	Rank pulumi.IntPtrOutput `pulumi:"rank"`
	// ** - (list) List of destination domain categories to which the rule applies.
	ResCategories pulumi.StringArrayOutput `pulumi:"resCategories"`
	// A unique identifier assigned to the forwarding rule
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// (list) Any number of source IP address groups that you want to control with this rule.
	SrcIpGroups ForwardingControlRuleSrcIpGroupsPtrOutput `pulumi:"srcIpGroups"`
	// (Optional) You can enter individual IP addresses, subnets, or address ranges.
	SrcIps pulumi.StringArrayOutput `pulumi:"srcIps"`
	// (list) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups ForwardingControlRuleSrcIpv6GroupsPtrOutput `pulumi:"srcIpv6Groups"`
	// (string) - Indicates whether the forwarding rule is enabled or disabled. Supported values are: `ENABLED` and `DISABLED`.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// The rule type selected from the available options
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// (list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users ForwardingControlRuleUsersPtrOutput `pulumi:"users"`
	// (set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.
	ZpaAppSegments ForwardingControlRuleZpaAppSegmentArrayOutput `pulumi:"zpaAppSegments"`
	// (set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
	ZpaApplicationSegmentGroups ForwardingControlRuleZpaApplicationSegmentGroupsPtrOutput `pulumi:"zpaApplicationSegmentGroups"`
	// (set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
	ZpaApplicationSegments ForwardingControlRuleZpaApplicationSegmentsPtrOutput `pulumi:"zpaApplicationSegments"`
	// (set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.
	ZpaGateway ForwardingControlRuleZpaGatewayOutput `pulumi:"zpaGateway"`
}

// NewForwardingControlRule registers a new resource with the given unique name, arguments, and options.
func NewForwardingControlRule(ctx *pulumi.Context,
	name string, args *ForwardingControlRuleArgs, opts ...pulumi.ResourceOption) (*ForwardingControlRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ForwardMethod == nil {
		return nil, errors.New("invalid value for required argument 'ForwardMethod'")
	}
	if args.Order == nil {
		return nil, errors.New("invalid value for required argument 'Order'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ForwardingControlRule
	err := ctx.RegisterResource("zia:index/forwardingControlRule:ForwardingControlRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetForwardingControlRule gets an existing ForwardingControlRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetForwardingControlRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ForwardingControlRuleState, opts ...pulumi.ResourceOption) (*ForwardingControlRule, error) {
	var resource ForwardingControlRule
	err := ctx.ReadResource("zia:index/forwardingControlRule:ForwardingControlRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ForwardingControlRule resources.
type forwardingControlRuleState struct {
	// (list) - Application service groups on which this rule is applied
	AppServiceGroups *ForwardingControlRuleAppServiceGroups `pulumi:"appServiceGroups"`
	// (list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments *ForwardingControlRuleDepartments `pulumi:"departments"`
	// (string) - Additional information about the forwarding rule
	Description *string `pulumi:"description"`
	// ** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.
	DestAddresses []string `pulumi:"destAddresses"`
	// ** - (list) destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
	DestCountries []string `pulumi:"destCountries"`
	// ** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories []string `pulumi:"destIpCategories"`
	// ** - (list) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups *ForwardingControlRuleDestIpGroups `pulumi:"destIpGroups"`
	// ** - (list) Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	DestIpv6Groups *ForwardingControlRuleDestIpv6Groups `pulumi:"destIpv6Groups"`
	// (list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
	EcGroups *ForwardingControlRuleEcGroups `pulumi:"ecGroups"`
	// The type of traffic forwarding method selected from the available options
	ForwardMethod *string `pulumi:"forwardMethod"`
	// (list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups *ForwardingControlRuleGroups `pulumi:"groups"`
	// (list) Labels that are applicable to the rule.
	Labels *ForwardingControlRuleLabels `pulumi:"labels"`
	// (Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups *ForwardingControlRuleLocationGroups `pulumi:"locationGroups"`
	// (Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations *ForwardingControlRuleLocations `pulumi:"locations"`
	// (string) The configured name of the entity
	Name *string `pulumi:"name"`
	// (list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify
	NwApplicationGroups *ForwardingControlRuleNwApplicationGroups `pulumi:"nwApplicationGroups"`
	// (list) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups *ForwardingControlRuleNwServiceGroups `pulumi:"nwServiceGroups"`
	// (list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices *ForwardingControlRuleNwServices `pulumi:"nwServices"`
	// (int) - The order of execution for the forwarding rule order.
	Order *int `pulumi:"order"`
	// (set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.
	ProxyGateway *ForwardingControlRuleProxyGateway `pulumi:"proxyGateway"`
	// Admin rank assigned to the forwarding rule
	Rank *int `pulumi:"rank"`
	// ** - (list) List of destination domain categories to which the rule applies.
	ResCategories []string `pulumi:"resCategories"`
	// A unique identifier assigned to the forwarding rule
	RuleId *int `pulumi:"ruleId"`
	// (list) Any number of source IP address groups that you want to control with this rule.
	SrcIpGroups *ForwardingControlRuleSrcIpGroups `pulumi:"srcIpGroups"`
	// (Optional) You can enter individual IP addresses, subnets, or address ranges.
	SrcIps []string `pulumi:"srcIps"`
	// (list) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups *ForwardingControlRuleSrcIpv6Groups `pulumi:"srcIpv6Groups"`
	// (string) - Indicates whether the forwarding rule is enabled or disabled. Supported values are: `ENABLED` and `DISABLED`.
	State *string `pulumi:"state"`
	// The rule type selected from the available options
	Type *string `pulumi:"type"`
	// (list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users *ForwardingControlRuleUsers `pulumi:"users"`
	// (set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.
	ZpaAppSegments []ForwardingControlRuleZpaAppSegment `pulumi:"zpaAppSegments"`
	// (set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
	ZpaApplicationSegmentGroups *ForwardingControlRuleZpaApplicationSegmentGroups `pulumi:"zpaApplicationSegmentGroups"`
	// (set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
	ZpaApplicationSegments *ForwardingControlRuleZpaApplicationSegments `pulumi:"zpaApplicationSegments"`
	// (set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.
	ZpaGateway *ForwardingControlRuleZpaGateway `pulumi:"zpaGateway"`
}

type ForwardingControlRuleState struct {
	// (list) - Application service groups on which this rule is applied
	AppServiceGroups ForwardingControlRuleAppServiceGroupsPtrInput
	// (list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments ForwardingControlRuleDepartmentsPtrInput
	// (string) - Additional information about the forwarding rule
	Description pulumi.StringPtrInput
	// ** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.
	DestAddresses pulumi.StringArrayInput
	// ** - (list) destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
	DestCountries pulumi.StringArrayInput
	// ** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories pulumi.StringArrayInput
	// ** - (list) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups ForwardingControlRuleDestIpGroupsPtrInput
	// ** - (list) Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	DestIpv6Groups ForwardingControlRuleDestIpv6GroupsPtrInput
	// (list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
	EcGroups ForwardingControlRuleEcGroupsPtrInput
	// The type of traffic forwarding method selected from the available options
	ForwardMethod pulumi.StringPtrInput
	// (list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups ForwardingControlRuleGroupsPtrInput
	// (list) Labels that are applicable to the rule.
	Labels ForwardingControlRuleLabelsPtrInput
	// (Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups ForwardingControlRuleLocationGroupsPtrInput
	// (Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations ForwardingControlRuleLocationsPtrInput
	// (string) The configured name of the entity
	Name pulumi.StringPtrInput
	// (list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify
	NwApplicationGroups ForwardingControlRuleNwApplicationGroupsPtrInput
	// (list) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups ForwardingControlRuleNwServiceGroupsPtrInput
	// (list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices ForwardingControlRuleNwServicesPtrInput
	// (int) - The order of execution for the forwarding rule order.
	Order pulumi.IntPtrInput
	// (set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.
	ProxyGateway ForwardingControlRuleProxyGatewayPtrInput
	// Admin rank assigned to the forwarding rule
	Rank pulumi.IntPtrInput
	// ** - (list) List of destination domain categories to which the rule applies.
	ResCategories pulumi.StringArrayInput
	// A unique identifier assigned to the forwarding rule
	RuleId pulumi.IntPtrInput
	// (list) Any number of source IP address groups that you want to control with this rule.
	SrcIpGroups ForwardingControlRuleSrcIpGroupsPtrInput
	// (Optional) You can enter individual IP addresses, subnets, or address ranges.
	SrcIps pulumi.StringArrayInput
	// (list) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups ForwardingControlRuleSrcIpv6GroupsPtrInput
	// (string) - Indicates whether the forwarding rule is enabled or disabled. Supported values are: `ENABLED` and `DISABLED`.
	State pulumi.StringPtrInput
	// The rule type selected from the available options
	Type pulumi.StringPtrInput
	// (list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users ForwardingControlRuleUsersPtrInput
	// (set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.
	ZpaAppSegments ForwardingControlRuleZpaAppSegmentArrayInput
	// (set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
	ZpaApplicationSegmentGroups ForwardingControlRuleZpaApplicationSegmentGroupsPtrInput
	// (set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
	ZpaApplicationSegments ForwardingControlRuleZpaApplicationSegmentsPtrInput
	// (set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.
	ZpaGateway ForwardingControlRuleZpaGatewayPtrInput
}

func (ForwardingControlRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*forwardingControlRuleState)(nil)).Elem()
}

type forwardingControlRuleArgs struct {
	// (list) - Application service groups on which this rule is applied
	AppServiceGroups *ForwardingControlRuleAppServiceGroups `pulumi:"appServiceGroups"`
	// (list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments *ForwardingControlRuleDepartments `pulumi:"departments"`
	// (string) - Additional information about the forwarding rule
	Description *string `pulumi:"description"`
	// ** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.
	DestAddresses []string `pulumi:"destAddresses"`
	// ** - (list) destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
	DestCountries []string `pulumi:"destCountries"`
	// ** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories []string `pulumi:"destIpCategories"`
	// ** - (list) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups *ForwardingControlRuleDestIpGroups `pulumi:"destIpGroups"`
	// ** - (list) Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	DestIpv6Groups *ForwardingControlRuleDestIpv6Groups `pulumi:"destIpv6Groups"`
	// (list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
	EcGroups *ForwardingControlRuleEcGroups `pulumi:"ecGroups"`
	// The type of traffic forwarding method selected from the available options
	ForwardMethod string `pulumi:"forwardMethod"`
	// (list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups *ForwardingControlRuleGroups `pulumi:"groups"`
	// (list) Labels that are applicable to the rule.
	Labels *ForwardingControlRuleLabels `pulumi:"labels"`
	// (Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups *ForwardingControlRuleLocationGroups `pulumi:"locationGroups"`
	// (Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations *ForwardingControlRuleLocations `pulumi:"locations"`
	// (string) The configured name of the entity
	Name *string `pulumi:"name"`
	// (list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify
	NwApplicationGroups *ForwardingControlRuleNwApplicationGroups `pulumi:"nwApplicationGroups"`
	// (list) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups *ForwardingControlRuleNwServiceGroups `pulumi:"nwServiceGroups"`
	// (list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices *ForwardingControlRuleNwServices `pulumi:"nwServices"`
	// (int) - The order of execution for the forwarding rule order.
	Order int `pulumi:"order"`
	// (set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.
	ProxyGateway *ForwardingControlRuleProxyGateway `pulumi:"proxyGateway"`
	// Admin rank assigned to the forwarding rule
	Rank *int `pulumi:"rank"`
	// ** - (list) List of destination domain categories to which the rule applies.
	ResCategories []string `pulumi:"resCategories"`
	// (list) Any number of source IP address groups that you want to control with this rule.
	SrcIpGroups *ForwardingControlRuleSrcIpGroups `pulumi:"srcIpGroups"`
	// (Optional) You can enter individual IP addresses, subnets, or address ranges.
	SrcIps []string `pulumi:"srcIps"`
	// (list) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups *ForwardingControlRuleSrcIpv6Groups `pulumi:"srcIpv6Groups"`
	// (string) - Indicates whether the forwarding rule is enabled or disabled. Supported values are: `ENABLED` and `DISABLED`.
	State *string `pulumi:"state"`
	// The rule type selected from the available options
	Type *string `pulumi:"type"`
	// (list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users *ForwardingControlRuleUsers `pulumi:"users"`
	// (set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.
	ZpaAppSegments []ForwardingControlRuleZpaAppSegment `pulumi:"zpaAppSegments"`
	// (set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
	ZpaApplicationSegmentGroups *ForwardingControlRuleZpaApplicationSegmentGroups `pulumi:"zpaApplicationSegmentGroups"`
	// (set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
	ZpaApplicationSegments *ForwardingControlRuleZpaApplicationSegments `pulumi:"zpaApplicationSegments"`
	// (set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.
	ZpaGateway *ForwardingControlRuleZpaGateway `pulumi:"zpaGateway"`
}

// The set of arguments for constructing a ForwardingControlRule resource.
type ForwardingControlRuleArgs struct {
	// (list) - Application service groups on which this rule is applied
	AppServiceGroups ForwardingControlRuleAppServiceGroupsPtrInput
	// (list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments ForwardingControlRuleDepartmentsPtrInput
	// (string) - Additional information about the forwarding rule
	Description pulumi.StringPtrInput
	// ** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.
	DestAddresses pulumi.StringArrayInput
	// ** - (list) destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
	DestCountries pulumi.StringArrayInput
	// ** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories pulumi.StringArrayInput
	// ** - (list) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups ForwardingControlRuleDestIpGroupsPtrInput
	// ** - (list) Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	DestIpv6Groups ForwardingControlRuleDestIpv6GroupsPtrInput
	// (list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
	EcGroups ForwardingControlRuleEcGroupsPtrInput
	// The type of traffic forwarding method selected from the available options
	ForwardMethod pulumi.StringInput
	// (list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups ForwardingControlRuleGroupsPtrInput
	// (list) Labels that are applicable to the rule.
	Labels ForwardingControlRuleLabelsPtrInput
	// (Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups ForwardingControlRuleLocationGroupsPtrInput
	// (Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations ForwardingControlRuleLocationsPtrInput
	// (string) The configured name of the entity
	Name pulumi.StringPtrInput
	// (list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify
	NwApplicationGroups ForwardingControlRuleNwApplicationGroupsPtrInput
	// (list) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups ForwardingControlRuleNwServiceGroupsPtrInput
	// (list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices ForwardingControlRuleNwServicesPtrInput
	// (int) - The order of execution for the forwarding rule order.
	Order pulumi.IntInput
	// (set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.
	ProxyGateway ForwardingControlRuleProxyGatewayPtrInput
	// Admin rank assigned to the forwarding rule
	Rank pulumi.IntPtrInput
	// ** - (list) List of destination domain categories to which the rule applies.
	ResCategories pulumi.StringArrayInput
	// (list) Any number of source IP address groups that you want to control with this rule.
	SrcIpGroups ForwardingControlRuleSrcIpGroupsPtrInput
	// (Optional) You can enter individual IP addresses, subnets, or address ranges.
	SrcIps pulumi.StringArrayInput
	// (list) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups ForwardingControlRuleSrcIpv6GroupsPtrInput
	// (string) - Indicates whether the forwarding rule is enabled or disabled. Supported values are: `ENABLED` and `DISABLED`.
	State pulumi.StringPtrInput
	// The rule type selected from the available options
	Type pulumi.StringPtrInput
	// (list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users ForwardingControlRuleUsersPtrInput
	// (set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.
	ZpaAppSegments ForwardingControlRuleZpaAppSegmentArrayInput
	// (set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
	ZpaApplicationSegmentGroups ForwardingControlRuleZpaApplicationSegmentGroupsPtrInput
	// (set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
	ZpaApplicationSegments ForwardingControlRuleZpaApplicationSegmentsPtrInput
	// (set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.
	ZpaGateway ForwardingControlRuleZpaGatewayPtrInput
}

func (ForwardingControlRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*forwardingControlRuleArgs)(nil)).Elem()
}

type ForwardingControlRuleInput interface {
	pulumi.Input

	ToForwardingControlRuleOutput() ForwardingControlRuleOutput
	ToForwardingControlRuleOutputWithContext(ctx context.Context) ForwardingControlRuleOutput
}

func (*ForwardingControlRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingControlRule)(nil)).Elem()
}

func (i *ForwardingControlRule) ToForwardingControlRuleOutput() ForwardingControlRuleOutput {
	return i.ToForwardingControlRuleOutputWithContext(context.Background())
}

func (i *ForwardingControlRule) ToForwardingControlRuleOutputWithContext(ctx context.Context) ForwardingControlRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingControlRuleOutput)
}

// ForwardingControlRuleArrayInput is an input type that accepts ForwardingControlRuleArray and ForwardingControlRuleArrayOutput values.
// You can construct a concrete instance of `ForwardingControlRuleArrayInput` via:
//
//	ForwardingControlRuleArray{ ForwardingControlRuleArgs{...} }
type ForwardingControlRuleArrayInput interface {
	pulumi.Input

	ToForwardingControlRuleArrayOutput() ForwardingControlRuleArrayOutput
	ToForwardingControlRuleArrayOutputWithContext(context.Context) ForwardingControlRuleArrayOutput
}

type ForwardingControlRuleArray []ForwardingControlRuleInput

func (ForwardingControlRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ForwardingControlRule)(nil)).Elem()
}

func (i ForwardingControlRuleArray) ToForwardingControlRuleArrayOutput() ForwardingControlRuleArrayOutput {
	return i.ToForwardingControlRuleArrayOutputWithContext(context.Background())
}

func (i ForwardingControlRuleArray) ToForwardingControlRuleArrayOutputWithContext(ctx context.Context) ForwardingControlRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingControlRuleArrayOutput)
}

// ForwardingControlRuleMapInput is an input type that accepts ForwardingControlRuleMap and ForwardingControlRuleMapOutput values.
// You can construct a concrete instance of `ForwardingControlRuleMapInput` via:
//
//	ForwardingControlRuleMap{ "key": ForwardingControlRuleArgs{...} }
type ForwardingControlRuleMapInput interface {
	pulumi.Input

	ToForwardingControlRuleMapOutput() ForwardingControlRuleMapOutput
	ToForwardingControlRuleMapOutputWithContext(context.Context) ForwardingControlRuleMapOutput
}

type ForwardingControlRuleMap map[string]ForwardingControlRuleInput

func (ForwardingControlRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ForwardingControlRule)(nil)).Elem()
}

func (i ForwardingControlRuleMap) ToForwardingControlRuleMapOutput() ForwardingControlRuleMapOutput {
	return i.ToForwardingControlRuleMapOutputWithContext(context.Background())
}

func (i ForwardingControlRuleMap) ToForwardingControlRuleMapOutputWithContext(ctx context.Context) ForwardingControlRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingControlRuleMapOutput)
}

type ForwardingControlRuleOutput struct{ *pulumi.OutputState }

func (ForwardingControlRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingControlRule)(nil)).Elem()
}

func (o ForwardingControlRuleOutput) ToForwardingControlRuleOutput() ForwardingControlRuleOutput {
	return o
}

func (o ForwardingControlRuleOutput) ToForwardingControlRuleOutputWithContext(ctx context.Context) ForwardingControlRuleOutput {
	return o
}

// (list) - Application service groups on which this rule is applied
func (o ForwardingControlRuleOutput) AppServiceGroups() ForwardingControlRuleAppServiceGroupsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleAppServiceGroupsPtrOutput {
		return v.AppServiceGroups
	}).(ForwardingControlRuleAppServiceGroupsPtrOutput)
}

// (list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
func (o ForwardingControlRuleOutput) Departments() ForwardingControlRuleDepartmentsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleDepartmentsPtrOutput { return v.Departments }).(ForwardingControlRuleDepartmentsPtrOutput)
}

// (string) - Additional information about the forwarding rule
func (o ForwardingControlRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// ** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.
func (o ForwardingControlRuleOutput) DestAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.StringArrayOutput { return v.DestAddresses }).(pulumi.StringArrayOutput)
}

// ** - (list) destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
func (o ForwardingControlRuleOutput) DestCountries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.StringArrayOutput { return v.DestCountries }).(pulumi.StringArrayOutput)
}

// ** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
func (o ForwardingControlRuleOutput) DestIpCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.StringArrayOutput { return v.DestIpCategories }).(pulumi.StringArrayOutput)
}

// ** - (list) Any number of destination IP address groups that you want to control with this rule.
func (o ForwardingControlRuleOutput) DestIpGroups() ForwardingControlRuleDestIpGroupsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleDestIpGroupsPtrOutput { return v.DestIpGroups }).(ForwardingControlRuleDestIpGroupsPtrOutput)
}

// ** - (list) Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
func (o ForwardingControlRuleOutput) DestIpv6Groups() ForwardingControlRuleDestIpv6GroupsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleDestIpv6GroupsPtrOutput { return v.DestIpv6Groups }).(ForwardingControlRuleDestIpv6GroupsPtrOutput)
}

// (list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
func (o ForwardingControlRuleOutput) EcGroups() ForwardingControlRuleEcGroupsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleEcGroupsPtrOutput { return v.EcGroups }).(ForwardingControlRuleEcGroupsPtrOutput)
}

// The type of traffic forwarding method selected from the available options
func (o ForwardingControlRuleOutput) ForwardMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.StringOutput { return v.ForwardMethod }).(pulumi.StringOutput)
}

// (list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
func (o ForwardingControlRuleOutput) Groups() ForwardingControlRuleGroupsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleGroupsPtrOutput { return v.Groups }).(ForwardingControlRuleGroupsPtrOutput)
}

// (list) Labels that are applicable to the rule.
func (o ForwardingControlRuleOutput) Labels() ForwardingControlRuleLabelsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleLabelsPtrOutput { return v.Labels }).(ForwardingControlRuleLabelsPtrOutput)
}

// (Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
func (o ForwardingControlRuleOutput) LocationGroups() ForwardingControlRuleLocationGroupsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleLocationGroupsPtrOutput { return v.LocationGroups }).(ForwardingControlRuleLocationGroupsPtrOutput)
}

// (Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
func (o ForwardingControlRuleOutput) Locations() ForwardingControlRuleLocationsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleLocationsPtrOutput { return v.Locations }).(ForwardingControlRuleLocationsPtrOutput)
}

// (string) The configured name of the entity
func (o ForwardingControlRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify
func (o ForwardingControlRuleOutput) NwApplicationGroups() ForwardingControlRuleNwApplicationGroupsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleNwApplicationGroupsPtrOutput {
		return v.NwApplicationGroups
	}).(ForwardingControlRuleNwApplicationGroupsPtrOutput)
}

// (list) Any number of predefined or custom network service groups to which the rule applies.
func (o ForwardingControlRuleOutput) NwServiceGroups() ForwardingControlRuleNwServiceGroupsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleNwServiceGroupsPtrOutput { return v.NwServiceGroups }).(ForwardingControlRuleNwServiceGroupsPtrOutput)
}

// (list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
func (o ForwardingControlRuleOutput) NwServices() ForwardingControlRuleNwServicesPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleNwServicesPtrOutput { return v.NwServices }).(ForwardingControlRuleNwServicesPtrOutput)
}

// (int) - The order of execution for the forwarding rule order.
func (o ForwardingControlRuleOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.IntOutput { return v.Order }).(pulumi.IntOutput)
}

// (set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.
func (o ForwardingControlRuleOutput) ProxyGateway() ForwardingControlRuleProxyGatewayOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleProxyGatewayOutput { return v.ProxyGateway }).(ForwardingControlRuleProxyGatewayOutput)
}

// Admin rank assigned to the forwarding rule
func (o ForwardingControlRuleOutput) Rank() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.IntPtrOutput { return v.Rank }).(pulumi.IntPtrOutput)
}

// ** - (list) List of destination domain categories to which the rule applies.
func (o ForwardingControlRuleOutput) ResCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.StringArrayOutput { return v.ResCategories }).(pulumi.StringArrayOutput)
}

// A unique identifier assigned to the forwarding rule
func (o ForwardingControlRuleOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

// (list) Any number of source IP address groups that you want to control with this rule.
func (o ForwardingControlRuleOutput) SrcIpGroups() ForwardingControlRuleSrcIpGroupsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleSrcIpGroupsPtrOutput { return v.SrcIpGroups }).(ForwardingControlRuleSrcIpGroupsPtrOutput)
}

// (Optional) You can enter individual IP addresses, subnets, or address ranges.
func (o ForwardingControlRuleOutput) SrcIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.StringArrayOutput { return v.SrcIps }).(pulumi.StringArrayOutput)
}

// (list) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
func (o ForwardingControlRuleOutput) SrcIpv6Groups() ForwardingControlRuleSrcIpv6GroupsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleSrcIpv6GroupsPtrOutput { return v.SrcIpv6Groups }).(ForwardingControlRuleSrcIpv6GroupsPtrOutput)
}

// (string) - Indicates whether the forwarding rule is enabled or disabled. Supported values are: `ENABLED` and `DISABLED`.
func (o ForwardingControlRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// The rule type selected from the available options
func (o ForwardingControlRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// (list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
func (o ForwardingControlRuleOutput) Users() ForwardingControlRuleUsersPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleUsersPtrOutput { return v.Users }).(ForwardingControlRuleUsersPtrOutput)
}

// (set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.
func (o ForwardingControlRuleOutput) ZpaAppSegments() ForwardingControlRuleZpaAppSegmentArrayOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleZpaAppSegmentArrayOutput { return v.ZpaAppSegments }).(ForwardingControlRuleZpaAppSegmentArrayOutput)
}

// (set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
func (o ForwardingControlRuleOutput) ZpaApplicationSegmentGroups() ForwardingControlRuleZpaApplicationSegmentGroupsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleZpaApplicationSegmentGroupsPtrOutput {
		return v.ZpaApplicationSegmentGroups
	}).(ForwardingControlRuleZpaApplicationSegmentGroupsPtrOutput)
}

// (set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
func (o ForwardingControlRuleOutput) ZpaApplicationSegments() ForwardingControlRuleZpaApplicationSegmentsPtrOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleZpaApplicationSegmentsPtrOutput {
		return v.ZpaApplicationSegments
	}).(ForwardingControlRuleZpaApplicationSegmentsPtrOutput)
}

// (set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.
func (o ForwardingControlRuleOutput) ZpaGateway() ForwardingControlRuleZpaGatewayOutput {
	return o.ApplyT(func(v *ForwardingControlRule) ForwardingControlRuleZpaGatewayOutput { return v.ZpaGateway }).(ForwardingControlRuleZpaGatewayOutput)
}

type ForwardingControlRuleArrayOutput struct{ *pulumi.OutputState }

func (ForwardingControlRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ForwardingControlRule)(nil)).Elem()
}

func (o ForwardingControlRuleArrayOutput) ToForwardingControlRuleArrayOutput() ForwardingControlRuleArrayOutput {
	return o
}

func (o ForwardingControlRuleArrayOutput) ToForwardingControlRuleArrayOutputWithContext(ctx context.Context) ForwardingControlRuleArrayOutput {
	return o
}

func (o ForwardingControlRuleArrayOutput) Index(i pulumi.IntInput) ForwardingControlRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ForwardingControlRule {
		return vs[0].([]*ForwardingControlRule)[vs[1].(int)]
	}).(ForwardingControlRuleOutput)
}

type ForwardingControlRuleMapOutput struct{ *pulumi.OutputState }

func (ForwardingControlRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ForwardingControlRule)(nil)).Elem()
}

func (o ForwardingControlRuleMapOutput) ToForwardingControlRuleMapOutput() ForwardingControlRuleMapOutput {
	return o
}

func (o ForwardingControlRuleMapOutput) ToForwardingControlRuleMapOutputWithContext(ctx context.Context) ForwardingControlRuleMapOutput {
	return o
}

func (o ForwardingControlRuleMapOutput) MapIndex(k pulumi.StringInput) ForwardingControlRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ForwardingControlRule {
		return vs[0].(map[string]*ForwardingControlRule)[vs[1].(string)]
	}).(ForwardingControlRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingControlRuleInput)(nil)).Elem(), &ForwardingControlRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingControlRuleArrayInput)(nil)).Elem(), ForwardingControlRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingControlRuleMapInput)(nil)).Elem(), ForwardingControlRuleMap{})
	pulumi.RegisterOutputType(ForwardingControlRuleOutput{})
	pulumi.RegisterOutputType(ForwardingControlRuleArrayOutput{})
	pulumi.RegisterOutputType(ForwardingControlRuleMapOutput{})
}
