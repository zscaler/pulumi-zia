// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/configuring-data-rest-scanning-malware-detection-policy)
// * [API documentation](https://help.zscaler.com/zia/saas-security-api#/casbMalwareRules-post)
//
// The **zia_casb_malware_rules** resource Adds a new SaaS Security Data at Rest Scanning Malware Detection rule.
//
// ## Example Usage
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// **zia_casb_malware_rules** can be imported by using `<RULE_TYPE:RULE_ID>` or `<RULE_TYPE:RULE_NAME>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zia:index/casbMalwareRule:CasbMalwareRule this <rule_type:rule_id>
// ```
//
// ```sh
// $ pulumi import zia:index/casbMalwareRule:CasbMalwareRule this <"rule_type:rule_name">
// ```
type CasbMalwareRule struct {
	pulumi.CustomResourceState

	Action pulumi.StringPtrOutput `pulumi:"action"`
	// Name-ID pairs of locations for which rule must be applied
	Buckets CasbMalwareRuleBucketsPtrOutput `pulumi:"buckets"`
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbEmailLabels CasbMalwareRuleCasbEmailLabelArrayOutput `pulumi:"casbEmailLabels"`
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbTombstoneTemplates CasbMalwareRuleCasbTombstoneTemplateArrayOutput `pulumi:"casbTombstoneTemplates"`
	// This field is applicable for devices that are managed using Zscaler Client Connector.
	CloudAppTenantIds CasbMalwareRuleCloudAppTenantIdsPtrOutput `pulumi:"cloudAppTenantIds"`
	// Name-ID pairs of the cloud application tenants for which the rule is applied. If the name-ID pairs of the cloud
	// application tenants are not specified, the rule is applied to all tenants.
	CloudAppTenants CasbMalwareRuleCloudAppTenantsPtrOutput `pulumi:"cloudAppTenants"`
	// list of Labels that are applicable to the rule.
	Labels CasbMalwareRuleLabelsPtrOutput `pulumi:"labels"`
	Name   pulumi.StringOutput            `pulumi:"name"`
	Order  pulumi.IntPtrOutput            `pulumi:"order"`
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation pulumi.StringPtrOutput `pulumi:"quarantineLocation"`
	// A unique identifier assigned to the forwarding rule
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// Enables or disables the scan inbound email link
	ScanInboundEmailLink pulumi.StringPtrOutput `pulumi:"scanInboundEmailLink"`
	State                pulumi.StringPtrOutput `pulumi:"state"`
	Type                 pulumi.StringPtrOutput `pulumi:"type"`
}

// NewCasbMalwareRule registers a new resource with the given unique name, arguments, and options.
func NewCasbMalwareRule(ctx *pulumi.Context,
	name string, args *CasbMalwareRuleArgs, opts ...pulumi.ResourceOption) (*CasbMalwareRule, error) {
	if args == nil {
		args = &CasbMalwareRuleArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("zia:index/casbMalwareRules:CasbMalwareRules"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CasbMalwareRule
	err := ctx.RegisterResource("zia:index/casbMalwareRule:CasbMalwareRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCasbMalwareRule gets an existing CasbMalwareRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCasbMalwareRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CasbMalwareRuleState, opts ...pulumi.ResourceOption) (*CasbMalwareRule, error) {
	var resource CasbMalwareRule
	err := ctx.ReadResource("zia:index/casbMalwareRule:CasbMalwareRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CasbMalwareRule resources.
type casbMalwareRuleState struct {
	Action *string `pulumi:"action"`
	// Name-ID pairs of locations for which rule must be applied
	Buckets *CasbMalwareRuleBuckets `pulumi:"buckets"`
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbEmailLabels []CasbMalwareRuleCasbEmailLabel `pulumi:"casbEmailLabels"`
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbTombstoneTemplates []CasbMalwareRuleCasbTombstoneTemplate `pulumi:"casbTombstoneTemplates"`
	// This field is applicable for devices that are managed using Zscaler Client Connector.
	CloudAppTenantIds *CasbMalwareRuleCloudAppTenantIds `pulumi:"cloudAppTenantIds"`
	// Name-ID pairs of the cloud application tenants for which the rule is applied. If the name-ID pairs of the cloud
	// application tenants are not specified, the rule is applied to all tenants.
	CloudAppTenants *CasbMalwareRuleCloudAppTenants `pulumi:"cloudAppTenants"`
	// list of Labels that are applicable to the rule.
	Labels *CasbMalwareRuleLabels `pulumi:"labels"`
	Name   *string                `pulumi:"name"`
	Order  *int                   `pulumi:"order"`
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation *string `pulumi:"quarantineLocation"`
	// A unique identifier assigned to the forwarding rule
	RuleId *int `pulumi:"ruleId"`
	// Enables or disables the scan inbound email link
	ScanInboundEmailLink *string `pulumi:"scanInboundEmailLink"`
	State                *string `pulumi:"state"`
	Type                 *string `pulumi:"type"`
}

type CasbMalwareRuleState struct {
	Action pulumi.StringPtrInput
	// Name-ID pairs of locations for which rule must be applied
	Buckets CasbMalwareRuleBucketsPtrInput
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbEmailLabels CasbMalwareRuleCasbEmailLabelArrayInput
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbTombstoneTemplates CasbMalwareRuleCasbTombstoneTemplateArrayInput
	// This field is applicable for devices that are managed using Zscaler Client Connector.
	CloudAppTenantIds CasbMalwareRuleCloudAppTenantIdsPtrInput
	// Name-ID pairs of the cloud application tenants for which the rule is applied. If the name-ID pairs of the cloud
	// application tenants are not specified, the rule is applied to all tenants.
	CloudAppTenants CasbMalwareRuleCloudAppTenantsPtrInput
	// list of Labels that are applicable to the rule.
	Labels CasbMalwareRuleLabelsPtrInput
	Name   pulumi.StringPtrInput
	Order  pulumi.IntPtrInput
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation pulumi.StringPtrInput
	// A unique identifier assigned to the forwarding rule
	RuleId pulumi.IntPtrInput
	// Enables or disables the scan inbound email link
	ScanInboundEmailLink pulumi.StringPtrInput
	State                pulumi.StringPtrInput
	Type                 pulumi.StringPtrInput
}

func (CasbMalwareRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*casbMalwareRuleState)(nil)).Elem()
}

type casbMalwareRuleArgs struct {
	Action *string `pulumi:"action"`
	// Name-ID pairs of locations for which rule must be applied
	Buckets *CasbMalwareRuleBuckets `pulumi:"buckets"`
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbEmailLabels []CasbMalwareRuleCasbEmailLabel `pulumi:"casbEmailLabels"`
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbTombstoneTemplates []CasbMalwareRuleCasbTombstoneTemplate `pulumi:"casbTombstoneTemplates"`
	// This field is applicable for devices that are managed using Zscaler Client Connector.
	CloudAppTenantIds *CasbMalwareRuleCloudAppTenantIds `pulumi:"cloudAppTenantIds"`
	// Name-ID pairs of the cloud application tenants for which the rule is applied. If the name-ID pairs of the cloud
	// application tenants are not specified, the rule is applied to all tenants.
	CloudAppTenants *CasbMalwareRuleCloudAppTenants `pulumi:"cloudAppTenants"`
	// list of Labels that are applicable to the rule.
	Labels *CasbMalwareRuleLabels `pulumi:"labels"`
	Name   *string                `pulumi:"name"`
	Order  *int                   `pulumi:"order"`
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation *string `pulumi:"quarantineLocation"`
	// Enables or disables the scan inbound email link
	ScanInboundEmailLink *string `pulumi:"scanInboundEmailLink"`
	State                *string `pulumi:"state"`
	Type                 *string `pulumi:"type"`
}

// The set of arguments for constructing a CasbMalwareRule resource.
type CasbMalwareRuleArgs struct {
	Action pulumi.StringPtrInput
	// Name-ID pairs of locations for which rule must be applied
	Buckets CasbMalwareRuleBucketsPtrInput
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbEmailLabels CasbMalwareRuleCasbEmailLabelArrayInput
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbTombstoneTemplates CasbMalwareRuleCasbTombstoneTemplateArrayInput
	// This field is applicable for devices that are managed using Zscaler Client Connector.
	CloudAppTenantIds CasbMalwareRuleCloudAppTenantIdsPtrInput
	// Name-ID pairs of the cloud application tenants for which the rule is applied. If the name-ID pairs of the cloud
	// application tenants are not specified, the rule is applied to all tenants.
	CloudAppTenants CasbMalwareRuleCloudAppTenantsPtrInput
	// list of Labels that are applicable to the rule.
	Labels CasbMalwareRuleLabelsPtrInput
	Name   pulumi.StringPtrInput
	Order  pulumi.IntPtrInput
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation pulumi.StringPtrInput
	// Enables or disables the scan inbound email link
	ScanInboundEmailLink pulumi.StringPtrInput
	State                pulumi.StringPtrInput
	Type                 pulumi.StringPtrInput
}

func (CasbMalwareRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*casbMalwareRuleArgs)(nil)).Elem()
}

type CasbMalwareRuleInput interface {
	pulumi.Input

	ToCasbMalwareRuleOutput() CasbMalwareRuleOutput
	ToCasbMalwareRuleOutputWithContext(ctx context.Context) CasbMalwareRuleOutput
}

func (*CasbMalwareRule) ElementType() reflect.Type {
	return reflect.TypeOf((**CasbMalwareRule)(nil)).Elem()
}

func (i *CasbMalwareRule) ToCasbMalwareRuleOutput() CasbMalwareRuleOutput {
	return i.ToCasbMalwareRuleOutputWithContext(context.Background())
}

func (i *CasbMalwareRule) ToCasbMalwareRuleOutputWithContext(ctx context.Context) CasbMalwareRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbMalwareRuleOutput)
}

// CasbMalwareRuleArrayInput is an input type that accepts CasbMalwareRuleArray and CasbMalwareRuleArrayOutput values.
// You can construct a concrete instance of `CasbMalwareRuleArrayInput` via:
//
//	CasbMalwareRuleArray{ CasbMalwareRuleArgs{...} }
type CasbMalwareRuleArrayInput interface {
	pulumi.Input

	ToCasbMalwareRuleArrayOutput() CasbMalwareRuleArrayOutput
	ToCasbMalwareRuleArrayOutputWithContext(context.Context) CasbMalwareRuleArrayOutput
}

type CasbMalwareRuleArray []CasbMalwareRuleInput

func (CasbMalwareRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CasbMalwareRule)(nil)).Elem()
}

func (i CasbMalwareRuleArray) ToCasbMalwareRuleArrayOutput() CasbMalwareRuleArrayOutput {
	return i.ToCasbMalwareRuleArrayOutputWithContext(context.Background())
}

func (i CasbMalwareRuleArray) ToCasbMalwareRuleArrayOutputWithContext(ctx context.Context) CasbMalwareRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbMalwareRuleArrayOutput)
}

// CasbMalwareRuleMapInput is an input type that accepts CasbMalwareRuleMap and CasbMalwareRuleMapOutput values.
// You can construct a concrete instance of `CasbMalwareRuleMapInput` via:
//
//	CasbMalwareRuleMap{ "key": CasbMalwareRuleArgs{...} }
type CasbMalwareRuleMapInput interface {
	pulumi.Input

	ToCasbMalwareRuleMapOutput() CasbMalwareRuleMapOutput
	ToCasbMalwareRuleMapOutputWithContext(context.Context) CasbMalwareRuleMapOutput
}

type CasbMalwareRuleMap map[string]CasbMalwareRuleInput

func (CasbMalwareRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CasbMalwareRule)(nil)).Elem()
}

func (i CasbMalwareRuleMap) ToCasbMalwareRuleMapOutput() CasbMalwareRuleMapOutput {
	return i.ToCasbMalwareRuleMapOutputWithContext(context.Background())
}

func (i CasbMalwareRuleMap) ToCasbMalwareRuleMapOutputWithContext(ctx context.Context) CasbMalwareRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbMalwareRuleMapOutput)
}

type CasbMalwareRuleOutput struct{ *pulumi.OutputState }

func (CasbMalwareRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CasbMalwareRule)(nil)).Elem()
}

func (o CasbMalwareRuleOutput) ToCasbMalwareRuleOutput() CasbMalwareRuleOutput {
	return o
}

func (o CasbMalwareRuleOutput) ToCasbMalwareRuleOutputWithContext(ctx context.Context) CasbMalwareRuleOutput {
	return o
}

func (o CasbMalwareRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRule) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// Name-ID pairs of locations for which rule must be applied
func (o CasbMalwareRuleOutput) Buckets() CasbMalwareRuleBucketsPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRule) CasbMalwareRuleBucketsPtrOutput { return v.Buckets }).(CasbMalwareRuleBucketsPtrOutput)
}

// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
func (o CasbMalwareRuleOutput) CasbEmailLabels() CasbMalwareRuleCasbEmailLabelArrayOutput {
	return o.ApplyT(func(v *CasbMalwareRule) CasbMalwareRuleCasbEmailLabelArrayOutput { return v.CasbEmailLabels }).(CasbMalwareRuleCasbEmailLabelArrayOutput)
}

// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
func (o CasbMalwareRuleOutput) CasbTombstoneTemplates() CasbMalwareRuleCasbTombstoneTemplateArrayOutput {
	return o.ApplyT(func(v *CasbMalwareRule) CasbMalwareRuleCasbTombstoneTemplateArrayOutput {
		return v.CasbTombstoneTemplates
	}).(CasbMalwareRuleCasbTombstoneTemplateArrayOutput)
}

// This field is applicable for devices that are managed using Zscaler Client Connector.
func (o CasbMalwareRuleOutput) CloudAppTenantIds() CasbMalwareRuleCloudAppTenantIdsPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRule) CasbMalwareRuleCloudAppTenantIdsPtrOutput { return v.CloudAppTenantIds }).(CasbMalwareRuleCloudAppTenantIdsPtrOutput)
}

// Name-ID pairs of the cloud application tenants for which the rule is applied. If the name-ID pairs of the cloud
// application tenants are not specified, the rule is applied to all tenants.
func (o CasbMalwareRuleOutput) CloudAppTenants() CasbMalwareRuleCloudAppTenantsPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRule) CasbMalwareRuleCloudAppTenantsPtrOutput { return v.CloudAppTenants }).(CasbMalwareRuleCloudAppTenantsPtrOutput)
}

// list of Labels that are applicable to the rule.
func (o CasbMalwareRuleOutput) Labels() CasbMalwareRuleLabelsPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRule) CasbMalwareRuleLabelsPtrOutput { return v.Labels }).(CasbMalwareRuleLabelsPtrOutput)
}

func (o CasbMalwareRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CasbMalwareRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CasbMalwareRuleOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRule) pulumi.IntPtrOutput { return v.Order }).(pulumi.IntPtrOutput)
}

// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
// data
func (o CasbMalwareRuleOutput) QuarantineLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRule) pulumi.StringPtrOutput { return v.QuarantineLocation }).(pulumi.StringPtrOutput)
}

// A unique identifier assigned to the forwarding rule
func (o CasbMalwareRuleOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *CasbMalwareRule) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

// Enables or disables the scan inbound email link
func (o CasbMalwareRuleOutput) ScanInboundEmailLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRule) pulumi.StringPtrOutput { return v.ScanInboundEmailLink }).(pulumi.StringPtrOutput)
}

func (o CasbMalwareRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRule) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

func (o CasbMalwareRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRule) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type CasbMalwareRuleArrayOutput struct{ *pulumi.OutputState }

func (CasbMalwareRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CasbMalwareRule)(nil)).Elem()
}

func (o CasbMalwareRuleArrayOutput) ToCasbMalwareRuleArrayOutput() CasbMalwareRuleArrayOutput {
	return o
}

func (o CasbMalwareRuleArrayOutput) ToCasbMalwareRuleArrayOutputWithContext(ctx context.Context) CasbMalwareRuleArrayOutput {
	return o
}

func (o CasbMalwareRuleArrayOutput) Index(i pulumi.IntInput) CasbMalwareRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CasbMalwareRule {
		return vs[0].([]*CasbMalwareRule)[vs[1].(int)]
	}).(CasbMalwareRuleOutput)
}

type CasbMalwareRuleMapOutput struct{ *pulumi.OutputState }

func (CasbMalwareRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CasbMalwareRule)(nil)).Elem()
}

func (o CasbMalwareRuleMapOutput) ToCasbMalwareRuleMapOutput() CasbMalwareRuleMapOutput {
	return o
}

func (o CasbMalwareRuleMapOutput) ToCasbMalwareRuleMapOutputWithContext(ctx context.Context) CasbMalwareRuleMapOutput {
	return o
}

func (o CasbMalwareRuleMapOutput) MapIndex(k pulumi.StringInput) CasbMalwareRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CasbMalwareRule {
		return vs[0].(map[string]*CasbMalwareRule)[vs[1].(string)]
	}).(CasbMalwareRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CasbMalwareRuleInput)(nil)).Elem(), &CasbMalwareRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*CasbMalwareRuleArrayInput)(nil)).Elem(), CasbMalwareRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CasbMalwareRuleMapInput)(nil)).Elem(), CasbMalwareRuleMap{})
	pulumi.RegisterOutputType(CasbMalwareRuleOutput{})
	pulumi.RegisterOutputType(CasbMalwareRuleArrayOutput{})
	pulumi.RegisterOutputType(CasbMalwareRuleMapOutput{})
}
