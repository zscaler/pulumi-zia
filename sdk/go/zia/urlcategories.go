// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/about-url-categories)
// * [API documentation](https://help.zscaler.com/zia/url-categories#/urlCategories-get)
//
// The **zia_url_categories** resource creates and manages a new custom URL category. If keywords are included within the request, they will be added to the new category.
//
// ## Example Usage
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// **zia_url_categories** can be imported by using `<CATEGORY_ID>` or `<CATEGORY_NAME>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zia:index/uRLCategories:URLCategories example <category_id>
// ```
//
// or
//
// ```sh
// $ pulumi import zia:index/uRLCategories:URLCategories example <category_name>
// ```
//
// ⚠️ **NOTE :**:  This provider only supports the importing of custom URL categories. The importing of built-in categories is not supported.
type URLCategories struct {
	pulumi.CustomResourceState

	CategoryId pulumi.StringOutput `pulumi:"categoryId"`
	// Name of the URL category. This is only required for custom URL categories.
	ConfiguredName                       pulumi.StringPtrOutput        `pulumi:"configuredName"`
	CustomCategory                       pulumi.BoolPtrOutput          `pulumi:"customCategory"`
	CustomIpRangesCount                  pulumi.IntOutput              `pulumi:"customIpRangesCount"`
	CustomUrlsCount                      pulumi.IntOutput              `pulumi:"customUrlsCount"`
	DbCategorizedUrls                    pulumi.StringArrayOutput      `pulumi:"dbCategorizedUrls"`
	Description                          pulumi.StringPtrOutput        `pulumi:"description"`
	Editable                             pulumi.BoolOutput             `pulumi:"editable"`
	IpRanges                             pulumi.StringArrayOutput      `pulumi:"ipRanges"`
	IpRangesRetainingParentCategories    pulumi.StringArrayOutput      `pulumi:"ipRangesRetainingParentCategories"`
	IpRangesRetainingParentCategoryCount pulumi.IntOutput              `pulumi:"ipRangesRetainingParentCategoryCount"`
	Keywords                             pulumi.StringArrayOutput      `pulumi:"keywords"`
	KeywordsRetainingParentCategories    pulumi.StringArrayOutput      `pulumi:"keywordsRetainingParentCategories"`
	Scopes                               URLCategoriesScopeArrayOutput `pulumi:"scopes"`
	// Super Category of the URL category. This field is required when creating custom URL categories.
	SuperCategory                    pulumi.StringPtrOutput              `pulumi:"superCategory"`
	Type                             pulumi.StringPtrOutput              `pulumi:"type"`
	UrlKeywordCounts                 URLCategoriesUrlKeywordCountsOutput `pulumi:"urlKeywordCounts"`
	Urls                             pulumi.StringArrayOutput            `pulumi:"urls"`
	UrlsRetainingParentCategoryCount pulumi.IntOutput                    `pulumi:"urlsRetainingParentCategoryCount"`
}

// NewURLCategories registers a new resource with the given unique name, arguments, and options.
func NewURLCategories(ctx *pulumi.Context,
	name string, args *URLCategoriesArgs, opts ...pulumi.ResourceOption) (*URLCategories, error) {
	if args == nil {
		args = &URLCategoriesArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource URLCategories
	err := ctx.RegisterResource("zia:index/uRLCategories:URLCategories", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURLCategories gets an existing URLCategories resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetURLCategories(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *URLCategoriesState, opts ...pulumi.ResourceOption) (*URLCategories, error) {
	var resource URLCategories
	err := ctx.ReadResource("zia:index/uRLCategories:URLCategories", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering URLCategories resources.
type urlcategoriesState struct {
	CategoryId *string `pulumi:"categoryId"`
	// Name of the URL category. This is only required for custom URL categories.
	ConfiguredName                       *string              `pulumi:"configuredName"`
	CustomCategory                       *bool                `pulumi:"customCategory"`
	CustomIpRangesCount                  *int                 `pulumi:"customIpRangesCount"`
	CustomUrlsCount                      *int                 `pulumi:"customUrlsCount"`
	DbCategorizedUrls                    []string             `pulumi:"dbCategorizedUrls"`
	Description                          *string              `pulumi:"description"`
	Editable                             *bool                `pulumi:"editable"`
	IpRanges                             []string             `pulumi:"ipRanges"`
	IpRangesRetainingParentCategories    []string             `pulumi:"ipRangesRetainingParentCategories"`
	IpRangesRetainingParentCategoryCount *int                 `pulumi:"ipRangesRetainingParentCategoryCount"`
	Keywords                             []string             `pulumi:"keywords"`
	KeywordsRetainingParentCategories    []string             `pulumi:"keywordsRetainingParentCategories"`
	Scopes                               []URLCategoriesScope `pulumi:"scopes"`
	// Super Category of the URL category. This field is required when creating custom URL categories.
	SuperCategory                    *string                        `pulumi:"superCategory"`
	Type                             *string                        `pulumi:"type"`
	UrlKeywordCounts                 *URLCategoriesUrlKeywordCounts `pulumi:"urlKeywordCounts"`
	Urls                             []string                       `pulumi:"urls"`
	UrlsRetainingParentCategoryCount *int                           `pulumi:"urlsRetainingParentCategoryCount"`
}

type URLCategoriesState struct {
	CategoryId pulumi.StringPtrInput
	// Name of the URL category. This is only required for custom URL categories.
	ConfiguredName                       pulumi.StringPtrInput
	CustomCategory                       pulumi.BoolPtrInput
	CustomIpRangesCount                  pulumi.IntPtrInput
	CustomUrlsCount                      pulumi.IntPtrInput
	DbCategorizedUrls                    pulumi.StringArrayInput
	Description                          pulumi.StringPtrInput
	Editable                             pulumi.BoolPtrInput
	IpRanges                             pulumi.StringArrayInput
	IpRangesRetainingParentCategories    pulumi.StringArrayInput
	IpRangesRetainingParentCategoryCount pulumi.IntPtrInput
	Keywords                             pulumi.StringArrayInput
	KeywordsRetainingParentCategories    pulumi.StringArrayInput
	Scopes                               URLCategoriesScopeArrayInput
	// Super Category of the URL category. This field is required when creating custom URL categories.
	SuperCategory                    pulumi.StringPtrInput
	Type                             pulumi.StringPtrInput
	UrlKeywordCounts                 URLCategoriesUrlKeywordCountsPtrInput
	Urls                             pulumi.StringArrayInput
	UrlsRetainingParentCategoryCount pulumi.IntPtrInput
}

func (URLCategoriesState) ElementType() reflect.Type {
	return reflect.TypeOf((*urlcategoriesState)(nil)).Elem()
}

type urlcategoriesArgs struct {
	// Name of the URL category. This is only required for custom URL categories.
	ConfiguredName                       *string              `pulumi:"configuredName"`
	CustomCategory                       *bool                `pulumi:"customCategory"`
	CustomIpRangesCount                  *int                 `pulumi:"customIpRangesCount"`
	CustomUrlsCount                      *int                 `pulumi:"customUrlsCount"`
	DbCategorizedUrls                    []string             `pulumi:"dbCategorizedUrls"`
	Description                          *string              `pulumi:"description"`
	Editable                             *bool                `pulumi:"editable"`
	IpRanges                             []string             `pulumi:"ipRanges"`
	IpRangesRetainingParentCategories    []string             `pulumi:"ipRangesRetainingParentCategories"`
	IpRangesRetainingParentCategoryCount *int                 `pulumi:"ipRangesRetainingParentCategoryCount"`
	Keywords                             []string             `pulumi:"keywords"`
	KeywordsRetainingParentCategories    []string             `pulumi:"keywordsRetainingParentCategories"`
	Scopes                               []URLCategoriesScope `pulumi:"scopes"`
	// Super Category of the URL category. This field is required when creating custom URL categories.
	SuperCategory                    *string                        `pulumi:"superCategory"`
	Type                             *string                        `pulumi:"type"`
	UrlKeywordCounts                 *URLCategoriesUrlKeywordCounts `pulumi:"urlKeywordCounts"`
	Urls                             []string                       `pulumi:"urls"`
	UrlsRetainingParentCategoryCount *int                           `pulumi:"urlsRetainingParentCategoryCount"`
}

// The set of arguments for constructing a URLCategories resource.
type URLCategoriesArgs struct {
	// Name of the URL category. This is only required for custom URL categories.
	ConfiguredName                       pulumi.StringPtrInput
	CustomCategory                       pulumi.BoolPtrInput
	CustomIpRangesCount                  pulumi.IntPtrInput
	CustomUrlsCount                      pulumi.IntPtrInput
	DbCategorizedUrls                    pulumi.StringArrayInput
	Description                          pulumi.StringPtrInput
	Editable                             pulumi.BoolPtrInput
	IpRanges                             pulumi.StringArrayInput
	IpRangesRetainingParentCategories    pulumi.StringArrayInput
	IpRangesRetainingParentCategoryCount pulumi.IntPtrInput
	Keywords                             pulumi.StringArrayInput
	KeywordsRetainingParentCategories    pulumi.StringArrayInput
	Scopes                               URLCategoriesScopeArrayInput
	// Super Category of the URL category. This field is required when creating custom URL categories.
	SuperCategory                    pulumi.StringPtrInput
	Type                             pulumi.StringPtrInput
	UrlKeywordCounts                 URLCategoriesUrlKeywordCountsPtrInput
	Urls                             pulumi.StringArrayInput
	UrlsRetainingParentCategoryCount pulumi.IntPtrInput
}

func (URLCategoriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*urlcategoriesArgs)(nil)).Elem()
}

type URLCategoriesInput interface {
	pulumi.Input

	ToURLCategoriesOutput() URLCategoriesOutput
	ToURLCategoriesOutputWithContext(ctx context.Context) URLCategoriesOutput
}

func (*URLCategories) ElementType() reflect.Type {
	return reflect.TypeOf((**URLCategories)(nil)).Elem()
}

func (i *URLCategories) ToURLCategoriesOutput() URLCategoriesOutput {
	return i.ToURLCategoriesOutputWithContext(context.Background())
}

func (i *URLCategories) ToURLCategoriesOutputWithContext(ctx context.Context) URLCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesOutput)
}

// URLCategoriesArrayInput is an input type that accepts URLCategoriesArray and URLCategoriesArrayOutput values.
// You can construct a concrete instance of `URLCategoriesArrayInput` via:
//
//	URLCategoriesArray{ URLCategoriesArgs{...} }
type URLCategoriesArrayInput interface {
	pulumi.Input

	ToURLCategoriesArrayOutput() URLCategoriesArrayOutput
	ToURLCategoriesArrayOutputWithContext(context.Context) URLCategoriesArrayOutput
}

type URLCategoriesArray []URLCategoriesInput

func (URLCategoriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*URLCategories)(nil)).Elem()
}

func (i URLCategoriesArray) ToURLCategoriesArrayOutput() URLCategoriesArrayOutput {
	return i.ToURLCategoriesArrayOutputWithContext(context.Background())
}

func (i URLCategoriesArray) ToURLCategoriesArrayOutputWithContext(ctx context.Context) URLCategoriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesArrayOutput)
}

// URLCategoriesMapInput is an input type that accepts URLCategoriesMap and URLCategoriesMapOutput values.
// You can construct a concrete instance of `URLCategoriesMapInput` via:
//
//	URLCategoriesMap{ "key": URLCategoriesArgs{...} }
type URLCategoriesMapInput interface {
	pulumi.Input

	ToURLCategoriesMapOutput() URLCategoriesMapOutput
	ToURLCategoriesMapOutputWithContext(context.Context) URLCategoriesMapOutput
}

type URLCategoriesMap map[string]URLCategoriesInput

func (URLCategoriesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*URLCategories)(nil)).Elem()
}

func (i URLCategoriesMap) ToURLCategoriesMapOutput() URLCategoriesMapOutput {
	return i.ToURLCategoriesMapOutputWithContext(context.Background())
}

func (i URLCategoriesMap) ToURLCategoriesMapOutputWithContext(ctx context.Context) URLCategoriesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesMapOutput)
}

type URLCategoriesOutput struct{ *pulumi.OutputState }

func (URLCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**URLCategories)(nil)).Elem()
}

func (o URLCategoriesOutput) ToURLCategoriesOutput() URLCategoriesOutput {
	return o
}

func (o URLCategoriesOutput) ToURLCategoriesOutputWithContext(ctx context.Context) URLCategoriesOutput {
	return o
}

func (o URLCategoriesOutput) CategoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.StringOutput { return v.CategoryId }).(pulumi.StringOutput)
}

// Name of the URL category. This is only required for custom URL categories.
func (o URLCategoriesOutput) ConfiguredName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.StringPtrOutput { return v.ConfiguredName }).(pulumi.StringPtrOutput)
}

func (o URLCategoriesOutput) CustomCategory() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.BoolPtrOutput { return v.CustomCategory }).(pulumi.BoolPtrOutput)
}

func (o URLCategoriesOutput) CustomIpRangesCount() pulumi.IntOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.IntOutput { return v.CustomIpRangesCount }).(pulumi.IntOutput)
}

func (o URLCategoriesOutput) CustomUrlsCount() pulumi.IntOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.IntOutput { return v.CustomUrlsCount }).(pulumi.IntOutput)
}

func (o URLCategoriesOutput) DbCategorizedUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.StringArrayOutput { return v.DbCategorizedUrls }).(pulumi.StringArrayOutput)
}

func (o URLCategoriesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o URLCategoriesOutput) Editable() pulumi.BoolOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.BoolOutput { return v.Editable }).(pulumi.BoolOutput)
}

func (o URLCategoriesOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.StringArrayOutput { return v.IpRanges }).(pulumi.StringArrayOutput)
}

func (o URLCategoriesOutput) IpRangesRetainingParentCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.StringArrayOutput { return v.IpRangesRetainingParentCategories }).(pulumi.StringArrayOutput)
}

func (o URLCategoriesOutput) IpRangesRetainingParentCategoryCount() pulumi.IntOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.IntOutput { return v.IpRangesRetainingParentCategoryCount }).(pulumi.IntOutput)
}

func (o URLCategoriesOutput) Keywords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.StringArrayOutput { return v.Keywords }).(pulumi.StringArrayOutput)
}

func (o URLCategoriesOutput) KeywordsRetainingParentCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.StringArrayOutput { return v.KeywordsRetainingParentCategories }).(pulumi.StringArrayOutput)
}

func (o URLCategoriesOutput) Scopes() URLCategoriesScopeArrayOutput {
	return o.ApplyT(func(v *URLCategories) URLCategoriesScopeArrayOutput { return v.Scopes }).(URLCategoriesScopeArrayOutput)
}

// Super Category of the URL category. This field is required when creating custom URL categories.
func (o URLCategoriesOutput) SuperCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.StringPtrOutput { return v.SuperCategory }).(pulumi.StringPtrOutput)
}

func (o URLCategoriesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

func (o URLCategoriesOutput) UrlKeywordCounts() URLCategoriesUrlKeywordCountsOutput {
	return o.ApplyT(func(v *URLCategories) URLCategoriesUrlKeywordCountsOutput { return v.UrlKeywordCounts }).(URLCategoriesUrlKeywordCountsOutput)
}

func (o URLCategoriesOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.StringArrayOutput { return v.Urls }).(pulumi.StringArrayOutput)
}

func (o URLCategoriesOutput) UrlsRetainingParentCategoryCount() pulumi.IntOutput {
	return o.ApplyT(func(v *URLCategories) pulumi.IntOutput { return v.UrlsRetainingParentCategoryCount }).(pulumi.IntOutput)
}

type URLCategoriesArrayOutput struct{ *pulumi.OutputState }

func (URLCategoriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*URLCategories)(nil)).Elem()
}

func (o URLCategoriesArrayOutput) ToURLCategoriesArrayOutput() URLCategoriesArrayOutput {
	return o
}

func (o URLCategoriesArrayOutput) ToURLCategoriesArrayOutputWithContext(ctx context.Context) URLCategoriesArrayOutput {
	return o
}

func (o URLCategoriesArrayOutput) Index(i pulumi.IntInput) URLCategoriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *URLCategories {
		return vs[0].([]*URLCategories)[vs[1].(int)]
	}).(URLCategoriesOutput)
}

type URLCategoriesMapOutput struct{ *pulumi.OutputState }

func (URLCategoriesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*URLCategories)(nil)).Elem()
}

func (o URLCategoriesMapOutput) ToURLCategoriesMapOutput() URLCategoriesMapOutput {
	return o
}

func (o URLCategoriesMapOutput) ToURLCategoriesMapOutputWithContext(ctx context.Context) URLCategoriesMapOutput {
	return o
}

func (o URLCategoriesMapOutput) MapIndex(k pulumi.StringInput) URLCategoriesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *URLCategories {
		return vs[0].(map[string]*URLCategories)[vs[1].(string)]
	}).(URLCategoriesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*URLCategoriesInput)(nil)).Elem(), &URLCategories{})
	pulumi.RegisterInputType(reflect.TypeOf((*URLCategoriesArrayInput)(nil)).Elem(), URLCategoriesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*URLCategoriesMapInput)(nil)).Elem(), URLCategoriesMap{})
	pulumi.RegisterOutputType(URLCategoriesOutput{})
	pulumi.RegisterOutputType(URLCategoriesArrayOutput{})
	pulumi.RegisterOutputType(URLCategoriesMapOutput{})
}
