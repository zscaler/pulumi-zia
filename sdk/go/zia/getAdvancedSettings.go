// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/configuring-advanced-settings)
// * [API documentation](https://help.zscaler.com/zia/advanced-settings#/advancedSettings-get)
//
// The **zia_advanced_settings** Retrieves information about the advanced settings configured in the ZIA Admin Portal. To learn more see [Configuring Advanced Settings](https://help.zscaler.com/zia/configuring-advanced-settings)
//
// ## Example Usage
func LookupAdvancedSettings(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*LookupAdvancedSettingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAdvancedSettingsResult
	err := ctx.Invoke("zia:index/getAdvancedSettings:getAdvancedSettings", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getAdvancedSettings.
type LookupAdvancedSettingsResult struct {
	AuthBypassApps                                         []string `pulumi:"authBypassApps"`
	AuthBypassUrlCategories                                []string `pulumi:"authBypassUrlCategories"`
	AuthBypassUrls                                         []string `pulumi:"authBypassUrls"`
	BasicBypassApps                                        []string `pulumi:"basicBypassApps"`
	BasicBypassUrlCategories                               []string `pulumi:"basicBypassUrlCategories"`
	BlockConnectHostSniMismatch                            bool     `pulumi:"blockConnectHostSniMismatch"`
	BlockDomainFrontingApps                                []string `pulumi:"blockDomainFrontingApps"`
	BlockDomainFrontingOnHostHeader                        bool     `pulumi:"blockDomainFrontingOnHostHeader"`
	BlockHttpTunnelOnNonHttpPorts                          bool     `pulumi:"blockHttpTunnelOnNonHttpPorts"`
	BlockNonCompliantHttpRequestOnHttpPorts                bool     `pulumi:"blockNonCompliantHttpRequestOnHttpPorts"`
	BlockNonHttpOnHttpPortEnabled                          bool     `pulumi:"blockNonHttpOnHttpPortEnabled"`
	CascadeUrlFiltering                                    bool     `pulumi:"cascadeUrlFiltering"`
	DigestAuthBypassApps                                   []string `pulumi:"digestAuthBypassApps"`
	DigestAuthBypassUrlCategories                          []string `pulumi:"digestAuthBypassUrlCategories"`
	DigestAuthBypassUrls                                   []string `pulumi:"digestAuthBypassUrls"`
	DnsResolutionOnTransparentProxyApps                    []string `pulumi:"dnsResolutionOnTransparentProxyApps"`
	DnsResolutionOnTransparentProxyExemptApps              []string `pulumi:"dnsResolutionOnTransparentProxyExemptApps"`
	DnsResolutionOnTransparentProxyExemptUrlCategories     []string `pulumi:"dnsResolutionOnTransparentProxyExemptUrlCategories"`
	DnsResolutionOnTransparentProxyExemptUrls              []string `pulumi:"dnsResolutionOnTransparentProxyExemptUrls"`
	DnsResolutionOnTransparentProxyIpv6Apps                []string `pulumi:"dnsResolutionOnTransparentProxyIpv6Apps"`
	DnsResolutionOnTransparentProxyIpv6ExemptApps          []string `pulumi:"dnsResolutionOnTransparentProxyIpv6ExemptApps"`
	DnsResolutionOnTransparentProxyIpv6ExemptUrlCategories []string `pulumi:"dnsResolutionOnTransparentProxyIpv6ExemptUrlCategories"`
	DnsResolutionOnTransparentProxyIpv6UrlCategories       []string `pulumi:"dnsResolutionOnTransparentProxyIpv6UrlCategories"`
	DnsResolutionOnTransparentProxyUrlCategories           []string `pulumi:"dnsResolutionOnTransparentProxyUrlCategories"`
	DnsResolutionOnTransparentProxyUrls                    []string `pulumi:"dnsResolutionOnTransparentProxyUrls"`
	DomainFrontingBypassUrlCategories                      []string `pulumi:"domainFrontingBypassUrlCategories"`
	DynamicUserRiskEnabled                                 bool     `pulumi:"dynamicUserRiskEnabled"`
	EcsForAllEnabled                                       bool     `pulumi:"ecsForAllEnabled"`
	EnableAdminRankAccess                                  bool     `pulumi:"enableAdminRankAccess"`
	EnableDnsResolutionOnTransparentProxy                  bool     `pulumi:"enableDnsResolutionOnTransparentProxy"`
	EnableEvaluatePolicyOnGlobalSslBypass                  bool     `pulumi:"enableEvaluatePolicyOnGlobalSslBypass"`
	EnableIpv6DnsOptimizationOnAllTransparentProxy         bool     `pulumi:"enableIpv6DnsOptimizationOnAllTransparentProxy"`
	EnableIpv6DnsResolutionOnTransparentProxy              bool     `pulumi:"enableIpv6DnsResolutionOnTransparentProxy"`
	EnableOffice365                                        bool     `pulumi:"enableOffice365"`
	EnablePolicyForUnauthenticatedTraffic                  bool     `pulumi:"enablePolicyForUnauthenticatedTraffic"`
	EnforceSurrogateIpForWindowsApp                        bool     `pulumi:"enforceSurrogateIpForWindowsApp"`
	Http2NonbrowserTrafficEnabled                          bool     `pulumi:"http2NonbrowserTrafficEnabled"`
	HttpRangeHeaderRemoveUrlCategories                     []string `pulumi:"httpRangeHeaderRemoveUrlCategories"`
	// The provider-assigned unique ID for this managed resource.
	Id                                                 string   `pulumi:"id"`
	KerberosBypassApps                                 []string `pulumi:"kerberosBypassApps"`
	KerberosBypassUrlCategories                        []string `pulumi:"kerberosBypassUrlCategories"`
	KerberosBypassUrls                                 []string `pulumi:"kerberosBypassUrls"`
	LogInternalIp                                      bool     `pulumi:"logInternalIp"`
	PreferSniOverConnHost                              bool     `pulumi:"preferSniOverConnHost"`
	PreferSniOverConnHostApps                          []string `pulumi:"preferSniOverConnHostApps"`
	SipaXffHeaderEnabled                               bool     `pulumi:"sipaXffHeaderEnabled"`
	SniDnsOptimizationBypassUrlCategories              []string `pulumi:"sniDnsOptimizationBypassUrlCategories"`
	TrackHttpTunnelOnHttpPorts                         bool     `pulumi:"trackHttpTunnelOnHttpPorts"`
	UiSessionTimeout                                   int      `pulumi:"uiSessionTimeout"`
	ZscalerClientConnector1AndPacRoadWarriorInFirewall bool     `pulumi:"zscalerClientConnector1AndPacRoadWarriorInFirewall"`
}

func LookupAdvancedSettingsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) LookupAdvancedSettingsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (LookupAdvancedSettingsResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("zia:index/getAdvancedSettings:getAdvancedSettings", nil, LookupAdvancedSettingsResultOutput{}, options).(LookupAdvancedSettingsResultOutput), nil
	}).(LookupAdvancedSettingsResultOutput)
}

// A collection of values returned by getAdvancedSettings.
type LookupAdvancedSettingsResultOutput struct{ *pulumi.OutputState }

func (LookupAdvancedSettingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAdvancedSettingsResult)(nil)).Elem()
}

func (o LookupAdvancedSettingsResultOutput) ToLookupAdvancedSettingsResultOutput() LookupAdvancedSettingsResultOutput {
	return o
}

func (o LookupAdvancedSettingsResultOutput) ToLookupAdvancedSettingsResultOutputWithContext(ctx context.Context) LookupAdvancedSettingsResultOutput {
	return o
}

func (o LookupAdvancedSettingsResultOutput) AuthBypassApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.AuthBypassApps }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) AuthBypassUrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.AuthBypassUrlCategories }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) AuthBypassUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.AuthBypassUrls }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) BasicBypassApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.BasicBypassApps }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) BasicBypassUrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.BasicBypassUrlCategories }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) BlockConnectHostSniMismatch() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.BlockConnectHostSniMismatch }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) BlockDomainFrontingApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.BlockDomainFrontingApps }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) BlockDomainFrontingOnHostHeader() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.BlockDomainFrontingOnHostHeader }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) BlockHttpTunnelOnNonHttpPorts() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.BlockHttpTunnelOnNonHttpPorts }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) BlockNonCompliantHttpRequestOnHttpPorts() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.BlockNonCompliantHttpRequestOnHttpPorts }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) BlockNonHttpOnHttpPortEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.BlockNonHttpOnHttpPortEnabled }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) CascadeUrlFiltering() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.CascadeUrlFiltering }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) DigestAuthBypassApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.DigestAuthBypassApps }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DigestAuthBypassUrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.DigestAuthBypassUrlCategories }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DigestAuthBypassUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.DigestAuthBypassUrls }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DnsResolutionOnTransparentProxyApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.DnsResolutionOnTransparentProxyApps }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DnsResolutionOnTransparentProxyExemptApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.DnsResolutionOnTransparentProxyExemptApps }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DnsResolutionOnTransparentProxyExemptUrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string {
		return v.DnsResolutionOnTransparentProxyExemptUrlCategories
	}).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DnsResolutionOnTransparentProxyExemptUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.DnsResolutionOnTransparentProxyExemptUrls }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DnsResolutionOnTransparentProxyIpv6Apps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.DnsResolutionOnTransparentProxyIpv6Apps }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DnsResolutionOnTransparentProxyIpv6ExemptApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.DnsResolutionOnTransparentProxyIpv6ExemptApps }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DnsResolutionOnTransparentProxyIpv6ExemptUrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string {
		return v.DnsResolutionOnTransparentProxyIpv6ExemptUrlCategories
	}).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DnsResolutionOnTransparentProxyIpv6UrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string {
		return v.DnsResolutionOnTransparentProxyIpv6UrlCategories
	}).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DnsResolutionOnTransparentProxyUrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.DnsResolutionOnTransparentProxyUrlCategories }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DnsResolutionOnTransparentProxyUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.DnsResolutionOnTransparentProxyUrls }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DomainFrontingBypassUrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.DomainFrontingBypassUrlCategories }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) DynamicUserRiskEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.DynamicUserRiskEnabled }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) EcsForAllEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.EcsForAllEnabled }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) EnableAdminRankAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.EnableAdminRankAccess }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) EnableDnsResolutionOnTransparentProxy() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.EnableDnsResolutionOnTransparentProxy }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) EnableEvaluatePolicyOnGlobalSslBypass() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.EnableEvaluatePolicyOnGlobalSslBypass }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) EnableIpv6DnsOptimizationOnAllTransparentProxy() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.EnableIpv6DnsOptimizationOnAllTransparentProxy }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) EnableIpv6DnsResolutionOnTransparentProxy() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.EnableIpv6DnsResolutionOnTransparentProxy }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) EnableOffice365() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.EnableOffice365 }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) EnablePolicyForUnauthenticatedTraffic() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.EnablePolicyForUnauthenticatedTraffic }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) EnforceSurrogateIpForWindowsApp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.EnforceSurrogateIpForWindowsApp }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) Http2NonbrowserTrafficEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.Http2NonbrowserTrafficEnabled }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) HttpRangeHeaderRemoveUrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.HttpRangeHeaderRemoveUrlCategories }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAdvancedSettingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAdvancedSettingsResultOutput) KerberosBypassApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.KerberosBypassApps }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) KerberosBypassUrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.KerberosBypassUrlCategories }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) KerberosBypassUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.KerberosBypassUrls }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) LogInternalIp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.LogInternalIp }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) PreferSniOverConnHost() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.PreferSniOverConnHost }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) PreferSniOverConnHostApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.PreferSniOverConnHostApps }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) SipaXffHeaderEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.SipaXffHeaderEnabled }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) SniDnsOptimizationBypassUrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) []string { return v.SniDnsOptimizationBypassUrlCategories }).(pulumi.StringArrayOutput)
}

func (o LookupAdvancedSettingsResultOutput) TrackHttpTunnelOnHttpPorts() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.TrackHttpTunnelOnHttpPorts }).(pulumi.BoolOutput)
}

func (o LookupAdvancedSettingsResultOutput) UiSessionTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) int { return v.UiSessionTimeout }).(pulumi.IntOutput)
}

func (o LookupAdvancedSettingsResultOutput) ZscalerClientConnector1AndPacRoadWarriorInFirewall() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAdvancedSettingsResult) bool { return v.ZscalerClientConnector1AndPacRoadWarriorInFirewall }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAdvancedSettingsResultOutput{})
}
