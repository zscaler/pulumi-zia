// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// Use the **zia_atp_malware_policy** data source to retrieves information about the security exceptions configured for the Malware Protection policy. To learn more see [Configuring Malware Protection Policy](https://help.zscaler.com/unified/configuring-malware-protection-policy)
//
// ## Example Usage
func GetMalwarePolicy(ctx *pulumi.Context, args *GetMalwarePolicyArgs, opts ...pulumi.InvokeOption) (*GetMalwarePolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMalwarePolicyResult
	err := ctx.Invoke("zia:index/getMalwarePolicy:getMalwarePolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMalwarePolicy.
type GetMalwarePolicyArgs struct {
	BlockPasswordProtectedArchiveFiles *bool `pulumi:"blockPasswordProtectedArchiveFiles"`
	BlockUnscannableFiles              *bool `pulumi:"blockUnscannableFiles"`
}

// A collection of values returned by getMalwarePolicy.
type GetMalwarePolicyResult struct {
	BlockPasswordProtectedArchiveFiles bool `pulumi:"blockPasswordProtectedArchiveFiles"`
	BlockUnscannableFiles              bool `pulumi:"blockUnscannableFiles"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetMalwarePolicyOutput(ctx *pulumi.Context, args GetMalwarePolicyOutputArgs, opts ...pulumi.InvokeOption) GetMalwarePolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMalwarePolicyResultOutput, error) {
			args := v.(GetMalwarePolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zia:index/getMalwarePolicy:getMalwarePolicy", args, GetMalwarePolicyResultOutput{}, options).(GetMalwarePolicyResultOutput), nil
		}).(GetMalwarePolicyResultOutput)
}

// A collection of arguments for invoking getMalwarePolicy.
type GetMalwarePolicyOutputArgs struct {
	BlockPasswordProtectedArchiveFiles pulumi.BoolPtrInput `pulumi:"blockPasswordProtectedArchiveFiles"`
	BlockUnscannableFiles              pulumi.BoolPtrInput `pulumi:"blockUnscannableFiles"`
}

func (GetMalwarePolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMalwarePolicyArgs)(nil)).Elem()
}

// A collection of values returned by getMalwarePolicy.
type GetMalwarePolicyResultOutput struct{ *pulumi.OutputState }

func (GetMalwarePolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMalwarePolicyResult)(nil)).Elem()
}

func (o GetMalwarePolicyResultOutput) ToGetMalwarePolicyResultOutput() GetMalwarePolicyResultOutput {
	return o
}

func (o GetMalwarePolicyResultOutput) ToGetMalwarePolicyResultOutputWithContext(ctx context.Context) GetMalwarePolicyResultOutput {
	return o
}

func (o GetMalwarePolicyResultOutput) BlockPasswordProtectedArchiveFiles() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwarePolicyResult) bool { return v.BlockPasswordProtectedArchiveFiles }).(pulumi.BoolOutput)
}

func (o GetMalwarePolicyResultOutput) BlockUnscannableFiles() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMalwarePolicyResult) bool { return v.BlockUnscannableFiles }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMalwarePolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMalwarePolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMalwarePolicyResultOutput{})
}
