// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// The **zia_firewall_filtering_destination_groups** resource allows the creation and management of ZIA Cloud Firewall IP destination groups in the Zscaler Internet Access. This resource can then be associated with a ZIA cloud firewall filtering rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zia/sdk/go/zia"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// IP Destination Group of Type DSTN_FQDN
//			_, err := zia.NewFirewallFilteringDestinationGroups(ctx, "dstnFqdn", &zia.FirewallFilteringDestinationGroupsArgs{
//				Addresses: pulumi.StringArray{
//					pulumi.String("test1.acme.com"),
//					pulumi.String("test2.acme.com"),
//					pulumi.String("test3.acme.com"),
//				},
//				Description: pulumi.String("Example Destination FQDN"),
//				Type:        pulumi.String("DSTN_FQDN"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zia/sdk/go/zia"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// IP Destination Group of Type DSTN_IP
//			_, err := zia.NewFirewallFilteringDestinationGroups(ctx, "exampleDstnIp", &zia.FirewallFilteringDestinationGroupsArgs{
//				Addresses: pulumi.StringArray{
//					pulumi.String("3.217.228.0-3.217.231.255"),
//					pulumi.String("3.235.112.0-3.235.119.255"),
//					pulumi.String("52.23.61.0-52.23.62.25"),
//					pulumi.String("35.80.88.0-35.80.95.255"),
//				},
//				Description: pulumi.String("Example Destination IP"),
//				Type:        pulumi.String("DSTN_IP"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zia/sdk/go/zia"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// IP Destination Group of Type DSTN_DOMAIN
//			_, err := zia.NewFirewallFilteringDestinationGroups(ctx, "exampleDstnDomain", &zia.FirewallFilteringDestinationGroupsArgs{
//				Addresses: pulumi.StringArray{
//					pulumi.String("acme.com"),
//					pulumi.String("acme1.com"),
//				},
//				Description: pulumi.String("Example Destination Domain"),
//				Type:        pulumi.String("DSTN_DOMAIN"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zia/sdk/go/zia"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// IP Destination Group of Type DSTN_OTHER
//			_, err := zia.NewFirewallFilteringDestinationGroups(ctx, "exampleDstnOther", &zia.FirewallFilteringDestinationGroupsArgs{
//				Countries: pulumi.StringArray{
//					pulumi.String("COUNTRY_CA"),
//				},
//				Description: pulumi.String("Example Destination Other"),
//				IpCategories: pulumi.StringArray{
//					pulumi.String("CUSTOM_01"),
//					pulumi.String("CUSTOM_02"),
//				},
//				Type: pulumi.String("DSTN_OTHER"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// **zia_firewall_filtering_destination_groups** can be imported by using `<GROUP_ID>` or `<GROUP_NAME>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zia:index/firewallFilteringDestinationGroups:FirewallFilteringDestinationGroups example <group_id>
// ```
//
// or
//
// ```sh
// $ pulumi import zia:index/firewallFilteringDestinationGroups:FirewallFilteringDestinationGroups example <group_name>
// ```
type FirewallFilteringDestinationGroups struct {
	pulumi.CustomResourceState

	// Destination IP addresses within the group
	Addresses pulumi.StringArrayOutput `pulumi:"addresses"`
	// Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination
	// countries.
	Countries pulumi.StringArrayOutput `pulumi:"countries"`
	// Additional information about the destination IP group
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Unique identifer for the destination IP group
	GroupId pulumi.IntOutput `pulumi:"groupId"`
	// List of URL categories for which rule must be applied
	IpCategories pulumi.StringArrayOutput `pulumi:"ipCategories"`
	// Destination IP group name
	Name pulumi.StringOutput `pulumi:"name"`
	// Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewFirewallFilteringDestinationGroups registers a new resource with the given unique name, arguments, and options.
func NewFirewallFilteringDestinationGroups(ctx *pulumi.Context,
	name string, args *FirewallFilteringDestinationGroupsArgs, opts ...pulumi.ResourceOption) (*FirewallFilteringDestinationGroups, error) {
	if args == nil {
		args = &FirewallFilteringDestinationGroupsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallFilteringDestinationGroups
	err := ctx.RegisterResource("zia:index/firewallFilteringDestinationGroups:FirewallFilteringDestinationGroups", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallFilteringDestinationGroups gets an existing FirewallFilteringDestinationGroups resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallFilteringDestinationGroups(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallFilteringDestinationGroupsState, opts ...pulumi.ResourceOption) (*FirewallFilteringDestinationGroups, error) {
	var resource FirewallFilteringDestinationGroups
	err := ctx.ReadResource("zia:index/firewallFilteringDestinationGroups:FirewallFilteringDestinationGroups", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallFilteringDestinationGroups resources.
type firewallFilteringDestinationGroupsState struct {
	// Destination IP addresses within the group
	Addresses []string `pulumi:"addresses"`
	// Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination
	// countries.
	Countries []string `pulumi:"countries"`
	// Additional information about the destination IP group
	Description *string `pulumi:"description"`
	// Unique identifer for the destination IP group
	GroupId *int `pulumi:"groupId"`
	// List of URL categories for which rule must be applied
	IpCategories []string `pulumi:"ipCategories"`
	// Destination IP group name
	Name *string `pulumi:"name"`
	// Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)
	Type *string `pulumi:"type"`
}

type FirewallFilteringDestinationGroupsState struct {
	// Destination IP addresses within the group
	Addresses pulumi.StringArrayInput
	// Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination
	// countries.
	Countries pulumi.StringArrayInput
	// Additional information about the destination IP group
	Description pulumi.StringPtrInput
	// Unique identifer for the destination IP group
	GroupId pulumi.IntPtrInput
	// List of URL categories for which rule must be applied
	IpCategories pulumi.StringArrayInput
	// Destination IP group name
	Name pulumi.StringPtrInput
	// Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)
	Type pulumi.StringPtrInput
}

func (FirewallFilteringDestinationGroupsState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallFilteringDestinationGroupsState)(nil)).Elem()
}

type firewallFilteringDestinationGroupsArgs struct {
	// Destination IP addresses within the group
	Addresses []string `pulumi:"addresses"`
	// Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination
	// countries.
	Countries []string `pulumi:"countries"`
	// Additional information about the destination IP group
	Description *string `pulumi:"description"`
	// List of URL categories for which rule must be applied
	IpCategories []string `pulumi:"ipCategories"`
	// Destination IP group name
	Name *string `pulumi:"name"`
	// Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a FirewallFilteringDestinationGroups resource.
type FirewallFilteringDestinationGroupsArgs struct {
	// Destination IP addresses within the group
	Addresses pulumi.StringArrayInput
	// Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination
	// countries.
	Countries pulumi.StringArrayInput
	// Additional information about the destination IP group
	Description pulumi.StringPtrInput
	// List of URL categories for which rule must be applied
	IpCategories pulumi.StringArrayInput
	// Destination IP group name
	Name pulumi.StringPtrInput
	// Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)
	Type pulumi.StringPtrInput
}

func (FirewallFilteringDestinationGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallFilteringDestinationGroupsArgs)(nil)).Elem()
}

type FirewallFilteringDestinationGroupsInput interface {
	pulumi.Input

	ToFirewallFilteringDestinationGroupsOutput() FirewallFilteringDestinationGroupsOutput
	ToFirewallFilteringDestinationGroupsOutputWithContext(ctx context.Context) FirewallFilteringDestinationGroupsOutput
}

func (*FirewallFilteringDestinationGroups) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallFilteringDestinationGroups)(nil)).Elem()
}

func (i *FirewallFilteringDestinationGroups) ToFirewallFilteringDestinationGroupsOutput() FirewallFilteringDestinationGroupsOutput {
	return i.ToFirewallFilteringDestinationGroupsOutputWithContext(context.Background())
}

func (i *FirewallFilteringDestinationGroups) ToFirewallFilteringDestinationGroupsOutputWithContext(ctx context.Context) FirewallFilteringDestinationGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFilteringDestinationGroupsOutput)
}

// FirewallFilteringDestinationGroupsArrayInput is an input type that accepts FirewallFilteringDestinationGroupsArray and FirewallFilteringDestinationGroupsArrayOutput values.
// You can construct a concrete instance of `FirewallFilteringDestinationGroupsArrayInput` via:
//
//	FirewallFilteringDestinationGroupsArray{ FirewallFilteringDestinationGroupsArgs{...} }
type FirewallFilteringDestinationGroupsArrayInput interface {
	pulumi.Input

	ToFirewallFilteringDestinationGroupsArrayOutput() FirewallFilteringDestinationGroupsArrayOutput
	ToFirewallFilteringDestinationGroupsArrayOutputWithContext(context.Context) FirewallFilteringDestinationGroupsArrayOutput
}

type FirewallFilteringDestinationGroupsArray []FirewallFilteringDestinationGroupsInput

func (FirewallFilteringDestinationGroupsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallFilteringDestinationGroups)(nil)).Elem()
}

func (i FirewallFilteringDestinationGroupsArray) ToFirewallFilteringDestinationGroupsArrayOutput() FirewallFilteringDestinationGroupsArrayOutput {
	return i.ToFirewallFilteringDestinationGroupsArrayOutputWithContext(context.Background())
}

func (i FirewallFilteringDestinationGroupsArray) ToFirewallFilteringDestinationGroupsArrayOutputWithContext(ctx context.Context) FirewallFilteringDestinationGroupsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFilteringDestinationGroupsArrayOutput)
}

// FirewallFilteringDestinationGroupsMapInput is an input type that accepts FirewallFilteringDestinationGroupsMap and FirewallFilteringDestinationGroupsMapOutput values.
// You can construct a concrete instance of `FirewallFilteringDestinationGroupsMapInput` via:
//
//	FirewallFilteringDestinationGroupsMap{ "key": FirewallFilteringDestinationGroupsArgs{...} }
type FirewallFilteringDestinationGroupsMapInput interface {
	pulumi.Input

	ToFirewallFilteringDestinationGroupsMapOutput() FirewallFilteringDestinationGroupsMapOutput
	ToFirewallFilteringDestinationGroupsMapOutputWithContext(context.Context) FirewallFilteringDestinationGroupsMapOutput
}

type FirewallFilteringDestinationGroupsMap map[string]FirewallFilteringDestinationGroupsInput

func (FirewallFilteringDestinationGroupsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallFilteringDestinationGroups)(nil)).Elem()
}

func (i FirewallFilteringDestinationGroupsMap) ToFirewallFilteringDestinationGroupsMapOutput() FirewallFilteringDestinationGroupsMapOutput {
	return i.ToFirewallFilteringDestinationGroupsMapOutputWithContext(context.Background())
}

func (i FirewallFilteringDestinationGroupsMap) ToFirewallFilteringDestinationGroupsMapOutputWithContext(ctx context.Context) FirewallFilteringDestinationGroupsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFilteringDestinationGroupsMapOutput)
}

type FirewallFilteringDestinationGroupsOutput struct{ *pulumi.OutputState }

func (FirewallFilteringDestinationGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallFilteringDestinationGroups)(nil)).Elem()
}

func (o FirewallFilteringDestinationGroupsOutput) ToFirewallFilteringDestinationGroupsOutput() FirewallFilteringDestinationGroupsOutput {
	return o
}

func (o FirewallFilteringDestinationGroupsOutput) ToFirewallFilteringDestinationGroupsOutputWithContext(ctx context.Context) FirewallFilteringDestinationGroupsOutput {
	return o
}

// Destination IP addresses within the group
func (o FirewallFilteringDestinationGroupsOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallFilteringDestinationGroups) pulumi.StringArrayOutput { return v.Addresses }).(pulumi.StringArrayOutput)
}

// Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination
// countries.
func (o FirewallFilteringDestinationGroupsOutput) Countries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallFilteringDestinationGroups) pulumi.StringArrayOutput { return v.Countries }).(pulumi.StringArrayOutput)
}

// Additional information about the destination IP group
func (o FirewallFilteringDestinationGroupsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallFilteringDestinationGroups) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Unique identifer for the destination IP group
func (o FirewallFilteringDestinationGroupsOutput) GroupId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallFilteringDestinationGroups) pulumi.IntOutput { return v.GroupId }).(pulumi.IntOutput)
}

// List of URL categories for which rule must be applied
func (o FirewallFilteringDestinationGroupsOutput) IpCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallFilteringDestinationGroups) pulumi.StringArrayOutput { return v.IpCategories }).(pulumi.StringArrayOutput)
}

// Destination IP group name
func (o FirewallFilteringDestinationGroupsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallFilteringDestinationGroups) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)
func (o FirewallFilteringDestinationGroupsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallFilteringDestinationGroups) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type FirewallFilteringDestinationGroupsArrayOutput struct{ *pulumi.OutputState }

func (FirewallFilteringDestinationGroupsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallFilteringDestinationGroups)(nil)).Elem()
}

func (o FirewallFilteringDestinationGroupsArrayOutput) ToFirewallFilteringDestinationGroupsArrayOutput() FirewallFilteringDestinationGroupsArrayOutput {
	return o
}

func (o FirewallFilteringDestinationGroupsArrayOutput) ToFirewallFilteringDestinationGroupsArrayOutputWithContext(ctx context.Context) FirewallFilteringDestinationGroupsArrayOutput {
	return o
}

func (o FirewallFilteringDestinationGroupsArrayOutput) Index(i pulumi.IntInput) FirewallFilteringDestinationGroupsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallFilteringDestinationGroups {
		return vs[0].([]*FirewallFilteringDestinationGroups)[vs[1].(int)]
	}).(FirewallFilteringDestinationGroupsOutput)
}

type FirewallFilteringDestinationGroupsMapOutput struct{ *pulumi.OutputState }

func (FirewallFilteringDestinationGroupsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallFilteringDestinationGroups)(nil)).Elem()
}

func (o FirewallFilteringDestinationGroupsMapOutput) ToFirewallFilteringDestinationGroupsMapOutput() FirewallFilteringDestinationGroupsMapOutput {
	return o
}

func (o FirewallFilteringDestinationGroupsMapOutput) ToFirewallFilteringDestinationGroupsMapOutputWithContext(ctx context.Context) FirewallFilteringDestinationGroupsMapOutput {
	return o
}

func (o FirewallFilteringDestinationGroupsMapOutput) MapIndex(k pulumi.StringInput) FirewallFilteringDestinationGroupsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallFilteringDestinationGroups {
		return vs[0].(map[string]*FirewallFilteringDestinationGroups)[vs[1].(string)]
	}).(FirewallFilteringDestinationGroupsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallFilteringDestinationGroupsInput)(nil)).Elem(), &FirewallFilteringDestinationGroups{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallFilteringDestinationGroupsArrayInput)(nil)).Elem(), FirewallFilteringDestinationGroupsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallFilteringDestinationGroupsMapInput)(nil)).Elem(), FirewallFilteringDestinationGroupsMap{})
	pulumi.RegisterOutputType(FirewallFilteringDestinationGroupsOutput{})
	pulumi.RegisterOutputType(FirewallFilteringDestinationGroupsArrayOutput{})
	pulumi.RegisterOutputType(FirewallFilteringDestinationGroupsMapOutput{})
}
