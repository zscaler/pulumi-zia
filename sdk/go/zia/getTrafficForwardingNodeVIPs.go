// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// Use the **zia_traffic_forwarding_public_node_vips** data source to retrieve a paginated list of virtual IP addresses (VIPs) available in the Zscaler cloud.
//
// ## Example Usage
func GetTrafficForwardingNodeVIPs(ctx *pulumi.Context, args *GetTrafficForwardingNodeVIPsArgs, opts ...pulumi.InvokeOption) (*GetTrafficForwardingNodeVIPsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTrafficForwardingNodeVIPsResult
	err := ctx.Invoke("zia:index/getTrafficForwardingNodeVIPs:getTrafficForwardingNodeVIPs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrafficForwardingNodeVIPs.
type GetTrafficForwardingNodeVIPsArgs struct {
	// Data-center Name
	Datacenter *string `pulumi:"datacenter"`
}

// A collection of values returned by getTrafficForwardingNodeVIPs.
type GetTrafficForwardingNodeVIPsResult struct {
	City          string   `pulumi:"city"`
	CloudName     string   `pulumi:"cloudName"`
	Datacenter    *string  `pulumi:"datacenter"`
	GreDomainName string   `pulumi:"greDomainName"`
	GreIps        []string `pulumi:"greIps"`
	// The provider-assigned unique ID for this managed resource.
	Id            string   `pulumi:"id"`
	Location      string   `pulumi:"location"`
	PacDomainName string   `pulumi:"pacDomainName"`
	PacIps        []string `pulumi:"pacIps"`
	Region        string   `pulumi:"region"`
	VpnDomainName string   `pulumi:"vpnDomainName"`
	VpnIps        []string `pulumi:"vpnIps"`
}

func GetTrafficForwardingNodeVIPsOutput(ctx *pulumi.Context, args GetTrafficForwardingNodeVIPsOutputArgs, opts ...pulumi.InvokeOption) GetTrafficForwardingNodeVIPsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTrafficForwardingNodeVIPsResultOutput, error) {
			args := v.(GetTrafficForwardingNodeVIPsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zia:index/getTrafficForwardingNodeVIPs:getTrafficForwardingNodeVIPs", args, GetTrafficForwardingNodeVIPsResultOutput{}, options).(GetTrafficForwardingNodeVIPsResultOutput), nil
		}).(GetTrafficForwardingNodeVIPsResultOutput)
}

// A collection of arguments for invoking getTrafficForwardingNodeVIPs.
type GetTrafficForwardingNodeVIPsOutputArgs struct {
	// Data-center Name
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
}

func (GetTrafficForwardingNodeVIPsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficForwardingNodeVIPsArgs)(nil)).Elem()
}

// A collection of values returned by getTrafficForwardingNodeVIPs.
type GetTrafficForwardingNodeVIPsResultOutput struct{ *pulumi.OutputState }

func (GetTrafficForwardingNodeVIPsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficForwardingNodeVIPsResult)(nil)).Elem()
}

func (o GetTrafficForwardingNodeVIPsResultOutput) ToGetTrafficForwardingNodeVIPsResultOutput() GetTrafficForwardingNodeVIPsResultOutput {
	return o
}

func (o GetTrafficForwardingNodeVIPsResultOutput) ToGetTrafficForwardingNodeVIPsResultOutputWithContext(ctx context.Context) GetTrafficForwardingNodeVIPsResultOutput {
	return o
}

func (o GetTrafficForwardingNodeVIPsResultOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingNodeVIPsResult) string { return v.City }).(pulumi.StringOutput)
}

func (o GetTrafficForwardingNodeVIPsResultOutput) CloudName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingNodeVIPsResult) string { return v.CloudName }).(pulumi.StringOutput)
}

func (o GetTrafficForwardingNodeVIPsResultOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficForwardingNodeVIPsResult) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

func (o GetTrafficForwardingNodeVIPsResultOutput) GreDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingNodeVIPsResult) string { return v.GreDomainName }).(pulumi.StringOutput)
}

func (o GetTrafficForwardingNodeVIPsResultOutput) GreIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficForwardingNodeVIPsResult) []string { return v.GreIps }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTrafficForwardingNodeVIPsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingNodeVIPsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTrafficForwardingNodeVIPsResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingNodeVIPsResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetTrafficForwardingNodeVIPsResultOutput) PacDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingNodeVIPsResult) string { return v.PacDomainName }).(pulumi.StringOutput)
}

func (o GetTrafficForwardingNodeVIPsResultOutput) PacIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficForwardingNodeVIPsResult) []string { return v.PacIps }).(pulumi.StringArrayOutput)
}

func (o GetTrafficForwardingNodeVIPsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingNodeVIPsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetTrafficForwardingNodeVIPsResultOutput) VpnDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficForwardingNodeVIPsResult) string { return v.VpnDomainName }).(pulumi.StringOutput)
}

func (o GetTrafficForwardingNodeVIPsResultOutput) VpnIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficForwardingNodeVIPsResult) []string { return v.VpnIps }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTrafficForwardingNodeVIPsResultOutput{})
}
