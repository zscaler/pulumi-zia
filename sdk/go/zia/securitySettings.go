// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

type SecuritySettings struct {
	pulumi.CustomResourceState

	// URLs on the denylist for your organization. Allow up to 25000 URLs.
	BlacklistUrls pulumi.StringArrayOutput `pulumi:"blacklistUrls"`
	// Allowlist URLs whose contents will not be scanned. Allows up to 255 URLs.
	WhitelistUrls pulumi.StringArrayOutput `pulumi:"whitelistUrls"`
}

// NewSecuritySettings registers a new resource with the given unique name, arguments, and options.
func NewSecuritySettings(ctx *pulumi.Context,
	name string, args *SecuritySettingsArgs, opts ...pulumi.ResourceOption) (*SecuritySettings, error) {
	if args == nil {
		args = &SecuritySettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecuritySettings
	err := ctx.RegisterResource("zia:index/securitySettings:SecuritySettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecuritySettings gets an existing SecuritySettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecuritySettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecuritySettingsState, opts ...pulumi.ResourceOption) (*SecuritySettings, error) {
	var resource SecuritySettings
	err := ctx.ReadResource("zia:index/securitySettings:SecuritySettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecuritySettings resources.
type securitySettingsState struct {
	// URLs on the denylist for your organization. Allow up to 25000 URLs.
	BlacklistUrls []string `pulumi:"blacklistUrls"`
	// Allowlist URLs whose contents will not be scanned. Allows up to 255 URLs.
	WhitelistUrls []string `pulumi:"whitelistUrls"`
}

type SecuritySettingsState struct {
	// URLs on the denylist for your organization. Allow up to 25000 URLs.
	BlacklistUrls pulumi.StringArrayInput
	// Allowlist URLs whose contents will not be scanned. Allows up to 255 URLs.
	WhitelistUrls pulumi.StringArrayInput
}

func (SecuritySettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*securitySettingsState)(nil)).Elem()
}

type securitySettingsArgs struct {
	// URLs on the denylist for your organization. Allow up to 25000 URLs.
	BlacklistUrls []string `pulumi:"blacklistUrls"`
	// Allowlist URLs whose contents will not be scanned. Allows up to 255 URLs.
	WhitelistUrls []string `pulumi:"whitelistUrls"`
}

// The set of arguments for constructing a SecuritySettings resource.
type SecuritySettingsArgs struct {
	// URLs on the denylist for your organization. Allow up to 25000 URLs.
	BlacklistUrls pulumi.StringArrayInput
	// Allowlist URLs whose contents will not be scanned. Allows up to 255 URLs.
	WhitelistUrls pulumi.StringArrayInput
}

func (SecuritySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securitySettingsArgs)(nil)).Elem()
}

type SecuritySettingsInput interface {
	pulumi.Input

	ToSecuritySettingsOutput() SecuritySettingsOutput
	ToSecuritySettingsOutputWithContext(ctx context.Context) SecuritySettingsOutput
}

func (*SecuritySettings) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySettings)(nil)).Elem()
}

func (i *SecuritySettings) ToSecuritySettingsOutput() SecuritySettingsOutput {
	return i.ToSecuritySettingsOutputWithContext(context.Background())
}

func (i *SecuritySettings) ToSecuritySettingsOutputWithContext(ctx context.Context) SecuritySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingsOutput)
}

// SecuritySettingsArrayInput is an input type that accepts SecuritySettingsArray and SecuritySettingsArrayOutput values.
// You can construct a concrete instance of `SecuritySettingsArrayInput` via:
//
//	SecuritySettingsArray{ SecuritySettingsArgs{...} }
type SecuritySettingsArrayInput interface {
	pulumi.Input

	ToSecuritySettingsArrayOutput() SecuritySettingsArrayOutput
	ToSecuritySettingsArrayOutputWithContext(context.Context) SecuritySettingsArrayOutput
}

type SecuritySettingsArray []SecuritySettingsInput

func (SecuritySettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecuritySettings)(nil)).Elem()
}

func (i SecuritySettingsArray) ToSecuritySettingsArrayOutput() SecuritySettingsArrayOutput {
	return i.ToSecuritySettingsArrayOutputWithContext(context.Background())
}

func (i SecuritySettingsArray) ToSecuritySettingsArrayOutputWithContext(ctx context.Context) SecuritySettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingsArrayOutput)
}

// SecuritySettingsMapInput is an input type that accepts SecuritySettingsMap and SecuritySettingsMapOutput values.
// You can construct a concrete instance of `SecuritySettingsMapInput` via:
//
//	SecuritySettingsMap{ "key": SecuritySettingsArgs{...} }
type SecuritySettingsMapInput interface {
	pulumi.Input

	ToSecuritySettingsMapOutput() SecuritySettingsMapOutput
	ToSecuritySettingsMapOutputWithContext(context.Context) SecuritySettingsMapOutput
}

type SecuritySettingsMap map[string]SecuritySettingsInput

func (SecuritySettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecuritySettings)(nil)).Elem()
}

func (i SecuritySettingsMap) ToSecuritySettingsMapOutput() SecuritySettingsMapOutput {
	return i.ToSecuritySettingsMapOutputWithContext(context.Background())
}

func (i SecuritySettingsMap) ToSecuritySettingsMapOutputWithContext(ctx context.Context) SecuritySettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingsMapOutput)
}

type SecuritySettingsOutput struct{ *pulumi.OutputState }

func (SecuritySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySettings)(nil)).Elem()
}

func (o SecuritySettingsOutput) ToSecuritySettingsOutput() SecuritySettingsOutput {
	return o
}

func (o SecuritySettingsOutput) ToSecuritySettingsOutputWithContext(ctx context.Context) SecuritySettingsOutput {
	return o
}

// URLs on the denylist for your organization. Allow up to 25000 URLs.
func (o SecuritySettingsOutput) BlacklistUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecuritySettings) pulumi.StringArrayOutput { return v.BlacklistUrls }).(pulumi.StringArrayOutput)
}

// Allowlist URLs whose contents will not be scanned. Allows up to 255 URLs.
func (o SecuritySettingsOutput) WhitelistUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecuritySettings) pulumi.StringArrayOutput { return v.WhitelistUrls }).(pulumi.StringArrayOutput)
}

type SecuritySettingsArrayOutput struct{ *pulumi.OutputState }

func (SecuritySettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecuritySettings)(nil)).Elem()
}

func (o SecuritySettingsArrayOutput) ToSecuritySettingsArrayOutput() SecuritySettingsArrayOutput {
	return o
}

func (o SecuritySettingsArrayOutput) ToSecuritySettingsArrayOutputWithContext(ctx context.Context) SecuritySettingsArrayOutput {
	return o
}

func (o SecuritySettingsArrayOutput) Index(i pulumi.IntInput) SecuritySettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecuritySettings {
		return vs[0].([]*SecuritySettings)[vs[1].(int)]
	}).(SecuritySettingsOutput)
}

type SecuritySettingsMapOutput struct{ *pulumi.OutputState }

func (SecuritySettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecuritySettings)(nil)).Elem()
}

func (o SecuritySettingsMapOutput) ToSecuritySettingsMapOutput() SecuritySettingsMapOutput {
	return o
}

func (o SecuritySettingsMapOutput) ToSecuritySettingsMapOutputWithContext(ctx context.Context) SecuritySettingsMapOutput {
	return o
}

func (o SecuritySettingsMapOutput) MapIndex(k pulumi.StringInput) SecuritySettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecuritySettings {
		return vs[0].(map[string]*SecuritySettings)[vs[1].(string)]
	}).(SecuritySettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritySettingsInput)(nil)).Elem(), &SecuritySettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritySettingsArrayInput)(nil)).Elem(), SecuritySettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritySettingsMapInput)(nil)).Elem(), SecuritySettingsMap{})
	pulumi.RegisterOutputType(SecuritySettingsOutput{})
	pulumi.RegisterOutputType(SecuritySettingsArrayOutput{})
	pulumi.RegisterOutputType(SecuritySettingsMapOutput{})
}
