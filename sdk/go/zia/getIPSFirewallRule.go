// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// Use the **zia_firewall_ips_rule** data source to get information about a cloud firewall IPS rule available in the Zscaler Internet Access.
//
// ## Example Usage
func LookupIPSFirewallRule(ctx *pulumi.Context, args *LookupIPSFirewallRuleArgs, opts ...pulumi.InvokeOption) (*LookupIPSFirewallRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIPSFirewallRuleResult
	err := ctx.Invoke("zia:index/getIPSFirewallRule:getIPSFirewallRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIPSFirewallRule.
type LookupIPSFirewallRuleArgs struct {
	// Unique identifier for the Firewall Filtering policy rule
	Id *int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name *string `pulumi:"name"`
}

// A collection of values returned by getIPSFirewallRule.
type LookupIPSFirewallRuleResult struct {
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
	Action string `pulumi:"action"`
	// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
	CapturePcap bool `pulumi:"capturePcap"`
	// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
	DefaultRule bool `pulumi:"defaultRule"`
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments []GetIPSFirewallRuleDepartment `pulumi:"departments"`
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description string `pulumi:"description"`
	// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	DestAddresses []string `pulumi:"destAddresses"`
	// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	DestCountries []string `pulumi:"destCountries"`
	// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories []string `pulumi:"destIpCategories"`
	// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups   []GetIPSFirewallRuleDestIpGroup   `pulumi:"destIpGroups"`
	DestIpv6Groups []GetIPSFirewallRuleDestIpv6Group `pulumi:"destIpv6Groups"`
	// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	DeviceGroups []GetIPSFirewallRuleDeviceGroup `pulumi:"deviceGroups"`
	// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	Devices []GetIPSFirewallRuleDevice `pulumi:"devices"`
	// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
	EnableFullLogging bool `pulumi:"enableFullLogging"`
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups []GetIPSFirewallRuleGroup `pulumi:"groups"`
	// (Integer) Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// (List of Objects) Labels that are applicable to the rule.
	Labels           []GetIPSFirewallRuleLabel          `pulumi:"labels"`
	LastModifiedBies []GetIPSFirewallRuleLastModifiedBy `pulumi:"lastModifiedBies"`
	LastModifiedTime int                                `pulumi:"lastModifiedTime"`
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups []GetIPSFirewallRuleLocationGroup `pulumi:"locationGroups"`
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations []GetIPSFirewallRuleLocation `pulumi:"locations"`
	// (String) The configured name of the entity
	Name string `pulumi:"name"`
	// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups []GetIPSFirewallRuleNwServiceGroup `pulumi:"nwServiceGroups"`
	// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices []GetIPSFirewallRuleNwService `pulumi:"nwServices"`
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order int `pulumi:"order"`
	// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
	Predefined bool `pulumi:"predefined"`
	// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
	Rank int `pulumi:"rank"`
	// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
	ResCategories []string `pulumi:"resCategories"`
	// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
	// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e ``"US"``, ``"CA"``
	SourceCountries []string `pulumi:"sourceCountries"`
	// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
	SrcIpGroups []GetIPSFirewallRuleSrcIpGroup `pulumi:"srcIpGroups"`
	// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
	SrcIps []string `pulumi:"srcIps"`
	// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
	SrcIpv6Groups []GetIPSFirewallRuleSrcIpv6Group `pulumi:"srcIpv6Groups"`
	// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
	State string `pulumi:"state"`
	// (List of Objects) Advanced threat categories to which the rule applies
	ThreatCategories []GetIPSFirewallRuleThreatCategory `pulumi:"threatCategories"`
	// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
	TimeWindows []GetIPSFirewallRuleTimeWindow `pulumi:"timeWindows"`
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users []GetIPSFirewallRuleUser `pulumi:"users"`
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments []GetIPSFirewallRuleZpaAppSegment `pulumi:"zpaAppSegments"`
}

func LookupIPSFirewallRuleOutput(ctx *pulumi.Context, args LookupIPSFirewallRuleOutputArgs, opts ...pulumi.InvokeOption) LookupIPSFirewallRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIPSFirewallRuleResultOutput, error) {
			args := v.(LookupIPSFirewallRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zia:index/getIPSFirewallRule:getIPSFirewallRule", args, LookupIPSFirewallRuleResultOutput{}, options).(LookupIPSFirewallRuleResultOutput), nil
		}).(LookupIPSFirewallRuleResultOutput)
}

// A collection of arguments for invoking getIPSFirewallRule.
type LookupIPSFirewallRuleOutputArgs struct {
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupIPSFirewallRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIPSFirewallRuleArgs)(nil)).Elem()
}

// A collection of values returned by getIPSFirewallRule.
type LookupIPSFirewallRuleResultOutput struct{ *pulumi.OutputState }

func (LookupIPSFirewallRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIPSFirewallRuleResult)(nil)).Elem()
}

func (o LookupIPSFirewallRuleResultOutput) ToLookupIPSFirewallRuleResultOutput() LookupIPSFirewallRuleResultOutput {
	return o
}

func (o LookupIPSFirewallRuleResultOutput) ToLookupIPSFirewallRuleResultOutputWithContext(ctx context.Context) LookupIPSFirewallRuleResultOutput {
	return o
}

// (String) The action configured for the rule that must take place if the traffic matches the rule criteria, such as allowing or blocking the traffic or bypassing the rule. The following actions are accepted: `ALLOW`, `BLOCK_DROP`, `BLOCK_RESET`, `BYPASS_IPS`
func (o LookupIPSFirewallRuleResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) string { return v.Action }).(pulumi.StringOutput)
}

// (Boolean) Value that indicates whether packet capture (PCAP) is enabled or not
func (o LookupIPSFirewallRuleResultOutput) CapturePcap() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) bool { return v.CapturePcap }).(pulumi.BoolOutput)
}

// (Boolean) Value that indicates whether the rule is the Default Cloud IPS Rule or not
func (o LookupIPSFirewallRuleResultOutput) DefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) bool { return v.DefaultRule }).(pulumi.BoolOutput)
}

// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
func (o LookupIPSFirewallRuleResultOutput) Departments() GetIPSFirewallRuleDepartmentArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleDepartment { return v.Departments }).(GetIPSFirewallRuleDepartmentArrayOutput)
}

// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
func (o LookupIPSFirewallRuleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) string { return v.Description }).(pulumi.StringOutput)
}

// (Set of String) Destination IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific destination IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
func (o LookupIPSFirewallRuleResultOutput) DestAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []string { return v.DestAddresses }).(pulumi.StringArrayOutput)
}

// (Set of String) Identify destinations based on the location of a server, select Any to apply the rule to all countries or select the countries to which you want to control traffic.
// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e “"US"“, “"CA"“
func (o LookupIPSFirewallRuleResultOutput) DestCountries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []string { return v.DestCountries }).(pulumi.StringArrayOutput)
}

// (Set of String)  identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
func (o LookupIPSFirewallRuleResultOutput) DestIpCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []string { return v.DestIpCategories }).(pulumi.StringArrayOutput)
}

// ** - (List of Objects) Any number of destination IP address groups that you want to control with this rule.
func (o LookupIPSFirewallRuleResultOutput) DestIpGroups() GetIPSFirewallRuleDestIpGroupArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleDestIpGroup { return v.DestIpGroups }).(GetIPSFirewallRuleDestIpGroupArrayOutput)
}

func (o LookupIPSFirewallRuleResultOutput) DestIpv6Groups() GetIPSFirewallRuleDestIpv6GroupArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleDestIpv6Group { return v.DestIpv6Groups }).(GetIPSFirewallRuleDestIpv6GroupArrayOutput)
}

// (List of Objects) Device groups to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
func (o LookupIPSFirewallRuleResultOutput) DeviceGroups() GetIPSFirewallRuleDeviceGroupArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleDeviceGroup { return v.DeviceGroups }).(GetIPSFirewallRuleDeviceGroupArrayOutput)
}

// (List of Objects) Devices to which the rule applies. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
func (o LookupIPSFirewallRuleResultOutput) Devices() GetIPSFirewallRuleDeviceArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleDevice { return v.Devices }).(GetIPSFirewallRuleDeviceArrayOutput)
}

// (Integer) A Boolean value that indicates whether full logging is enabled. A true value indicates that full logging is enabled, whereas a false value indicates that aggregate logging is enabled.
func (o LookupIPSFirewallRuleResultOutput) EnableFullLogging() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) bool { return v.EnableFullLogging }).(pulumi.BoolOutput)
}

// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
func (o LookupIPSFirewallRuleResultOutput) Groups() GetIPSFirewallRuleGroupArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleGroup { return v.Groups }).(GetIPSFirewallRuleGroupArrayOutput)
}

// (Integer) Identifier that uniquely identifies an entity
func (o LookupIPSFirewallRuleResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) int { return v.Id }).(pulumi.IntOutput)
}

// (List of Objects) Labels that are applicable to the rule.
func (o LookupIPSFirewallRuleResultOutput) Labels() GetIPSFirewallRuleLabelArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleLabel { return v.Labels }).(GetIPSFirewallRuleLabelArrayOutput)
}

func (o LookupIPSFirewallRuleResultOutput) LastModifiedBies() GetIPSFirewallRuleLastModifiedByArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleLastModifiedBy { return v.LastModifiedBies }).(GetIPSFirewallRuleLastModifiedByArrayOutput)
}

func (o LookupIPSFirewallRuleResultOutput) LastModifiedTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) int { return v.LastModifiedTime }).(pulumi.IntOutput)
}

// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
func (o LookupIPSFirewallRuleResultOutput) LocationGroups() GetIPSFirewallRuleLocationGroupArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleLocationGroup { return v.LocationGroups }).(GetIPSFirewallRuleLocationGroupArrayOutput)
}

// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
func (o LookupIPSFirewallRuleResultOutput) Locations() GetIPSFirewallRuleLocationArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleLocation { return v.Locations }).(GetIPSFirewallRuleLocationArrayOutput)
}

// (String) The configured name of the entity
func (o LookupIPSFirewallRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// (List of Objects) Any number of predefined or custom network service groups to which the rule applies.
func (o LookupIPSFirewallRuleResultOutput) NwServiceGroups() GetIPSFirewallRuleNwServiceGroupArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleNwServiceGroup { return v.NwServiceGroups }).(GetIPSFirewallRuleNwServiceGroupArrayOutput)
}

// (List of Objects) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
func (o LookupIPSFirewallRuleResultOutput) NwServices() GetIPSFirewallRuleNwServiceArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleNwService { return v.NwServices }).(GetIPSFirewallRuleNwServiceArrayOutput)
}

// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
func (o LookupIPSFirewallRuleResultOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) int { return v.Order }).(pulumi.IntOutput)
}

// (Boolean) A Boolean field that indicates that the rule is predefined by using a true value
func (o LookupIPSFirewallRuleResultOutput) Predefined() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) bool { return v.Predefined }).(pulumi.BoolOutput)
}

// (Integer) By default, the admin ranking is disabled. To use this feature, you must enable admin rank. The default value is `7`.
func (o LookupIPSFirewallRuleResultOutput) Rank() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) int { return v.Rank }).(pulumi.IntOutput)
}

// (Set of String) URL categories associated with resolved IP addresses to which the rule applies. If not set, the rule is not restricted to a specific URL category.
func (o LookupIPSFirewallRuleResultOutput) ResCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []string { return v.ResCategories }).(pulumi.StringArrayOutput)
}

// (Set of String) The countries of origin of traffic for which the rule is applicable. If not set, the rule is not restricted to specific source countries.
// **NOTE**: Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). i.e “"US"“, “"CA"“
func (o LookupIPSFirewallRuleResultOutput) SourceCountries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []string { return v.SourceCountries }).(pulumi.StringArrayOutput)
}

// (List of Objects)Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IP address group.
func (o LookupIPSFirewallRuleResultOutput) SrcIpGroups() GetIPSFirewallRuleSrcIpGroupArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleSrcIpGroup { return v.SrcIpGroups }).(GetIPSFirewallRuleSrcIpGroupArrayOutput)
}

// (Set of String) Source IP addresses or FQDNs to which the rule applies. If not set, the rule is not restricted to a specific source IP address. Each IP entry can be a single IP address, CIDR (e.g., 10.10.33.0/24), or an IP range (e.g., 10.10.33.1-10.10.33.10).
func (o LookupIPSFirewallRuleResultOutput) SrcIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []string { return v.SrcIps }).(pulumi.StringArrayOutput)
}

// (List of Objects) Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source IPv6 address group.
func (o LookupIPSFirewallRuleResultOutput) SrcIpv6Groups() GetIPSFirewallRuleSrcIpv6GroupArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleSrcIpv6Group { return v.SrcIpv6Groups }).(GetIPSFirewallRuleSrcIpv6GroupArrayOutput)
}

// (String) An enabled rule is actively enforced. A disabled rule is not actively enforced but does not lose its place in the Rule Order. The service skips it and moves to the next rule.
func (o LookupIPSFirewallRuleResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) string { return v.State }).(pulumi.StringOutput)
}

// (List of Objects) Advanced threat categories to which the rule applies
func (o LookupIPSFirewallRuleResultOutput) ThreatCategories() GetIPSFirewallRuleThreatCategoryArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleThreatCategory { return v.ThreatCategories }).(GetIPSFirewallRuleThreatCategoryArrayOutput)
}

// (List of Objects) You can manually select up to `1` time intervals. When not used it implies `always` to apply the rule to all time intervals.
func (o LookupIPSFirewallRuleResultOutput) TimeWindows() GetIPSFirewallRuleTimeWindowArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleTimeWindow { return v.TimeWindows }).(GetIPSFirewallRuleTimeWindowArrayOutput)
}

// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
func (o LookupIPSFirewallRuleResultOutput) Users() GetIPSFirewallRuleUserArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleUser { return v.Users }).(GetIPSFirewallRuleUserArrayOutput)
}

// (List of Objects) The ZPA application segments to which the rule applies
func (o LookupIPSFirewallRuleResultOutput) ZpaAppSegments() GetIPSFirewallRuleZpaAppSegmentArrayOutput {
	return o.ApplyT(func(v LookupIPSFirewallRuleResult) []GetIPSFirewallRuleZpaAppSegment { return v.ZpaAppSegments }).(GetIPSFirewallRuleZpaAppSegmentArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIPSFirewallRuleResultOutput{})
}
