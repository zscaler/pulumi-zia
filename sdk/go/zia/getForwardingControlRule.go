// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// Use the **forwarding_control_rule** data source to get information about a forwarding control rule which is used to forward selective Zscaler traffic to specific destinations based on your needs.For example, if you want to forward specific web traffic to a third-party proxy service or if you want to forward source IP anchored application traffic to a specific Zscaler Private Access (ZPA) App Connector or internal application traffic through ZIA threat and data protection engines, use forwarding control by configuring appropriate rules.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zia/sdk/go/zia"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.LookupForwardingControlRule(ctx, &zia.LookupForwardingControlRuleArgs{
//				Name: pulumi.StringRef("FWD_RULE01"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupForwardingControlRule(ctx *pulumi.Context, args *LookupForwardingControlRuleArgs, opts ...pulumi.InvokeOption) (*LookupForwardingControlRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupForwardingControlRuleResult
	err := ctx.Invoke("zia:index/getForwardingControlRule:getForwardingControlRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getForwardingControlRule.
type LookupForwardingControlRuleArgs struct {
	// A unique identifier assigned to the forwarding rule.
	Id *int `pulumi:"id"`
	// The name of the forwarding rule.
	Name *string `pulumi:"name"`
	// (string) -  The rule type selected from the available options
	Type *string `pulumi:"type"`
}

// A collection of values returned by getForwardingControlRule.
type LookupForwardingControlRuleResult struct {
	// (list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments []GetForwardingControlRuleDepartment `pulumi:"departments"`
	// (string) - Additional information about the forwarding rule
	Description string `pulumi:"description"`
	// ** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.
	DestAddresses []string `pulumi:"destAddresses"`
	// ** - (list) estination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
	DestCountries []string `pulumi:"destCountries"`
	// ** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
	DestIpCategories []string `pulumi:"destIpCategories"`
	// ** - (list) Any number of destination IP address groups that you want to control with this rule.
	DestIpGroups   []GetForwardingControlRuleDestIpGroup   `pulumi:"destIpGroups"`
	DestIpv6Groups []GetForwardingControlRuleDestIpv6Group `pulumi:"destIpv6Groups"`
	// (list) Name-ID pairs of device groups for which the rule must be applied. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	DeviceGroups []GetForwardingControlRuleDeviceGroup `pulumi:"deviceGroups"`
	// (list) Name-ID pairs of devices for which the rule must be applied. Specifies devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
	Devices []GetForwardingControlRuleDevice `pulumi:"devices"`
	// (list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
	EcGroups []GetForwardingControlRuleEcGroup `pulumi:"ecGroups"`
	// (string) - The type of traffic forwarding method selected from the available options.
	ForwardMethod string `pulumi:"forwardMethod"`
	// (list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups []GetForwardingControlRuleGroup `pulumi:"groups"`
	// (int) Identifier that uniquely identifies an entity
	Id *int `pulumi:"id"`
	// (list) Labels that are applicable to the rule.
	Labels []GetForwardingControlRuleLabel `pulumi:"labels"`
	// (Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups []GetForwardingControlRuleLocationGroup `pulumi:"locationGroups"`
	// (Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations []GetForwardingControlRuleLocation `pulumi:"locations"`
	// (string) The configured name of the entity
	Name *string `pulumi:"name"`
	// (list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify
	NwApplicationGroups []GetForwardingControlRuleNwApplicationGroup `pulumi:"nwApplicationGroups"`
	// (Optional) When not used it applies the rule to all applications. The service provides predefined applications, which you can group, but not modify.
	NwApplications []string `pulumi:"nwApplications"`
	// (list) Any number of predefined or custom network service groups to which the rule applies.
	NwServiceGroups []GetForwardingControlRuleNwServiceGroup `pulumi:"nwServiceGroups"`
	// (list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
	NwServices []GetForwardingControlRuleNwService `pulumi:"nwServices"`
	// (string) - The order of execution for the forwarding rule order.
	Order int `pulumi:"order"`
	// (set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.
	ProxyGateways []GetForwardingControlRuleProxyGateway `pulumi:"proxyGateways"`
	Rank          int                                    `pulumi:"rank"`
	// ** - (list) List of destination domain categories to which the rule applies.
	ResCategories []string `pulumi:"resCategories"`
	// (list) Any number of source IP address groups that you want to control with this rule.
	SrcIpGroups []GetForwardingControlRuleSrcIpGroup `pulumi:"srcIpGroups"`
	// (Optional) You can enter individual IP addresses, subnets, or address ranges.
	SrcIps        []string                               `pulumi:"srcIps"`
	SrcIpv6Groups []GetForwardingControlRuleSrcIpv6Group `pulumi:"srcIpv6Groups"`
	// (string) - Indicates whether the forwarding rule is enabled or disabled.
	State string `pulumi:"state"`
	// (string) -  The rule type selected from the available options
	Type *string `pulumi:"type"`
	// (list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users []GetForwardingControlRuleUser `pulumi:"users"`
	// (set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.
	ZpaAppSegments []GetForwardingControlRuleZpaAppSegment `pulumi:"zpaAppSegments"`
	// (set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
	ZpaApplicationSegmentGroups []GetForwardingControlRuleZpaApplicationSegmentGroup `pulumi:"zpaApplicationSegmentGroups"`
	// (set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
	ZpaApplicationSegments []GetForwardingControlRuleZpaApplicationSegment `pulumi:"zpaApplicationSegments"`
	ZpaBrokerRule          bool                                            `pulumi:"zpaBrokerRule"`
	// (set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.
	ZpaGateways []GetForwardingControlRuleZpaGateway `pulumi:"zpaGateways"`
}

func LookupForwardingControlRuleOutput(ctx *pulumi.Context, args LookupForwardingControlRuleOutputArgs, opts ...pulumi.InvokeOption) LookupForwardingControlRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupForwardingControlRuleResult, error) {
			args := v.(LookupForwardingControlRuleArgs)
			r, err := LookupForwardingControlRule(ctx, &args, opts...)
			var s LookupForwardingControlRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupForwardingControlRuleResultOutput)
}

// A collection of arguments for invoking getForwardingControlRule.
type LookupForwardingControlRuleOutputArgs struct {
	// A unique identifier assigned to the forwarding rule.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// The name of the forwarding rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (string) -  The rule type selected from the available options
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (LookupForwardingControlRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupForwardingControlRuleArgs)(nil)).Elem()
}

// A collection of values returned by getForwardingControlRule.
type LookupForwardingControlRuleResultOutput struct{ *pulumi.OutputState }

func (LookupForwardingControlRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupForwardingControlRuleResult)(nil)).Elem()
}

func (o LookupForwardingControlRuleResultOutput) ToLookupForwardingControlRuleResultOutput() LookupForwardingControlRuleResultOutput {
	return o
}

func (o LookupForwardingControlRuleResultOutput) ToLookupForwardingControlRuleResultOutputWithContext(ctx context.Context) LookupForwardingControlRuleResultOutput {
	return o
}

// (list) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
func (o LookupForwardingControlRuleResultOutput) Departments() GetForwardingControlRuleDepartmentArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleDepartment { return v.Departments }).(GetForwardingControlRuleDepartmentArrayOutput)
}

// (string) - Additional information about the forwarding rule
func (o LookupForwardingControlRuleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) string { return v.Description }).(pulumi.StringOutput)
}

// ** - (list) -  IP addresses and fully qualified domain names (FQDNs), if the domain has multiple destination IP addresses or if its IP addresses may change. For IP addresses, you can enter individual IP addresses, subnets, or address ranges. If adding multiple items, hit Enter after each entry.
func (o LookupForwardingControlRuleResultOutput) DestAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []string { return v.DestAddresses }).(pulumi.StringArrayOutput)
}

// ** - (list) estination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination countries. Provide a 2 letter [ISO3166 Alpha2 Country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
func (o LookupForwardingControlRuleResultOutput) DestCountries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []string { return v.DestCountries }).(pulumi.StringArrayOutput)
}

// ** - (list) identify destinations based on the URL category of the domain, select Any to apply the rule to all categories or select the specific categories you want to control.
func (o LookupForwardingControlRuleResultOutput) DestIpCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []string { return v.DestIpCategories }).(pulumi.StringArrayOutput)
}

// ** - (list) Any number of destination IP address groups that you want to control with this rule.
func (o LookupForwardingControlRuleResultOutput) DestIpGroups() GetForwardingControlRuleDestIpGroupArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleDestIpGroup { return v.DestIpGroups }).(GetForwardingControlRuleDestIpGroupArrayOutput)
}

func (o LookupForwardingControlRuleResultOutput) DestIpv6Groups() GetForwardingControlRuleDestIpv6GroupArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleDestIpv6Group {
		return v.DestIpv6Groups
	}).(GetForwardingControlRuleDestIpv6GroupArrayOutput)
}

// (list) Name-ID pairs of device groups for which the rule must be applied. This field is applicable for devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
func (o LookupForwardingControlRuleResultOutput) DeviceGroups() GetForwardingControlRuleDeviceGroupArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleDeviceGroup { return v.DeviceGroups }).(GetForwardingControlRuleDeviceGroupArrayOutput)
}

// (list) Name-ID pairs of devices for which the rule must be applied. Specifies devices that are managed using Zscaler Client Connector. If no value is set, this field is ignored during the policy evaluation.
func (o LookupForwardingControlRuleResultOutput) Devices() GetForwardingControlRuleDeviceArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleDevice { return v.Devices }).(GetForwardingControlRuleDeviceArrayOutput)
}

// (list) - Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
func (o LookupForwardingControlRuleResultOutput) EcGroups() GetForwardingControlRuleEcGroupArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleEcGroup { return v.EcGroups }).(GetForwardingControlRuleEcGroupArrayOutput)
}

// (string) - The type of traffic forwarding method selected from the available options.
func (o LookupForwardingControlRuleResultOutput) ForwardMethod() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) string { return v.ForwardMethod }).(pulumi.StringOutput)
}

// (list) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
func (o LookupForwardingControlRuleResultOutput) Groups() GetForwardingControlRuleGroupArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleGroup { return v.Groups }).(GetForwardingControlRuleGroupArrayOutput)
}

// (int) Identifier that uniquely identifies an entity
func (o LookupForwardingControlRuleResultOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// (list) Labels that are applicable to the rule.
func (o LookupForwardingControlRuleResultOutput) Labels() GetForwardingControlRuleLabelArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleLabel { return v.Labels }).(GetForwardingControlRuleLabelArrayOutput)
}

// (Optional) You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
func (o LookupForwardingControlRuleResultOutput) LocationGroups() GetForwardingControlRuleLocationGroupArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleLocationGroup {
		return v.LocationGroups
	}).(GetForwardingControlRuleLocationGroupArrayOutput)
}

// (Optional) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
func (o LookupForwardingControlRuleResultOutput) Locations() GetForwardingControlRuleLocationArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleLocation { return v.Locations }).(GetForwardingControlRuleLocationArrayOutput)
}

// (string) The configured name of the entity
func (o LookupForwardingControlRuleResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (list) Any number of application groups that you want to control with this rule. The service provides predefined applications that you can group, but not modify
func (o LookupForwardingControlRuleResultOutput) NwApplicationGroups() GetForwardingControlRuleNwApplicationGroupArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleNwApplicationGroup {
		return v.NwApplicationGroups
	}).(GetForwardingControlRuleNwApplicationGroupArrayOutput)
}

// (Optional) When not used it applies the rule to all applications. The service provides predefined applications, which you can group, but not modify.
func (o LookupForwardingControlRuleResultOutput) NwApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []string { return v.NwApplications }).(pulumi.StringArrayOutput)
}

// (list) Any number of predefined or custom network service groups to which the rule applies.
func (o LookupForwardingControlRuleResultOutput) NwServiceGroups() GetForwardingControlRuleNwServiceGroupArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleNwServiceGroup {
		return v.NwServiceGroups
	}).(GetForwardingControlRuleNwServiceGroupArrayOutput)
}

// (list) When not used it applies the rule to all network services or you can select specific network services. The Zscaler firewall has predefined services and you can configure up to `1,024` additional custom services.
func (o LookupForwardingControlRuleResultOutput) NwServices() GetForwardingControlRuleNwServiceArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleNwService { return v.NwServices }).(GetForwardingControlRuleNwServiceArrayOutput)
}

// (string) - The order of execution for the forwarding rule order.
func (o LookupForwardingControlRuleResultOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) int { return v.Order }).(pulumi.IntOutput)
}

// (set) The proxy gateway for which the rule is applicable. This field is applicable only for the `PROXYCHAIN` forwarding method.
func (o LookupForwardingControlRuleResultOutput) ProxyGateways() GetForwardingControlRuleProxyGatewayArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleProxyGateway {
		return v.ProxyGateways
	}).(GetForwardingControlRuleProxyGatewayArrayOutput)
}

func (o LookupForwardingControlRuleResultOutput) Rank() pulumi.IntOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) int { return v.Rank }).(pulumi.IntOutput)
}

// ** - (list) List of destination domain categories to which the rule applies.
func (o LookupForwardingControlRuleResultOutput) ResCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []string { return v.ResCategories }).(pulumi.StringArrayOutput)
}

// (list) Any number of source IP address groups that you want to control with this rule.
func (o LookupForwardingControlRuleResultOutput) SrcIpGroups() GetForwardingControlRuleSrcIpGroupArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleSrcIpGroup { return v.SrcIpGroups }).(GetForwardingControlRuleSrcIpGroupArrayOutput)
}

// (Optional) You can enter individual IP addresses, subnets, or address ranges.
func (o LookupForwardingControlRuleResultOutput) SrcIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []string { return v.SrcIps }).(pulumi.StringArrayOutput)
}

func (o LookupForwardingControlRuleResultOutput) SrcIpv6Groups() GetForwardingControlRuleSrcIpv6GroupArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleSrcIpv6Group {
		return v.SrcIpv6Groups
	}).(GetForwardingControlRuleSrcIpv6GroupArrayOutput)
}

// (string) - Indicates whether the forwarding rule is enabled or disabled.
func (o LookupForwardingControlRuleResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) string { return v.State }).(pulumi.StringOutput)
}

// (string) -  The rule type selected from the available options
func (o LookupForwardingControlRuleResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// (list) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
func (o LookupForwardingControlRuleResultOutput) Users() GetForwardingControlRuleUserArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleUser { return v.Users }).(GetForwardingControlRuleUserArrayOutput)
}

// (set) The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ZPA` Gateway forwarding method.
func (o LookupForwardingControlRuleResultOutput) ZpaAppSegments() GetForwardingControlRuleZpaAppSegmentArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleZpaAppSegment {
		return v.ZpaAppSegments
	}).(GetForwardingControlRuleZpaAppSegmentArrayOutput)
}

// (set) List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
func (o LookupForwardingControlRuleResultOutput) ZpaApplicationSegmentGroups() GetForwardingControlRuleZpaApplicationSegmentGroupArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleZpaApplicationSegmentGroup {
		return v.ZpaApplicationSegmentGroups
	}).(GetForwardingControlRuleZpaApplicationSegmentGroupArrayOutput)
}

// (set) List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the `ECZPA` forwarding method (used for Zscaler Cloud Connector).
func (o LookupForwardingControlRuleResultOutput) ZpaApplicationSegments() GetForwardingControlRuleZpaApplicationSegmentArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleZpaApplicationSegment {
		return v.ZpaApplicationSegments
	}).(GetForwardingControlRuleZpaApplicationSegmentArrayOutput)
}

func (o LookupForwardingControlRuleResultOutput) ZpaBrokerRule() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) bool { return v.ZpaBrokerRule }).(pulumi.BoolOutput)
}

// (set) The ZPA Gateway for which this rule is applicable. This field is applicable only for the `ZPA` forwarding method.
func (o LookupForwardingControlRuleResultOutput) ZpaGateways() GetForwardingControlRuleZpaGatewayArrayOutput {
	return o.ApplyT(func(v LookupForwardingControlRuleResult) []GetForwardingControlRuleZpaGateway { return v.ZpaGateways }).(GetForwardingControlRuleZpaGatewayArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupForwardingControlRuleResultOutput{})
}
