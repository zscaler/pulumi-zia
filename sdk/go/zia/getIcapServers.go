// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/about-icap-communication-between-zscaler-and-dlp-servers)
// * [API documentation](https://help.zscaler.com/zia/data-loss-prevention#/icapServers/lite-get)
//
// Use the **zia_dlp_engines** data source to get information about a the list of DLP servers using ICAP in the Zscaler Internet Access cloud or via the API.
//
// ## Example Usage
func GetIcapServers(ctx *pulumi.Context, args *GetIcapServersArgs, opts ...pulumi.InvokeOption) (*GetIcapServersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIcapServersResult
	err := ctx.Invoke("zia:index/getIcapServers:getIcapServers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIcapServers.
type GetIcapServersArgs struct {
	Name *string `pulumi:"name"`
}

// A collection of values returned by getIcapServers.
type GetIcapServersResult struct {
	Id     int     `pulumi:"id"`
	Name   *string `pulumi:"name"`
	Status string  `pulumi:"status"`
	Url    string  `pulumi:"url"`
}

func GetIcapServersOutput(ctx *pulumi.Context, args GetIcapServersOutputArgs, opts ...pulumi.InvokeOption) GetIcapServersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIcapServersResultOutput, error) {
			args := v.(GetIcapServersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zia:index/getIcapServers:getIcapServers", args, GetIcapServersResultOutput{}, options).(GetIcapServersResultOutput), nil
		}).(GetIcapServersResultOutput)
}

// A collection of arguments for invoking getIcapServers.
type GetIcapServersOutputArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetIcapServersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIcapServersArgs)(nil)).Elem()
}

// A collection of values returned by getIcapServers.
type GetIcapServersResultOutput struct{ *pulumi.OutputState }

func (GetIcapServersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIcapServersResult)(nil)).Elem()
}

func (o GetIcapServersResultOutput) ToGetIcapServersResultOutput() GetIcapServersResultOutput {
	return o
}

func (o GetIcapServersResultOutput) ToGetIcapServersResultOutputWithContext(ctx context.Context) GetIcapServersResultOutput {
	return o
}

func (o GetIcapServersResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetIcapServersResult) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetIcapServersResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIcapServersResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetIcapServersResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIcapServersResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetIcapServersResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetIcapServersResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIcapServersResultOutput{})
}
