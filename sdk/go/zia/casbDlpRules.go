// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/configuring-data-rest-scanning-dlp-policy)
// * [API documentation](https://help.zscaler.com/zia/saas-security-api#/casbDlpRules-post)
//
// The **zia_casb_dlp_rules** resource Adds a new SaaS Security Data at Rest Scanning DLP rule in the Zscaler Internet Access.
//
// ## Example Usage
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// **zia_casb_dlp_rules** can be imported by using `<RULE_TYPE:RULE_ID>` or `<RULE_TYPE:RULE_NAME>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zia:index/casbDlpRules:CasbDlpRules this <rule_type:rule_id>
// ```
//
// ```sh
// $ pulumi import zia:index/casbDlpRules:CasbDlpRules this <"rule_type:rule_name">
// ```
//
// Deprecated: zia.index/casbdlprules.CasbDlpRules has been deprecated in favor of zia.index/casbdlprule.CasbDlpRule
type CasbDlpRules struct {
	pulumi.CustomResourceState

	// The configured action for the policy rule
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// Notification template used for DLP email alerts sent to the auditor
	AuditorNotifications CasbDlpRulesAuditorNotificationArrayOutput `pulumi:"auditorNotifications"`
	// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
	// field
	BucketOwner pulumi.StringPtrOutput `pulumi:"bucketOwner"`
	// The buckets for the Zscaler service to inspect for sensitive data
	Buckets CasbDlpRulesBucketsPtrOutput `pulumi:"buckets"`
	// Name-ID of the email label associated with the rule
	CasbEmailLabels CasbDlpRulesCasbEmailLabelArrayOutput `pulumi:"casbEmailLabels"`
	// Name-ID of the quarantine tombstone template associated with the rule
	CasbTombstoneTemplates CasbDlpRulesCasbTombstoneTemplateArrayOutput `pulumi:"casbTombstoneTemplates"`
	// Name-ID pairs of the cloud application tenants for which the rule is applied
	CloudAppTenants CasbDlpRulesCloudAppTenantsPtrOutput `pulumi:"cloudAppTenants"`
	// Collaboration scope for the rule
	CollaborationScopes pulumi.StringArrayOutput `pulumi:"collaborationScopes"`
	// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
	Components pulumi.StringArrayOutput `pulumi:"components"`
	// The location for the content that the Zscaler service inspects for sensitive data
	ContentLocation pulumi.StringPtrOutput `pulumi:"contentLocation"`
	// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
	CriteriaDomainProfiles CasbDlpRulesCriteriaDomainProfilesPtrOutput `pulumi:"criteriaDomainProfiles"`
	// Name-ID pairs of departments for which rule must be applied
	Departments CasbDlpRulesDepartmentsPtrOutput `pulumi:"departments"`
	// An admin editable text-based description of the rule
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The list of DLP engines to which the DLP policy rule must be applied
	DlpEngines CasbDlpRulesDlpEnginesPtrOutput `pulumi:"dlpEngines"`
	// The domain for the external organization sharing the channel
	Domains pulumi.StringArrayOutput `pulumi:"domains"`
	// Name-ID pairs of recipient profiles for which the rule is applied
	EmailRecipientProfiles CasbDlpRulesEmailRecipientProfilesPtrOutput `pulumi:"emailRecipientProfiles"`
	// Name-ID pairs of entity groups that are part of the rule criteria
	EntityGroups CasbDlpRulesEntityGroupsPtrOutput `pulumi:"entityGroups"`
	// Name-ID pairs of domain profiles excluded in the criteria for the rule
	ExcludedDomainProfiles CasbDlpRulesExcludedDomainProfilesPtrOutput `pulumi:"excludedDomainProfiles"`
	// Email address of the external auditor to whom the DLP email alerts are sent
	ExternalAuditorEmail pulumi.StringPtrOutput `pulumi:"externalAuditorEmail"`
	// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes pulumi.StringArrayOutput `pulumi:"fileTypes"`
	// Name-ID pairs of groups for which the rule is applied
	Groups CasbDlpRulesGroupsPtrOutput `pulumi:"groups"`
	// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeCriteriaDomainProfile pulumi.BoolPtrOutput `pulumi:"includeCriteriaDomainProfile"`
	// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeEmailRecipientProfile pulumi.BoolPtrOutput `pulumi:"includeEmailRecipientProfile"`
	// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
	IncludeEntityGroups pulumi.BoolOutput `pulumi:"includeEntityGroups"`
	// Name-ID pairs of domain profiles included in the criteria for the rule
	IncludedDomainProfiles CasbDlpRulesIncludedDomainProfilesPtrOutput `pulumi:"includedDomainProfiles"`
	// Name-ID pairs of rule labels associated with the rule
	Labels CasbDlpRulesLabelsPtrOutput `pulumi:"labels"`
	// Rule name
	Name pulumi.StringOutput `pulumi:"name"`
	// List of object types for which the rule is applied
	ObjectTypes CasbDlpRulesObjectTypesPtrOutput `pulumi:"objectTypes"`
	// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
	Order pulumi.IntPtrOutput `pulumi:"order"`
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation pulumi.StringPtrOutput `pulumi:"quarantineLocation"`
	// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
	Rank pulumi.IntPtrOutput `pulumi:"rank"`
	// Specifies if the email recipient is internal or external
	Recipient pulumi.StringPtrOutput `pulumi:"recipient"`
	// Name-ID of the redaction profile in the criteria
	RedactionProfiles CasbDlpRulesRedactionProfileArrayOutput `pulumi:"redactionProfiles"`
	// System-generated identifier for the SaaS Security Data at Rest Scanning DLP rule
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// The severity level of the incidents that match the policy rule
	Severity pulumi.StringPtrOutput `pulumi:"severity"`
	// Administrative state of the rule
	State pulumi.StringPtrOutput `pulumi:"state"`
	// Tag applied to the rule
	Tags CasbDlpRulesTagArrayOutput `pulumi:"tags"`
	// The type of SaaS Security Data at Rest Scanning DLP rule
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// Name-ID pairs of users for which rule must be applied
	Users CasbDlpRulesUsersPtrOutput `pulumi:"users"`
	// Specifies whether to delete an old version of the watermarked file
	WatermarkDeleteOldVersion pulumi.BoolPtrOutput `pulumi:"watermarkDeleteOldVersion"`
	// Watermark profile applied to the rule
	WatermarkProfiles CasbDlpRulesWatermarkProfileArrayOutput `pulumi:"watermarkProfiles"`
	// If true, Content Matching is set to None
	WithoutContentInspection pulumi.BoolPtrOutput `pulumi:"withoutContentInspection"`
	// The Zscaler Incident Receiver details
	ZscalerIncidentReceivers CasbDlpRulesZscalerIncidentReceiverArrayOutput `pulumi:"zscalerIncidentReceivers"`
}

// NewCasbDlpRules registers a new resource with the given unique name, arguments, and options.
func NewCasbDlpRules(ctx *pulumi.Context,
	name string, args *CasbDlpRulesArgs, opts ...pulumi.ResourceOption) (*CasbDlpRules, error) {
	if args == nil {
		args = &CasbDlpRulesArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CasbDlpRules
	err := ctx.RegisterResource("zia:index/casbDlpRules:CasbDlpRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCasbDlpRules gets an existing CasbDlpRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCasbDlpRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CasbDlpRulesState, opts ...pulumi.ResourceOption) (*CasbDlpRules, error) {
	var resource CasbDlpRules
	err := ctx.ReadResource("zia:index/casbDlpRules:CasbDlpRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CasbDlpRules resources.
type casbDlpRulesState struct {
	// The configured action for the policy rule
	Action *string `pulumi:"action"`
	// Notification template used for DLP email alerts sent to the auditor
	AuditorNotifications []CasbDlpRulesAuditorNotification `pulumi:"auditorNotifications"`
	// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
	// field
	BucketOwner *string `pulumi:"bucketOwner"`
	// The buckets for the Zscaler service to inspect for sensitive data
	Buckets *CasbDlpRulesBuckets `pulumi:"buckets"`
	// Name-ID of the email label associated with the rule
	CasbEmailLabels []CasbDlpRulesCasbEmailLabel `pulumi:"casbEmailLabels"`
	// Name-ID of the quarantine tombstone template associated with the rule
	CasbTombstoneTemplates []CasbDlpRulesCasbTombstoneTemplate `pulumi:"casbTombstoneTemplates"`
	// Name-ID pairs of the cloud application tenants for which the rule is applied
	CloudAppTenants *CasbDlpRulesCloudAppTenants `pulumi:"cloudAppTenants"`
	// Collaboration scope for the rule
	CollaborationScopes []string `pulumi:"collaborationScopes"`
	// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
	Components []string `pulumi:"components"`
	// The location for the content that the Zscaler service inspects for sensitive data
	ContentLocation *string `pulumi:"contentLocation"`
	// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
	CriteriaDomainProfiles *CasbDlpRulesCriteriaDomainProfiles `pulumi:"criteriaDomainProfiles"`
	// Name-ID pairs of departments for which rule must be applied
	Departments *CasbDlpRulesDepartments `pulumi:"departments"`
	// An admin editable text-based description of the rule
	Description *string `pulumi:"description"`
	// The list of DLP engines to which the DLP policy rule must be applied
	DlpEngines *CasbDlpRulesDlpEngines `pulumi:"dlpEngines"`
	// The domain for the external organization sharing the channel
	Domains []string `pulumi:"domains"`
	// Name-ID pairs of recipient profiles for which the rule is applied
	EmailRecipientProfiles *CasbDlpRulesEmailRecipientProfiles `pulumi:"emailRecipientProfiles"`
	// Name-ID pairs of entity groups that are part of the rule criteria
	EntityGroups *CasbDlpRulesEntityGroups `pulumi:"entityGroups"`
	// Name-ID pairs of domain profiles excluded in the criteria for the rule
	ExcludedDomainProfiles *CasbDlpRulesExcludedDomainProfiles `pulumi:"excludedDomainProfiles"`
	// Email address of the external auditor to whom the DLP email alerts are sent
	ExternalAuditorEmail *string `pulumi:"externalAuditorEmail"`
	// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes []string `pulumi:"fileTypes"`
	// Name-ID pairs of groups for which the rule is applied
	Groups *CasbDlpRulesGroups `pulumi:"groups"`
	// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeCriteriaDomainProfile *bool `pulumi:"includeCriteriaDomainProfile"`
	// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeEmailRecipientProfile *bool `pulumi:"includeEmailRecipientProfile"`
	// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
	IncludeEntityGroups *bool `pulumi:"includeEntityGroups"`
	// Name-ID pairs of domain profiles included in the criteria for the rule
	IncludedDomainProfiles *CasbDlpRulesIncludedDomainProfiles `pulumi:"includedDomainProfiles"`
	// Name-ID pairs of rule labels associated with the rule
	Labels *CasbDlpRulesLabels `pulumi:"labels"`
	// Rule name
	Name *string `pulumi:"name"`
	// List of object types for which the rule is applied
	ObjectTypes *CasbDlpRulesObjectTypes `pulumi:"objectTypes"`
	// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
	Order *int `pulumi:"order"`
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation *string `pulumi:"quarantineLocation"`
	// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
	Rank *int `pulumi:"rank"`
	// Specifies if the email recipient is internal or external
	Recipient *string `pulumi:"recipient"`
	// Name-ID of the redaction profile in the criteria
	RedactionProfiles []CasbDlpRulesRedactionProfile `pulumi:"redactionProfiles"`
	// System-generated identifier for the SaaS Security Data at Rest Scanning DLP rule
	RuleId *int `pulumi:"ruleId"`
	// The severity level of the incidents that match the policy rule
	Severity *string `pulumi:"severity"`
	// Administrative state of the rule
	State *string `pulumi:"state"`
	// Tag applied to the rule
	Tags []CasbDlpRulesTag `pulumi:"tags"`
	// The type of SaaS Security Data at Rest Scanning DLP rule
	Type *string `pulumi:"type"`
	// Name-ID pairs of users for which rule must be applied
	Users *CasbDlpRulesUsers `pulumi:"users"`
	// Specifies whether to delete an old version of the watermarked file
	WatermarkDeleteOldVersion *bool `pulumi:"watermarkDeleteOldVersion"`
	// Watermark profile applied to the rule
	WatermarkProfiles []CasbDlpRulesWatermarkProfile `pulumi:"watermarkProfiles"`
	// If true, Content Matching is set to None
	WithoutContentInspection *bool `pulumi:"withoutContentInspection"`
	// The Zscaler Incident Receiver details
	ZscalerIncidentReceivers []CasbDlpRulesZscalerIncidentReceiver `pulumi:"zscalerIncidentReceivers"`
}

type CasbDlpRulesState struct {
	// The configured action for the policy rule
	Action pulumi.StringPtrInput
	// Notification template used for DLP email alerts sent to the auditor
	AuditorNotifications CasbDlpRulesAuditorNotificationArrayInput
	// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
	// field
	BucketOwner pulumi.StringPtrInput
	// The buckets for the Zscaler service to inspect for sensitive data
	Buckets CasbDlpRulesBucketsPtrInput
	// Name-ID of the email label associated with the rule
	CasbEmailLabels CasbDlpRulesCasbEmailLabelArrayInput
	// Name-ID of the quarantine tombstone template associated with the rule
	CasbTombstoneTemplates CasbDlpRulesCasbTombstoneTemplateArrayInput
	// Name-ID pairs of the cloud application tenants for which the rule is applied
	CloudAppTenants CasbDlpRulesCloudAppTenantsPtrInput
	// Collaboration scope for the rule
	CollaborationScopes pulumi.StringArrayInput
	// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
	Components pulumi.StringArrayInput
	// The location for the content that the Zscaler service inspects for sensitive data
	ContentLocation pulumi.StringPtrInput
	// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
	CriteriaDomainProfiles CasbDlpRulesCriteriaDomainProfilesPtrInput
	// Name-ID pairs of departments for which rule must be applied
	Departments CasbDlpRulesDepartmentsPtrInput
	// An admin editable text-based description of the rule
	Description pulumi.StringPtrInput
	// The list of DLP engines to which the DLP policy rule must be applied
	DlpEngines CasbDlpRulesDlpEnginesPtrInput
	// The domain for the external organization sharing the channel
	Domains pulumi.StringArrayInput
	// Name-ID pairs of recipient profiles for which the rule is applied
	EmailRecipientProfiles CasbDlpRulesEmailRecipientProfilesPtrInput
	// Name-ID pairs of entity groups that are part of the rule criteria
	EntityGroups CasbDlpRulesEntityGroupsPtrInput
	// Name-ID pairs of domain profiles excluded in the criteria for the rule
	ExcludedDomainProfiles CasbDlpRulesExcludedDomainProfilesPtrInput
	// Email address of the external auditor to whom the DLP email alerts are sent
	ExternalAuditorEmail pulumi.StringPtrInput
	// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes pulumi.StringArrayInput
	// Name-ID pairs of groups for which the rule is applied
	Groups CasbDlpRulesGroupsPtrInput
	// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeCriteriaDomainProfile pulumi.BoolPtrInput
	// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeEmailRecipientProfile pulumi.BoolPtrInput
	// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
	IncludeEntityGroups pulumi.BoolPtrInput
	// Name-ID pairs of domain profiles included in the criteria for the rule
	IncludedDomainProfiles CasbDlpRulesIncludedDomainProfilesPtrInput
	// Name-ID pairs of rule labels associated with the rule
	Labels CasbDlpRulesLabelsPtrInput
	// Rule name
	Name pulumi.StringPtrInput
	// List of object types for which the rule is applied
	ObjectTypes CasbDlpRulesObjectTypesPtrInput
	// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
	Order pulumi.IntPtrInput
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation pulumi.StringPtrInput
	// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
	Rank pulumi.IntPtrInput
	// Specifies if the email recipient is internal or external
	Recipient pulumi.StringPtrInput
	// Name-ID of the redaction profile in the criteria
	RedactionProfiles CasbDlpRulesRedactionProfileArrayInput
	// System-generated identifier for the SaaS Security Data at Rest Scanning DLP rule
	RuleId pulumi.IntPtrInput
	// The severity level of the incidents that match the policy rule
	Severity pulumi.StringPtrInput
	// Administrative state of the rule
	State pulumi.StringPtrInput
	// Tag applied to the rule
	Tags CasbDlpRulesTagArrayInput
	// The type of SaaS Security Data at Rest Scanning DLP rule
	Type pulumi.StringPtrInput
	// Name-ID pairs of users for which rule must be applied
	Users CasbDlpRulesUsersPtrInput
	// Specifies whether to delete an old version of the watermarked file
	WatermarkDeleteOldVersion pulumi.BoolPtrInput
	// Watermark profile applied to the rule
	WatermarkProfiles CasbDlpRulesWatermarkProfileArrayInput
	// If true, Content Matching is set to None
	WithoutContentInspection pulumi.BoolPtrInput
	// The Zscaler Incident Receiver details
	ZscalerIncidentReceivers CasbDlpRulesZscalerIncidentReceiverArrayInput
}

func (CasbDlpRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*casbDlpRulesState)(nil)).Elem()
}

type casbDlpRulesArgs struct {
	// The configured action for the policy rule
	Action *string `pulumi:"action"`
	// Notification template used for DLP email alerts sent to the auditor
	AuditorNotifications []CasbDlpRulesAuditorNotification `pulumi:"auditorNotifications"`
	// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
	// field
	BucketOwner *string `pulumi:"bucketOwner"`
	// The buckets for the Zscaler service to inspect for sensitive data
	Buckets *CasbDlpRulesBuckets `pulumi:"buckets"`
	// Name-ID of the email label associated with the rule
	CasbEmailLabels []CasbDlpRulesCasbEmailLabel `pulumi:"casbEmailLabels"`
	// Name-ID of the quarantine tombstone template associated with the rule
	CasbTombstoneTemplates []CasbDlpRulesCasbTombstoneTemplate `pulumi:"casbTombstoneTemplates"`
	// Name-ID pairs of the cloud application tenants for which the rule is applied
	CloudAppTenants *CasbDlpRulesCloudAppTenants `pulumi:"cloudAppTenants"`
	// Collaboration scope for the rule
	CollaborationScopes []string `pulumi:"collaborationScopes"`
	// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
	Components []string `pulumi:"components"`
	// The location for the content that the Zscaler service inspects for sensitive data
	ContentLocation *string `pulumi:"contentLocation"`
	// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
	CriteriaDomainProfiles *CasbDlpRulesCriteriaDomainProfiles `pulumi:"criteriaDomainProfiles"`
	// Name-ID pairs of departments for which rule must be applied
	Departments *CasbDlpRulesDepartments `pulumi:"departments"`
	// An admin editable text-based description of the rule
	Description *string `pulumi:"description"`
	// The list of DLP engines to which the DLP policy rule must be applied
	DlpEngines *CasbDlpRulesDlpEngines `pulumi:"dlpEngines"`
	// The domain for the external organization sharing the channel
	Domains []string `pulumi:"domains"`
	// Name-ID pairs of recipient profiles for which the rule is applied
	EmailRecipientProfiles *CasbDlpRulesEmailRecipientProfiles `pulumi:"emailRecipientProfiles"`
	// Name-ID pairs of entity groups that are part of the rule criteria
	EntityGroups *CasbDlpRulesEntityGroups `pulumi:"entityGroups"`
	// Name-ID pairs of domain profiles excluded in the criteria for the rule
	ExcludedDomainProfiles *CasbDlpRulesExcludedDomainProfiles `pulumi:"excludedDomainProfiles"`
	// Email address of the external auditor to whom the DLP email alerts are sent
	ExternalAuditorEmail *string `pulumi:"externalAuditorEmail"`
	// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes []string `pulumi:"fileTypes"`
	// Name-ID pairs of groups for which the rule is applied
	Groups *CasbDlpRulesGroups `pulumi:"groups"`
	// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeCriteriaDomainProfile *bool `pulumi:"includeCriteriaDomainProfile"`
	// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeEmailRecipientProfile *bool `pulumi:"includeEmailRecipientProfile"`
	// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
	IncludeEntityGroups *bool `pulumi:"includeEntityGroups"`
	// Name-ID pairs of domain profiles included in the criteria for the rule
	IncludedDomainProfiles *CasbDlpRulesIncludedDomainProfiles `pulumi:"includedDomainProfiles"`
	// Name-ID pairs of rule labels associated with the rule
	Labels *CasbDlpRulesLabels `pulumi:"labels"`
	// Rule name
	Name *string `pulumi:"name"`
	// List of object types for which the rule is applied
	ObjectTypes *CasbDlpRulesObjectTypes `pulumi:"objectTypes"`
	// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
	Order *int `pulumi:"order"`
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation *string `pulumi:"quarantineLocation"`
	// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
	Rank *int `pulumi:"rank"`
	// Specifies if the email recipient is internal or external
	Recipient *string `pulumi:"recipient"`
	// Name-ID of the redaction profile in the criteria
	RedactionProfiles []CasbDlpRulesRedactionProfile `pulumi:"redactionProfiles"`
	// The severity level of the incidents that match the policy rule
	Severity *string `pulumi:"severity"`
	// Administrative state of the rule
	State *string `pulumi:"state"`
	// Tag applied to the rule
	Tags []CasbDlpRulesTag `pulumi:"tags"`
	// The type of SaaS Security Data at Rest Scanning DLP rule
	Type *string `pulumi:"type"`
	// Name-ID pairs of users for which rule must be applied
	Users *CasbDlpRulesUsers `pulumi:"users"`
	// Specifies whether to delete an old version of the watermarked file
	WatermarkDeleteOldVersion *bool `pulumi:"watermarkDeleteOldVersion"`
	// Watermark profile applied to the rule
	WatermarkProfiles []CasbDlpRulesWatermarkProfile `pulumi:"watermarkProfiles"`
	// If true, Content Matching is set to None
	WithoutContentInspection *bool `pulumi:"withoutContentInspection"`
	// The Zscaler Incident Receiver details
	ZscalerIncidentReceivers []CasbDlpRulesZscalerIncidentReceiver `pulumi:"zscalerIncidentReceivers"`
}

// The set of arguments for constructing a CasbDlpRules resource.
type CasbDlpRulesArgs struct {
	// The configured action for the policy rule
	Action pulumi.StringPtrInput
	// Notification template used for DLP email alerts sent to the auditor
	AuditorNotifications CasbDlpRulesAuditorNotificationArrayInput
	// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
	// field
	BucketOwner pulumi.StringPtrInput
	// The buckets for the Zscaler service to inspect for sensitive data
	Buckets CasbDlpRulesBucketsPtrInput
	// Name-ID of the email label associated with the rule
	CasbEmailLabels CasbDlpRulesCasbEmailLabelArrayInput
	// Name-ID of the quarantine tombstone template associated with the rule
	CasbTombstoneTemplates CasbDlpRulesCasbTombstoneTemplateArrayInput
	// Name-ID pairs of the cloud application tenants for which the rule is applied
	CloudAppTenants CasbDlpRulesCloudAppTenantsPtrInput
	// Collaboration scope for the rule
	CollaborationScopes pulumi.StringArrayInput
	// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
	Components pulumi.StringArrayInput
	// The location for the content that the Zscaler service inspects for sensitive data
	ContentLocation pulumi.StringPtrInput
	// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
	CriteriaDomainProfiles CasbDlpRulesCriteriaDomainProfilesPtrInput
	// Name-ID pairs of departments for which rule must be applied
	Departments CasbDlpRulesDepartmentsPtrInput
	// An admin editable text-based description of the rule
	Description pulumi.StringPtrInput
	// The list of DLP engines to which the DLP policy rule must be applied
	DlpEngines CasbDlpRulesDlpEnginesPtrInput
	// The domain for the external organization sharing the channel
	Domains pulumi.StringArrayInput
	// Name-ID pairs of recipient profiles for which the rule is applied
	EmailRecipientProfiles CasbDlpRulesEmailRecipientProfilesPtrInput
	// Name-ID pairs of entity groups that are part of the rule criteria
	EntityGroups CasbDlpRulesEntityGroupsPtrInput
	// Name-ID pairs of domain profiles excluded in the criteria for the rule
	ExcludedDomainProfiles CasbDlpRulesExcludedDomainProfilesPtrInput
	// Email address of the external auditor to whom the DLP email alerts are sent
	ExternalAuditorEmail pulumi.StringPtrInput
	// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes pulumi.StringArrayInput
	// Name-ID pairs of groups for which the rule is applied
	Groups CasbDlpRulesGroupsPtrInput
	// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeCriteriaDomainProfile pulumi.BoolPtrInput
	// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
	IncludeEmailRecipientProfile pulumi.BoolPtrInput
	// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
	IncludeEntityGroups pulumi.BoolPtrInput
	// Name-ID pairs of domain profiles included in the criteria for the rule
	IncludedDomainProfiles CasbDlpRulesIncludedDomainProfilesPtrInput
	// Name-ID pairs of rule labels associated with the rule
	Labels CasbDlpRulesLabelsPtrInput
	// Rule name
	Name pulumi.StringPtrInput
	// List of object types for which the rule is applied
	ObjectTypes CasbDlpRulesObjectTypesPtrInput
	// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
	Order pulumi.IntPtrInput
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation pulumi.StringPtrInput
	// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
	Rank pulumi.IntPtrInput
	// Specifies if the email recipient is internal or external
	Recipient pulumi.StringPtrInput
	// Name-ID of the redaction profile in the criteria
	RedactionProfiles CasbDlpRulesRedactionProfileArrayInput
	// The severity level of the incidents that match the policy rule
	Severity pulumi.StringPtrInput
	// Administrative state of the rule
	State pulumi.StringPtrInput
	// Tag applied to the rule
	Tags CasbDlpRulesTagArrayInput
	// The type of SaaS Security Data at Rest Scanning DLP rule
	Type pulumi.StringPtrInput
	// Name-ID pairs of users for which rule must be applied
	Users CasbDlpRulesUsersPtrInput
	// Specifies whether to delete an old version of the watermarked file
	WatermarkDeleteOldVersion pulumi.BoolPtrInput
	// Watermark profile applied to the rule
	WatermarkProfiles CasbDlpRulesWatermarkProfileArrayInput
	// If true, Content Matching is set to None
	WithoutContentInspection pulumi.BoolPtrInput
	// The Zscaler Incident Receiver details
	ZscalerIncidentReceivers CasbDlpRulesZscalerIncidentReceiverArrayInput
}

func (CasbDlpRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*casbDlpRulesArgs)(nil)).Elem()
}

type CasbDlpRulesInput interface {
	pulumi.Input

	ToCasbDlpRulesOutput() CasbDlpRulesOutput
	ToCasbDlpRulesOutputWithContext(ctx context.Context) CasbDlpRulesOutput
}

func (*CasbDlpRules) ElementType() reflect.Type {
	return reflect.TypeOf((**CasbDlpRules)(nil)).Elem()
}

func (i *CasbDlpRules) ToCasbDlpRulesOutput() CasbDlpRulesOutput {
	return i.ToCasbDlpRulesOutputWithContext(context.Background())
}

func (i *CasbDlpRules) ToCasbDlpRulesOutputWithContext(ctx context.Context) CasbDlpRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbDlpRulesOutput)
}

// CasbDlpRulesArrayInput is an input type that accepts CasbDlpRulesArray and CasbDlpRulesArrayOutput values.
// You can construct a concrete instance of `CasbDlpRulesArrayInput` via:
//
//	CasbDlpRulesArray{ CasbDlpRulesArgs{...} }
type CasbDlpRulesArrayInput interface {
	pulumi.Input

	ToCasbDlpRulesArrayOutput() CasbDlpRulesArrayOutput
	ToCasbDlpRulesArrayOutputWithContext(context.Context) CasbDlpRulesArrayOutput
}

type CasbDlpRulesArray []CasbDlpRulesInput

func (CasbDlpRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CasbDlpRules)(nil)).Elem()
}

func (i CasbDlpRulesArray) ToCasbDlpRulesArrayOutput() CasbDlpRulesArrayOutput {
	return i.ToCasbDlpRulesArrayOutputWithContext(context.Background())
}

func (i CasbDlpRulesArray) ToCasbDlpRulesArrayOutputWithContext(ctx context.Context) CasbDlpRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbDlpRulesArrayOutput)
}

// CasbDlpRulesMapInput is an input type that accepts CasbDlpRulesMap and CasbDlpRulesMapOutput values.
// You can construct a concrete instance of `CasbDlpRulesMapInput` via:
//
//	CasbDlpRulesMap{ "key": CasbDlpRulesArgs{...} }
type CasbDlpRulesMapInput interface {
	pulumi.Input

	ToCasbDlpRulesMapOutput() CasbDlpRulesMapOutput
	ToCasbDlpRulesMapOutputWithContext(context.Context) CasbDlpRulesMapOutput
}

type CasbDlpRulesMap map[string]CasbDlpRulesInput

func (CasbDlpRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CasbDlpRules)(nil)).Elem()
}

func (i CasbDlpRulesMap) ToCasbDlpRulesMapOutput() CasbDlpRulesMapOutput {
	return i.ToCasbDlpRulesMapOutputWithContext(context.Background())
}

func (i CasbDlpRulesMap) ToCasbDlpRulesMapOutputWithContext(ctx context.Context) CasbDlpRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbDlpRulesMapOutput)
}

type CasbDlpRulesOutput struct{ *pulumi.OutputState }

func (CasbDlpRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CasbDlpRules)(nil)).Elem()
}

func (o CasbDlpRulesOutput) ToCasbDlpRulesOutput() CasbDlpRulesOutput {
	return o
}

func (o CasbDlpRulesOutput) ToCasbDlpRulesOutputWithContext(ctx context.Context) CasbDlpRulesOutput {
	return o
}

// The configured action for the policy rule
func (o CasbDlpRulesOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// Notification template used for DLP email alerts sent to the auditor
func (o CasbDlpRulesOutput) AuditorNotifications() CasbDlpRulesAuditorNotificationArrayOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesAuditorNotificationArrayOutput { return v.AuditorNotifications }).(CasbDlpRulesAuditorNotificationArrayOutput)
}

// A user who inspect their buckets for sensitive data. When you choose a user, their buckets are available in the Buckets
// field
func (o CasbDlpRulesOutput) BucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringPtrOutput { return v.BucketOwner }).(pulumi.StringPtrOutput)
}

// The buckets for the Zscaler service to inspect for sensitive data
func (o CasbDlpRulesOutput) Buckets() CasbDlpRulesBucketsPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesBucketsPtrOutput { return v.Buckets }).(CasbDlpRulesBucketsPtrOutput)
}

// Name-ID of the email label associated with the rule
func (o CasbDlpRulesOutput) CasbEmailLabels() CasbDlpRulesCasbEmailLabelArrayOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesCasbEmailLabelArrayOutput { return v.CasbEmailLabels }).(CasbDlpRulesCasbEmailLabelArrayOutput)
}

// Name-ID of the quarantine tombstone template associated with the rule
func (o CasbDlpRulesOutput) CasbTombstoneTemplates() CasbDlpRulesCasbTombstoneTemplateArrayOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesCasbTombstoneTemplateArrayOutput { return v.CasbTombstoneTemplates }).(CasbDlpRulesCasbTombstoneTemplateArrayOutput)
}

// Name-ID pairs of the cloud application tenants for which the rule is applied
func (o CasbDlpRulesOutput) CloudAppTenants() CasbDlpRulesCloudAppTenantsPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesCloudAppTenantsPtrOutput { return v.CloudAppTenants }).(CasbDlpRulesCloudAppTenantsPtrOutput)
}

// Collaboration scope for the rule
func (o CasbDlpRulesOutput) CollaborationScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringArrayOutput { return v.CollaborationScopes }).(pulumi.StringArrayOutput)
}

// List of components for which the rule is applied. Zscaler service inspects these components for sensitive data.
func (o CasbDlpRulesOutput) Components() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringArrayOutput { return v.Components }).(pulumi.StringArrayOutput)
}

// The location for the content that the Zscaler service inspects for sensitive data
func (o CasbDlpRulesOutput) ContentLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringPtrOutput { return v.ContentLocation }).(pulumi.StringPtrOutput)
}

// Name-ID pairs of domain profiles that are mandatory in the criteria for the rule
func (o CasbDlpRulesOutput) CriteriaDomainProfiles() CasbDlpRulesCriteriaDomainProfilesPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesCriteriaDomainProfilesPtrOutput { return v.CriteriaDomainProfiles }).(CasbDlpRulesCriteriaDomainProfilesPtrOutput)
}

// Name-ID pairs of departments for which rule must be applied
func (o CasbDlpRulesOutput) Departments() CasbDlpRulesDepartmentsPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesDepartmentsPtrOutput { return v.Departments }).(CasbDlpRulesDepartmentsPtrOutput)
}

// An admin editable text-based description of the rule
func (o CasbDlpRulesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The list of DLP engines to which the DLP policy rule must be applied
func (o CasbDlpRulesOutput) DlpEngines() CasbDlpRulesDlpEnginesPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesDlpEnginesPtrOutput { return v.DlpEngines }).(CasbDlpRulesDlpEnginesPtrOutput)
}

// The domain for the external organization sharing the channel
func (o CasbDlpRulesOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringArrayOutput { return v.Domains }).(pulumi.StringArrayOutput)
}

// Name-ID pairs of recipient profiles for which the rule is applied
func (o CasbDlpRulesOutput) EmailRecipientProfiles() CasbDlpRulesEmailRecipientProfilesPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesEmailRecipientProfilesPtrOutput { return v.EmailRecipientProfiles }).(CasbDlpRulesEmailRecipientProfilesPtrOutput)
}

// Name-ID pairs of entity groups that are part of the rule criteria
func (o CasbDlpRulesOutput) EntityGroups() CasbDlpRulesEntityGroupsPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesEntityGroupsPtrOutput { return v.EntityGroups }).(CasbDlpRulesEntityGroupsPtrOutput)
}

// Name-ID pairs of domain profiles excluded in the criteria for the rule
func (o CasbDlpRulesOutput) ExcludedDomainProfiles() CasbDlpRulesExcludedDomainProfilesPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesExcludedDomainProfilesPtrOutput { return v.ExcludedDomainProfiles }).(CasbDlpRulesExcludedDomainProfilesPtrOutput)
}

// Email address of the external auditor to whom the DLP email alerts are sent
func (o CasbDlpRulesOutput) ExternalAuditorEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringPtrOutput { return v.ExternalAuditorEmail }).(pulumi.StringPtrOutput)
}

// File type categories for which the policy is applied. If not set, the rule is applied across all file types.
func (o CasbDlpRulesOutput) FileTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringArrayOutput { return v.FileTypes }).(pulumi.StringArrayOutput)
}

// Name-ID pairs of groups for which the rule is applied
func (o CasbDlpRulesOutput) Groups() CasbDlpRulesGroupsPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesGroupsPtrOutput { return v.Groups }).(CasbDlpRulesGroupsPtrOutput)
}

// If true, criteriaDomainProfiles is included as part of the criteria, else they are excluded from the criteria.
func (o CasbDlpRulesOutput) IncludeCriteriaDomainProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.BoolPtrOutput { return v.IncludeCriteriaDomainProfile }).(pulumi.BoolPtrOutput)
}

// If true, emailRecipientProfiles is included as part of the criteria, else they are excluded from the criteria.
func (o CasbDlpRulesOutput) IncludeEmailRecipientProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.BoolPtrOutput { return v.IncludeEmailRecipientProfile }).(pulumi.BoolPtrOutput)
}

// If true, entityGroups is included as part of the criteria, else are excluded from the criteria
func (o CasbDlpRulesOutput) IncludeEntityGroups() pulumi.BoolOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.BoolOutput { return v.IncludeEntityGroups }).(pulumi.BoolOutput)
}

// Name-ID pairs of domain profiles included in the criteria for the rule
func (o CasbDlpRulesOutput) IncludedDomainProfiles() CasbDlpRulesIncludedDomainProfilesPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesIncludedDomainProfilesPtrOutput { return v.IncludedDomainProfiles }).(CasbDlpRulesIncludedDomainProfilesPtrOutput)
}

// Name-ID pairs of rule labels associated with the rule
func (o CasbDlpRulesOutput) Labels() CasbDlpRulesLabelsPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesLabelsPtrOutput { return v.Labels }).(CasbDlpRulesLabelsPtrOutput)
}

// Rule name
func (o CasbDlpRulesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of object types for which the rule is applied
func (o CasbDlpRulesOutput) ObjectTypes() CasbDlpRulesObjectTypesPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesObjectTypesPtrOutput { return v.ObjectTypes }).(CasbDlpRulesObjectTypesPtrOutput)
}

// Order of rule execution with respect to other SaaS Security Data at Rest Scanning DLP rules
func (o CasbDlpRulesOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.IntPtrOutput { return v.Order }).(pulumi.IntPtrOutput)
}

// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
// data
func (o CasbDlpRulesOutput) QuarantineLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringPtrOutput { return v.QuarantineLocation }).(pulumi.StringPtrOutput)
}

// Admin rank that is assigned to this rule. Mandatory when admin rank-based access restriction is enabled
func (o CasbDlpRulesOutput) Rank() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.IntPtrOutput { return v.Rank }).(pulumi.IntPtrOutput)
}

// Specifies if the email recipient is internal or external
func (o CasbDlpRulesOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringPtrOutput { return v.Recipient }).(pulumi.StringPtrOutput)
}

// Name-ID of the redaction profile in the criteria
func (o CasbDlpRulesOutput) RedactionProfiles() CasbDlpRulesRedactionProfileArrayOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesRedactionProfileArrayOutput { return v.RedactionProfiles }).(CasbDlpRulesRedactionProfileArrayOutput)
}

// System-generated identifier for the SaaS Security Data at Rest Scanning DLP rule
func (o CasbDlpRulesOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

// The severity level of the incidents that match the policy rule
func (o CasbDlpRulesOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringPtrOutput { return v.Severity }).(pulumi.StringPtrOutput)
}

// Administrative state of the rule
func (o CasbDlpRulesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// Tag applied to the rule
func (o CasbDlpRulesOutput) Tags() CasbDlpRulesTagArrayOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesTagArrayOutput { return v.Tags }).(CasbDlpRulesTagArrayOutput)
}

// The type of SaaS Security Data at Rest Scanning DLP rule
func (o CasbDlpRulesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// Name-ID pairs of users for which rule must be applied
func (o CasbDlpRulesOutput) Users() CasbDlpRulesUsersPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesUsersPtrOutput { return v.Users }).(CasbDlpRulesUsersPtrOutput)
}

// Specifies whether to delete an old version of the watermarked file
func (o CasbDlpRulesOutput) WatermarkDeleteOldVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.BoolPtrOutput { return v.WatermarkDeleteOldVersion }).(pulumi.BoolPtrOutput)
}

// Watermark profile applied to the rule
func (o CasbDlpRulesOutput) WatermarkProfiles() CasbDlpRulesWatermarkProfileArrayOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesWatermarkProfileArrayOutput { return v.WatermarkProfiles }).(CasbDlpRulesWatermarkProfileArrayOutput)
}

// If true, Content Matching is set to None
func (o CasbDlpRulesOutput) WithoutContentInspection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CasbDlpRules) pulumi.BoolPtrOutput { return v.WithoutContentInspection }).(pulumi.BoolPtrOutput)
}

// The Zscaler Incident Receiver details
func (o CasbDlpRulesOutput) ZscalerIncidentReceivers() CasbDlpRulesZscalerIncidentReceiverArrayOutput {
	return o.ApplyT(func(v *CasbDlpRules) CasbDlpRulesZscalerIncidentReceiverArrayOutput {
		return v.ZscalerIncidentReceivers
	}).(CasbDlpRulesZscalerIncidentReceiverArrayOutput)
}

type CasbDlpRulesArrayOutput struct{ *pulumi.OutputState }

func (CasbDlpRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CasbDlpRules)(nil)).Elem()
}

func (o CasbDlpRulesArrayOutput) ToCasbDlpRulesArrayOutput() CasbDlpRulesArrayOutput {
	return o
}

func (o CasbDlpRulesArrayOutput) ToCasbDlpRulesArrayOutputWithContext(ctx context.Context) CasbDlpRulesArrayOutput {
	return o
}

func (o CasbDlpRulesArrayOutput) Index(i pulumi.IntInput) CasbDlpRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CasbDlpRules {
		return vs[0].([]*CasbDlpRules)[vs[1].(int)]
	}).(CasbDlpRulesOutput)
}

type CasbDlpRulesMapOutput struct{ *pulumi.OutputState }

func (CasbDlpRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CasbDlpRules)(nil)).Elem()
}

func (o CasbDlpRulesMapOutput) ToCasbDlpRulesMapOutput() CasbDlpRulesMapOutput {
	return o
}

func (o CasbDlpRulesMapOutput) ToCasbDlpRulesMapOutputWithContext(ctx context.Context) CasbDlpRulesMapOutput {
	return o
}

func (o CasbDlpRulesMapOutput) MapIndex(k pulumi.StringInput) CasbDlpRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CasbDlpRules {
		return vs[0].(map[string]*CasbDlpRules)[vs[1].(string)]
	}).(CasbDlpRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CasbDlpRulesInput)(nil)).Elem(), &CasbDlpRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*CasbDlpRulesArrayInput)(nil)).Elem(), CasbDlpRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CasbDlpRulesMapInput)(nil)).Elem(), CasbDlpRulesMap{})
	pulumi.RegisterOutputType(CasbDlpRulesOutput{})
	pulumi.RegisterOutputType(CasbDlpRulesArrayOutput{})
	pulumi.RegisterOutputType(CasbDlpRulesMapOutput{})
}
