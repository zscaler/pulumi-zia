// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/configuring-data-rest-scanning-malware-detection-policy)
// * [API documentation](https://help.zscaler.com/zia/saas-security-api#/casbMalwareRules-post)
//
// The **zia_casb_malware_rules** resource Adds a new SaaS Security Data at Rest Scanning Malware Detection rule.
//
// ## Example Usage
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// **zia_casb_malware_rules** can be imported by using `<RULE_TYPE:RULE_ID>` or `<RULE_TYPE:RULE_NAME>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zia:index/casbMalwareRules:CasbMalwareRules this <rule_type:rule_id>
// ```
//
// ```sh
// $ pulumi import zia:index/casbMalwareRules:CasbMalwareRules this <"rule_type:rule_name">
// ```
//
// Deprecated: zia.index/casbmalwarerules.CasbMalwareRules has been deprecated in favor of zia.index/casbmalwarerule.CasbMalwareRule
type CasbMalwareRules struct {
	pulumi.CustomResourceState

	Action pulumi.StringPtrOutput `pulumi:"action"`
	// Name-ID pairs of locations for which rule must be applied
	Buckets CasbMalwareRulesBucketsPtrOutput `pulumi:"buckets"`
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbEmailLabels CasbMalwareRulesCasbEmailLabelArrayOutput `pulumi:"casbEmailLabels"`
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbTombstoneTemplates CasbMalwareRulesCasbTombstoneTemplateArrayOutput `pulumi:"casbTombstoneTemplates"`
	// This field is applicable for devices that are managed using Zscaler Client Connector.
	CloudAppTenantIds CasbMalwareRulesCloudAppTenantIdsPtrOutput `pulumi:"cloudAppTenantIds"`
	// Name-ID pairs of the cloud application tenants for which the rule is applied. If the name-ID pairs of the cloud
	// application tenants are not specified, the rule is applied to all tenants.
	CloudAppTenants CasbMalwareRulesCloudAppTenantsPtrOutput `pulumi:"cloudAppTenants"`
	// list of Labels that are applicable to the rule.
	Labels CasbMalwareRulesLabelsPtrOutput `pulumi:"labels"`
	Name   pulumi.StringOutput             `pulumi:"name"`
	Order  pulumi.IntPtrOutput             `pulumi:"order"`
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation pulumi.StringPtrOutput `pulumi:"quarantineLocation"`
	// A unique identifier assigned to the forwarding rule
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// Enables or disables the scan inbound email link
	ScanInboundEmailLink pulumi.StringPtrOutput `pulumi:"scanInboundEmailLink"`
	State                pulumi.StringPtrOutput `pulumi:"state"`
	Type                 pulumi.StringPtrOutput `pulumi:"type"`
}

// NewCasbMalwareRules registers a new resource with the given unique name, arguments, and options.
func NewCasbMalwareRules(ctx *pulumi.Context,
	name string, args *CasbMalwareRulesArgs, opts ...pulumi.ResourceOption) (*CasbMalwareRules, error) {
	if args == nil {
		args = &CasbMalwareRulesArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CasbMalwareRules
	err := ctx.RegisterResource("zia:index/casbMalwareRules:CasbMalwareRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCasbMalwareRules gets an existing CasbMalwareRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCasbMalwareRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CasbMalwareRulesState, opts ...pulumi.ResourceOption) (*CasbMalwareRules, error) {
	var resource CasbMalwareRules
	err := ctx.ReadResource("zia:index/casbMalwareRules:CasbMalwareRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CasbMalwareRules resources.
type casbMalwareRulesState struct {
	Action *string `pulumi:"action"`
	// Name-ID pairs of locations for which rule must be applied
	Buckets *CasbMalwareRulesBuckets `pulumi:"buckets"`
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbEmailLabels []CasbMalwareRulesCasbEmailLabel `pulumi:"casbEmailLabels"`
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbTombstoneTemplates []CasbMalwareRulesCasbTombstoneTemplate `pulumi:"casbTombstoneTemplates"`
	// This field is applicable for devices that are managed using Zscaler Client Connector.
	CloudAppTenantIds *CasbMalwareRulesCloudAppTenantIds `pulumi:"cloudAppTenantIds"`
	// Name-ID pairs of the cloud application tenants for which the rule is applied. If the name-ID pairs of the cloud
	// application tenants are not specified, the rule is applied to all tenants.
	CloudAppTenants *CasbMalwareRulesCloudAppTenants `pulumi:"cloudAppTenants"`
	// list of Labels that are applicable to the rule.
	Labels *CasbMalwareRulesLabels `pulumi:"labels"`
	Name   *string                 `pulumi:"name"`
	Order  *int                    `pulumi:"order"`
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation *string `pulumi:"quarantineLocation"`
	// A unique identifier assigned to the forwarding rule
	RuleId *int `pulumi:"ruleId"`
	// Enables or disables the scan inbound email link
	ScanInboundEmailLink *string `pulumi:"scanInboundEmailLink"`
	State                *string `pulumi:"state"`
	Type                 *string `pulumi:"type"`
}

type CasbMalwareRulesState struct {
	Action pulumi.StringPtrInput
	// Name-ID pairs of locations for which rule must be applied
	Buckets CasbMalwareRulesBucketsPtrInput
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbEmailLabels CasbMalwareRulesCasbEmailLabelArrayInput
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbTombstoneTemplates CasbMalwareRulesCasbTombstoneTemplateArrayInput
	// This field is applicable for devices that are managed using Zscaler Client Connector.
	CloudAppTenantIds CasbMalwareRulesCloudAppTenantIdsPtrInput
	// Name-ID pairs of the cloud application tenants for which the rule is applied. If the name-ID pairs of the cloud
	// application tenants are not specified, the rule is applied to all tenants.
	CloudAppTenants CasbMalwareRulesCloudAppTenantsPtrInput
	// list of Labels that are applicable to the rule.
	Labels CasbMalwareRulesLabelsPtrInput
	Name   pulumi.StringPtrInput
	Order  pulumi.IntPtrInput
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation pulumi.StringPtrInput
	// A unique identifier assigned to the forwarding rule
	RuleId pulumi.IntPtrInput
	// Enables or disables the scan inbound email link
	ScanInboundEmailLink pulumi.StringPtrInput
	State                pulumi.StringPtrInput
	Type                 pulumi.StringPtrInput
}

func (CasbMalwareRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*casbMalwareRulesState)(nil)).Elem()
}

type casbMalwareRulesArgs struct {
	Action *string `pulumi:"action"`
	// Name-ID pairs of locations for which rule must be applied
	Buckets *CasbMalwareRulesBuckets `pulumi:"buckets"`
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbEmailLabels []CasbMalwareRulesCasbEmailLabel `pulumi:"casbEmailLabels"`
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbTombstoneTemplates []CasbMalwareRulesCasbTombstoneTemplate `pulumi:"casbTombstoneTemplates"`
	// This field is applicable for devices that are managed using Zscaler Client Connector.
	CloudAppTenantIds *CasbMalwareRulesCloudAppTenantIds `pulumi:"cloudAppTenantIds"`
	// Name-ID pairs of the cloud application tenants for which the rule is applied. If the name-ID pairs of the cloud
	// application tenants are not specified, the rule is applied to all tenants.
	CloudAppTenants *CasbMalwareRulesCloudAppTenants `pulumi:"cloudAppTenants"`
	// list of Labels that are applicable to the rule.
	Labels *CasbMalwareRulesLabels `pulumi:"labels"`
	Name   *string                 `pulumi:"name"`
	Order  *int                    `pulumi:"order"`
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation *string `pulumi:"quarantineLocation"`
	// Enables or disables the scan inbound email link
	ScanInboundEmailLink *string `pulumi:"scanInboundEmailLink"`
	State                *string `pulumi:"state"`
	Type                 *string `pulumi:"type"`
}

// The set of arguments for constructing a CasbMalwareRules resource.
type CasbMalwareRulesArgs struct {
	Action pulumi.StringPtrInput
	// Name-ID pairs of locations for which rule must be applied
	Buckets CasbMalwareRulesBucketsPtrInput
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbEmailLabels CasbMalwareRulesCasbEmailLabelArrayInput
	// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
	// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
	CasbTombstoneTemplates CasbMalwareRulesCasbTombstoneTemplateArrayInput
	// This field is applicable for devices that are managed using Zscaler Client Connector.
	CloudAppTenantIds CasbMalwareRulesCloudAppTenantIdsPtrInput
	// Name-ID pairs of the cloud application tenants for which the rule is applied. If the name-ID pairs of the cloud
	// application tenants are not specified, the rule is applied to all tenants.
	CloudAppTenants CasbMalwareRulesCloudAppTenantsPtrInput
	// list of Labels that are applicable to the rule.
	Labels CasbMalwareRulesLabelsPtrInput
	Name   pulumi.StringPtrInput
	Order  pulumi.IntPtrInput
	// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
	// data
	QuarantineLocation pulumi.StringPtrInput
	// Enables or disables the scan inbound email link
	ScanInboundEmailLink pulumi.StringPtrInput
	State                pulumi.StringPtrInput
	Type                 pulumi.StringPtrInput
}

func (CasbMalwareRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*casbMalwareRulesArgs)(nil)).Elem()
}

type CasbMalwareRulesInput interface {
	pulumi.Input

	ToCasbMalwareRulesOutput() CasbMalwareRulesOutput
	ToCasbMalwareRulesOutputWithContext(ctx context.Context) CasbMalwareRulesOutput
}

func (*CasbMalwareRules) ElementType() reflect.Type {
	return reflect.TypeOf((**CasbMalwareRules)(nil)).Elem()
}

func (i *CasbMalwareRules) ToCasbMalwareRulesOutput() CasbMalwareRulesOutput {
	return i.ToCasbMalwareRulesOutputWithContext(context.Background())
}

func (i *CasbMalwareRules) ToCasbMalwareRulesOutputWithContext(ctx context.Context) CasbMalwareRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbMalwareRulesOutput)
}

// CasbMalwareRulesArrayInput is an input type that accepts CasbMalwareRulesArray and CasbMalwareRulesArrayOutput values.
// You can construct a concrete instance of `CasbMalwareRulesArrayInput` via:
//
//	CasbMalwareRulesArray{ CasbMalwareRulesArgs{...} }
type CasbMalwareRulesArrayInput interface {
	pulumi.Input

	ToCasbMalwareRulesArrayOutput() CasbMalwareRulesArrayOutput
	ToCasbMalwareRulesArrayOutputWithContext(context.Context) CasbMalwareRulesArrayOutput
}

type CasbMalwareRulesArray []CasbMalwareRulesInput

func (CasbMalwareRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CasbMalwareRules)(nil)).Elem()
}

func (i CasbMalwareRulesArray) ToCasbMalwareRulesArrayOutput() CasbMalwareRulesArrayOutput {
	return i.ToCasbMalwareRulesArrayOutputWithContext(context.Background())
}

func (i CasbMalwareRulesArray) ToCasbMalwareRulesArrayOutputWithContext(ctx context.Context) CasbMalwareRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbMalwareRulesArrayOutput)
}

// CasbMalwareRulesMapInput is an input type that accepts CasbMalwareRulesMap and CasbMalwareRulesMapOutput values.
// You can construct a concrete instance of `CasbMalwareRulesMapInput` via:
//
//	CasbMalwareRulesMap{ "key": CasbMalwareRulesArgs{...} }
type CasbMalwareRulesMapInput interface {
	pulumi.Input

	ToCasbMalwareRulesMapOutput() CasbMalwareRulesMapOutput
	ToCasbMalwareRulesMapOutputWithContext(context.Context) CasbMalwareRulesMapOutput
}

type CasbMalwareRulesMap map[string]CasbMalwareRulesInput

func (CasbMalwareRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CasbMalwareRules)(nil)).Elem()
}

func (i CasbMalwareRulesMap) ToCasbMalwareRulesMapOutput() CasbMalwareRulesMapOutput {
	return i.ToCasbMalwareRulesMapOutputWithContext(context.Background())
}

func (i CasbMalwareRulesMap) ToCasbMalwareRulesMapOutputWithContext(ctx context.Context) CasbMalwareRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbMalwareRulesMapOutput)
}

type CasbMalwareRulesOutput struct{ *pulumi.OutputState }

func (CasbMalwareRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CasbMalwareRules)(nil)).Elem()
}

func (o CasbMalwareRulesOutput) ToCasbMalwareRulesOutput() CasbMalwareRulesOutput {
	return o
}

func (o CasbMalwareRulesOutput) ToCasbMalwareRulesOutputWithContext(ctx context.Context) CasbMalwareRulesOutput {
	return o
}

func (o CasbMalwareRulesOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRules) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// Name-ID pairs of locations for which rule must be applied
func (o CasbMalwareRulesOutput) Buckets() CasbMalwareRulesBucketsPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRules) CasbMalwareRulesBucketsPtrOutput { return v.Buckets }).(CasbMalwareRulesBucketsPtrOutput)
}

// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
func (o CasbMalwareRulesOutput) CasbEmailLabels() CasbMalwareRulesCasbEmailLabelArrayOutput {
	return o.ApplyT(func(v *CasbMalwareRules) CasbMalwareRulesCasbEmailLabelArrayOutput { return v.CasbEmailLabels }).(CasbMalwareRulesCasbEmailLabelArrayOutput)
}

// The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
// Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
func (o CasbMalwareRulesOutput) CasbTombstoneTemplates() CasbMalwareRulesCasbTombstoneTemplateArrayOutput {
	return o.ApplyT(func(v *CasbMalwareRules) CasbMalwareRulesCasbTombstoneTemplateArrayOutput {
		return v.CasbTombstoneTemplates
	}).(CasbMalwareRulesCasbTombstoneTemplateArrayOutput)
}

// This field is applicable for devices that are managed using Zscaler Client Connector.
func (o CasbMalwareRulesOutput) CloudAppTenantIds() CasbMalwareRulesCloudAppTenantIdsPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRules) CasbMalwareRulesCloudAppTenantIdsPtrOutput { return v.CloudAppTenantIds }).(CasbMalwareRulesCloudAppTenantIdsPtrOutput)
}

// Name-ID pairs of the cloud application tenants for which the rule is applied. If the name-ID pairs of the cloud
// application tenants are not specified, the rule is applied to all tenants.
func (o CasbMalwareRulesOutput) CloudAppTenants() CasbMalwareRulesCloudAppTenantsPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRules) CasbMalwareRulesCloudAppTenantsPtrOutput { return v.CloudAppTenants }).(CasbMalwareRulesCloudAppTenantsPtrOutput)
}

// list of Labels that are applicable to the rule.
func (o CasbMalwareRulesOutput) Labels() CasbMalwareRulesLabelsPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRules) CasbMalwareRulesLabelsPtrOutput { return v.Labels }).(CasbMalwareRulesLabelsPtrOutput)
}

func (o CasbMalwareRulesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CasbMalwareRules) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CasbMalwareRulesOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRules) pulumi.IntPtrOutput { return v.Order }).(pulumi.IntPtrOutput)
}

// Location where all the quarantined files are moved and necessary actions are taken by either deleting or restoring the
// data
func (o CasbMalwareRulesOutput) QuarantineLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRules) pulumi.StringPtrOutput { return v.QuarantineLocation }).(pulumi.StringPtrOutput)
}

// A unique identifier assigned to the forwarding rule
func (o CasbMalwareRulesOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *CasbMalwareRules) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

// Enables or disables the scan inbound email link
func (o CasbMalwareRulesOutput) ScanInboundEmailLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRules) pulumi.StringPtrOutput { return v.ScanInboundEmailLink }).(pulumi.StringPtrOutput)
}

func (o CasbMalwareRulesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRules) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

func (o CasbMalwareRulesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbMalwareRules) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type CasbMalwareRulesArrayOutput struct{ *pulumi.OutputState }

func (CasbMalwareRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CasbMalwareRules)(nil)).Elem()
}

func (o CasbMalwareRulesArrayOutput) ToCasbMalwareRulesArrayOutput() CasbMalwareRulesArrayOutput {
	return o
}

func (o CasbMalwareRulesArrayOutput) ToCasbMalwareRulesArrayOutputWithContext(ctx context.Context) CasbMalwareRulesArrayOutput {
	return o
}

func (o CasbMalwareRulesArrayOutput) Index(i pulumi.IntInput) CasbMalwareRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CasbMalwareRules {
		return vs[0].([]*CasbMalwareRules)[vs[1].(int)]
	}).(CasbMalwareRulesOutput)
}

type CasbMalwareRulesMapOutput struct{ *pulumi.OutputState }

func (CasbMalwareRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CasbMalwareRules)(nil)).Elem()
}

func (o CasbMalwareRulesMapOutput) ToCasbMalwareRulesMapOutput() CasbMalwareRulesMapOutput {
	return o
}

func (o CasbMalwareRulesMapOutput) ToCasbMalwareRulesMapOutputWithContext(ctx context.Context) CasbMalwareRulesMapOutput {
	return o
}

func (o CasbMalwareRulesMapOutput) MapIndex(k pulumi.StringInput) CasbMalwareRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CasbMalwareRules {
		return vs[0].(map[string]*CasbMalwareRules)[vs[1].(string)]
	}).(CasbMalwareRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CasbMalwareRulesInput)(nil)).Elem(), &CasbMalwareRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*CasbMalwareRulesArrayInput)(nil)).Elem(), CasbMalwareRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CasbMalwareRulesMapInput)(nil)).Elem(), CasbMalwareRulesMap{})
	pulumi.RegisterOutputType(CasbMalwareRulesOutput{})
	pulumi.RegisterOutputType(CasbMalwareRulesArrayOutput{})
	pulumi.RegisterOutputType(CasbMalwareRulesMapOutput{})
}
