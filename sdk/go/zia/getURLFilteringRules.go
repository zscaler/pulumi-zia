// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/about-url-filtering)
// * [API documentation](https://help.zscaler.com/zia/url-filtering-policy#/urlFilteringRules-post)
//
// Use the **zia_url_filtering_rules** data source to get information about a URL filtering rule information for the specified `Name`.
func LookupURLFilteringRules(ctx *pulumi.Context, args *LookupURLFilteringRulesArgs, opts ...pulumi.InvokeOption) (*LookupURLFilteringRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupURLFilteringRulesResult
	err := ctx.Invoke("zia:index/getURLFilteringRules:getURLFilteringRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getURLFilteringRules.
type LookupURLFilteringRulesArgs struct {
	// URL Filtering Rule ID
	Id *int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name *string `pulumi:"name"`
}

// A collection of values returned by getURLFilteringRules.
type LookupURLFilteringRulesResult struct {
	// (String) Action taken when traffic matches rule criteria. Supported values: `ANY`, `NONE`, `BLOCK`, `CAUTION`, `ALLOW`, `ICAP_RESPONSE`
	Action string `pulumi:"action"`
	// (String) When set to true, a `BLOCK` action triggered by the rule could be overridden. If true and both overrideGroup and overrideUsers are not set, the `BLOCK` triggered by this rule could be overridden for any users. If blockOverride is not set, `BLOCK` action cannot be overridden.
	BlockOverride bool `pulumi:"blockOverride"`
	// (List) The cloud browser isolation profile to which the ISOLATE action is applied in the URL Filtering Policy rules. This block is required when the attribute `action` is set to `ISOLATE`
	CbiProfiles []GetURLFilteringRulesCbiProfile `pulumi:"cbiProfiles"`
	Ciparule    bool                             `pulumi:"ciparule"`
	// (List of Object) The departments to which the Firewall Filtering policy rule applies
	Departments []GetURLFilteringRulesDepartment `pulumi:"departments"`
	// (String) Additional information about the rule
	Description  string                            `pulumi:"description"`
	DeviceGroups []GetURLFilteringRulesDeviceGroup `pulumi:"deviceGroups"`
	// (List) List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed using Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the Zscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation. Supported values: `ANY`, `UNKNOWN_DEVICETRUSTLEVEL`, `LOW_TRUST`, `MEDIUM_TRUST`, `HIGH_TRUST`
	DeviceTrustLevels []string                     `pulumi:"deviceTrustLevels"`
	Devices           []GetURLFilteringRulesDevice `pulumi:"devices"`
	// (String) URL of end user notification page to be displayed when the rule is matched. Not applicable if either 'overrideUsers' or 'overrideGroups' is specified.
	EndUserNotificationUrl string `pulumi:"endUserNotificationUrl"`
	// (String) Enforce a set a validity time period for the URL Filtering rule.
	EnforceTimeValidity bool `pulumi:"enforceTimeValidity"`
	// (List of Object) The groups to which the Firewall Filtering policy rule applies
	Groups []GetURLFilteringRulesGroup `pulumi:"groups"`
	// (Number) A unique identifier assigned to the workload group
	Id               *int                                 `pulumi:"id"`
	Labels           []GetURLFilteringRulesLabel          `pulumi:"labels"`
	LastModifiedBies []GetURLFilteringRulesLastModifiedBy `pulumi:"lastModifiedBies"`
	// (Number) When the rule was last modified
	LastModifiedTime int `pulumi:"lastModifiedTime"`
	// (List of Object) The location groups to which the Firewall Filtering policy rule applies
	LocationGroups []GetURLFilteringRulesLocationGroup `pulumi:"locationGroups"`
	// (List of Object) The locations to which the Firewall Filtering policy rule applies
	Locations []GetURLFilteringRulesLocation `pulumi:"locations"`
	// (String) The name of the workload group
	Name *string `pulumi:"name"`
	// (Number) Order of execution of rule with respect to other URL Filtering rules
	Order int `pulumi:"order"`
	// (List of Object) Name-ID pairs of users for which this rule can be overridden. Applicable only if blockOverride is set to `true`, action is `BLOCK` and overrideGroups is not set.If this overrideUsers is not set, `BLOCK` action can be overridden for any group.
	OverrideGroups []GetURLFilteringRulesOverrideGroup `pulumi:"overrideGroups"`
	// (List of Object) Name-ID pairs of users for which this rule can be overridden. Applicable only if blockOverride is set to `true`, action is `BLOCK` and overrideGroups is not set.If this overrideUsers is not set, `BLOCK` action can be overridden for any user.
	OverrideUsers []GetURLFilteringRulesOverrideUser `pulumi:"overrideUsers"`
	// (List of Object) Protocol criteria. Supported values: `SMRULEF_ZPA_BROKERS_RULE`, `ANY_RULE`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`, `TUNNELSSL_RULE`, `HTTP_PROXY`, `FOHTTP_RULE`, `FTP_RULE`, `HTTPS_RULE`, `HTTP_RULE`, `SSL_RULE`, `TUNNEL_RULE`, `WEBSOCKETSSL_RULE`, `WEBSOCKET_RULE`
	Protocols []string `pulumi:"protocols"`
	// (String) Admin rank of the admin who creates this rule
	Rank int `pulumi:"rank"`
	// (String) Request method for which the rule must be applied. If not set, rule will be applied to all methods
	RequestMethods []string `pulumi:"requestMethods"`
	// (String) Size quota in KB beyond which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule action is set to `BLOCK`, this field is not applicable.
	SizeQuota      int                                 `pulumi:"sizeQuota"`
	SourceIpGroups []GetURLFilteringRulesSourceIpGroup `pulumi:"sourceIpGroups"`
	// (String) Rule State
	State string `pulumi:"state"`
	// (String) Time quota in minutes, after which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule action is set to `BLOCK`, this field is not applicable.
	TimeQuota int `pulumi:"timeQuota"`
	// (List of Object) The time interval in which the Firewall Filtering policy rule applies
	TimeWindows []GetURLFilteringRulesTimeWindow `pulumi:"timeWindows"`
	// (String) List of URL categories for which rule must be applied
	UrlCategories []string `pulumi:"urlCategories"`
	// (List) - User Agent types on which this rule will be applied: Returned values are: `CHROME`, `FIREFOX`, `MSIE`, `MSEDGE`,   `MSCHREDGE`, `OPERA`, `OTHER`, `SAFARI`
	UserAgentTypes []string `pulumi:"userAgentTypes"`
	// (List of Object) The users to which the Firewall Filtering policy rule applies
	Users []GetURLFilteringRulesUser `pulumi:"users"`
	// (Number) If enforceTimeValidity is set to true, the URL Filtering rule will cease to be valid on this end date and time.
	ValidityEndTime int `pulumi:"validityEndTime"`
	// (Number) If enforceTimeValidity is set to true, the URL Filtering rule will be valid starting on this date and time.
	ValidityStartTime int `pulumi:"validityStartTime"`
	// (Number) If enforceTimeValidity is set to true, the URL Filtering rule date and time will be valid based on this time zone ID.
	ValidityTimeZoneId string `pulumi:"validityTimeZoneId"`
	// (List) The list of preconfigured workload groups to which the policy must be applied
	WorkloadGroups []GetURLFilteringRulesWorkloadGroup `pulumi:"workloadGroups"`
}

func LookupURLFilteringRulesOutput(ctx *pulumi.Context, args LookupURLFilteringRulesOutputArgs, opts ...pulumi.InvokeOption) LookupURLFilteringRulesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupURLFilteringRulesResultOutput, error) {
			args := v.(LookupURLFilteringRulesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zia:index/getURLFilteringRules:getURLFilteringRules", args, LookupURLFilteringRulesResultOutput{}, options).(LookupURLFilteringRulesResultOutput), nil
		}).(LookupURLFilteringRulesResultOutput)
}

// A collection of arguments for invoking getURLFilteringRules.
type LookupURLFilteringRulesOutputArgs struct {
	// URL Filtering Rule ID
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupURLFilteringRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupURLFilteringRulesArgs)(nil)).Elem()
}

// A collection of values returned by getURLFilteringRules.
type LookupURLFilteringRulesResultOutput struct{ *pulumi.OutputState }

func (LookupURLFilteringRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupURLFilteringRulesResult)(nil)).Elem()
}

func (o LookupURLFilteringRulesResultOutput) ToLookupURLFilteringRulesResultOutput() LookupURLFilteringRulesResultOutput {
	return o
}

func (o LookupURLFilteringRulesResultOutput) ToLookupURLFilteringRulesResultOutputWithContext(ctx context.Context) LookupURLFilteringRulesResultOutput {
	return o
}

// (String) Action taken when traffic matches rule criteria. Supported values: `ANY`, `NONE`, `BLOCK`, `CAUTION`, `ALLOW`, `ICAP_RESPONSE`
func (o LookupURLFilteringRulesResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) string { return v.Action }).(pulumi.StringOutput)
}

// (String) When set to true, a `BLOCK` action triggered by the rule could be overridden. If true and both overrideGroup and overrideUsers are not set, the `BLOCK` triggered by this rule could be overridden for any users. If blockOverride is not set, `BLOCK` action cannot be overridden.
func (o LookupURLFilteringRulesResultOutput) BlockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) bool { return v.BlockOverride }).(pulumi.BoolOutput)
}

// (List) The cloud browser isolation profile to which the ISOLATE action is applied in the URL Filtering Policy rules. This block is required when the attribute `action` is set to `ISOLATE`
func (o LookupURLFilteringRulesResultOutput) CbiProfiles() GetURLFilteringRulesCbiProfileArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesCbiProfile { return v.CbiProfiles }).(GetURLFilteringRulesCbiProfileArrayOutput)
}

func (o LookupURLFilteringRulesResultOutput) Ciparule() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) bool { return v.Ciparule }).(pulumi.BoolOutput)
}

// (List of Object) The departments to which the Firewall Filtering policy rule applies
func (o LookupURLFilteringRulesResultOutput) Departments() GetURLFilteringRulesDepartmentArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesDepartment { return v.Departments }).(GetURLFilteringRulesDepartmentArrayOutput)
}

// (String) Additional information about the rule
func (o LookupURLFilteringRulesResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupURLFilteringRulesResultOutput) DeviceGroups() GetURLFilteringRulesDeviceGroupArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesDeviceGroup { return v.DeviceGroups }).(GetURLFilteringRulesDeviceGroupArrayOutput)
}

// (List) List of device trust levels for which the rule must be applied. This field is applicable for devices that are managed using Zscaler Client Connector. The trust levels are assigned to the devices based on your posture configurations in the Zscaler Client Connector Portal. If no value is set, this field is ignored during the policy evaluation. Supported values: `ANY`, `UNKNOWN_DEVICETRUSTLEVEL`, `LOW_TRUST`, `MEDIUM_TRUST`, `HIGH_TRUST`
func (o LookupURLFilteringRulesResultOutput) DeviceTrustLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []string { return v.DeviceTrustLevels }).(pulumi.StringArrayOutput)
}

func (o LookupURLFilteringRulesResultOutput) Devices() GetURLFilteringRulesDeviceArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesDevice { return v.Devices }).(GetURLFilteringRulesDeviceArrayOutput)
}

// (String) URL of end user notification page to be displayed when the rule is matched. Not applicable if either 'overrideUsers' or 'overrideGroups' is specified.
func (o LookupURLFilteringRulesResultOutput) EndUserNotificationUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) string { return v.EndUserNotificationUrl }).(pulumi.StringOutput)
}

// (String) Enforce a set a validity time period for the URL Filtering rule.
func (o LookupURLFilteringRulesResultOutput) EnforceTimeValidity() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) bool { return v.EnforceTimeValidity }).(pulumi.BoolOutput)
}

// (List of Object) The groups to which the Firewall Filtering policy rule applies
func (o LookupURLFilteringRulesResultOutput) Groups() GetURLFilteringRulesGroupArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesGroup { return v.Groups }).(GetURLFilteringRulesGroupArrayOutput)
}

// (Number) A unique identifier assigned to the workload group
func (o LookupURLFilteringRulesResultOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LookupURLFilteringRulesResultOutput) Labels() GetURLFilteringRulesLabelArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesLabel { return v.Labels }).(GetURLFilteringRulesLabelArrayOutput)
}

func (o LookupURLFilteringRulesResultOutput) LastModifiedBies() GetURLFilteringRulesLastModifiedByArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesLastModifiedBy { return v.LastModifiedBies }).(GetURLFilteringRulesLastModifiedByArrayOutput)
}

// (Number) When the rule was last modified
func (o LookupURLFilteringRulesResultOutput) LastModifiedTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) int { return v.LastModifiedTime }).(pulumi.IntOutput)
}

// (List of Object) The location groups to which the Firewall Filtering policy rule applies
func (o LookupURLFilteringRulesResultOutput) LocationGroups() GetURLFilteringRulesLocationGroupArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesLocationGroup { return v.LocationGroups }).(GetURLFilteringRulesLocationGroupArrayOutput)
}

// (List of Object) The locations to which the Firewall Filtering policy rule applies
func (o LookupURLFilteringRulesResultOutput) Locations() GetURLFilteringRulesLocationArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesLocation { return v.Locations }).(GetURLFilteringRulesLocationArrayOutput)
}

// (String) The name of the workload group
func (o LookupURLFilteringRulesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Number) Order of execution of rule with respect to other URL Filtering rules
func (o LookupURLFilteringRulesResultOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) int { return v.Order }).(pulumi.IntOutput)
}

// (List of Object) Name-ID pairs of users for which this rule can be overridden. Applicable only if blockOverride is set to `true`, action is `BLOCK` and overrideGroups is not set.If this overrideUsers is not set, `BLOCK` action can be overridden for any group.
func (o LookupURLFilteringRulesResultOutput) OverrideGroups() GetURLFilteringRulesOverrideGroupArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesOverrideGroup { return v.OverrideGroups }).(GetURLFilteringRulesOverrideGroupArrayOutput)
}

// (List of Object) Name-ID pairs of users for which this rule can be overridden. Applicable only if blockOverride is set to `true`, action is `BLOCK` and overrideGroups is not set.If this overrideUsers is not set, `BLOCK` action can be overridden for any user.
func (o LookupURLFilteringRulesResultOutput) OverrideUsers() GetURLFilteringRulesOverrideUserArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesOverrideUser { return v.OverrideUsers }).(GetURLFilteringRulesOverrideUserArrayOutput)
}

// (List of Object) Protocol criteria. Supported values: `SMRULEF_ZPA_BROKERS_RULE`, `ANY_RULE`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`, `TUNNELSSL_RULE`, `HTTP_PROXY`, `FOHTTP_RULE`, `FTP_RULE`, `HTTPS_RULE`, `HTTP_RULE`, `SSL_RULE`, `TUNNEL_RULE`, `WEBSOCKETSSL_RULE`, `WEBSOCKET_RULE`
func (o LookupURLFilteringRulesResultOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// (String) Admin rank of the admin who creates this rule
func (o LookupURLFilteringRulesResultOutput) Rank() pulumi.IntOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) int { return v.Rank }).(pulumi.IntOutput)
}

// (String) Request method for which the rule must be applied. If not set, rule will be applied to all methods
func (o LookupURLFilteringRulesResultOutput) RequestMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []string { return v.RequestMethods }).(pulumi.StringArrayOutput)
}

// (String) Size quota in KB beyond which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule action is set to `BLOCK`, this field is not applicable.
func (o LookupURLFilteringRulesResultOutput) SizeQuota() pulumi.IntOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) int { return v.SizeQuota }).(pulumi.IntOutput)
}

func (o LookupURLFilteringRulesResultOutput) SourceIpGroups() GetURLFilteringRulesSourceIpGroupArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesSourceIpGroup { return v.SourceIpGroups }).(GetURLFilteringRulesSourceIpGroupArrayOutput)
}

// (String) Rule State
func (o LookupURLFilteringRulesResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) string { return v.State }).(pulumi.StringOutput)
}

// (String) Time quota in minutes, after which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule action is set to `BLOCK`, this field is not applicable.
func (o LookupURLFilteringRulesResultOutput) TimeQuota() pulumi.IntOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) int { return v.TimeQuota }).(pulumi.IntOutput)
}

// (List of Object) The time interval in which the Firewall Filtering policy rule applies
func (o LookupURLFilteringRulesResultOutput) TimeWindows() GetURLFilteringRulesTimeWindowArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesTimeWindow { return v.TimeWindows }).(GetURLFilteringRulesTimeWindowArrayOutput)
}

// (String) List of URL categories for which rule must be applied
func (o LookupURLFilteringRulesResultOutput) UrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []string { return v.UrlCategories }).(pulumi.StringArrayOutput)
}

// (List) - User Agent types on which this rule will be applied: Returned values are: `CHROME`, `FIREFOX`, `MSIE`, `MSEDGE`,   `MSCHREDGE`, `OPERA`, `OTHER`, `SAFARI`
func (o LookupURLFilteringRulesResultOutput) UserAgentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []string { return v.UserAgentTypes }).(pulumi.StringArrayOutput)
}

// (List of Object) The users to which the Firewall Filtering policy rule applies
func (o LookupURLFilteringRulesResultOutput) Users() GetURLFilteringRulesUserArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesUser { return v.Users }).(GetURLFilteringRulesUserArrayOutput)
}

// (Number) If enforceTimeValidity is set to true, the URL Filtering rule will cease to be valid on this end date and time.
func (o LookupURLFilteringRulesResultOutput) ValidityEndTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) int { return v.ValidityEndTime }).(pulumi.IntOutput)
}

// (Number) If enforceTimeValidity is set to true, the URL Filtering rule will be valid starting on this date and time.
func (o LookupURLFilteringRulesResultOutput) ValidityStartTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) int { return v.ValidityStartTime }).(pulumi.IntOutput)
}

// (Number) If enforceTimeValidity is set to true, the URL Filtering rule date and time will be valid based on this time zone ID.
func (o LookupURLFilteringRulesResultOutput) ValidityTimeZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) string { return v.ValidityTimeZoneId }).(pulumi.StringOutput)
}

// (List) The list of preconfigured workload groups to which the policy must be applied
func (o LookupURLFilteringRulesResultOutput) WorkloadGroups() GetURLFilteringRulesWorkloadGroupArrayOutput {
	return o.ApplyT(func(v LookupURLFilteringRulesResult) []GetURLFilteringRulesWorkloadGroup { return v.WorkloadGroups }).(GetURLFilteringRulesWorkloadGroupArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupURLFilteringRulesResultOutput{})
}
