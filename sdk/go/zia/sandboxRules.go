// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/about-sandbox)
// * [API documentation](https://help.zscaler.com/zia/sandbox-policy-settings#/sandboxRules-get)
//
// The **zia_sandbox_rules** resource allows the creation and management of SAndbox rules in the Zscaler Internet Access.
//
// ## Example Usage
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// **zia_sandbox_rules** can be imported by using `<RULE ID>` or `<RULE NAME>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zia:index/sandboxRules:SandboxRules example <rule_id>
// ```
//
// or
//
// ```sh
// $ pulumi import zia:index/sandboxRules:SandboxRules example <rule_name>
// ```
type SandboxRules struct {
	pulumi.CustomResourceState

	// The threat categories to which the rule applies
	BaPolicyCategories pulumi.StringArrayOutput `pulumi:"baPolicyCategories"`
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`
	BaRuleAction pulumi.StringOutput `pulumi:"baRuleAction"`
	// (Integer)
	ByThreatScore pulumi.IntOutput `pulumi:"byThreatScore"`
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments SandboxRulesDepartmentsPtrOutput `pulumi:"departments"`
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes pulumi.StringArrayOutput `pulumi:"fileTypes"`
	// (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.
	FirstTimeEnable pulumi.BoolOutput `pulumi:"firstTimeEnable"`
	// (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`
	FirstTimeOperation pulumi.StringOutput `pulumi:"firstTimeOperation"`
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups SandboxRulesGroupsPtrOutput `pulumi:"groups"`
	// (List of Objects) Labels that are applicable to the rule.
	Labels SandboxRulesLabelsPtrOutput `pulumi:"labels"`
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups SandboxRulesLocationGroupsPtrOutput `pulumi:"locationGroups"`
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations SandboxRulesLocationsPtrOutput `pulumi:"locations"`
	// (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.
	MlActionEnabled pulumi.BoolOutput `pulumi:"mlActionEnabled"`
	// The File Type Control policy rule name.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order pulumi.IntOutput `pulumi:"order"`
	// Protocol for the given rule. This field is not applicable to the Lite API.
	Protocols pulumi.StringArrayOutput `pulumi:"protocols"`
	// (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.
	Rank   pulumi.IntOutput `pulumi:"rank"`
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`
	State pulumi.StringOutput `pulumi:"state"`
	// (List of Strings) The list of URL categories to which the DLP policy rule must be applied.
	UrlCategories pulumi.StringArrayOutput `pulumi:"urlCategories"`
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users SandboxRulesUsersPtrOutput `pulumi:"users"`
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments SandboxRulesZpaAppSegmentArrayOutput `pulumi:"zpaAppSegments"`
}

// NewSandboxRules registers a new resource with the given unique name, arguments, and options.
func NewSandboxRules(ctx *pulumi.Context,
	name string, args *SandboxRulesArgs, opts ...pulumi.ResourceOption) (*SandboxRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FileTypes == nil {
		return nil, errors.New("invalid value for required argument 'FileTypes'")
	}
	if args.Order == nil {
		return nil, errors.New("invalid value for required argument 'Order'")
	}
	if args.Protocols == nil {
		return nil, errors.New("invalid value for required argument 'Protocols'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SandboxRules
	err := ctx.RegisterResource("zia:index/sandboxRules:SandboxRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSandboxRules gets an existing SandboxRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSandboxRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SandboxRulesState, opts ...pulumi.ResourceOption) (*SandboxRules, error) {
	var resource SandboxRules
	err := ctx.ReadResource("zia:index/sandboxRules:SandboxRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SandboxRules resources.
type sandboxRulesState struct {
	// The threat categories to which the rule applies
	BaPolicyCategories []string `pulumi:"baPolicyCategories"`
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`
	BaRuleAction *string `pulumi:"baRuleAction"`
	// (Integer)
	ByThreatScore *int `pulumi:"byThreatScore"`
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments *SandboxRulesDepartments `pulumi:"departments"`
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description *string `pulumi:"description"`
	// (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes []string `pulumi:"fileTypes"`
	// (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.
	FirstTimeEnable *bool `pulumi:"firstTimeEnable"`
	// (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`
	FirstTimeOperation *string `pulumi:"firstTimeOperation"`
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups *SandboxRulesGroups `pulumi:"groups"`
	// (List of Objects) Labels that are applicable to the rule.
	Labels *SandboxRulesLabels `pulumi:"labels"`
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups *SandboxRulesLocationGroups `pulumi:"locationGroups"`
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations *SandboxRulesLocations `pulumi:"locations"`
	// (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.
	MlActionEnabled *bool `pulumi:"mlActionEnabled"`
	// The File Type Control policy rule name.
	Name *string `pulumi:"name"`
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order *int `pulumi:"order"`
	// Protocol for the given rule. This field is not applicable to the Lite API.
	Protocols []string `pulumi:"protocols"`
	// (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.
	Rank   *int `pulumi:"rank"`
	RuleId *int `pulumi:"ruleId"`
	// (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`
	State *string `pulumi:"state"`
	// (List of Strings) The list of URL categories to which the DLP policy rule must be applied.
	UrlCategories []string `pulumi:"urlCategories"`
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users *SandboxRulesUsers `pulumi:"users"`
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments []SandboxRulesZpaAppSegment `pulumi:"zpaAppSegments"`
}

type SandboxRulesState struct {
	// The threat categories to which the rule applies
	BaPolicyCategories pulumi.StringArrayInput
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`
	BaRuleAction pulumi.StringPtrInput
	// (Integer)
	ByThreatScore pulumi.IntPtrInput
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments SandboxRulesDepartmentsPtrInput
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description pulumi.StringPtrInput
	// (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes pulumi.StringArrayInput
	// (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.
	FirstTimeEnable pulumi.BoolPtrInput
	// (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`
	FirstTimeOperation pulumi.StringPtrInput
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups SandboxRulesGroupsPtrInput
	// (List of Objects) Labels that are applicable to the rule.
	Labels SandboxRulesLabelsPtrInput
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups SandboxRulesLocationGroupsPtrInput
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations SandboxRulesLocationsPtrInput
	// (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.
	MlActionEnabled pulumi.BoolPtrInput
	// The File Type Control policy rule name.
	Name pulumi.StringPtrInput
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order pulumi.IntPtrInput
	// Protocol for the given rule. This field is not applicable to the Lite API.
	Protocols pulumi.StringArrayInput
	// (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.
	Rank   pulumi.IntPtrInput
	RuleId pulumi.IntPtrInput
	// (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`
	State pulumi.StringPtrInput
	// (List of Strings) The list of URL categories to which the DLP policy rule must be applied.
	UrlCategories pulumi.StringArrayInput
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users SandboxRulesUsersPtrInput
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments SandboxRulesZpaAppSegmentArrayInput
}

func (SandboxRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*sandboxRulesState)(nil)).Elem()
}

type sandboxRulesArgs struct {
	// The threat categories to which the rule applies
	BaPolicyCategories []string `pulumi:"baPolicyCategories"`
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`
	BaRuleAction *string `pulumi:"baRuleAction"`
	// (Integer)
	ByThreatScore *int `pulumi:"byThreatScore"`
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments *SandboxRulesDepartments `pulumi:"departments"`
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description *string `pulumi:"description"`
	// (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes []string `pulumi:"fileTypes"`
	// (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.
	FirstTimeEnable *bool `pulumi:"firstTimeEnable"`
	// (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`
	FirstTimeOperation *string `pulumi:"firstTimeOperation"`
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups *SandboxRulesGroups `pulumi:"groups"`
	// (List of Objects) Labels that are applicable to the rule.
	Labels *SandboxRulesLabels `pulumi:"labels"`
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups *SandboxRulesLocationGroups `pulumi:"locationGroups"`
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations *SandboxRulesLocations `pulumi:"locations"`
	// (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.
	MlActionEnabled *bool `pulumi:"mlActionEnabled"`
	// The File Type Control policy rule name.
	Name *string `pulumi:"name"`
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order int `pulumi:"order"`
	// Protocol for the given rule. This field is not applicable to the Lite API.
	Protocols []string `pulumi:"protocols"`
	// (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.
	Rank *int `pulumi:"rank"`
	// (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`
	State *string `pulumi:"state"`
	// (List of Strings) The list of URL categories to which the DLP policy rule must be applied.
	UrlCategories []string `pulumi:"urlCategories"`
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users *SandboxRulesUsers `pulumi:"users"`
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments []SandboxRulesZpaAppSegment `pulumi:"zpaAppSegments"`
}

// The set of arguments for constructing a SandboxRules resource.
type SandboxRulesArgs struct {
	// The threat categories to which the rule applies
	BaPolicyCategories pulumi.StringArrayInput
	// (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`
	BaRuleAction pulumi.StringPtrInput
	// (Integer)
	ByThreatScore pulumi.IntPtrInput
	// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
	Departments SandboxRulesDepartmentsPtrInput
	// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
	Description pulumi.StringPtrInput
	// (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.
	FileTypes pulumi.StringArrayInput
	// (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.
	FirstTimeEnable pulumi.BoolPtrInput
	// (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`
	FirstTimeOperation pulumi.StringPtrInput
	// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
	Groups SandboxRulesGroupsPtrInput
	// (List of Objects) Labels that are applicable to the rule.
	Labels SandboxRulesLabelsPtrInput
	// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
	LocationGroups SandboxRulesLocationGroupsPtrInput
	// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
	Locations SandboxRulesLocationsPtrInput
	// (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.
	MlActionEnabled pulumi.BoolPtrInput
	// The File Type Control policy rule name.
	Name pulumi.StringPtrInput
	// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
	Order pulumi.IntInput
	// Protocol for the given rule. This field is not applicable to the Lite API.
	Protocols pulumi.StringArrayInput
	// (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.
	Rank pulumi.IntPtrInput
	// (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`
	State pulumi.StringPtrInput
	// (List of Strings) The list of URL categories to which the DLP policy rule must be applied.
	UrlCategories pulumi.StringArrayInput
	// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
	Users SandboxRulesUsersPtrInput
	// (List of Objects) The ZPA application segments to which the rule applies
	ZpaAppSegments SandboxRulesZpaAppSegmentArrayInput
}

func (SandboxRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sandboxRulesArgs)(nil)).Elem()
}

type SandboxRulesInput interface {
	pulumi.Input

	ToSandboxRulesOutput() SandboxRulesOutput
	ToSandboxRulesOutputWithContext(ctx context.Context) SandboxRulesOutput
}

func (*SandboxRules) ElementType() reflect.Type {
	return reflect.TypeOf((**SandboxRules)(nil)).Elem()
}

func (i *SandboxRules) ToSandboxRulesOutput() SandboxRulesOutput {
	return i.ToSandboxRulesOutputWithContext(context.Background())
}

func (i *SandboxRules) ToSandboxRulesOutputWithContext(ctx context.Context) SandboxRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SandboxRulesOutput)
}

// SandboxRulesArrayInput is an input type that accepts SandboxRulesArray and SandboxRulesArrayOutput values.
// You can construct a concrete instance of `SandboxRulesArrayInput` via:
//
//	SandboxRulesArray{ SandboxRulesArgs{...} }
type SandboxRulesArrayInput interface {
	pulumi.Input

	ToSandboxRulesArrayOutput() SandboxRulesArrayOutput
	ToSandboxRulesArrayOutputWithContext(context.Context) SandboxRulesArrayOutput
}

type SandboxRulesArray []SandboxRulesInput

func (SandboxRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SandboxRules)(nil)).Elem()
}

func (i SandboxRulesArray) ToSandboxRulesArrayOutput() SandboxRulesArrayOutput {
	return i.ToSandboxRulesArrayOutputWithContext(context.Background())
}

func (i SandboxRulesArray) ToSandboxRulesArrayOutputWithContext(ctx context.Context) SandboxRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SandboxRulesArrayOutput)
}

// SandboxRulesMapInput is an input type that accepts SandboxRulesMap and SandboxRulesMapOutput values.
// You can construct a concrete instance of `SandboxRulesMapInput` via:
//
//	SandboxRulesMap{ "key": SandboxRulesArgs{...} }
type SandboxRulesMapInput interface {
	pulumi.Input

	ToSandboxRulesMapOutput() SandboxRulesMapOutput
	ToSandboxRulesMapOutputWithContext(context.Context) SandboxRulesMapOutput
}

type SandboxRulesMap map[string]SandboxRulesInput

func (SandboxRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SandboxRules)(nil)).Elem()
}

func (i SandboxRulesMap) ToSandboxRulesMapOutput() SandboxRulesMapOutput {
	return i.ToSandboxRulesMapOutputWithContext(context.Background())
}

func (i SandboxRulesMap) ToSandboxRulesMapOutputWithContext(ctx context.Context) SandboxRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SandboxRulesMapOutput)
}

type SandboxRulesOutput struct{ *pulumi.OutputState }

func (SandboxRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SandboxRules)(nil)).Elem()
}

func (o SandboxRulesOutput) ToSandboxRulesOutput() SandboxRulesOutput {
	return o
}

func (o SandboxRulesOutput) ToSandboxRulesOutputWithContext(ctx context.Context) SandboxRulesOutput {
	return o
}

// The threat categories to which the rule applies
func (o SandboxRulesOutput) BaPolicyCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.StringArrayOutput { return v.BaPolicyCategories }).(pulumi.StringArrayOutput)
}

// (String) The action configured for the rule that must take place if the traffic matches the rule criteria. Supported Values: `ALLOW` or `BLOCK`
func (o SandboxRulesOutput) BaRuleAction() pulumi.StringOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.StringOutput { return v.BaRuleAction }).(pulumi.StringOutput)
}

// (Integer)
func (o SandboxRulesOutput) ByThreatScore() pulumi.IntOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.IntOutput { return v.ByThreatScore }).(pulumi.IntOutput)
}

// (List of Objects) Apply to any number of departments When not used it implies `Any` to apply the rule to all departments.
func (o SandboxRulesOutput) Departments() SandboxRulesDepartmentsPtrOutput {
	return o.ApplyT(func(v *SandboxRules) SandboxRulesDepartmentsPtrOutput { return v.Departments }).(SandboxRulesDepartmentsPtrOutput)
}

// (String) Enter additional notes or information. The description cannot exceed 10,240 characters.
func (o SandboxRulesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// (List of Strings) File type categories for which the policy is applied. If not set, the rule is applied across all file types.
func (o SandboxRulesOutput) FileTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.StringArrayOutput { return v.FileTypes }).(pulumi.StringArrayOutput)
}

// (Boolean) A Boolean value indicating whether a First-Time Action is specifically configured for the rule. The First-Time Action takes place when users download unknown files. The action to be applied is specified using the firstTimeOperation field.
func (o SandboxRulesOutput) FirstTimeEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.BoolOutput { return v.FirstTimeEnable }).(pulumi.BoolOutput)
}

// (String) The action that must take place when users download unknown files for the first time. Supported Values: `ALLOW_SCAN`, `QUARANTINE`, `ALLOW_NOSCAN`, `QUARANTINE_ISOLATE`
func (o SandboxRulesOutput) FirstTimeOperation() pulumi.StringOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.StringOutput { return v.FirstTimeOperation }).(pulumi.StringOutput)
}

// (List of Objects) You can manually select up to `8` groups. When not used it implies `Any` to apply the rule to all groups.
func (o SandboxRulesOutput) Groups() SandboxRulesGroupsPtrOutput {
	return o.ApplyT(func(v *SandboxRules) SandboxRulesGroupsPtrOutput { return v.Groups }).(SandboxRulesGroupsPtrOutput)
}

// (List of Objects) Labels that are applicable to the rule.
func (o SandboxRulesOutput) Labels() SandboxRulesLabelsPtrOutput {
	return o.ApplyT(func(v *SandboxRules) SandboxRulesLabelsPtrOutput { return v.Labels }).(SandboxRulesLabelsPtrOutput)
}

// (List of Objects)You can manually select up to `32` location groups. When not used it implies `Any` to apply the rule to all location groups.
func (o SandboxRulesOutput) LocationGroups() SandboxRulesLocationGroupsPtrOutput {
	return o.ApplyT(func(v *SandboxRules) SandboxRulesLocationGroupsPtrOutput { return v.LocationGroups }).(SandboxRulesLocationGroupsPtrOutput)
}

// (List of Objects) You can manually select up to `8` locations. When not used it implies `Any` to apply the rule to all groups.
func (o SandboxRulesOutput) Locations() SandboxRulesLocationsPtrOutput {
	return o.ApplyT(func(v *SandboxRules) SandboxRulesLocationsPtrOutput { return v.Locations }).(SandboxRulesLocationsPtrOutput)
}

// (Boolean) A Boolean value indicating whether to enable or disable the AI Instant Verdict option to have the Zscaler service use AI analysis to instantly assign threat scores to unknown files. This option is available to use only with specific rule actions such as Quarantine and Allow and Scan for First-Time Action.
func (o SandboxRulesOutput) MlActionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.BoolOutput { return v.MlActionEnabled }).(pulumi.BoolOutput)
}

// The File Type Control policy rule name.
func (o SandboxRulesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Integer) Policy rules are evaluated in ascending numerical order (Rule 1 before Rule 2, and so on), and the Rule Order reflects this rule's place in the order.
func (o SandboxRulesOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.IntOutput { return v.Order }).(pulumi.IntOutput)
}

// Protocol for the given rule. This field is not applicable to the Lite API.
func (o SandboxRulesOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.StringArrayOutput { return v.Protocols }).(pulumi.StringArrayOutput)
}

// (Integer) The admin rank specified for the rule based on your assigned admin rank. Admin rank determines the rule order that can be specified for the rule. Admin rank can be configured if it is enabled in the Advanced Settings.
func (o SandboxRulesOutput) Rank() pulumi.IntOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.IntOutput { return v.Rank }).(pulumi.IntOutput)
}

func (o SandboxRulesOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

// (String) The state of the rule indicating whether it is enabled or disabled. Supported values: `ENABLED` or `DISABLED`
func (o SandboxRulesOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (List of Strings) The list of URL categories to which the DLP policy rule must be applied.
func (o SandboxRulesOutput) UrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SandboxRules) pulumi.StringArrayOutput { return v.UrlCategories }).(pulumi.StringArrayOutput)
}

// (List of Objects) You can manually select up to `4` general and/or special users. When not used it implies `Any` to apply the rule to all users.
func (o SandboxRulesOutput) Users() SandboxRulesUsersPtrOutput {
	return o.ApplyT(func(v *SandboxRules) SandboxRulesUsersPtrOutput { return v.Users }).(SandboxRulesUsersPtrOutput)
}

// (List of Objects) The ZPA application segments to which the rule applies
func (o SandboxRulesOutput) ZpaAppSegments() SandboxRulesZpaAppSegmentArrayOutput {
	return o.ApplyT(func(v *SandboxRules) SandboxRulesZpaAppSegmentArrayOutput { return v.ZpaAppSegments }).(SandboxRulesZpaAppSegmentArrayOutput)
}

type SandboxRulesArrayOutput struct{ *pulumi.OutputState }

func (SandboxRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SandboxRules)(nil)).Elem()
}

func (o SandboxRulesArrayOutput) ToSandboxRulesArrayOutput() SandboxRulesArrayOutput {
	return o
}

func (o SandboxRulesArrayOutput) ToSandboxRulesArrayOutputWithContext(ctx context.Context) SandboxRulesArrayOutput {
	return o
}

func (o SandboxRulesArrayOutput) Index(i pulumi.IntInput) SandboxRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SandboxRules {
		return vs[0].([]*SandboxRules)[vs[1].(int)]
	}).(SandboxRulesOutput)
}

type SandboxRulesMapOutput struct{ *pulumi.OutputState }

func (SandboxRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SandboxRules)(nil)).Elem()
}

func (o SandboxRulesMapOutput) ToSandboxRulesMapOutput() SandboxRulesMapOutput {
	return o
}

func (o SandboxRulesMapOutput) ToSandboxRulesMapOutputWithContext(ctx context.Context) SandboxRulesMapOutput {
	return o
}

func (o SandboxRulesMapOutput) MapIndex(k pulumi.StringInput) SandboxRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SandboxRules {
		return vs[0].(map[string]*SandboxRules)[vs[1].(string)]
	}).(SandboxRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SandboxRulesInput)(nil)).Elem(), &SandboxRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*SandboxRulesArrayInput)(nil)).Elem(), SandboxRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SandboxRulesMapInput)(nil)).Elem(), SandboxRulesMap{})
	pulumi.RegisterOutputType(SandboxRulesOutput{})
	pulumi.RegisterOutputType(SandboxRulesArrayOutput{})
	pulumi.RegisterOutputType(SandboxRulesMapOutput{})
}
