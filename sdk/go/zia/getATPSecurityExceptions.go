// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// Use the **zia_atp_security_exceptions** data source to retrieve information about the security exceptions configured for the ATP policy. To learn more see [Advanced Threat Protection](https://help.zscaler.com/unified/configuring-security-exceptions-advanced-threat-protection-policy)
//
// ## Example Usage
func LookupATPSecurityExceptions(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*LookupATPSecurityExceptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupATPSecurityExceptionsResult
	err := ctx.Invoke("zia:index/getATPSecurityExceptions:getATPSecurityExceptions", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getATPSecurityExceptions.
type LookupATPSecurityExceptionsResult struct {
	BypassUrls []string `pulumi:"bypassUrls"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func LookupATPSecurityExceptionsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) LookupATPSecurityExceptionsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (LookupATPSecurityExceptionsResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("zia:index/getATPSecurityExceptions:getATPSecurityExceptions", nil, LookupATPSecurityExceptionsResultOutput{}, options).(LookupATPSecurityExceptionsResultOutput), nil
	}).(LookupATPSecurityExceptionsResultOutput)
}

// A collection of values returned by getATPSecurityExceptions.
type LookupATPSecurityExceptionsResultOutput struct{ *pulumi.OutputState }

func (LookupATPSecurityExceptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupATPSecurityExceptionsResult)(nil)).Elem()
}

func (o LookupATPSecurityExceptionsResultOutput) ToLookupATPSecurityExceptionsResultOutput() LookupATPSecurityExceptionsResultOutput {
	return o
}

func (o LookupATPSecurityExceptionsResultOutput) ToLookupATPSecurityExceptionsResultOutputWithContext(ctx context.Context) LookupATPSecurityExceptionsResultOutput {
	return o
}

func (o LookupATPSecurityExceptionsResultOutput) BypassUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupATPSecurityExceptionsResult) []string { return v.BypassUrls }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupATPSecurityExceptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupATPSecurityExceptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupATPSecurityExceptionsResultOutput{})
}
