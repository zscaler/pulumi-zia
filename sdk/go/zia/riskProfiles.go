// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/about-cloud-application-risk-profile)
// * [API documentation](https://help.zscaler.com/zia/cloud-applications#/riskProfiles-get)
//
// Use the **zia_risk_profiles** resource allows the creation and management of cloud application risk profile in the Zscaler Internet Access cloud or via the API.
// See [About Cloud Application Risk Profile](https://help.zscaler.com/zia/about-cloud-application-risk-profile) for more details.
//
// ## Example Usage
//
// ### Create A Risk Profile
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// **zia_risk_profiles** can be imported by using `<PROFILE_ID>` or `<PROFILE_NAME>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zia:index/riskProfiles:RiskProfiles example <profile_id>
// ```
//
// or
//
// ```sh
// $ pulumi import zia:index/riskProfiles:RiskProfiles example <profile_name>
// ```
type RiskProfiles struct {
	pulumi.CustomResourceState

	// (String) Filters based on support for administrative logging. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	AdminAuditLogs pulumi.StringPtrOutput `pulumi:"adminAuditLogs"`
	// (Optional) Filters based on supported certifications.
	Certifications pulumi.StringArrayOutput `pulumi:"certifications"`
	// (Set) List of custom tags to be included or excluded for the profile.
	CustomTags RiskProfilesCustomTagsPtrOutput `pulumi:"customTags"`
	// (String) Filters based on history of data breaches. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DataBreach pulumi.StringPtrOutput `pulumi:"dataBreach"`
	// (Optional) Filters based on encryption of data in transit.
	DataEncryptionInTransits pulumi.StringArrayOutput `pulumi:"dataEncryptionInTransits"`
	// (String) Filters based on DNS CAA policy implementation.
	DnsCaaPolicy pulumi.StringPtrOutput `pulumi:"dnsCaaPolicy"`
	// (String) Filters based on DMARC support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DomainBasedMessageAuth pulumi.StringPtrOutput `pulumi:"domainBasedMessageAuth"`
	// (String) Filters based on DKIM authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DomainKeysIdentifiedMail pulumi.StringPtrOutput `pulumi:"domainKeysIdentifiedMail"`
	// (String) Filters based on anonymous access support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	Evasive pulumi.StringPtrOutput `pulumi:"evasive"`
	// (Int) Indicates if the certificates are included or not.
	ExcludeCertificates pulumi.IntPtrOutput `pulumi:"excludeCertificates"`
	// (String) Filters based on file sharing capability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	FileSharing pulumi.StringPtrOutput `pulumi:"fileSharing"`
	// (String) Filters based on HTTP security headers support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	HttpSecurityHeaders pulumi.StringPtrOutput `pulumi:"httpSecurityHeaders"`
	// (String) Filters based on content malware scanning. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	MalwareScanningForContent pulumi.StringPtrOutput `pulumi:"malwareScanningForContent"`
	// (String) Filters based on multi-factor authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	MfaSupport pulumi.StringPtrOutput `pulumi:"mfaSupport"`
	// Cloud application risk profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// (String) Filters based on password strength policy. Supported values: `ANY`, `GOOD`, `POOR`, `UN_KNOWN`.
	PasswordStrength pulumi.StringPtrOutput `pulumi:"passwordStrength"`
	// (String) Filters applications based on questionable legal terms. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	PoorItemsOfService pulumi.StringPtrOutput `pulumi:"poorItemsOfService"`
	// Unique identifier for the risk profile.
	ProfileId pulumi.IntOutput `pulumi:"profileId"`
	// (String) Risk profile type. Supported value: `CLOUD_APPLICATIONS`. Default is `CLOUD_APPLICATIONS`.
	ProfileType pulumi.StringPtrOutput `pulumi:"profileType"`
	// (String) Filters based on remote screen sharing support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	RemoteScreenSharing pulumi.StringPtrOutput `pulumi:"remoteScreenSharing"`
	// (Optional) Filters based on risk index thresholds.
	RiskIndices pulumi.IntArrayOutput `pulumi:"riskIndices"`
	// (String) Filters based on SPF authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SenderPolicyFramework pulumi.StringPtrOutput `pulumi:"senderPolicyFramework"`
	// (String) Filters based on IP restriction support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SourceIpRestrictions pulumi.StringPtrOutput `pulumi:"sourceIpRestrictions"`
	// (String) Filters based on SSL certificate key size. Supported values: `ANY`, `UN_KNOWN`, `BITS_1024`, `BITS_2048`, `BITS_256`, `BITS_3072`, `BITS_384`, `BITS_4096`, `BITS_8192`.
	SslCertKeySize pulumi.StringPtrOutput `pulumi:"sslCertKeySize"`
	// (String) Filters based on SSL certificate validity period. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SslCertValidity pulumi.StringPtrOutput `pulumi:"sslCertValidity"`
	// (String) Filters based on use of pinned SSL certificates. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SslPinned pulumi.StringPtrOutput `pulumi:"sslPinned"`
	// (String) Status of the applications. Supported values: `UN_SANCTIONED`, `SANCTIONED`, `ANY`.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// (String) Filters based on Web Application Firewall (WAF) support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SupportForWaf pulumi.StringPtrOutput `pulumi:"supportForWaf"`
	// (String) Filters based on published CVE vulnerabilities. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	Vulnerability pulumi.StringPtrOutput `pulumi:"vulnerability"`
	// (String) Filters based on vulnerability disclosure policy. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerabilityDisclosure pulumi.StringPtrOutput `pulumi:"vulnerabilityDisclosure"`
	// (String) Filters based on Heartbleed vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToHeartBleed pulumi.StringPtrOutput `pulumi:"vulnerableToHeartBleed"`
	// (String) Filters based on Logjam vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToLogJam pulumi.StringPtrOutput `pulumi:"vulnerableToLogJam"`
	// (String) Filters based on POODLE vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToPoodle pulumi.StringPtrOutput `pulumi:"vulnerableToPoodle"`
	// (String) Filters based on weak cipher usage. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	WeakCipherSupport pulumi.StringPtrOutput `pulumi:"weakCipherSupport"`
}

// NewRiskProfiles registers a new resource with the given unique name, arguments, and options.
func NewRiskProfiles(ctx *pulumi.Context,
	name string, args *RiskProfilesArgs, opts ...pulumi.ResourceOption) (*RiskProfiles, error) {
	if args == nil {
		args = &RiskProfilesArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RiskProfiles
	err := ctx.RegisterResource("zia:index/riskProfiles:RiskProfiles", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRiskProfiles gets an existing RiskProfiles resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRiskProfiles(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RiskProfilesState, opts ...pulumi.ResourceOption) (*RiskProfiles, error) {
	var resource RiskProfiles
	err := ctx.ReadResource("zia:index/riskProfiles:RiskProfiles", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RiskProfiles resources.
type riskProfilesState struct {
	// (String) Filters based on support for administrative logging. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	AdminAuditLogs *string `pulumi:"adminAuditLogs"`
	// (Optional) Filters based on supported certifications.
	Certifications []string `pulumi:"certifications"`
	// (Set) List of custom tags to be included or excluded for the profile.
	CustomTags *RiskProfilesCustomTags `pulumi:"customTags"`
	// (String) Filters based on history of data breaches. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DataBreach *string `pulumi:"dataBreach"`
	// (Optional) Filters based on encryption of data in transit.
	DataEncryptionInTransits []string `pulumi:"dataEncryptionInTransits"`
	// (String) Filters based on DNS CAA policy implementation.
	DnsCaaPolicy *string `pulumi:"dnsCaaPolicy"`
	// (String) Filters based on DMARC support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DomainBasedMessageAuth *string `pulumi:"domainBasedMessageAuth"`
	// (String) Filters based on DKIM authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DomainKeysIdentifiedMail *string `pulumi:"domainKeysIdentifiedMail"`
	// (String) Filters based on anonymous access support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	Evasive *string `pulumi:"evasive"`
	// (Int) Indicates if the certificates are included or not.
	ExcludeCertificates *int `pulumi:"excludeCertificates"`
	// (String) Filters based on file sharing capability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	FileSharing *string `pulumi:"fileSharing"`
	// (String) Filters based on HTTP security headers support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	HttpSecurityHeaders *string `pulumi:"httpSecurityHeaders"`
	// (String) Filters based on content malware scanning. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	MalwareScanningForContent *string `pulumi:"malwareScanningForContent"`
	// (String) Filters based on multi-factor authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	MfaSupport *string `pulumi:"mfaSupport"`
	// Cloud application risk profile name.
	Name *string `pulumi:"name"`
	// (String) Filters based on password strength policy. Supported values: `ANY`, `GOOD`, `POOR`, `UN_KNOWN`.
	PasswordStrength *string `pulumi:"passwordStrength"`
	// (String) Filters applications based on questionable legal terms. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	PoorItemsOfService *string `pulumi:"poorItemsOfService"`
	// Unique identifier for the risk profile.
	ProfileId *int `pulumi:"profileId"`
	// (String) Risk profile type. Supported value: `CLOUD_APPLICATIONS`. Default is `CLOUD_APPLICATIONS`.
	ProfileType *string `pulumi:"profileType"`
	// (String) Filters based on remote screen sharing support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	RemoteScreenSharing *string `pulumi:"remoteScreenSharing"`
	// (Optional) Filters based on risk index thresholds.
	RiskIndices []int `pulumi:"riskIndices"`
	// (String) Filters based on SPF authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SenderPolicyFramework *string `pulumi:"senderPolicyFramework"`
	// (String) Filters based on IP restriction support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SourceIpRestrictions *string `pulumi:"sourceIpRestrictions"`
	// (String) Filters based on SSL certificate key size. Supported values: `ANY`, `UN_KNOWN`, `BITS_1024`, `BITS_2048`, `BITS_256`, `BITS_3072`, `BITS_384`, `BITS_4096`, `BITS_8192`.
	SslCertKeySize *string `pulumi:"sslCertKeySize"`
	// (String) Filters based on SSL certificate validity period. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SslCertValidity *string `pulumi:"sslCertValidity"`
	// (String) Filters based on use of pinned SSL certificates. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SslPinned *string `pulumi:"sslPinned"`
	// (String) Status of the applications. Supported values: `UN_SANCTIONED`, `SANCTIONED`, `ANY`.
	Status *string `pulumi:"status"`
	// (String) Filters based on Web Application Firewall (WAF) support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SupportForWaf *string `pulumi:"supportForWaf"`
	// (String) Filters based on published CVE vulnerabilities. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	Vulnerability *string `pulumi:"vulnerability"`
	// (String) Filters based on vulnerability disclosure policy. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerabilityDisclosure *string `pulumi:"vulnerabilityDisclosure"`
	// (String) Filters based on Heartbleed vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToHeartBleed *string `pulumi:"vulnerableToHeartBleed"`
	// (String) Filters based on Logjam vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToLogJam *string `pulumi:"vulnerableToLogJam"`
	// (String) Filters based on POODLE vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToPoodle *string `pulumi:"vulnerableToPoodle"`
	// (String) Filters based on weak cipher usage. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	WeakCipherSupport *string `pulumi:"weakCipherSupport"`
}

type RiskProfilesState struct {
	// (String) Filters based on support for administrative logging. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	AdminAuditLogs pulumi.StringPtrInput
	// (Optional) Filters based on supported certifications.
	Certifications pulumi.StringArrayInput
	// (Set) List of custom tags to be included or excluded for the profile.
	CustomTags RiskProfilesCustomTagsPtrInput
	// (String) Filters based on history of data breaches. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DataBreach pulumi.StringPtrInput
	// (Optional) Filters based on encryption of data in transit.
	DataEncryptionInTransits pulumi.StringArrayInput
	// (String) Filters based on DNS CAA policy implementation.
	DnsCaaPolicy pulumi.StringPtrInput
	// (String) Filters based on DMARC support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DomainBasedMessageAuth pulumi.StringPtrInput
	// (String) Filters based on DKIM authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DomainKeysIdentifiedMail pulumi.StringPtrInput
	// (String) Filters based on anonymous access support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	Evasive pulumi.StringPtrInput
	// (Int) Indicates if the certificates are included or not.
	ExcludeCertificates pulumi.IntPtrInput
	// (String) Filters based on file sharing capability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	FileSharing pulumi.StringPtrInput
	// (String) Filters based on HTTP security headers support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	HttpSecurityHeaders pulumi.StringPtrInput
	// (String) Filters based on content malware scanning. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	MalwareScanningForContent pulumi.StringPtrInput
	// (String) Filters based on multi-factor authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	MfaSupport pulumi.StringPtrInput
	// Cloud application risk profile name.
	Name pulumi.StringPtrInput
	// (String) Filters based on password strength policy. Supported values: `ANY`, `GOOD`, `POOR`, `UN_KNOWN`.
	PasswordStrength pulumi.StringPtrInput
	// (String) Filters applications based on questionable legal terms. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	PoorItemsOfService pulumi.StringPtrInput
	// Unique identifier for the risk profile.
	ProfileId pulumi.IntPtrInput
	// (String) Risk profile type. Supported value: `CLOUD_APPLICATIONS`. Default is `CLOUD_APPLICATIONS`.
	ProfileType pulumi.StringPtrInput
	// (String) Filters based on remote screen sharing support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	RemoteScreenSharing pulumi.StringPtrInput
	// (Optional) Filters based on risk index thresholds.
	RiskIndices pulumi.IntArrayInput
	// (String) Filters based on SPF authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SenderPolicyFramework pulumi.StringPtrInput
	// (String) Filters based on IP restriction support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SourceIpRestrictions pulumi.StringPtrInput
	// (String) Filters based on SSL certificate key size. Supported values: `ANY`, `UN_KNOWN`, `BITS_1024`, `BITS_2048`, `BITS_256`, `BITS_3072`, `BITS_384`, `BITS_4096`, `BITS_8192`.
	SslCertKeySize pulumi.StringPtrInput
	// (String) Filters based on SSL certificate validity period. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SslCertValidity pulumi.StringPtrInput
	// (String) Filters based on use of pinned SSL certificates. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SslPinned pulumi.StringPtrInput
	// (String) Status of the applications. Supported values: `UN_SANCTIONED`, `SANCTIONED`, `ANY`.
	Status pulumi.StringPtrInput
	// (String) Filters based on Web Application Firewall (WAF) support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SupportForWaf pulumi.StringPtrInput
	// (String) Filters based on published CVE vulnerabilities. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	Vulnerability pulumi.StringPtrInput
	// (String) Filters based on vulnerability disclosure policy. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerabilityDisclosure pulumi.StringPtrInput
	// (String) Filters based on Heartbleed vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToHeartBleed pulumi.StringPtrInput
	// (String) Filters based on Logjam vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToLogJam pulumi.StringPtrInput
	// (String) Filters based on POODLE vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToPoodle pulumi.StringPtrInput
	// (String) Filters based on weak cipher usage. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	WeakCipherSupport pulumi.StringPtrInput
}

func (RiskProfilesState) ElementType() reflect.Type {
	return reflect.TypeOf((*riskProfilesState)(nil)).Elem()
}

type riskProfilesArgs struct {
	// (String) Filters based on support for administrative logging. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	AdminAuditLogs *string `pulumi:"adminAuditLogs"`
	// (Optional) Filters based on supported certifications.
	Certifications []string `pulumi:"certifications"`
	// (Set) List of custom tags to be included or excluded for the profile.
	CustomTags *RiskProfilesCustomTags `pulumi:"customTags"`
	// (String) Filters based on history of data breaches. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DataBreach *string `pulumi:"dataBreach"`
	// (Optional) Filters based on encryption of data in transit.
	DataEncryptionInTransits []string `pulumi:"dataEncryptionInTransits"`
	// (String) Filters based on DNS CAA policy implementation.
	DnsCaaPolicy *string `pulumi:"dnsCaaPolicy"`
	// (String) Filters based on DMARC support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DomainBasedMessageAuth *string `pulumi:"domainBasedMessageAuth"`
	// (String) Filters based on DKIM authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DomainKeysIdentifiedMail *string `pulumi:"domainKeysIdentifiedMail"`
	// (String) Filters based on anonymous access support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	Evasive *string `pulumi:"evasive"`
	// (Int) Indicates if the certificates are included or not.
	ExcludeCertificates *int `pulumi:"excludeCertificates"`
	// (String) Filters based on file sharing capability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	FileSharing *string `pulumi:"fileSharing"`
	// (String) Filters based on HTTP security headers support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	HttpSecurityHeaders *string `pulumi:"httpSecurityHeaders"`
	// (String) Filters based on content malware scanning. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	MalwareScanningForContent *string `pulumi:"malwareScanningForContent"`
	// (String) Filters based on multi-factor authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	MfaSupport *string `pulumi:"mfaSupport"`
	// Cloud application risk profile name.
	Name *string `pulumi:"name"`
	// (String) Filters based on password strength policy. Supported values: `ANY`, `GOOD`, `POOR`, `UN_KNOWN`.
	PasswordStrength *string `pulumi:"passwordStrength"`
	// (String) Filters applications based on questionable legal terms. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	PoorItemsOfService *string `pulumi:"poorItemsOfService"`
	// (String) Risk profile type. Supported value: `CLOUD_APPLICATIONS`. Default is `CLOUD_APPLICATIONS`.
	ProfileType *string `pulumi:"profileType"`
	// (String) Filters based on remote screen sharing support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	RemoteScreenSharing *string `pulumi:"remoteScreenSharing"`
	// (Optional) Filters based on risk index thresholds.
	RiskIndices []int `pulumi:"riskIndices"`
	// (String) Filters based on SPF authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SenderPolicyFramework *string `pulumi:"senderPolicyFramework"`
	// (String) Filters based on IP restriction support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SourceIpRestrictions *string `pulumi:"sourceIpRestrictions"`
	// (String) Filters based on SSL certificate key size. Supported values: `ANY`, `UN_KNOWN`, `BITS_1024`, `BITS_2048`, `BITS_256`, `BITS_3072`, `BITS_384`, `BITS_4096`, `BITS_8192`.
	SslCertKeySize *string `pulumi:"sslCertKeySize"`
	// (String) Filters based on SSL certificate validity period. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SslCertValidity *string `pulumi:"sslCertValidity"`
	// (String) Filters based on use of pinned SSL certificates. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SslPinned *string `pulumi:"sslPinned"`
	// (String) Status of the applications. Supported values: `UN_SANCTIONED`, `SANCTIONED`, `ANY`.
	Status *string `pulumi:"status"`
	// (String) Filters based on Web Application Firewall (WAF) support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SupportForWaf *string `pulumi:"supportForWaf"`
	// (String) Filters based on published CVE vulnerabilities. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	Vulnerability *string `pulumi:"vulnerability"`
	// (String) Filters based on vulnerability disclosure policy. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerabilityDisclosure *string `pulumi:"vulnerabilityDisclosure"`
	// (String) Filters based on Heartbleed vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToHeartBleed *string `pulumi:"vulnerableToHeartBleed"`
	// (String) Filters based on Logjam vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToLogJam *string `pulumi:"vulnerableToLogJam"`
	// (String) Filters based on POODLE vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToPoodle *string `pulumi:"vulnerableToPoodle"`
	// (String) Filters based on weak cipher usage. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	WeakCipherSupport *string `pulumi:"weakCipherSupport"`
}

// The set of arguments for constructing a RiskProfiles resource.
type RiskProfilesArgs struct {
	// (String) Filters based on support for administrative logging. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	AdminAuditLogs pulumi.StringPtrInput
	// (Optional) Filters based on supported certifications.
	Certifications pulumi.StringArrayInput
	// (Set) List of custom tags to be included or excluded for the profile.
	CustomTags RiskProfilesCustomTagsPtrInput
	// (String) Filters based on history of data breaches. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DataBreach pulumi.StringPtrInput
	// (Optional) Filters based on encryption of data in transit.
	DataEncryptionInTransits pulumi.StringArrayInput
	// (String) Filters based on DNS CAA policy implementation.
	DnsCaaPolicy pulumi.StringPtrInput
	// (String) Filters based on DMARC support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DomainBasedMessageAuth pulumi.StringPtrInput
	// (String) Filters based on DKIM authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DomainKeysIdentifiedMail pulumi.StringPtrInput
	// (String) Filters based on anonymous access support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	Evasive pulumi.StringPtrInput
	// (Int) Indicates if the certificates are included or not.
	ExcludeCertificates pulumi.IntPtrInput
	// (String) Filters based on file sharing capability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	FileSharing pulumi.StringPtrInput
	// (String) Filters based on HTTP security headers support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	HttpSecurityHeaders pulumi.StringPtrInput
	// (String) Filters based on content malware scanning. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	MalwareScanningForContent pulumi.StringPtrInput
	// (String) Filters based on multi-factor authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	MfaSupport pulumi.StringPtrInput
	// Cloud application risk profile name.
	Name pulumi.StringPtrInput
	// (String) Filters based on password strength policy. Supported values: `ANY`, `GOOD`, `POOR`, `UN_KNOWN`.
	PasswordStrength pulumi.StringPtrInput
	// (String) Filters applications based on questionable legal terms. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	PoorItemsOfService pulumi.StringPtrInput
	// (String) Risk profile type. Supported value: `CLOUD_APPLICATIONS`. Default is `CLOUD_APPLICATIONS`.
	ProfileType pulumi.StringPtrInput
	// (String) Filters based on remote screen sharing support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	RemoteScreenSharing pulumi.StringPtrInput
	// (Optional) Filters based on risk index thresholds.
	RiskIndices pulumi.IntArrayInput
	// (String) Filters based on SPF authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SenderPolicyFramework pulumi.StringPtrInput
	// (String) Filters based on IP restriction support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SourceIpRestrictions pulumi.StringPtrInput
	// (String) Filters based on SSL certificate key size. Supported values: `ANY`, `UN_KNOWN`, `BITS_1024`, `BITS_2048`, `BITS_256`, `BITS_3072`, `BITS_384`, `BITS_4096`, `BITS_8192`.
	SslCertKeySize pulumi.StringPtrInput
	// (String) Filters based on SSL certificate validity period. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SslCertValidity pulumi.StringPtrInput
	// (String) Filters based on use of pinned SSL certificates. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SslPinned pulumi.StringPtrInput
	// (String) Status of the applications. Supported values: `UN_SANCTIONED`, `SANCTIONED`, `ANY`.
	Status pulumi.StringPtrInput
	// (String) Filters based on Web Application Firewall (WAF) support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SupportForWaf pulumi.StringPtrInput
	// (String) Filters based on published CVE vulnerabilities. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	Vulnerability pulumi.StringPtrInput
	// (String) Filters based on vulnerability disclosure policy. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerabilityDisclosure pulumi.StringPtrInput
	// (String) Filters based on Heartbleed vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToHeartBleed pulumi.StringPtrInput
	// (String) Filters based on Logjam vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToLogJam pulumi.StringPtrInput
	// (String) Filters based on POODLE vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToPoodle pulumi.StringPtrInput
	// (String) Filters based on weak cipher usage. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	WeakCipherSupport pulumi.StringPtrInput
}

func (RiskProfilesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*riskProfilesArgs)(nil)).Elem()
}

type RiskProfilesInput interface {
	pulumi.Input

	ToRiskProfilesOutput() RiskProfilesOutput
	ToRiskProfilesOutputWithContext(ctx context.Context) RiskProfilesOutput
}

func (*RiskProfiles) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskProfiles)(nil)).Elem()
}

func (i *RiskProfiles) ToRiskProfilesOutput() RiskProfilesOutput {
	return i.ToRiskProfilesOutputWithContext(context.Background())
}

func (i *RiskProfiles) ToRiskProfilesOutputWithContext(ctx context.Context) RiskProfilesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskProfilesOutput)
}

// RiskProfilesArrayInput is an input type that accepts RiskProfilesArray and RiskProfilesArrayOutput values.
// You can construct a concrete instance of `RiskProfilesArrayInput` via:
//
//	RiskProfilesArray{ RiskProfilesArgs{...} }
type RiskProfilesArrayInput interface {
	pulumi.Input

	ToRiskProfilesArrayOutput() RiskProfilesArrayOutput
	ToRiskProfilesArrayOutputWithContext(context.Context) RiskProfilesArrayOutput
}

type RiskProfilesArray []RiskProfilesInput

func (RiskProfilesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RiskProfiles)(nil)).Elem()
}

func (i RiskProfilesArray) ToRiskProfilesArrayOutput() RiskProfilesArrayOutput {
	return i.ToRiskProfilesArrayOutputWithContext(context.Background())
}

func (i RiskProfilesArray) ToRiskProfilesArrayOutputWithContext(ctx context.Context) RiskProfilesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskProfilesArrayOutput)
}

// RiskProfilesMapInput is an input type that accepts RiskProfilesMap and RiskProfilesMapOutput values.
// You can construct a concrete instance of `RiskProfilesMapInput` via:
//
//	RiskProfilesMap{ "key": RiskProfilesArgs{...} }
type RiskProfilesMapInput interface {
	pulumi.Input

	ToRiskProfilesMapOutput() RiskProfilesMapOutput
	ToRiskProfilesMapOutputWithContext(context.Context) RiskProfilesMapOutput
}

type RiskProfilesMap map[string]RiskProfilesInput

func (RiskProfilesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RiskProfiles)(nil)).Elem()
}

func (i RiskProfilesMap) ToRiskProfilesMapOutput() RiskProfilesMapOutput {
	return i.ToRiskProfilesMapOutputWithContext(context.Background())
}

func (i RiskProfilesMap) ToRiskProfilesMapOutputWithContext(ctx context.Context) RiskProfilesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskProfilesMapOutput)
}

type RiskProfilesOutput struct{ *pulumi.OutputState }

func (RiskProfilesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskProfiles)(nil)).Elem()
}

func (o RiskProfilesOutput) ToRiskProfilesOutput() RiskProfilesOutput {
	return o
}

func (o RiskProfilesOutput) ToRiskProfilesOutputWithContext(ctx context.Context) RiskProfilesOutput {
	return o
}

// (String) Filters based on support for administrative logging. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) AdminAuditLogs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.AdminAuditLogs }).(pulumi.StringPtrOutput)
}

// (Optional) Filters based on supported certifications.
func (o RiskProfilesOutput) Certifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringArrayOutput { return v.Certifications }).(pulumi.StringArrayOutput)
}

// (Set) List of custom tags to be included or excluded for the profile.
func (o RiskProfilesOutput) CustomTags() RiskProfilesCustomTagsPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) RiskProfilesCustomTagsPtrOutput { return v.CustomTags }).(RiskProfilesCustomTagsPtrOutput)
}

// (String) Filters based on history of data breaches. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) DataBreach() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.DataBreach }).(pulumi.StringPtrOutput)
}

// (Optional) Filters based on encryption of data in transit.
func (o RiskProfilesOutput) DataEncryptionInTransits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringArrayOutput { return v.DataEncryptionInTransits }).(pulumi.StringArrayOutput)
}

// (String) Filters based on DNS CAA policy implementation.
func (o RiskProfilesOutput) DnsCaaPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.DnsCaaPolicy }).(pulumi.StringPtrOutput)
}

// (String) Filters based on DMARC support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) DomainBasedMessageAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.DomainBasedMessageAuth }).(pulumi.StringPtrOutput)
}

// (String) Filters based on DKIM authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) DomainKeysIdentifiedMail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.DomainKeysIdentifiedMail }).(pulumi.StringPtrOutput)
}

// (String) Filters based on anonymous access support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) Evasive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.Evasive }).(pulumi.StringPtrOutput)
}

// (Int) Indicates if the certificates are included or not.
func (o RiskProfilesOutput) ExcludeCertificates() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.IntPtrOutput { return v.ExcludeCertificates }).(pulumi.IntPtrOutput)
}

// (String) Filters based on file sharing capability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) FileSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.FileSharing }).(pulumi.StringPtrOutput)
}

// (String) Filters based on HTTP security headers support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) HttpSecurityHeaders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.HttpSecurityHeaders }).(pulumi.StringPtrOutput)
}

// (String) Filters based on content malware scanning. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) MalwareScanningForContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.MalwareScanningForContent }).(pulumi.StringPtrOutput)
}

// (String) Filters based on multi-factor authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) MfaSupport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.MfaSupport }).(pulumi.StringPtrOutput)
}

// Cloud application risk profile name.
func (o RiskProfilesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (String) Filters based on password strength policy. Supported values: `ANY`, `GOOD`, `POOR`, `UN_KNOWN`.
func (o RiskProfilesOutput) PasswordStrength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.PasswordStrength }).(pulumi.StringPtrOutput)
}

// (String) Filters applications based on questionable legal terms. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) PoorItemsOfService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.PoorItemsOfService }).(pulumi.StringPtrOutput)
}

// Unique identifier for the risk profile.
func (o RiskProfilesOutput) ProfileId() pulumi.IntOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.IntOutput { return v.ProfileId }).(pulumi.IntOutput)
}

// (String) Risk profile type. Supported value: `CLOUD_APPLICATIONS`. Default is `CLOUD_APPLICATIONS`.
func (o RiskProfilesOutput) ProfileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.ProfileType }).(pulumi.StringPtrOutput)
}

// (String) Filters based on remote screen sharing support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) RemoteScreenSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.RemoteScreenSharing }).(pulumi.StringPtrOutput)
}

// (Optional) Filters based on risk index thresholds.
func (o RiskProfilesOutput) RiskIndices() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.IntArrayOutput { return v.RiskIndices }).(pulumi.IntArrayOutput)
}

// (String) Filters based on SPF authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) SenderPolicyFramework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.SenderPolicyFramework }).(pulumi.StringPtrOutput)
}

// (String) Filters based on IP restriction support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) SourceIpRestrictions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.SourceIpRestrictions }).(pulumi.StringPtrOutput)
}

// (String) Filters based on SSL certificate key size. Supported values: `ANY`, `UN_KNOWN`, `BITS_1024`, `BITS_2048`, `BITS_256`, `BITS_3072`, `BITS_384`, `BITS_4096`, `BITS_8192`.
func (o RiskProfilesOutput) SslCertKeySize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.SslCertKeySize }).(pulumi.StringPtrOutput)
}

// (String) Filters based on SSL certificate validity period. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) SslCertValidity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.SslCertValidity }).(pulumi.StringPtrOutput)
}

// (String) Filters based on use of pinned SSL certificates. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) SslPinned() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.SslPinned }).(pulumi.StringPtrOutput)
}

// (String) Status of the applications. Supported values: `UN_SANCTIONED`, `SANCTIONED`, `ANY`.
func (o RiskProfilesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

// (String) Filters based on Web Application Firewall (WAF) support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) SupportForWaf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.SupportForWaf }).(pulumi.StringPtrOutput)
}

// (String) Filters based on published CVE vulnerabilities. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) Vulnerability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.Vulnerability }).(pulumi.StringPtrOutput)
}

// (String) Filters based on vulnerability disclosure policy. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) VulnerabilityDisclosure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.VulnerabilityDisclosure }).(pulumi.StringPtrOutput)
}

// (String) Filters based on Heartbleed vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) VulnerableToHeartBleed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.VulnerableToHeartBleed }).(pulumi.StringPtrOutput)
}

// (String) Filters based on Logjam vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) VulnerableToLogJam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.VulnerableToLogJam }).(pulumi.StringPtrOutput)
}

// (String) Filters based on POODLE vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) VulnerableToPoodle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.VulnerableToPoodle }).(pulumi.StringPtrOutput)
}

// (String) Filters based on weak cipher usage. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o RiskProfilesOutput) WeakCipherSupport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskProfiles) pulumi.StringPtrOutput { return v.WeakCipherSupport }).(pulumi.StringPtrOutput)
}

type RiskProfilesArrayOutput struct{ *pulumi.OutputState }

func (RiskProfilesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RiskProfiles)(nil)).Elem()
}

func (o RiskProfilesArrayOutput) ToRiskProfilesArrayOutput() RiskProfilesArrayOutput {
	return o
}

func (o RiskProfilesArrayOutput) ToRiskProfilesArrayOutputWithContext(ctx context.Context) RiskProfilesArrayOutput {
	return o
}

func (o RiskProfilesArrayOutput) Index(i pulumi.IntInput) RiskProfilesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RiskProfiles {
		return vs[0].([]*RiskProfiles)[vs[1].(int)]
	}).(RiskProfilesOutput)
}

type RiskProfilesMapOutput struct{ *pulumi.OutputState }

func (RiskProfilesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RiskProfiles)(nil)).Elem()
}

func (o RiskProfilesMapOutput) ToRiskProfilesMapOutput() RiskProfilesMapOutput {
	return o
}

func (o RiskProfilesMapOutput) ToRiskProfilesMapOutputWithContext(ctx context.Context) RiskProfilesMapOutput {
	return o
}

func (o RiskProfilesMapOutput) MapIndex(k pulumi.StringInput) RiskProfilesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RiskProfiles {
		return vs[0].(map[string]*RiskProfiles)[vs[1].(string)]
	}).(RiskProfilesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RiskProfilesInput)(nil)).Elem(), &RiskProfiles{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskProfilesArrayInput)(nil)).Elem(), RiskProfilesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskProfilesMapInput)(nil)).Elem(), RiskProfilesMap{})
	pulumi.RegisterOutputType(RiskProfilesOutput{})
	pulumi.RegisterOutputType(RiskProfilesArrayOutput{})
	pulumi.RegisterOutputType(RiskProfilesMapOutput{})
}
