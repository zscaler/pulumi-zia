// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// * [Official documentation](https://help.zscaler.com/zia/about-cloud-application-risk-profile)
// * [API documentation](https://help.zscaler.com/zia/cloud-applications#/riskProfiles-get)
//
// Use the **zia_risk_profiles** data source to get information about a cloud application risk profile in the Zscaler Internet Access cloud or via the API.
// See [About Cloud Application Risk Profile](https://help.zscaler.com/zia/about-cloud-application-risk-profile) for more details.
//
// ## Example Usage
//
// ### Retrieve By Name
//
// ### Retrieve By ID
func LookupRiskProfiles(ctx *pulumi.Context, args *LookupRiskProfilesArgs, opts ...pulumi.InvokeOption) (*LookupRiskProfilesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRiskProfilesResult
	err := ctx.Invoke("zia:index/getRiskProfiles:getRiskProfiles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRiskProfiles.
type LookupRiskProfilesArgs struct {
	// Unique identifier for the risk profile.
	Id *int `pulumi:"id"`
	// Cloud application risk profile name.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getRiskProfiles.
type LookupRiskProfilesResult struct {
	// (String) Filters based on support for administrative logging. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	AdminAuditLogs string `pulumi:"adminAuditLogs"`
	// (Optional) Filters based on supported certifications.
	Certifications []string `pulumi:"certifications"`
	CreateTime     int      `pulumi:"createTime"`
	// (Set) List of custom tags to be included or excluded for the profile.
	CustomTags []GetRiskProfilesCustomTag `pulumi:"customTags"`
	// (String) Filters based on history of data breaches. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DataBreach string `pulumi:"dataBreach"`
	// (Optional) Filters based on encryption of data in transit.
	DataEncryptionInTransits []string `pulumi:"dataEncryptionInTransits"`
	// (String) Filters based on DNS CAA policy implementation.
	DnsCaaPolicy string `pulumi:"dnsCaaPolicy"`
	// (String) Filters based on DMARC support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DomainBasedMessageAuth string `pulumi:"domainBasedMessageAuth"`
	// (String) Filters based on DKIM authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	DomainKeysIdentifiedMail string `pulumi:"domainKeysIdentifiedMail"`
	// (String) Filters based on anonymous access support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	Evasive string `pulumi:"evasive"`
	// (Int) Indicates if the certificates are included or not.
	ExcludeCertificates int `pulumi:"excludeCertificates"`
	// (String) Filters based on file sharing capability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	FileSharing string `pulumi:"fileSharing"`
	// (String) Filters based on HTTP security headers support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	HttpSecurityHeaders string                          `pulumi:"httpSecurityHeaders"`
	Id                  int                             `pulumi:"id"`
	LastModTime         int                             `pulumi:"lastModTime"`
	LastModifiedBies    []GetRiskProfilesLastModifiedBy `pulumi:"lastModifiedBies"`
	// (String) Filters based on content malware scanning. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	MalwareScanningForContent string `pulumi:"malwareScanningForContent"`
	// (String) Filters based on multi-factor authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	MfaSupport string `pulumi:"mfaSupport"`
	Name       string `pulumi:"name"`
	// (String) Filters based on password strength policy. Supported values: `ANY`, `GOOD`, `POOR`, `UN_KNOWN`.
	PasswordStrength string `pulumi:"passwordStrength"`
	// (String) Filters applications based on questionable legal terms. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	PoorItemsOfService string `pulumi:"poorItemsOfService"`
	// (String) Risk profile type. Supported value: `CLOUD_APPLICATIONS`. Default is `CLOUD_APPLICATIONS`.
	ProfileType string `pulumi:"profileType"`
	// (String) Filters based on remote screen sharing support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	RemoteScreenSharing string `pulumi:"remoteScreenSharing"`
	// (Optional) Filters based on risk index thresholds.
	RiskIndices []int `pulumi:"riskIndices"`
	// (String) Filters based on SPF authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SenderPolicyFramework string `pulumi:"senderPolicyFramework"`
	// (String) Filters based on IP restriction support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SourceIpRestrictions string `pulumi:"sourceIpRestrictions"`
	// (String) Filters based on SSL certificate key size. Supported values: `ANY`, `UN_KNOWN`, `BITS_1024`, `BITS_2048`, `BITS_256`, `BITS_3072`, `BITS_384`, `BITS_4096`, `BITS_8192`.
	SslCertKeySize string `pulumi:"sslCertKeySize"`
	// (String) Filters based on SSL certificate validity period. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SslCertValidity string `pulumi:"sslCertValidity"`
	// (String) Filters based on use of pinned SSL certificates. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SslPinned string `pulumi:"sslPinned"`
	// (String) Status of the applications. Supported values: `UN_SANCTIONED`, `SANCTIONED`, `ANY`.
	Status string `pulumi:"status"`
	// (String) Filters based on Web Application Firewall (WAF) support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	SupportForWaf string `pulumi:"supportForWaf"`
	// (String) Filters based on published CVE vulnerabilities. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	Vulnerability string `pulumi:"vulnerability"`
	// (String) Filters based on vulnerability disclosure policy. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerabilityDisclosure string `pulumi:"vulnerabilityDisclosure"`
	// (String) Filters based on Heartbleed vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToHeartBleed string `pulumi:"vulnerableToHeartBleed"`
	// (String) Filters based on Logjam vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToLogJam string `pulumi:"vulnerableToLogJam"`
	// (String) Filters based on POODLE vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	VulnerableToPoodle string `pulumi:"vulnerableToPoodle"`
	// (String) Filters based on weak cipher usage. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
	WeakCipherSupport string `pulumi:"weakCipherSupport"`
}

func LookupRiskProfilesOutput(ctx *pulumi.Context, args LookupRiskProfilesOutputArgs, opts ...pulumi.InvokeOption) LookupRiskProfilesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRiskProfilesResultOutput, error) {
			args := v.(LookupRiskProfilesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zia:index/getRiskProfiles:getRiskProfiles", args, LookupRiskProfilesResultOutput{}, options).(LookupRiskProfilesResultOutput), nil
		}).(LookupRiskProfilesResultOutput)
}

// A collection of arguments for invoking getRiskProfiles.
type LookupRiskProfilesOutputArgs struct {
	// Unique identifier for the risk profile.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Cloud application risk profile name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupRiskProfilesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRiskProfilesArgs)(nil)).Elem()
}

// A collection of values returned by getRiskProfiles.
type LookupRiskProfilesResultOutput struct{ *pulumi.OutputState }

func (LookupRiskProfilesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRiskProfilesResult)(nil)).Elem()
}

func (o LookupRiskProfilesResultOutput) ToLookupRiskProfilesResultOutput() LookupRiskProfilesResultOutput {
	return o
}

func (o LookupRiskProfilesResultOutput) ToLookupRiskProfilesResultOutputWithContext(ctx context.Context) LookupRiskProfilesResultOutput {
	return o
}

// (String) Filters based on support for administrative logging. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) AdminAuditLogs() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.AdminAuditLogs }).(pulumi.StringOutput)
}

// (Optional) Filters based on supported certifications.
func (o LookupRiskProfilesResultOutput) Certifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) []string { return v.Certifications }).(pulumi.StringArrayOutput)
}

func (o LookupRiskProfilesResultOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) int { return v.CreateTime }).(pulumi.IntOutput)
}

// (Set) List of custom tags to be included or excluded for the profile.
func (o LookupRiskProfilesResultOutput) CustomTags() GetRiskProfilesCustomTagArrayOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) []GetRiskProfilesCustomTag { return v.CustomTags }).(GetRiskProfilesCustomTagArrayOutput)
}

// (String) Filters based on history of data breaches. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) DataBreach() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.DataBreach }).(pulumi.StringOutput)
}

// (Optional) Filters based on encryption of data in transit.
func (o LookupRiskProfilesResultOutput) DataEncryptionInTransits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) []string { return v.DataEncryptionInTransits }).(pulumi.StringArrayOutput)
}

// (String) Filters based on DNS CAA policy implementation.
func (o LookupRiskProfilesResultOutput) DnsCaaPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.DnsCaaPolicy }).(pulumi.StringOutput)
}

// (String) Filters based on DMARC support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) DomainBasedMessageAuth() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.DomainBasedMessageAuth }).(pulumi.StringOutput)
}

// (String) Filters based on DKIM authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) DomainKeysIdentifiedMail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.DomainKeysIdentifiedMail }).(pulumi.StringOutput)
}

// (String) Filters based on anonymous access support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) Evasive() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.Evasive }).(pulumi.StringOutput)
}

// (Int) Indicates if the certificates are included or not.
func (o LookupRiskProfilesResultOutput) ExcludeCertificates() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) int { return v.ExcludeCertificates }).(pulumi.IntOutput)
}

// (String) Filters based on file sharing capability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) FileSharing() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.FileSharing }).(pulumi.StringOutput)
}

// (String) Filters based on HTTP security headers support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) HttpSecurityHeaders() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.HttpSecurityHeaders }).(pulumi.StringOutput)
}

func (o LookupRiskProfilesResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) int { return v.Id }).(pulumi.IntOutput)
}

func (o LookupRiskProfilesResultOutput) LastModTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) int { return v.LastModTime }).(pulumi.IntOutput)
}

func (o LookupRiskProfilesResultOutput) LastModifiedBies() GetRiskProfilesLastModifiedByArrayOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) []GetRiskProfilesLastModifiedBy { return v.LastModifiedBies }).(GetRiskProfilesLastModifiedByArrayOutput)
}

// (String) Filters based on content malware scanning. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) MalwareScanningForContent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.MalwareScanningForContent }).(pulumi.StringOutput)
}

// (String) Filters based on multi-factor authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) MfaSupport() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.MfaSupport }).(pulumi.StringOutput)
}

func (o LookupRiskProfilesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.Name }).(pulumi.StringOutput)
}

// (String) Filters based on password strength policy. Supported values: `ANY`, `GOOD`, `POOR`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) PasswordStrength() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.PasswordStrength }).(pulumi.StringOutput)
}

// (String) Filters applications based on questionable legal terms. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) PoorItemsOfService() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.PoorItemsOfService }).(pulumi.StringOutput)
}

// (String) Risk profile type. Supported value: `CLOUD_APPLICATIONS`. Default is `CLOUD_APPLICATIONS`.
func (o LookupRiskProfilesResultOutput) ProfileType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.ProfileType }).(pulumi.StringOutput)
}

// (String) Filters based on remote screen sharing support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) RemoteScreenSharing() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.RemoteScreenSharing }).(pulumi.StringOutput)
}

// (Optional) Filters based on risk index thresholds.
func (o LookupRiskProfilesResultOutput) RiskIndices() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) []int { return v.RiskIndices }).(pulumi.IntArrayOutput)
}

// (String) Filters based on SPF authentication support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) SenderPolicyFramework() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.SenderPolicyFramework }).(pulumi.StringOutput)
}

// (String) Filters based on IP restriction support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) SourceIpRestrictions() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.SourceIpRestrictions }).(pulumi.StringOutput)
}

// (String) Filters based on SSL certificate key size. Supported values: `ANY`, `UN_KNOWN`, `BITS_1024`, `BITS_2048`, `BITS_256`, `BITS_3072`, `BITS_384`, `BITS_4096`, `BITS_8192`.
func (o LookupRiskProfilesResultOutput) SslCertKeySize() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.SslCertKeySize }).(pulumi.StringOutput)
}

// (String) Filters based on SSL certificate validity period. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) SslCertValidity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.SslCertValidity }).(pulumi.StringOutput)
}

// (String) Filters based on use of pinned SSL certificates. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) SslPinned() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.SslPinned }).(pulumi.StringOutput)
}

// (String) Status of the applications. Supported values: `UN_SANCTIONED`, `SANCTIONED`, `ANY`.
func (o LookupRiskProfilesResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.Status }).(pulumi.StringOutput)
}

// (String) Filters based on Web Application Firewall (WAF) support. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) SupportForWaf() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.SupportForWaf }).(pulumi.StringOutput)
}

// (String) Filters based on published CVE vulnerabilities. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) Vulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.Vulnerability }).(pulumi.StringOutput)
}

// (String) Filters based on vulnerability disclosure policy. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) VulnerabilityDisclosure() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.VulnerabilityDisclosure }).(pulumi.StringOutput)
}

// (String) Filters based on Heartbleed vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) VulnerableToHeartBleed() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.VulnerableToHeartBleed }).(pulumi.StringOutput)
}

// (String) Filters based on Logjam vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) VulnerableToLogJam() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.VulnerableToLogJam }).(pulumi.StringOutput)
}

// (String) Filters based on POODLE vulnerability. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) VulnerableToPoodle() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.VulnerableToPoodle }).(pulumi.StringOutput)
}

// (String) Filters based on weak cipher usage. Supported values: `ANY`, `YES`, `NO`, `UN_KNOWN`.
func (o LookupRiskProfilesResultOutput) WeakCipherSupport() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRiskProfilesResult) string { return v.WeakCipherSupport }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRiskProfilesResultOutput{})
}
