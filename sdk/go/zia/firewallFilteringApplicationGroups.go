// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zia/sdk/go/zia/internal"
)

// The **zia_firewall_filtering_network_application_groups** resource allows the creation and management of ZIA Cloud Firewall IP source groups in the Zscaler Internet Access. This resource can then be associated with a ZIA cloud firewall filtering rule.
//
// ## Example Usage
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZIA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// **zia_firewall_filtering_network_application_groups** can be imported by using `<GROUP_ID>` or `<GROUP_NAME>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zia:index/firewallFilteringApplicationGroups:FirewallFilteringApplicationGroups example <group_id>
// ```
//
// or
//
// ```sh
// $ pulumi import zia:index/firewallFilteringApplicationGroups:FirewallFilteringApplicationGroups example <group_name>
// ```
type FirewallFilteringApplicationGroups struct {
	pulumi.CustomResourceState

	AppId               pulumi.IntOutput         `pulumi:"appId"`
	Description         pulumi.StringPtrOutput   `pulumi:"description"`
	Name                pulumi.StringOutput      `pulumi:"name"`
	NetworkApplications pulumi.StringArrayOutput `pulumi:"networkApplications"`
}

// NewFirewallFilteringApplicationGroups registers a new resource with the given unique name, arguments, and options.
func NewFirewallFilteringApplicationGroups(ctx *pulumi.Context,
	name string, args *FirewallFilteringApplicationGroupsArgs, opts ...pulumi.ResourceOption) (*FirewallFilteringApplicationGroups, error) {
	if args == nil {
		args = &FirewallFilteringApplicationGroupsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallFilteringApplicationGroups
	err := ctx.RegisterResource("zia:index/firewallFilteringApplicationGroups:FirewallFilteringApplicationGroups", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallFilteringApplicationGroups gets an existing FirewallFilteringApplicationGroups resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallFilteringApplicationGroups(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallFilteringApplicationGroupsState, opts ...pulumi.ResourceOption) (*FirewallFilteringApplicationGroups, error) {
	var resource FirewallFilteringApplicationGroups
	err := ctx.ReadResource("zia:index/firewallFilteringApplicationGroups:FirewallFilteringApplicationGroups", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallFilteringApplicationGroups resources.
type firewallFilteringApplicationGroupsState struct {
	AppId               *int     `pulumi:"appId"`
	Description         *string  `pulumi:"description"`
	Name                *string  `pulumi:"name"`
	NetworkApplications []string `pulumi:"networkApplications"`
}

type FirewallFilteringApplicationGroupsState struct {
	AppId               pulumi.IntPtrInput
	Description         pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	NetworkApplications pulumi.StringArrayInput
}

func (FirewallFilteringApplicationGroupsState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallFilteringApplicationGroupsState)(nil)).Elem()
}

type firewallFilteringApplicationGroupsArgs struct {
	Description         *string  `pulumi:"description"`
	Name                *string  `pulumi:"name"`
	NetworkApplications []string `pulumi:"networkApplications"`
}

// The set of arguments for constructing a FirewallFilteringApplicationGroups resource.
type FirewallFilteringApplicationGroupsArgs struct {
	Description         pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	NetworkApplications pulumi.StringArrayInput
}

func (FirewallFilteringApplicationGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallFilteringApplicationGroupsArgs)(nil)).Elem()
}

type FirewallFilteringApplicationGroupsInput interface {
	pulumi.Input

	ToFirewallFilteringApplicationGroupsOutput() FirewallFilteringApplicationGroupsOutput
	ToFirewallFilteringApplicationGroupsOutputWithContext(ctx context.Context) FirewallFilteringApplicationGroupsOutput
}

func (*FirewallFilteringApplicationGroups) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallFilteringApplicationGroups)(nil)).Elem()
}

func (i *FirewallFilteringApplicationGroups) ToFirewallFilteringApplicationGroupsOutput() FirewallFilteringApplicationGroupsOutput {
	return i.ToFirewallFilteringApplicationGroupsOutputWithContext(context.Background())
}

func (i *FirewallFilteringApplicationGroups) ToFirewallFilteringApplicationGroupsOutputWithContext(ctx context.Context) FirewallFilteringApplicationGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFilteringApplicationGroupsOutput)
}

// FirewallFilteringApplicationGroupsArrayInput is an input type that accepts FirewallFilteringApplicationGroupsArray and FirewallFilteringApplicationGroupsArrayOutput values.
// You can construct a concrete instance of `FirewallFilteringApplicationGroupsArrayInput` via:
//
//	FirewallFilteringApplicationGroupsArray{ FirewallFilteringApplicationGroupsArgs{...} }
type FirewallFilteringApplicationGroupsArrayInput interface {
	pulumi.Input

	ToFirewallFilteringApplicationGroupsArrayOutput() FirewallFilteringApplicationGroupsArrayOutput
	ToFirewallFilteringApplicationGroupsArrayOutputWithContext(context.Context) FirewallFilteringApplicationGroupsArrayOutput
}

type FirewallFilteringApplicationGroupsArray []FirewallFilteringApplicationGroupsInput

func (FirewallFilteringApplicationGroupsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallFilteringApplicationGroups)(nil)).Elem()
}

func (i FirewallFilteringApplicationGroupsArray) ToFirewallFilteringApplicationGroupsArrayOutput() FirewallFilteringApplicationGroupsArrayOutput {
	return i.ToFirewallFilteringApplicationGroupsArrayOutputWithContext(context.Background())
}

func (i FirewallFilteringApplicationGroupsArray) ToFirewallFilteringApplicationGroupsArrayOutputWithContext(ctx context.Context) FirewallFilteringApplicationGroupsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFilteringApplicationGroupsArrayOutput)
}

// FirewallFilteringApplicationGroupsMapInput is an input type that accepts FirewallFilteringApplicationGroupsMap and FirewallFilteringApplicationGroupsMapOutput values.
// You can construct a concrete instance of `FirewallFilteringApplicationGroupsMapInput` via:
//
//	FirewallFilteringApplicationGroupsMap{ "key": FirewallFilteringApplicationGroupsArgs{...} }
type FirewallFilteringApplicationGroupsMapInput interface {
	pulumi.Input

	ToFirewallFilteringApplicationGroupsMapOutput() FirewallFilteringApplicationGroupsMapOutput
	ToFirewallFilteringApplicationGroupsMapOutputWithContext(context.Context) FirewallFilteringApplicationGroupsMapOutput
}

type FirewallFilteringApplicationGroupsMap map[string]FirewallFilteringApplicationGroupsInput

func (FirewallFilteringApplicationGroupsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallFilteringApplicationGroups)(nil)).Elem()
}

func (i FirewallFilteringApplicationGroupsMap) ToFirewallFilteringApplicationGroupsMapOutput() FirewallFilteringApplicationGroupsMapOutput {
	return i.ToFirewallFilteringApplicationGroupsMapOutputWithContext(context.Background())
}

func (i FirewallFilteringApplicationGroupsMap) ToFirewallFilteringApplicationGroupsMapOutputWithContext(ctx context.Context) FirewallFilteringApplicationGroupsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFilteringApplicationGroupsMapOutput)
}

type FirewallFilteringApplicationGroupsOutput struct{ *pulumi.OutputState }

func (FirewallFilteringApplicationGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallFilteringApplicationGroups)(nil)).Elem()
}

func (o FirewallFilteringApplicationGroupsOutput) ToFirewallFilteringApplicationGroupsOutput() FirewallFilteringApplicationGroupsOutput {
	return o
}

func (o FirewallFilteringApplicationGroupsOutput) ToFirewallFilteringApplicationGroupsOutputWithContext(ctx context.Context) FirewallFilteringApplicationGroupsOutput {
	return o
}

func (o FirewallFilteringApplicationGroupsOutput) AppId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallFilteringApplicationGroups) pulumi.IntOutput { return v.AppId }).(pulumi.IntOutput)
}

func (o FirewallFilteringApplicationGroupsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallFilteringApplicationGroups) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FirewallFilteringApplicationGroupsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallFilteringApplicationGroups) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallFilteringApplicationGroupsOutput) NetworkApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallFilteringApplicationGroups) pulumi.StringArrayOutput { return v.NetworkApplications }).(pulumi.StringArrayOutput)
}

type FirewallFilteringApplicationGroupsArrayOutput struct{ *pulumi.OutputState }

func (FirewallFilteringApplicationGroupsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallFilteringApplicationGroups)(nil)).Elem()
}

func (o FirewallFilteringApplicationGroupsArrayOutput) ToFirewallFilteringApplicationGroupsArrayOutput() FirewallFilteringApplicationGroupsArrayOutput {
	return o
}

func (o FirewallFilteringApplicationGroupsArrayOutput) ToFirewallFilteringApplicationGroupsArrayOutputWithContext(ctx context.Context) FirewallFilteringApplicationGroupsArrayOutput {
	return o
}

func (o FirewallFilteringApplicationGroupsArrayOutput) Index(i pulumi.IntInput) FirewallFilteringApplicationGroupsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallFilteringApplicationGroups {
		return vs[0].([]*FirewallFilteringApplicationGroups)[vs[1].(int)]
	}).(FirewallFilteringApplicationGroupsOutput)
}

type FirewallFilteringApplicationGroupsMapOutput struct{ *pulumi.OutputState }

func (FirewallFilteringApplicationGroupsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallFilteringApplicationGroups)(nil)).Elem()
}

func (o FirewallFilteringApplicationGroupsMapOutput) ToFirewallFilteringApplicationGroupsMapOutput() FirewallFilteringApplicationGroupsMapOutput {
	return o
}

func (o FirewallFilteringApplicationGroupsMapOutput) ToFirewallFilteringApplicationGroupsMapOutputWithContext(ctx context.Context) FirewallFilteringApplicationGroupsMapOutput {
	return o
}

func (o FirewallFilteringApplicationGroupsMapOutput) MapIndex(k pulumi.StringInput) FirewallFilteringApplicationGroupsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallFilteringApplicationGroups {
		return vs[0].(map[string]*FirewallFilteringApplicationGroups)[vs[1].(string)]
	}).(FirewallFilteringApplicationGroupsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallFilteringApplicationGroupsInput)(nil)).Elem(), &FirewallFilteringApplicationGroups{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallFilteringApplicationGroupsArrayInput)(nil)).Elem(), FirewallFilteringApplicationGroupsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallFilteringApplicationGroupsMapInput)(nil)).Elem(), FirewallFilteringApplicationGroupsMap{})
	pulumi.RegisterOutputType(FirewallFilteringApplicationGroupsOutput{})
	pulumi.RegisterOutputType(FirewallFilteringApplicationGroupsArrayOutput{})
	pulumi.RegisterOutputType(FirewallFilteringApplicationGroupsMapOutput{})
}
